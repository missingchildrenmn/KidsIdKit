@page "/Friend/{id:int}/{friendid:int}"
@using System.Linq.Expressions;
@using System.ComponentModel.DataAnnotations;
@using System.Reflection;
@inject Data.IDataAccess dal
@inject NavigationManager navigationManager


@if (CurrentChild == null || Friend == null)
{
    <h2>Friend</h2>
    <p>Loading...</p>
}
else
{
    <h2><a href="/Child/@id">@CurrentChild.GivenName</a></h2>
    <p></p>
    <h3>Friend Details</h3>
    <p></p>
    <EditForm Model="Friend" OnSubmit="SaveData">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <table>
            <EditTextRow @bind-Value="Friend.GivenName" />
            <EditTextRow @bind-Value="Friend.NickName" />
            <EditTextRow @bind-Value="Friend.FamilyName" />
            <EditTextRow @bind-Value="Friend.Address" />
            <EditTextRow @bind-Value="Friend.PhoneNumber" />
        </table>
        <p></p>
        <div>
            <button type="button" class="btn btn-light" style="margin-right:20px" @onclick=Back>Back</button>
            <button class="btn btn-primary" type="submit">Save</button>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public int id { get; set; }
    [Parameter]
    public int friendid { get; set; }

    Data.ChildDetails? CurrentChild;
    Data.Person? Friend;

    protected override void OnInitialized()
    {
        if (DataStore.Family is not null)
        CurrentChild = DataStore.Family.Children[id].ChildDetails;

        if (friendid == -1)
        {
            Friend = new Data.Person();
            if (DataStore.Family is not null)
            {
                if (DataStore.Family.Children[id].Friends.Count == 0)
                {
                    Friend.Id = 0;
                }
                else
                {
                    Friend.Id = DataStore.Family.Children[id].Friends.Max(r => r.Id) + 1;
                }
            }
        }
        else
        {
            if (DataStore.Family is not null)
                Friend = DataStore.Family.Children[id].Friends[friendid];
        }
    }

    private void Back()
    {
        navigationManager.NavigateTo($"/childFriends/{id}");
    }

    private void SaveData()
    {
        try
        {
            if (DataStore.Family is not null && Friend is not null)
            {
                if (friendid == -1)
                {
                    DataStore.Family.Children[id].Friends.Add(Friend);
                }
                dal.SaveDataAsync(DataStore.Family);
            }

            navigationManager.NavigateTo($"/childFriends/{id}");
        }
        catch (Exception e)
        {
            Console.WriteLine(e.ToString());
        }
    }
}
