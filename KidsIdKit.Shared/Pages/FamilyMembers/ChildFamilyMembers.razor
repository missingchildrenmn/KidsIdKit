@page "/childFamilyMembers/{id:int}"

@using System.Linq.Expressions;
@using System.ComponentModel.DataAnnotations;
@using System.Reflection;

@inject Data.IDataAccess dal
@inject NavigationManager navigationManager

@if (CurrentChild == null || Family == null)
{
    <h2>Family Members</h2>
    <p>Loading...</p>
}
else
{
    <h2>@CurrentChild.FullName</h2>
    <p></p>
    <h3>Family Members</h3>
    <p></p>
    <table class="table table-striped" style="border: 1px solid black;margin-top:10px;">
        <thead style="background-color:lightblue;">
            <tr>
                <th class="text-center">Name</th>
                <th class="text-center">Family Name</th>
                <th class="text-center">Phone</th>
                <th class="text-center">Address</th>
                <th class="text-center">Relation</th>
                <th class="text-center"></th>
                <th class="text-center"></th>
            </tr>
        </thead>
        <tbody style="background-color:lightyellow;">
            @if (Family != null && Family.Count() > 0)
            {
                @foreach (var person in Family)
                {
                    <tr style='vertical-align:central'>

                        <td class="text-center">@person.GivenName</td>
                        <td class="text-center">@person.FamilyName</td>
                        <td class="text-center">@person.PhoneNumber</td>
                        <td class="text-center">@person.Address</td>
                        <td class="text-center">@person.Relation</td>
                        <td class="text-center"><a href="/Family/@Id/@person.Id" style="text-decoration:none"><i class="fas fa-edit" /></a></td>
                        <td class="text-center"><a href="/FamilyRemove/@Id/@person.Id" style="text-decoration:none"><i class="fas fa-trash-alt" /></a></td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <p></p>
    <div>
        <button type="button"
                @onclick="@(() => navigationManager.NavigateTo($"/Child/{Id}"))"
                title="Back"
                class="btn-back">
            <i class="fas fa-chevron-left" />
        </button>
        <button type="button"
                @onclick="@(() => navigationManager.NavigateTo($"/Family/{Id}/-1"))"
                title="Add family member"
                class="btn-icon">
            <i class="fas fa-plus" />
        </button>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }
    Data.ChildDetails? CurrentChild;
    IEnumerable<Data.FamilyMember>? Family;

    protected override void OnParametersSet()
    {
        if (DataStore.Family is not null)
        {
            CurrentChild = DataStore.Family.Children[Id].ChildDetails;
            Family = DataStore.Family.Children[Id].FamilyMembers;
        }
    }

}
