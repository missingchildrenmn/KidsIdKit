@page "/ChildRemove/{id:int}"
@using System.Linq.Expressions;
@using System.ComponentModel.DataAnnotations;
@using System.Reflection;
@inject Data.IDataAccess dal
@inject NavigationManager navigationManager

@if (CurrentChild == null)
{
  <h2>Child Details</h2>
  <p>Loading...</p>
}
else
{
   <h4><a href="/Child/@id">@CurrentChild.ChildDetails.GivenName @CurrentChild.ChildDetails.FamilyName</a></h4>
  <div>Are you sure you want to remove this child from the app?</div>
  <div style="margin-top:10px">
    <button class="btn btn-primary" @onclick="NoCancel">No</button>
    <button class="btn btn-danger" @onclick="YesRemove">Yes</button>
  </div>
}

@code {
  [Parameter]
  public int id { get; set; }
  Data.Child? CurrentChild;

  protected override void OnParametersSet()
  {
    CurrentChild = DataStore.Family?.Children[id];
  }

  private void YesRemove()
  {
    if (CurrentChild is not null)
      DataStore.Family?.Children.Remove(CurrentChild);
    if (DataStore.Family is not null)
      dal.SaveDataAsync(DataStore.Family);
    navigationManager.NavigateTo($"/kids");
  }

  private void NoCancel()
  {
    navigationManager.NavigateTo($"/kids");
  }
}
