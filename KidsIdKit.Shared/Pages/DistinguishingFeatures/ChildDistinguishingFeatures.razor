@page "/childDistinguishingFeatures/{Id:int}"

@using System.Linq.Expressions;
@using System.ComponentModel.DataAnnotations;
@using System.Reflection;
@using Microsoft.AspNetCore.Components.QuickGrid;

@inject Data.IDataAccess dal
@inject NavigationManager navigationManager

@if (CurrentChild == null || Features == null)
{
    <h2>Child Distinguishing Features</h2>
    <p>Loading...</p>
}
else
{
  <h2><a href="/Child/@Id">@CurrentChild.GivenName</a></h2>

  <QuickGrid Items="@Features">
    <TemplateColumn>
        <p>@context.Description</p>
        @if (!string.IsNullOrWhiteSpace(context.Photo.ImageSource))
        {
                <img src="@context.Photo.ImageSource" />
        }
    </TemplateColumn>
    <TemplateColumn>
        <a href="/Feature/@Id/@context.Id" style="text-decoration:none"><i class="fas fa-edit"></i></a>
    </TemplateColumn>
  </QuickGrid>
  <div>
      <a href="/Feature/@Id/-1" style="text-decoration:none"><i class="fas fa-plus"></i></a>
    </div>
}

@code {
  [Parameter]
  public int Id { get; set; }
  Data.ChildDetails? CurrentChild { get; set; }
  IQueryable<Data.DistinguishingFeature>? Features { get; set; }

  protected override void OnParametersSet()
  {
    ArgumentNullException.ThrowIfNull(DataStore.Family);
    CurrentChild = DataStore.Family.Children[Id].ChildDetails;
    Features = DataStore.Family.Children[Id].DistinguishingFeatures.AsQueryable();
  }
}
