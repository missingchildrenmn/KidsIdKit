@page "/"

@inject Data.IDataAccess dal
@inject NavigationManager NavigationManager

@using Microsoft.AspNetCore.Components.QuickGrid

<h1>Kids</h1>

@if (data == null || DataStore.Family == null)
{
  <p>Loading data...</p>
}
else
{
    <QuickGrid Items="@data" Class="full-width-column">
        <TemplateColumn Class="full-width-column">
            <div class="content-card" title="@context.ChildDetails.GivenName">
                <h4>@context.ChildDetails.GivenName @context.ChildDetails.FamilyName</h4>

                <div>
                    <div>Age @context.ChildDetails.Age (@context.ChildDetails.Birthday.ToString("d"))</div>
                    @if (!string.IsNullOrWhiteSpace(context.ChildDetails.Names))
                    {
                        <div><i>@context.ChildDetails.Names</i></div>
                    }
                </div>

                @if (!string.IsNullOrWhiteSpace(context.ChildDetails.Photo.ImageSource))
                {
                    <div><img src="@context.ChildDetails.Photo.ImageSource" height="100" width="100" /></div>
                }

                <div class="actions">
                    <div title="Edit @context.ChildDetails.GivenName">
                        <NavLink href='@($"/Child/{DataStore.Family.Children.IndexOf(context)}")'><i class="fas fa-edit"></i></NavLink>
                    </div>

                    <div title="Remove @context.ChildDetails.GivenName">
                        <NavLink href='@($"/ChildRemove/{DataStore.Family.Children.IndexOf(context)}")'><i class="fas fa-trash-alt"></i></NavLink>
                    </div>
                </div>
            </div>
        </TemplateColumn>
    </QuickGrid>
    
    <div>
        <button type="button"
            class="btn-icon"
            title="Add new child"
                @onclick="@(() => NavigationManager.NavigateTo("/Child/-1"))">
            <i class="fas fa-plus" />
        </button>
    </div>
}

@code {
    private IQueryable<Data.Child>? data;

    protected override async Task OnInitializedAsync()
    {
        DataStore.Family = await dal.GetDataAsync();
        if (DataStore.Family is not null)
        {
            data = DataStore.Family.Children.AsQueryable();
        }
    }
}
