@page "/kids"
@inject Data.IDataAccess dal
@using Microsoft.AspNetCore.Components.QuickGrid

<h1>Kids</h1>

@if (data == null || Main.Family == null)
{
  <p>Loading data...</p>
}
else
{
    <QuickGrid Items="@data">
        <PropertyColumn Property="@(p => Main.Family.Children.IndexOf(p))" Sortable="false" />
        <PropertyColumn Property="@(p => p.ChildDetails.GivenName)" Sortable="true" />
        <TemplateColumn>
            <NavLink href='@($"/child/{Main.Family.Children.IndexOf(context)}")'>@context.ChildDetails.GivenName</NavLink>
        </TemplateColumn>
        <TemplateColumn>
            <NavLink href='@($"/ChildRemove/{Main.Family.Children.IndexOf(context)}")'>Remove</NavLink>
        </TemplateColumn>
    </QuickGrid>
    <p></p>
    <div><a href="/Child/-1" style="text-decoration:none">➕</a></div>
}

@code {
    private IQueryable<Data.Child>? data;

    protected override void OnParametersSet()
    {
        Main.Family = dal.GetData();
        if (Main.Family is not null)
        {
            data = Main.Family.Children.AsQueryable();

            //to be removed later on
            if (Main.Family.Children.Count == 0)
            {
                var child = new Data.Child();
                child.ChildDetails.GivenName = "Amanda";
                Main.Family.Children.Add(child);
                child = new Data.Child();
                child.ChildDetails.GivenName = "Timothy";
                Main.Family.Children.Add(child);
            }
        }
    }
}
