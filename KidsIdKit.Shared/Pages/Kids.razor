@page "/"

@inject Data.IDataAccess dal
@inject NavigationManager NavigationManager

@using Microsoft.AspNetCore.Components.QuickGrid

<h1>Kids</h1>

@if (data == null || DataStore.Family == null)
{
  <p>Loading data...</p>
}
else
{
    <QuickGrid Items="@data">
        <PropertyColumn Title="Given Name" Property="@(p => p.ChildDetails.GivenName)" />
        <TemplateColumn>
            <div title="Edit @context.ChildDetails.GivenName">
                <NavLink href='@($"/Child/{DataStore.Family.Children.IndexOf(context)}")'><i class="fas fa-edit"></i></NavLink>
            </div>
        </TemplateColumn>
        <TemplateColumn>
            <div title="Remove @context.ChildDetails.GivenName">
                <NavLink href='@($"/ChildRemove/{DataStore.Family.Children.IndexOf(context)}")'><i class="fas fa-trash-alt"></i></NavLink>
            </div>
        </TemplateColumn>
    </QuickGrid>
    <p></p>
    <div>
        <button type="button" 
            class="btn-back" 
            title="Back" 
            @onclick="Back">
        <i class="fas fa-chevron-left" /></button>
        <button type="button"
            class="btn-icon"
            title="Add new child"
                @onclick="@(() => NavigationManager.NavigateTo("/Child/-1"))">
            <i class="fas fa-plus" />
        </button>
    </div>
}

@code {
    private IQueryable<Data.Child>? data;

    protected override async Task OnInitializedAsync()
    {
        DataStore.Family = await dal.GetDataAsync();
        if (DataStore.Family is not null)
        {
            data = DataStore.Family.Children.AsQueryable();
        }
    }

    private void Back()
    {
        NavigationManager.NavigateTo("/");
    }
}
