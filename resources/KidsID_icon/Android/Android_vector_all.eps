%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Android_vector_all.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Teneresa
%%CreationDate: 6/18/2018
%%BoundingBox: 0 0 1542 512
%%HiResBoundingBox: 0 0 1541.3915 512
%%CropBox: 0 0 1541.3915 512
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">KidsIDApp</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-06-18T21:35:19-03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-06-18T21:35:19-03:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-06-18T21:35:18-03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>88</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAWAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+d/wA79O1HzJ+bGkeW1uzFbSWsZj51McPJpGmlCClW&#xA;4R/TQDM/TkRgS6HtCByZxC+jz1k/KNGKCTXpuO3qqtmgen7QUklQfAnL/wB55OD+4/p/Y1/yCT/t&#xA;f/8ATlj+88kfuP6f2O/5BJ/2v/8Apyx/eeS/uP6f2O/5BJ/2v/8Apyx/eeS/uP6f2O/5BJ/2v/8A&#xA;pyx/eeS/uP6f2O/5BJ/2v/8Apyx/eeS/uP6f2O/5BJ/2v/8Apyx/eeS/uP6f2O/5BJ/2v/8Apyx/&#xA;eeS/uP6f2O/5BJ/2v/8Apyx/eeS/uP6f2LNW0nTLHTLHzV5VvrtbVbs2rLdBY7q3uo1EqMrxEqys&#xA;pqCKUpjGRJ4ZInCMYicCav4gvs7NS9c7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq8K89f8ArQmjf9s8/wDJm5zMx/3R97pdR/jcfd+t89ZnuidirO/y3/KLX/O7PcxSLY6RE/py&#xA;38ilquKEpFGCvMiu+4HvlGXOIe9zdJoZZt+Ue9OfPX5Pab5esZp7O51S4+rgmW6k09/qnw9eUqty&#xA;Rf8AK4MvvkcecyPT5t2o0IgLBl8tnleZLrFaC0urjmYIXm9NecnpqW4qP2moNhgJSIk8mQ3/AOX+&#xA;sWHky181XMkSWt1KsaWpYiYLKpaJ6EcTzVS3EGvGjdDlYygy4XIlpZRxiZ5FMPyr8laN5q1W+t9V&#xA;nuIoLS2M6x2oBkc8gpoWDD4AS3EDk1NsGbIYjZnotPHJIiXQMX1nRrzStSvbGZSxsbiS2eYA8C0b&#xA;Fag9KGlRvlkZWLcbJjMSQejIP/KSf9v/AP7Esh/lPg3/AOQ/z/0PsvNS9a7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8K89f+tCaN/2zz/yZuczMf8AdH3ul1H+Nx9363z/AG1v&#xA;Pc3EVtboZZ5nWOKJRVmdzRVA8STmcS6MAk0H1Z+W/wCSvlzy1p8NxqtrDqWvOA888yiSOFuvCFWq&#xA;o4/z0qfltmty5zI7cnptJoIYxchcnpCqqqFUBVUUVRsABmO7BJfM3k7QvMcMa6hCRcwVNpfQn07i&#xA;Bj3jkG/zBqp7jJwmY8mnLgjk5/N8heffKF95S8z3ej3bCTgRJb3CrwWWF90cKPs+BHYgjNpjmJRt&#xA;5XU4DimYl6V+QGraWskOmWtlqFzrZumnuGhlZLSO3IVPWlHqIlFqQVMbE7UO9Mx9TE8+jsezJx+k&#xA;A8V/B6354/K/TPOTW0OpX9zb6daCsFlaLBGFkoQW5tG7UII+HpmLjzGHJ2mo0cctAk0O6kr8qfkh&#xA;o3lTXYNV0bV9QjCgrdW0rQus6dQjFY46LyAP0ZOeoMhRAasPZ8cUuKJLXnfzR5aub+60O91gaLcW&#xA;UTSXMF2AsM0b1IPpyq0N2rcRWNaNv8LcgRjjgasC11GaBJiZcNd/43fPzsG/KdmChQ3mAkKtaCtn&#xA;0FanM7+P4OjP9x/n/ofZOal6x2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV4&#xA;V56/9aE0b/tnn/kzc5mY/wC6PvdLqP8AG4+79bzn8i9NS+/M3SPVTlFbGW4O1Ryjhdo9+1HAOZGo&#xA;NQLgdnQ4sw8n13mrepSzVfXW+0+RGkWMSFX9KMy8i5VVVtiEShJZ9jtSu9DIcmud2G9cF0YbVYGl&#xA;QNdRCZoEV3CE9aMGHHnx5mmy1pQ0OMVyXtXe8C/5yijQeY9FkA/eNZurN3IWUkD6ORzN0fIuk7YH&#xA;rj7mTf8AOOFna2HkTV9abgs01zIJZXZYwsVtErLydvhUAuxqdhleqNyAcjsqIjiMvP7nr7Xpj0wX&#xA;boQ/pK5idkU8mAopYlUBqadaZi1u7Xi2tUsZ3ns4J3HFpY1kKkcSOQrQir0pXxOJTE2LeN/85O+X&#xA;7aby/p2vKtLu0uBaO4/ahmVmAP8Aqum3zOZWkluQ6ntfEDAS6g08e/8AKSf9v/8A7Esy/wDKfB1P&#xA;+Q/z/wBD7LzUvWuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvCvPX/rQmjf9&#xA;s8/8mbnMzH/dH3ul1H+Nx9360y/5x/8AMXlpPJVrpkV7b2esR3bi7tpWjSS4aV/3ZUNRn+Aqq8e4&#xA;pkdTE8V9GzszLDwxG6lfzex5iu2S7/EehjU5NLlvIodRjAb6pMwjkZW3Dxhqc191qOx32yXCatr8&#xA;WN8N7t3+padpTNc6jqIhikosUMrRqCxNAsahRI7MdgtST2xAJ5BZTEdyXmf/ADkvZ2EnkW1u5lAu&#xA;4L6NLWQj4v3iPzT5ELyPyzI0hPE6/taI8IHrbJvyb0Kz0r8uNISD4jfQre3LEk8pLhQx2Ow4rRdv&#xA;DK88rmXI0GMRwxrrv82YiKRzItx6ckRI9NeJ6Df4qlgcqcuu9dFPDLz9J1f02KPxIPFh1U07jAoN&#xA;pZ5n8vaX5g039G6rbJc6e7h7hZGdKBASCpjZGDV9/wCmShIxNhrzYozFSGz5V1aC0t/y5vbezk9a&#xA;0h8zSx20xIPONbUhGqKdVFc2UT6/815qYAwkDlx/ofYGat6p2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV4V56/9aE0b/tnn/kzc5mY/7o+90uo/xuPu/W+f7a5ntbmK5t3Mc8Dr&#xA;JFIvVXQ8lYfIjM4i3RgkGw+ufyw/NbRvOWmxQySpbeYIkpd2LEAuV6yw1+0h606r0PYnV5sJgfJ6&#xA;nR62OUf0u5PPOPkTy15usktdatfVMVTb3CHhNET14OPGm4NR7ZCGQxOzdn00MoqQY/5X/KH8v/JM&#xA;760peSa2BZb/AFGVCIBShZaLFGv+sRXLJ55T2aMOhxYTxfaXin54fmdb+btVhsNKYnRNNLenKRT1&#xA;5m2aUA7hQNlr7nvmXp8PCLPN0/aGrGWVR+kM5/Ij8ydHvNBTyVrkqxXMQeKwaVuKTwyE/ueW3xqW&#xA;IA7ilOmU6jEQeIOb2bq4mPhy59GTr+TV49+31rznrlxoxO2ltdSj4O0bSczVe32AaZX4+30i3J/I&#xA;G95y4e62exRaNoGkLGno6fpVjHQVIjijRe5ZvxJ6nKN5Hzc0CMI9wD5h/Of81D5q1pLTRp5U0OxV&#xA;o0dSyfWHenORl2+HYKob596ZscGHhG/N5zX6zxJVH6R9qQf+Uk/7f/8A2JZZ/lPg0f5D/P8A0Psv&#xA;NS9a7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUs8yeYtP8vaPPqt/6jW8HFRHChklkd2CJHGo6s7M&#xA;AMlCJkaDXlyjHHiLDP8AleflbvazA9w13pAI+YN9UZb+Xl+L/U4n8ow7vtj/AMU7/lenlX/lml/6&#xA;TNH/AOy/D+Xl+L/Uv8ow7vtj/wAU7/lenlX/AJZpf+kzR/8Asvx/Ly/F/qX+UYd32x/4pMvLv5re&#xA;X9d1i30u3t7iKa79QW87NazwtJEhkaMyWk9yEf01ZgHpUA5GWEgW2YtbCchEA7+79BLNMpct2KvC&#xA;vPX/AK0Jo3/bPP8AyZuczMf90fe6XUf43H3frfPWZ7olyOyMHQlXUgqwNCCOhBxVktl+Zv5g2UQi&#xA;t/MF8IxsqvM0gA8Bz5Uys4ono5EdXlHKRS3WfNXmXW6fpfVLq+UHksc8ruinxVCeI+gYYwA5Bhkz&#xA;Tn9RJSrJtTsVZFp/5ieetPgEFnr19FAo4pF67sqilKKGJC/RlZxRPRvjqssRQkUv1bzJ5g1hg2ra&#xA;ldX/AB3UXEzyhf8AVDEgfRkowA5BhPLOf1ElLck1sv8A/KSf9v8A/wCxLKv8p8HK/wAh/n/ofZea&#xA;l612KuxV2KuxV2KuxV2KuxVjvnHzzpHlSCCXUIppvrHMokPpLRYyqszPPJDGBykUU5VNdh1pZjxm&#xA;XJoz6iOIb/j5sT/6GC8nf8sl3/yO0z/ssyz8tL8X+pxf5Tx9x/2P/FO/6GC8nf8ALJd/8jtM/wCy&#xA;zH8tL8X+pf5Tx9x/2P8AxTK/JvnvR/NkVw+npLE1sEaSOYwsSkpdUdWgknjILROPtV23HTK8mMx5&#xA;uTg1Mct1+PkyPK3IYR+cP/KGj/mP0/8A6i48uwfV83D13938R97yH8oPyPsfM+kxeYtduJF0+SVh&#xA;a2UNFMyxNxYvJuVUupWi77dRmVn1BiaDqtD2eMkeOXLuRH59/ljo+g2mn61olulnYtL9Uu7eMbhn&#xA;HKN1B+19lganwwabMTYLLtLRxgBKIocmT2P/ADjzoaT6He2zMtvbkT6la6igkmuOfE+k4Q+lGEAN&#xA;AAeu5PXKzqju5Eey43Ej431SnyL5f0Py/wDmp+itGmnlt7a/iWVboASxyjTtTDISFRWFAGUrtQjJ&#xA;ZJGULP43DXp8UYZ+GPf/AL2b3zMJ3bsVeFeev/WhNG/7Z5/5M3OZmP8Auj73S6j/ABuPu/W8N8sW&#xA;0F15l0m2uEEkE97bxyxt0ZHlVWU/MHM2Z2LpsIBmAe8PftX/ACu8tw/mJqHmXVLSDTvJui28M7wB&#xA;FSGe4C14+mBxKjbkKfE1F3qcwY5jwcI+ou8no4DKZyFY4j7XlFxqGj6r/jDUdO8omSyn4PZ3MJkE&#xA;emrz+2wSqD1KcqdBuB8OZIBHCCf2usMoy4yIbf7lLPLHkjzPqLWeqw6PcXOjC4jE1yIi0RRZAJO3&#xA;xKN+RG2TnkiNr3a8OnnKpcJ4bZr+efli4u/zNi07y/phlnlsIZDbWcW5ozqXKoOwABJynTzqFkuX&#xA;2jhJzVAdOjznXvKfmTQGjXWtNnsPWr6TTIVV6deLfZNK775fGYlyLgZME4fUKeg+VNB0W4/IXzRq&#xA;s9lDJqVvfBYLxkBlRUFtQK/UD963Txyicj4oDnYMcTpZyI3v9TM/NPmLyv5F8qeUD/hTT9T/AErZ&#xA;B52ljiRgY4oWY8jHJyLmY9cqhAzkdyKczNlhhhD0A8Q/UwX89/Kmg6Pq2lalodutnZa1a+ubVBxR&#xA;XWhqqjZaq67DauXaaZIIPRwu0sMYSBiKEgx7/wApJ/2//wDsSyz/ACnwcf8AyH+f+h9l5qXrXYq7&#xA;FXYq7FWKecPzM8teUrqK31f1wZUVw8MfqKOZcIp3DVb0m6Dtv2y2GIy5ONn1cMRqSSzfnx5HguTa&#xA;zR6jFcqAzQPZyLIFIqCVO9KZL8vLyaT2jjBre/cynyp5x0nzPbTXGnLMiQNwYTp6bVqyn4akijIy&#xA;0ah26Uplc8ZjzcnDnjkFhPMg3PMfzl0CTzDeeX9FSoF88kcrKQCsX1m0MrjlQfDGGbMjBLhs/jq6&#xA;7X4uMxj3/rCban+VPlWPyPqHl3SbEWqzxMyyR/FM8yiqFpJKlqsOhNPCmRGaXFZbZ6OHhmERSQ/l&#xA;d+XPlW98k+XdUurGP68qG5MkYK+oz1T97Utz+D4SOm/QZPNlkJENGj0sDjjIjdE/lPpw03zP5qsV&#xA;sl09LdbVEtYyxQKLq/4snKp4uPjUdgcGY3EH8dGWijwzmKrl98npuY7sWEfnD/yho/5j9P8A+ouP&#xA;LsH1fNw9d/d/EfekH5K/mL5d1Hylb6JH9V0vVdMj9JbJ3EaTd/WSoH945JcCpB37jJ6jERK+YaNB&#xA;qoSxiOwkOih+cHnLQU8tQadrq2rajLf2sqWVncG5eOCGVXkmZgkJXlGGQCn7W3ehwYzdhGuzx4Kl&#xA;V2ORt6BZ+cdGuoXvkvLMaKIxImom6j4tUA0KmnDjvy5EU/VQYEbdXOjnid7HD328s8teaNE8zfm8&#xA;dT0e39K3N9BE9zVq3LRabqaCfi32AUCgCnQVO5zJnAxx0fxuHWYs0cme4jr8/TJ7hmG7l2KvCvPX&#xA;/rQmjf8AbPP/ACZuczMf90fe6XUf43H3freJeTv+Uu0T/toWv/J5czJ/SXT4P7yPvD6f8xebtD1P&#xA;zpeflrrtui2OpWSfVrgndp3q3DfZWoAYz/MPcZrowIjxh6PLnjLIcMuRDAPLPlXUfK3k78z9FvhW&#xA;S3t1MUoFFliaKUxyL7MPuO3bL5zEpRIcLDhOPHlie79bJPMc/niCy/L5PJKTHR3ig+t/VEDxcOMX&#xA;H1jQ0j4Ft22+nK4CPq4ubflOQDH4f0+XwVfMXmC50T829RnXSLzU7OXRIIryXTlLXFuhmejqAV6n&#xA;wIPftgjG4Dfqyy5TDOTRI4enR51+c/l+4h0DQ9ch1rU9R0m7eRLaz1gsbmBnHImrhWIPCnxDsNyD&#xA;mRgluRQvydfr8REYy4pGJ/nc0V5M/wDWcvNv/bQP/EbTBk/vR+O9np/8Un7/ANSa/m55W8x6/wCU&#xA;/IC6Lp09+YLBhN6CFgnqQ2vDmei14nr4ZHBMRlKy2a7DOcMfCL2/UlX/ADkcVgl8q6Y7A3dlYMJ0&#xA;U1pXgg+8xNktL1LV2rtwDqAwj/ykn/b/AP8AsSy7/KfBw/8AIf5/6H03H+ZdnJCs66Lqot2ge7WZ&#xA;oYVQ28e7S1aYfDTf7vHNd4XmHoxqxz4Zd/43ZhlTlPONV0rUtb89arbnzNf6TZ2MUDR2NhKVdzKi&#xA;j1CtHpGrfaIHfqOuZAIERtbgTgZ5COIxA6BLdAtNUsbbypqkvmi/1CfVZbZZ7Se55RMJU5y8EIHN&#xA;VJC7fZ6GvYyINiuTXjjKIgeMm66vWcxnZvMvO2t+XNG/MjTL3Xo2a2FtAkEoQSLFM7XYWR1ozUAq&#xA;KruCa5kY4kwIH45Ou1GSEMwMu4fpSv8A5WD5Am/Ma9nllt5ba90y3t55XEpgleG5lZ/hMRErKnCh&#xA;I7cQcl4UuD4tf5nEcx5bxH3nyZP+WmuWGu3mu6tYNM1pdTK0TXG0hCvMvTstV+EHotMryxIoFyNJ&#xA;kEzKQ5H9rOspc15H/wA5ArdPa6QlpL6N05kWCUErxdrqzCtUbihzK03X8d7q+07oVz/bFjmreafz&#xA;jf1NKktdOOpxW9wlzrVtbTG4hWC3SaRfWp6SuVnC/AuzH9nrk4wx893Hnm1H01G6O9eSX+RfNP5o&#xA;WWkTaNCNM006MEsjc6pFcLcQi4blEvGIOv2mFC0fffbJZIQJvfdhps2YR4fSOHbe7ZZ/zj6988+u&#xA;tfyGa+9K2FzKx5FpBeagGNe++V6mtq/HJyezLuV89vvk9jzEdswj84f+UNH/ADH6f/1Fx5dg+r5u&#xA;Hrv7v4j73hvlX8utC1TyNZ6y0c1zqlxcyW5tI5RH+7+s28X1g/C7enCsh58VP2wdgMzJ5SJV0dNh&#xA;0sZYhLnK/wBI3+CJt/yTMugRGS7ht9WvL9Ft5GaQxpbNbzyrHXiqO8hjSnHp9k0O2A6jfyZDs+48&#xA;/UT9lFCeSfIuhz6Ff32q6bPqN9YS6hEbGKSSJpGtWsURAFHINW6k7daVG2HJkN0D3fpY6fTRMSZC&#xA;yL+zh/WyH8sdItdG/NW90q0LG1staMEBc1bgmn6mFqQBU0yGaVwvy/SG/SQEM5iOQl/vZPorMB3z&#xA;sVeFeej/ANZC6IO7WPFR4s0dwFA9yTQZm4/7oul1H+Nx9363z+j3FrcB0LwXEDgqwJR0dDsQdirK&#xA;Rma6PcFGal5g1vU9U/S1/ezXGpAoVunY+oDHThxI6cabUwCIAoM55ZSlxE7o2789+cbs6h9Z1e5k&#xA;GqIsV+C5pKifZUgbACpG3ifHIjHEdOTOWpyG7kfVzV9N/MjzzpmitothrNxb6awIEKlaoDWojkIM&#xA;kY36IwxOKJNkJhq8sY8IkaatfzG8822rvrEOtXI1GSNYZJ2YPyjT7KsrhlIHuMTijVUo1WUS4uI2&#xA;hfM3nPzP5nnjm13UJL14QRCrBUROX2uKRhUFab0GGGOMeQY5tRPJ9RtDW/mDW7fR7nRoL2aPSrt1&#xA;lubNWIjd1pQlf9iPnQeAwmIu+rEZZCJiD6Sn1j+bf5jWNjDY2uuTpbW6CKFCsblUUUA5MrNsOm+Q&#xA;OCBN03R1uYChLZjWp6pqOqXsl9qNzJd3kxrJPMxdzTYbnwywAAUHHnMyNk2WTOrJ+UcZccfW15mi&#xA;rtzCWYDFfEKSAcr/AMp8HJ/yH+f+h7s3kfz0YUtxK4VLRrHmdRcpxdVUv6ZhqByTlx5dPh8DmF4k&#xA;fwHdfl8nLyr6v2PVMxnZPOvNX5fXuqeY7zUfqNhqEFz9XMYu05OghTiyhqqVEn7QHWg9xl8MtCnA&#xA;zaYymTQPvS3y5+VWo6bq2nXC2dhaQ2d410ZoU/f+mTUQ+pyZioPQH8MlLMCC14tGYyBoCi9XzGdm&#xA;wPzz5P8AMmpa/a6vosturRQCB1uFZhQCZWFFaI/Gtydw4Ip9IuxzAFFwtRgnKQlGvxf60gfyF5/b&#xA;ULK/SPRoLmx5CN4rWROasZCyuRc1ozTMxoRvvlniRqt2j8tlsH07eX7WVflx5V1rQbe//S0kUtxd&#xA;zGQNDUA1d5CSCWpvLT7R6VJ3yrLMS5OTpcMoA8XVmOVOWwX80vJWseZrex/RkkaS2vOvN+BVmkhl&#xA;SRSUkVuJt6FSO9a7UN2HII83C1mnlkArp+z9TDf+Vc/m+YvSbWUdAkiUdoGNJlVH3a3JrwQKG6hd&#xA;hQZb4uPucX8rn/nfd+pZB+WX5sQX91fpqkJur1o3uXf6vIrNCoWMhHt2ReAA48QKYfFhVUgaTOCT&#xA;e5936mY/lT5D1bysl++pSo812sMY4v6rMYpbiZpGbjGBya6px3+zWu9BVmyCXJytHppY7vr+39bP&#xA;soc5jvn/AMu3vmDyzNYWEkcd6ssFzbevy9Jnt5VlVH4/EFbhSo6ZZjkImy4+pxGcKHP9TyC3/Izz&#xA;VbFPqqz2wj5iJYta4BBLT1AtLDblQcvHvmUdRH8D9rqx2dMctv8AO/46rW/5M+d7cRC3mu4RCxeE&#xA;R66y8GbkSy0sBQnm248TgOeP4H7UjQZByv8A0/8Ax1TtfyR84WjFrRrm3Yl2LRa2UJaTjzPw2A3b&#xA;gvLxoPDCdRE/2ftRHs/IOV/6f/jqf/l5+Uuv6B5og1O54Q2kcj3VzzujezzzmCaBKMILUIoF07MT&#xA;yJNMry5hKNN+l0UoTs8ufO+hHcO97BmK7V2KvHvze/KHzP5n8z2fmDy/eQwzwwpEyyu8LxvC5dJI&#xA;3QNv8XtSn3ZWDPGMaLqddoZ5JicClY8i/wDOQvfW7Fj3ZvTZj7ljbkk+5yfiYu5r/L6v+cPx8Hf4&#xA;F/5yE/6vOn/dD/2TYPExdxX8vq/5w/Hwd/gX/nIT/q86f90P/ZNj4mLuK/l9X/OH4+Dv8C/85Cf9&#xA;XnT/ALof+ybHxMXcV/L6v+cPx8Hf4F/5yE/6vOn/AHQ/9k2PiYu4r+X1f84fj4O/wL/zkJ/1edP+&#xA;6H/smx8TF3Ffy+r/AJw/Hwd/gX/nIT/q86f90P8A2TY+Ji7iv5fV/wA4fj4O/wAC/wDOQn/V50/7&#xA;of8Asmx8TF3Ffy+r/nD8fB3+Bf8AnIT/AKvOn/dD/wBk2PiYu4r+X1f84fj4JZqP5Ifmx5k1G0bz&#xA;Jq9rJbRHh6gkZvRjJq5ihWONORp7V7nJjUQiNg1z7Pz5COMh/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:0dad7059-1469-a149-afff-50ffcf2e3098</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:0dad7059-1469-a149-afff-50ffcf2e3098</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:d7b2637d-1330-a047-a607-aa541c9acd4e</stRef:instanceID>
            <stRef:documentID>xmp.did:d7b2637d-1330-a047-a607-aa541c9acd4e</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BFFB4AB5E22BE311A018E6D873A2A7EA</stEvt:instanceID>
                  <stEvt:when>2013-10-03T09:26:36+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CE184AC00C5BE31183E791815EAA4C5E</stEvt:instanceID>
                  <stEvt:when>2013-12-02T08:46:47+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F011E2F5510EE4118538A88D102BAB8E</stEvt:instanceID>
                  <stEvt:when>2014-07-18T13:26:13+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B7A671B7FB10E8119239DE749183B6E1</stEvt:instanceID>
                  <stEvt:when>2018-02-13T17:23:13-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B848859C3D13E811B4CCA01193625BB9</stEvt:instanceID>
                  <stEvt:when>2018-02-16T22:52:06-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F58AFD07EB13E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T11:01:41-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E39B45B30814E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T14:35:09-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E69B45B30814E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T14:47:31-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EB9B45B30814E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T14:53:12-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D611007D0B14E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T15:57:50-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D811007D0B14E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T16:00:21-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:822B69834514E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T21:50:41-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4A06FAA20B17E8119736D27784DB3468</stEvt:instanceID>
                  <stEvt:when>2018-02-21T10:32:18-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74fde70b-e1dc-004c-9a3c-bfc5384f141e</stEvt:instanceID>
                  <stEvt:when>2018-02-22T17:18:25-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d7b2637d-1330-a047-a607-aa541c9acd4e</stEvt:instanceID>
                  <stEvt:when>2018-06-18T16:57:51-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0dad7059-1469-a149-afff-50ffcf2e3098</stEvt:instanceID>
                  <stEvt:when>2018-06-18T21:35:19-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>512.000000</stDim:w>
            <stDim:h>511.999996</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -512 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 512 li
1541.39 512 li
1541.39 0 li
cp
clp
1530.56 512 mo
1040.22 512 li
1034.24 512 1029.39 507.15 1029.39 501.167 cv
1029.39 10.8335 li
1029.39 4.85009 1034.24 -4.45422e-06 1040.22 -4.45422e-06 cv
1530.56 -4.45422e-06 li
1536.54 -4.45422e-06 1541.39 4.85009 1541.39 10.8335 cv
1541.39 501.167 li
1541.39 507.15 1536.54 512 1530.56 512 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 .368627 .427451 rgb
f
1072.16 27.3437 mo
1063.65 27.3437 1056.74 34.2637 1056.74 42.7651 cv
1056.74 469.238 li
1056.74 477.739 1063.65 484.656 1072.15 484.656 cv
1498.63 484.656 li
1507.13 484.656 1514.05 477.739 1514.05 469.238 cv
1514.05 42.7622 li
1514.05 34.2603 1507.13 27.3437 1498.63 27.3437 cv
1072.16 27.3437 li
cp
1498.63 491.492 mo
1072.15 491.492 li
1059.88 491.492 1049.9 481.508 1049.9 469.238 cv
1049.9 42.7651 li
1049.9 30.4917 1059.88 20.5078 1072.16 20.5078 cv
1498.63 20.5078 li
1510.9 20.5078 1520.88 30.4917 1520.88 42.7622 cv
1520.88 469.238 li
1520.88 481.508 1510.9 491.492 1498.63 491.492 cv
cp
1 1 1 rgb
f
1104.49 348.096 mo
1104.49 344.248 1108.89 342.602 1113.42 342.602 cv
1117.82 342.602 1122.35 344.248 1122.35 348.096 cv
1122.35 385.598 li
1152.03 345.208 li
1153.4 343.286 1155.05 342.602 1156.97 342.602 cv
1161.51 342.602 1167.28 347.271 1167.28 351.805 cv
1167.28 352.766 1167.14 354.001 1166.18 355.239 cv
1141.59 386.012 li
1171.53 431.622 li
1172.22 432.583 1172.5 433.682 1172.5 434.78 cv
1172.5 439.176 1167 443.712 1161.78 443.712 cv
1159.45 443.712 1157.11 442.748 1155.6 440.277 cv
1129.77 401.123 li
1122.35 410.466 li
1122.35 437.39 li
1122.35 441.102 1117.82 443.024 1113.42 443.024 cv
1108.89 443.024 1104.49 441.102 1104.49 437.39 cv
1104.49 348.096 li
cp
f
1196.66 383.265 mo
1196.66 437.39 li
1196.66 440.137 1192.68 443.024 1187.73 443.024 cv
1182.65 443.024 1178.94 440.137 1178.94 437.39 cv
1178.94 383.265 li
1178.94 379.967 1182.65 377.771 1187.73 377.771 cv
1192.68 377.771 1196.66 379.967 1196.66 383.265 cv
cp
1197.35 354.552 mo
1197.35 359.084 1193.09 363.207 1187.73 363.207 cv
1182.23 363.207 1177.97 359.084 1177.97 354.552 cv
1177.97 349.882 1182.23 345.896 1187.73 345.896 cv
1193.09 345.896 1197.35 349.882 1197.35 354.552 cv
cp
f
1225.78 416.097 mo
1225.78 422.416 1231.27 428.735 1237.73 428.735 cv
1244.74 428.735 1250.23 421.455 1250.23 418.571 cv
1250.23 404.832 li
1250.23 397.141 1243.77 392.468 1237.87 392.468 cv
1231.14 392.468 1225.78 398.649 1225.78 404.832 cv
1225.78 416.097 li
cp
1267.95 345.208 mo
1267.95 437.39 li
1267.95 440.137 1264.24 443.024 1259.16 443.024 cv
1254.77 443.024 1251.19 440.137 1251.19 437.39 cv
1251.19 433.408 li
1248.44 439.039 1240.89 444.26 1232.1 444.26 cv
1219.32 444.26 1208.06 430.797 1208.06 416.097 cv
1208.06 404.832 li
1208.06 389.583 1219.05 376.946 1232.51 376.946 cv
1241.03 376.946 1247.21 382.026 1250.23 387.384 cv
1250.23 345.208 li
1250.23 341.914 1254.21 339.714 1259.16 339.714 cv
1264.24 339.714 1267.95 341.914 1267.95 345.208 cv
cp
f
1312.59 424.889 mo
1312.59 412.799 1280.03 420.356 1280.03 397.415 cv
1280.03 387.661 1286.21 376.946 1304.62 376.946 cv
1315.75 376.946 1326.46 380.792 1326.46 385.875 cv
1326.46 388.349 1324.13 394.391 1320.01 394.391 cv
1316.71 394.391 1312.45 390.408 1304.89 390.408 cv
1298.02 390.408 1295.28 393.843 1295.28 396.59 cv
1295.28 406.617 1328.25 399.751 1328.25 424.202 cv
1328.25 436.429 1319.18 444.26 1302.97 444.26 cv
1288.96 444.26 1278.1 438.492 1278.1 432.447 cv
1278.1 429.559 1280.58 424.616 1284.01 424.616 cv
1288 424.616 1291.02 430.797 1302.56 430.797 cv
1310.66 430.797 1312.59 427.637 1312.59 424.889 cv
cp
f
1367.52 348.096 mo
1367.52 344.248 1371.92 342.602 1376.45 342.602 cv
1380.85 342.602 1385.38 344.248 1385.38 348.096 cv
1385.38 437.39 li
1385.38 441.102 1380.85 443.024 1376.45 443.024 cv
1371.92 443.024 1367.52 441.102 1367.52 437.39 cv
1367.52 348.096 li
cp
f
1419.72 358.26 mo
1419.72 427.363 li
1434.01 427.363 li
1443.07 427.363 1448.43 422.279 1448.43 411.564 cv
1448.43 374.059 li
1448.43 363.344 1443.07 358.26 1434.01 358.26 cv
1419.72 358.26 li
cp
1434.01 342.602 mo
1452.14 342.602 1466.29 351.117 1466.29 374.059 cv
1466.29 411.564 li
1466.29 434.506 1452.14 443.024 1434.01 443.024 cv
1409.69 443.024 li
1405.02 443.024 1401.86 440.414 1401.86 437.527 cv
1401.86 348.096 li
1401.86 345.208 1405.02 342.602 1409.69 342.602 cv
1434.01 342.602 li
cp
f
1259.17 228.74 mo
1258.62 228.467 1258.03 228.229 1257.52 227.861 cv
1256.87 227.445 1256.3 226.917 1255.77 226.33 cv
1245.01 252.821 1203.86 286.535 1162.75 225.957 cv
1160.7 227.408 1157.68 228.824 1151.91 228.315 cv
1157.77 227.102 1162.16 226.721 1164.62 217.599 cv
1165.11 215.758 1167.25 216.271 1166.84 218.132 cv
1166.28 220.742 1165.6 222.181 1164 224.462 cv
1204.18 250.014 1240.63 239.762 1254.88 225.182 cv
1254.87 225.171 1254.86 225.162 1254.85 225.151 cv
1254.2 224.032 1253.76 222.773 1253.68 221.486 cv
1253.63 220.672 1253.7 219.845 1253.94 219.076 cv
1254.07 218.641 1254.48 218.372 1254.67 219.324 cv
1256.11 226.311 1260.58 228.768 1260.96 229.226 cv
1260.35 229.122 1259.76 228.942 1259.17 228.74 cv
cp
1176.21 158.089 mo
1176.3 147.724 1190.65 143.198 1197.38 154.603 cv
1185.11 146.704 1176.21 158.089 1176.21 158.089 cv
cp
1189.77 175.778 mo
1189.94 174.33 1191.27 173.533 1191.98 173.425 cv
1194.75 173.004 1197.76 175.25 1198.06 180.471 cv
1198.41 186.331 1195.98 189.561 1193.22 189.975 cv
1190.45 190.387 1187.74 187.422 1187.14 183.371 cv
1186.95 182.033 1187.02 180.749 1187.29 179.602 cv
1187.6 179.995 1188 180.31 1188.51 180.43 cv
1189.79 180.771 1191.1 180.007 1191.44 178.719 cv
1191.78 177.438 1190.92 175.865 1189.77 175.778 cv
cp
1201.65 177.265 mo
1200.5 169.375 1195.94 163.511 1191.48 164.167 cv
1187.02 164.83 1184.33 171.773 1185.49 179.667 cv
1186.65 187.556 1191.22 193.419 1195.67 192.752 cv
1195.74 192.746 1195.8 192.718 1195.87 192.702 cv
1195.46 192.859 1195.05 193.05 1194.61 193.118 cv
1189.02 193.942 1183.33 186.613 1181.88 176.748 cv
1180.42 166.88 1183.77 158.204 1189.36 157.38 cv
1194.94 156.561 1200.65 163.878 1202.09 173.747 cv
1202.71 177.92 1202.43 181.81 1201.52 185.055 cv
1201.98 182.732 1202.07 180.072 1201.65 177.265 cv
cp
1230.82 204.047 mo
1236.47 201.785 1236.27 197.275 1236.43 198.362 cv
1238.02 209.879 1218.79 214.147 1210.92 204.534 cv
1209.48 202.772 1209.49 201.176 1209.49 201.176 cv
1211.18 204.875 1223.51 206.986 1230.82 204.047 cv
cp
1243 156.04 mo
1248.43 155.815 1253.16 163.403 1253.58 173.004 cv
1253.75 177.056 1253.1 180.773 1251.9 183.794 cv
1252.58 181.609 1252.93 179.065 1252.82 176.339 cv
1252.49 168.652 1248.69 162.586 1244.36 162.771 cv
1240.01 162.958 1236.75 169.321 1237.07 177.007 cv
1237.17 179.183 1237.55 181.22 1238.13 183.03 cv
1237.9 182.235 1237.73 181.387 1237.7 180.484 cv
1237.64 179.099 1237.86 177.796 1238.24 176.667 cv
1238.52 177.072 1238.9 177.448 1239.4 177.642 cv
1240.67 178.117 1242.1 177.468 1242.57 176.185 cv
1243.04 174.924 1242.14 173.375 1240.53 173.375 cv
1241.23 172.306 1242.37 171.991 1242.84 171.974 cv
1245.7 171.861 1248.07 173.772 1248.35 179.354 cv
1248.56 183.554 1246.06 187.731 1243.21 187.863 cv
1241.17 187.943 1239.36 186.287 1238.4 183.828 cv
1239.93 187.977 1242.6 190.707 1245.54 190.593 cv
1245.2 190.663 1244.85 190.8 1244.49 190.81 cv
1239.05 191.063 1234.32 183.449 1233.91 173.855 cv
1233.5 164.249 1237.56 156.29 1243 156.04 cv
cp
1251.39 155.49 mo
1251.39 155.49 1240.64 145.649 1234.19 158.77 cv
1235.07 145.023 1247.49 145.522 1251.39 155.49 cv
cp
1100.71 231.982 mo
1099.93 229.543 1099.29 227.433 1098.35 223.793 cv
1092.07 199.145 1081.66 209.272 1082.65 216.237 cv
1079.54 204.878 1097.51 194.102 1100.59 223.446 cv
1100.82 225.697 1101.08 229.286 1100.71 231.982 cv
cp
1266.95 138.465 mo
1258.36 119.634 1242.33 107.396 1221.57 100.822 cv
1225.62 96.8628 1231.77 94.145 1239.05 95.8686 cv
1250.01 98.4687 1254.01 108.318 1254.01 108.318 cv
1250.82 94.3476 1231.44 84.4565 1213.56 90.3613 cv
1210.17 91.4805 1207.06 93.0483 1204.22 94.9014 cv
1215.03 74.8496 1242.49 77.1558 1249.19 81.7495 cv
1215.38 54.0225 1177.65 82.5674 1171.67 96.5786 cv
1171.67 96.581 1171.68 96.583 1171.68 96.5859 cv
1154.46 98.2812 1135.71 103.732 1121.86 117.396 cv
1104.05 134.958 1093.12 157.281 1095.57 192.308 cv
1084.17 190.495 1076 195.522 1073.65 205.922 cv
1071.04 217.398 1076.86 232.439 1089.33 235.706 cv
1092.76 236.599 1098.16 237.059 1102.02 236.047 cv
1101.96 235.861 1102.04 236.111 1102.15 236.62 cv
1108.49 263.981 1135.71 283.751 1149.55 288.764 cv
1200.45 307.174 1244.82 294.094 1267.9 265.189 cv
1281.09 248.648 1294.64 212.554 1272.1 191.486 cv
1271.44 190.866 1277.46 161.479 1266.95 138.465 cv
cp
f
1162.68 225.855 mo
1162.7 225.89 1162.73 225.922 1162.75 225.957 cv
1162.76 225.954 1162.76 225.949 1162.77 225.946 cv
1162.77 225.946 1162.56 225.68 1162.68 225.855 cv
cp
f
1488.02 224.262 mo
1488.9 218.041 1479.6 208.994 1473.99 231.011 cv
1473.11 234.438 1472.11 237.441 1472.02 237.47 cv
1471.84 234.692 1472.07 231.47 1472.3 229.298 cv
1475.06 203.086 1490.79 214.116 1488.02 224.262 cv
cp
1449.47 100.303 mo
1435.75 86.1553 1432.1 77.5615 1431.7 72.6186 cv
1433.01 73.4023 1434.75 74.6738 1437.04 76.7285 cv
1441.02 80.3057 1446.84 91.2056 1450.91 99.5098 cv
1450.42 99.7593 1449.95 100.037 1449.47 100.303 cv
cp
1416.43 232.885 mo
1387.66 275.818 1351 269.53 1345.06 247.903 cv
1340.91 245.705 1336.37 240.384 1333.23 234.509 cv
1332.77 235.039 1332.26 235.516 1331.69 235.896 cv
1331.24 236.23 1330.72 236.45 1330.23 236.699 cv
1329.7 236.887 1329.18 237.056 1328.63 237.157 cv
1328.97 236.743 1332.93 234.496 1334.12 228.264 cv
1334.28 227.414 1334.65 227.648 1334.77 228.032 cv
1335 228.713 1335.07 229.448 1335.03 230.172 cv
1334.99 231.318 1334.61 232.443 1334.04 233.448 cv
1334.03 233.457 1334.02 233.466 1334.02 233.476 cv
1348.2 250.806 1385.75 252.388 1415.28 231.573 cv
1413.82 229.567 1413.2 228.297 1412.66 225.984 cv
1412.26 224.334 1414.18 223.849 1414.64 225.479 cv
1416.96 233.557 1420.89 233.834 1426.16 234.832 cv
1421 235.364 1418.27 234.147 1416.43 232.885 cv
cp
1345.92 186.242 mo
1346.38 187.476 1347.75 188.098 1348.97 187.643 cv
1349.45 187.456 1349.82 187.095 1350.08 186.706 cv
1350.44 187.791 1350.66 189.042 1350.61 190.373 cv
1350.43 194.401 1348.06 197.569 1345.31 197.461 cv
1342.57 197.334 1340.48 193.971 1340.66 189.936 cv
1340.84 185.906 1343.21 182.738 1345.95 182.847 cv
1346.4 182.862 1346.85 183.016 1347.27 183.211 cv
1346.08 183.69 1345.47 185.032 1345.92 186.242 cv
cp
1348.08 170.491 mo
1352.94 170.714 1356.57 177.824 1356.2 186.405 cv
1355.83 194.974 1351.61 201.774 1346.75 201.549 cv
1346.43 201.541 1346.12 201.418 1345.81 201.355 cv
1349.7 201.506 1353.07 196.091 1353.38 189.219 cv
1353.66 182.354 1350.75 176.669 1346.87 176.504 cv
1342.99 176.338 1339.61 181.757 1339.31 188.624 cv
1339.21 191.059 1339.53 193.331 1340.13 195.282 cv
1339.06 192.584 1338.47 189.263 1338.63 185.644 cv
1339.01 177.068 1343.23 170.29 1348.08 170.491 cv
cp
1355.95 169.631 mo
1350.19 157.911 1340.59 166.701 1340.59 166.701 cv
1344.07 157.796 1355.16 157.351 1355.95 169.631 cv
cp
1370.14 85.2148 mo
1372.35 83.939 1373.98 83.206 1375.18 82.7969 cv
1374.01 86.7427 1369.57 93.0928 1356.01 102.215 cv
1355.67 101.917 1355.32 101.623 1354.96 101.335 cv
1359.69 95.2905 1366.28 87.4341 1370.14 85.2148 cv
cp
1378.01 210.81 mo
1378.01 210.81 1378.03 212.234 1376.74 213.808 cv
1369.71 222.396 1352.53 218.582 1353.95 208.295 cv
1354.09 207.324 1353.91 211.353 1358.96 213.374 cv
1365.49 215.999 1376.51 214.112 1378.01 210.81 cv
cp
1391.72 188.332 mo
1392.05 189.592 1393.33 190.339 1394.58 190.006 cv
1395.09 189.888 1395.47 189.58 1395.78 189.196 cv
1396.05 190.318 1396.11 191.574 1395.93 192.883 cv
1395.34 196.847 1392.69 199.747 1389.98 199.344 cv
1387.27 198.939 1385.56 195.409 1386.15 191.44 cv
1386.73 187.465 1389.39 184.581 1392.1 184.973 cv
1392.55 185.044 1392.98 185.231 1393.36 185.455 cv
1392.13 185.803 1391.39 187.078 1391.72 188.332 cv
cp
1384.62 186.307 mo
1385.91 177.492 1391.01 170.956 1395.99 171.688 cv
1400.99 172.424 1403.98 180.174 1402.68 188.988 cv
1401.38 197.801 1396.3 204.347 1391.31 203.611 cv
1390.68 203.515 1390.09 203.307 1389.53 203.022 cv
1389.8 203.106 1390.05 203.253 1390.35 203.284 cv
1394.34 203.88 1398.42 198.643 1399.45 191.596 cv
1400.49 184.544 1398.09 178.343 1394.1 177.75 cv
1390.12 177.165 1386.04 182.402 1385.02 189.45 cv
1384.64 191.958 1384.72 194.333 1385.13 196.409 cv
1384.32 193.51 1384.07 190.035 1384.62 186.307 cv
cp
1407.74 172.321 mo
1407.74 172.321 1399.79 162.151 1388.83 169.207 cv
1394.84 159.021 1407.66 163.063 1407.74 172.321 cv
cp
1320.53 119.444 mo
1321.52 118.476 1322.92 117.328 1324.92 115.995 cv
1328.79 113.425 1338.84 110.501 1345.85 108.592 cv
1345.92 108.72 1346 108.845 1346.07 108.974 cv
1340.04 113.404 1329.07 120.766 1320.53 119.444 cv
cp
1460.32 110.587 mo
1468.07 114.586 1478.83 120.395 1482.67 124.312 cv
1484.7 126.386 1486.07 128.09 1486.99 129.479 cv
1476.78 128.914 1465.88 117.861 1459.81 111.091 cv
1459.97 110.918 1460.15 110.755 1460.32 110.587 cv
cp
1497.02 215.295 mo
1495.89 210.986 1493.65 207.78 1490.56 205.771 cv
1487.19 203.109 1482.56 202.061 1477.06 202.814 cv
1477.2 197.678 1477.03 192.728 1476.56 187.973 cv
1475.75 174.726 1472.43 163.801 1467.22 154.432 cv
1463.01 145.932 1457.66 138.616 1451.53 132.63 cv
1451.11 127.453 1452.56 121.968 1455.29 117.177 cv
1455.65 122.754 1455.27 130.452 1457.49 132.458 cv
1460.71 131.007 1465.32 128.491 1464.51 127.705 cv
1459.17 122.538 1457.95 117.746 1456.73 114.867 cv
1456.79 114.774 1456.86 114.684 1456.93 114.592 cv
1477.62 144.921 1485 137.947 1486.72 136.573 cv
1491.47 132.788 1492.9 128.486 1492.9 128.486 cv
1492.88 128.494 1492.87 128.497 1492.85 128.505 cv
1493.81 126.709 1493.5 125.449 1491.51 123.02 cv
1484.61 114.602 1472.21 110.572 1462.82 108.385 cv
1468.47 104.013 1475.64 102.15 1482.94 105.213 cv
1487.52 107.128 1490.88 109.876 1493.22 112.368 cv
1493.59 112.759 1494.19 112.821 1494.62 112.51 cv
1495.06 112.2 1495.21 111.614 1494.96 111.136 cv
1490.28 102.034 1480.48 94.3706 1466.37 95.2226 cv
1461.47 95.5171 1456.87 96.8032 1452.7 98.6846 cv
1450.18 86.9092 1446.97 70.7319 1438.28 65.7246 cv
1436.25 64.5537 1435.04 65.5327 1433.21 67.0093 cv
1433.38 66.8281 1433.5 66.7397 1433.5 66.7397 cv
1433.5 66.7397 1425.34 72.6704 1424.54 74.9145 cv
1421.83 82.499 1432.55 93.7056 1445.2 102.995 cv
1444.88 103.224 1444.57 103.461 1444.25 103.696 cv
1440.93 101.957 1437.16 99.7461 1434.22 97.772 cv
1428.26 93.769 1425.48 91.1118 1425.48 91.1118 cv
1423.67 93.6172 1426.1 99.0981 1426.49 103.24 cv
1427.96 104.634 1434.39 105.999 1440.35 107.004 cv
1435.87 111.267 1432.77 116.008 1431.59 120.041 cv
1431.24 119.906 1430.9 119.761 1430.55 119.633 cv
1430.53 119.622 1430.51 119.614 1430.49 119.604 cv
1430.5 119.61 1430.52 119.619 1430.53 119.624 cv
1403.82 109.832 1372.85 117.294 1366.8 119.042 cv
1366.12 116.026 1364.57 112.588 1362.27 109.237 cv
1367.28 109.449 1372.74 109.45 1374.18 108.571 cv
1375.19 105.276 1379.28 100.486 1377.07 98.8965 cv
1377.07 98.8965 1374.36 100.572 1368.83 102.797 cv
1366.11 103.891 1362.67 105.032 1359.68 105.872 cv
1359.46 105.626 1359.23 105.388 1359.01 105.147 cv
1370.88 99.7832 1381.51 92.5278 1380.61 85.8984 cv
1380.34 83.937 1374.73 77.7056 1374.73 77.7056 cv
1374.73 77.7056 1374.82 77.8071 1374.93 78.001 cv
1373.69 76.4717 1372.87 75.4531 1371.01 76.0591 cv
1363.1 78.6255 1357.72 91.2124 1353.66 100.344 cv
1350.59 98.0957 1347.08 96.2573 1343.15 95.1724 cv
1333.39 92.4722 1325.54 95.5542 1320.91 101.32 cv
1320.53 101.805 1320.56 102.503 1320.99 102.951 cv
1321.42 103.399 1322.12 103.457 1322.61 103.085 cv
1324.07 101.998 1325.84 101.043 1327.97 100.428 cv
1334.65 98.499 1340.35 101.461 1343.58 105.298 cv
1343.9 105.681 1344.18 106.076 1344.47 106.467 cv
1336.41 106.571 1325.22 107.604 1317.97 113.415 cv
1315.93 115.045 1315.46 116.013 1315.93 117.64 cv
1315.92 117.63 1315.91 117.624 1315.89 117.614 cv
1315.89 117.614 1316.32 121.361 1319.54 125.252 cv
1320.7 126.67 1325.52 133.62 1347.57 112.474 cv
1347.6 112.56 1347.63 112.646 1347.66 112.733 cv
1346.19 114.866 1345.02 118.643 1339.74 121.955 cv
1338.95 122.451 1342.26 125.29 1344.63 127.025 cv
1346.72 125.812 1347.05 119.658 1348.3 115.246 cv
1349.47 120.942 1348.47 125.859 1348.22 126.882 cv
1336.61 133.605 1327.72 143.08 1322.5 155.604 cv
1320.39 160.681 1319.22 166.275 1318.64 171.844 cv
1316.45 187.513 1319.22 201.747 1318.79 202.153 cv
1298.66 220.972 1310.76 253.213 1322.54 267.988 cv
1343.16 293.808 1382.79 305.491 1428.26 289.047 cv
1440.07 284.768 1462.8 268.449 1469.73 245.679 cv
1470.7 244.582 1471.66 243.459 1472.64 242.303 cv
1473.01 242.349 1473.39 242.39 1473.78 242.415 cv
1477.38 243.29 1480.79 243.272 1483.92 242.341 cv
1494.96 239.049 1499.68 225.441 1497.02 215.295 cv
cp
f
1416.43 232.885 mo
1416.45 232.854 1416.47 232.825 1416.49 232.793 cv
1416.59 232.636 1416.41 232.875 1416.41 232.875 cv
1416.41 232.879 1416.42 232.882 1416.43 232.885 cv
cp
f
893.675 512 mo
718.992 512 li
714.21 512 710.333 508.124 710.333 503.342 cv
710.333 328.658 li
710.333 323.876 714.21 320 718.992 320 cv
893.675 320 li
898.457 320 902.333 323.876 902.333 328.658 cv
902.333 503.342 li
902.333 508.124 898.457 512 893.675 512 cv
cp
0 .368627 .427451 rgb
f
726.37 330.254 mo
723.182 330.254 720.588 332.849 720.588 336.037 cv
720.588 495.964 li
720.588 499.152 723.182 501.746 726.37 501.746 cv
886.298 501.746 li
889.486 501.746 892.079 499.152 892.079 495.964 cv
892.079 336.036 li
892.079 332.848 889.485 330.254 886.297 330.254 cv
726.37 330.254 li
cp
886.298 504.31 mo
726.37 504.31 li
721.768 504.31 718.024 500.565 718.024 495.964 cv
718.024 336.037 li
718.024 331.435 721.768 327.69 726.37 327.69 cv
886.297 327.69 li
890.899 327.69 894.643 331.435 894.643 336.036 cv
894.643 495.964 li
894.643 500.565 890.899 504.31 886.298 504.31 cv
cp
1 1 1 rgb
f
738.497 450.536 mo
738.497 449.093 740.145 448.476 741.845 448.476 cv
743.494 448.476 745.194 449.093 745.194 450.536 cv
745.194 464.599 li
756.322 449.453 li
756.837 448.732 757.455 448.476 758.176 448.476 cv
759.876 448.476 762.04 450.227 762.04 451.927 cv
762.04 452.287 761.988 452.75 761.628 453.215 cv
752.406 464.754 li
763.637 481.858 li
763.895 482.219 763.997 482.63 763.997 483.042 cv
763.997 484.691 761.937 486.392 759.979 486.392 cv
759.103 486.392 758.227 486.03 757.661 485.104 cv
747.975 470.421 li
745.194 473.925 li
745.194 484.021 li
745.194 485.413 743.494 486.134 741.845 486.134 cv
740.145 486.134 738.497 485.413 738.497 484.021 cv
738.497 450.536 li
cp
f
773.058 463.724 mo
773.058 484.021 li
773.058 485.051 771.565 486.134 769.71 486.134 cv
767.804 486.134 766.413 485.051 766.413 484.021 cv
766.413 463.724 li
766.413 462.488 767.804 461.664 769.71 461.664 cv
771.565 461.664 773.058 462.488 773.058 463.724 cv
cp
773.316 452.957 mo
773.316 454.657 771.719 456.203 769.71 456.203 cv
767.649 456.203 766.052 454.657 766.052 452.957 cv
766.052 451.206 767.649 449.711 769.71 449.711 cv
771.719 449.711 773.316 451.206 773.316 452.957 cv
cp
f
783.978 476.037 mo
783.978 478.406 786.038 480.775 788.46 480.775 cv
791.087 480.775 793.148 478.045 793.148 476.964 cv
793.148 471.812 li
793.148 468.928 790.727 467.175 788.512 467.175 cv
785.987 467.175 783.978 469.494 783.978 471.812 cv
783.978 476.037 li
cp
799.794 449.453 mo
799.794 484.021 li
799.794 485.051 798.403 486.134 796.497 486.134 cv
794.849 486.134 793.508 485.051 793.508 484.021 cv
793.508 482.528 li
792.478 484.64 789.645 486.597 786.348 486.597 cv
781.557 486.597 777.332 481.549 777.332 476.037 cv
777.332 471.812 li
777.332 466.094 781.453 461.355 786.502 461.355 cv
789.696 461.355 792.015 463.26 793.148 465.269 cv
793.148 449.453 li
793.148 448.218 794.642 447.393 796.497 447.393 cv
798.403 447.393 799.794 448.218 799.794 449.453 cv
cp
f
816.532 479.333 mo
816.532 474.8 804.322 477.634 804.322 469.03 cv
804.322 465.373 806.641 461.355 813.543 461.355 cv
817.716 461.355 821.734 462.797 821.734 464.703 cv
821.734 465.631 820.859 467.896 819.313 467.896 cv
818.077 467.896 816.479 466.403 813.646 466.403 cv
811.071 466.403 810.04 467.691 810.04 468.721 cv
810.04 472.481 822.404 469.907 822.404 479.076 cv
822.404 483.661 819.004 486.597 812.925 486.597 cv
807.67 486.597 803.6 484.435 803.6 482.167 cv
803.6 481.084 804.528 479.231 805.816 479.231 cv
807.31 479.231 808.443 481.549 812.771 481.549 cv
815.81 481.549 816.532 480.364 816.532 479.333 cv
cp
f
837.131 450.536 mo
837.131 449.093 838.78 448.476 840.48 448.476 cv
842.128 448.476 843.828 449.093 843.828 450.536 cv
843.828 484.021 li
843.828 485.413 842.128 486.134 840.48 486.134 cv
838.78 486.134 837.131 485.413 837.131 484.021 cv
837.131 450.536 li
cp
f
856.705 454.348 mo
856.705 480.261 li
862.063 480.261 li
865.464 480.261 867.473 478.354 867.473 474.336 cv
867.473 460.272 li
867.473 456.254 865.464 454.348 862.063 454.348 cv
856.705 454.348 li
cp
862.063 448.476 mo
868.864 448.476 874.17 451.669 874.17 460.272 cv
874.17 474.336 li
874.17 482.94 868.864 486.134 862.063 486.134 cv
852.945 486.134 li
851.193 486.134 850.009 485.155 850.009 484.073 cv
850.009 450.536 li
850.009 449.453 851.193 448.476 852.945 448.476 cv
862.063 448.476 li
cp
f
796.499 405.777 mo
796.294 405.675 796.073 405.586 795.882 405.448 cv
795.639 405.292 795.422 405.094 795.227 404.874 cv
791.192 414.808 775.758 427.451 760.343 404.734 cv
759.576 405.278 758.44 405.809 756.277 405.618 cv
758.475 405.163 760.122 405.021 761.042 401.6 cv
761.226 400.909 762.032 401.102 761.878 401.799 cv
761.665 402.778 761.412 403.318 760.812 404.173 cv
775.879 413.755 789.547 409.911 794.89 404.443 cv
794.888 404.439 794.884 404.436 794.882 404.432 cv
794.637 404.012 794.47 403.54 794.443 403.057 cv
794.422 402.752 794.449 402.442 794.537 402.153 cv
794.587 401.99 794.741 401.889 794.814 402.247 cv
795.353 404.866 797.027 405.788 797.171 405.96 cv
796.942 405.921 796.721 405.853 796.499 405.777 cv
cp
765.389 379.283 mo
765.424 375.396 770.805 373.699 773.329 377.976 cv
768.727 375.014 765.389 379.283 765.389 379.283 cv
cp
770.474 385.917 mo
770.538 385.374 771.038 385.075 771.304 385.035 cv
772.344 384.876 773.47 385.718 773.584 387.677 cv
773.713 389.874 772.806 391.085 771.767 391.241 cv
770.729 391.395 769.715 390.283 769.488 388.764 cv
769.417 388.262 769.442 387.781 769.546 387.351 cv
769.662 387.498 769.811 387.616 770.003 387.661 cv
770.484 387.789 770.975 387.502 771.103 387.02 cv
771.227 386.539 770.905 385.95 770.474 385.917 cv
cp
774.931 386.475 mo
774.5 383.516 772.79 381.316 771.118 381.563 cv
769.443 381.812 768.434 384.415 768.872 387.375 cv
769.304 390.333 771.017 392.532 772.689 392.282 cv
772.715 392.279 772.738 392.27 772.763 392.263 cv
772.607 392.322 772.457 392.394 772.289 392.419 cv
770.195 392.729 768.06 389.98 767.516 386.28 cv
766.971 382.58 768.224 379.327 770.323 379.018 cv
772.414 378.71 774.555 381.454 775.095 385.155 cv
775.326 386.72 775.222 388.179 774.883 389.396 cv
775.056 388.524 775.088 387.527 774.931 386.475 cv
cp
785.87 396.518 mo
787.989 395.669 787.913 393.978 787.973 394.386 cv
788.57 398.705 781.356 400.305 778.405 396.7 cv
777.865 396.04 777.871 395.441 777.871 395.441 cv
778.503 396.828 783.126 397.62 785.87 396.518 cv
cp
790.436 378.515 mo
792.472 378.431 794.245 381.276 794.402 384.876 cv
794.469 386.396 794.224 387.79 793.774 388.923 cv
794.028 388.104 794.16 387.149 794.118 386.127 cv
793.995 383.245 792.572 380.97 790.945 381.04 cv
789.315 381.109 788.093 383.495 788.213 386.378 cv
788.249 387.193 788.391 387.958 788.61 388.636 cv
788.523 388.338 788.462 388.021 788.447 387.682 cv
788.426 387.162 788.511 386.674 788.653 386.25 cv
788.756 386.402 788.898 386.543 789.086 386.616 cv
789.563 386.793 790.099 386.551 790.276 386.069 cv
790.453 385.597 790.114 385.016 789.512 385.016 cv
789.773 384.615 790.2 384.497 790.376 384.49 cv
791.449 384.448 792.338 385.165 792.443 387.258 cv
792.521 388.833 791.583 390.399 790.516 390.449 cv
789.752 390.479 789.071 389.857 788.712 388.936 cv
789.287 390.491 790.288 391.515 791.388 391.473 cv
791.261 391.499 791.131 391.55 790.995 391.554 cv
788.956 391.648 787.181 388.793 787.028 385.196 cv
786.873 381.593 788.397 378.609 790.436 378.515 cv
cp
793.582 378.309 mo
793.582 378.309 789.551 374.619 787.132 379.539 cv
787.464 374.384 792.122 374.571 793.582 378.309 cv
cp
737.078 406.993 mo
736.786 406.079 736.543 405.287 736.194 403.922 cv
733.837 394.679 729.933 398.477 730.305 401.089 cv
729.141 396.83 735.876 392.788 737.034 403.792 cv
737.121 404.636 737.218 405.982 737.078 406.993 cv
cp
799.419 371.924 mo
796.197 364.863 790.186 360.273 782.4 357.809 cv
783.92 356.324 786.225 355.304 788.954 355.951 cv
793.064 356.926 794.565 360.62 794.565 360.62 cv
793.368 355.38 786.103 351.671 779.396 353.886 cv
778.125 354.305 776.959 354.893 775.895 355.588 cv
779.946 348.069 790.245 348.934 792.757 350.656 cv
780.078 340.258 765.931 350.963 763.687 356.217 cv
763.688 356.218 763.69 356.219 763.692 356.22 cv
757.235 356.855 750.204 358.899 745.009 364.023 cv
738.329 370.609 734.233 378.98 735.151 392.115 cv
730.875 391.436 727.812 393.321 726.93 397.221 cv
725.953 401.524 728.133 407.165 732.808 408.39 cv
734.096 408.725 736.12 408.897 737.568 408.518 cv
737.546 408.448 737.575 408.542 737.619 408.732 cv
739.997 418.993 750.203 426.407 755.392 428.287 cv
774.479 435.19 791.118 430.285 799.774 419.446 cv
804.721 413.243 809.8 399.708 801.347 391.807 cv
801.1 391.575 803.36 380.554 799.419 371.924 cv
cp
f
760.316 404.696 mo
760.325 404.709 760.334 404.721 760.343 404.734 cv
760.345 404.732 760.347 404.731 760.349 404.73 cv
760.349 404.73 760.271 404.63 760.316 404.696 cv
cp
f
882.317 404.098 mo
882.649 401.765 879.162 398.373 877.057 406.629 cv
876.728 407.914 876.354 409.041 876.319 409.051 cv
876.251 408.009 876.34 406.801 876.423 405.987 cv
877.457 396.157 883.357 400.293 882.317 404.098 cv
cp
867.865 357.614 mo
862.719 352.308 861.349 349.085 861.198 347.232 cv
861.691 347.526 862.342 348.003 863.2 348.773 cv
864.696 350.115 866.875 354.202 868.403 357.316 cv
868.219 357.41 868.044 357.514 867.865 357.614 cv
cp
855.471 407.332 mo
844.684 423.432 830.935 421.074 828.707 412.964 cv
827.151 412.139 825.449 410.144 824.273 407.941 cv
824.101 408.139 823.911 408.318 823.695 408.461 cv
823.526 408.586 823.329 408.668 823.147 408.762 cv
822.951 408.833 822.753 408.896 822.549 408.934 cv
822.675 408.779 824.16 407.936 824.605 405.599 cv
824.666 405.28 824.805 405.368 824.852 405.512 cv
824.935 405.768 824.963 406.043 824.949 406.315 cv
824.932 406.745 824.789 407.167 824.576 407.543 cv
824.573 407.546 824.571 407.55 824.568 407.553 cv
829.887 414.052 843.967 414.646 855.043 406.84 cv
854.495 406.088 854.261 405.611 854.057 404.744 cv
853.91 404.125 854.628 403.943 854.802 404.554 cv
855.672 407.583 857.147 407.688 859.12 408.062 cv
857.187 408.262 856.164 407.805 855.471 407.332 cv
cp
829.032 389.841 mo
829.203 390.303 829.717 390.537 830.175 390.366 cv
830.356 390.296 830.493 390.161 830.591 390.015 cv
830.728 390.422 830.809 390.891 830.789 391.39 cv
830.724 392.9 829.835 394.088 828.802 394.048 cv
827.777 394 826.991 392.739 827.058 391.226 cv
827.125 389.715 828.014 388.527 829.043 388.567 cv
829.213 388.573 829.379 388.631 829.537 388.704 cv
829.091 388.884 828.863 389.387 829.032 389.841 cv
cp
829.842 383.934 mo
831.663 384.018 833.025 386.684 832.887 389.902 cv
832.749 393.115 831.164 395.666 829.343 395.581 cv
829.222 395.578 829.105 395.532 828.992 395.508 cv
830.448 395.564 831.713 393.534 831.828 390.958 cv
831.935 388.383 830.843 386.251 829.388 386.189 cv
827.934 386.127 826.663 388.159 826.554 390.734 cv
826.516 391.647 826.634 392.499 826.86 393.231 cv
826.458 392.219 826.24 390.974 826.299 389.617 cv
826.44 386.401 828.024 383.859 829.842 383.934 cv
cp
832.793 383.611 mo
830.632 379.216 827.032 382.513 827.032 382.513 cv
828.336 379.174 832.497 379.007 832.793 383.611 cv
cp
838.114 351.956 mo
838.944 351.477 839.555 351.202 840.006 351.049 cv
839.565 352.528 837.901 354.91 832.815 358.331 cv
832.687 358.219 832.556 358.108 832.422 358 cv
834.197 355.734 836.668 352.788 838.114 351.956 cv
cp
841.066 399.054 mo
841.066 399.054 841.071 399.588 840.589 400.178 cv
837.953 403.398 831.509 401.968 832.043 398.111 cv
832.096 397.747 832.028 399.257 833.921 400.015 cv
836.371 401 840.501 400.292 841.066 399.054 cv
cp
846.205 390.625 mo
846.329 391.097 846.811 391.377 847.281 391.252 cv
847.469 391.208 847.615 391.092 847.728 390.949 cv
847.829 391.369 847.854 391.84 847.786 392.331 cv
847.563 393.817 846.571 394.905 845.555 394.754 cv
844.539 394.602 843.897 393.278 844.119 391.79 cv
844.337 390.299 845.333 389.218 846.35 389.365 cv
846.519 389.392 846.678 389.462 846.821 389.545 cv
846.362 389.676 846.083 390.154 846.205 390.625 cv
cp
843.546 389.865 mo
844.028 386.56 845.94 384.108 847.808 384.383 cv
849.683 384.659 850.803 387.565 850.316 390.871 cv
849.829 394.175 847.923 396.63 846.052 396.354 cv
845.816 396.318 845.594 396.24 845.384 396.133 cv
845.486 396.165 845.582 396.22 845.695 396.232 cv
847.187 396.455 848.719 394.491 849.104 391.848 cv
849.495 389.204 848.594 386.878 847.099 386.657 cv
845.605 386.437 844.078 388.401 843.693 391.044 cv
843.552 391.984 843.581 392.875 843.735 393.653 cv
843.432 392.566 843.339 391.263 843.546 389.865 cv
cp
852.216 384.621 mo
852.216 384.621 849.233 380.807 845.123 383.453 cv
847.377 379.633 852.184 381.148 852.216 384.621 cv
cp
819.511 364.792 mo
819.882 364.429 820.406 363.998 821.158 363.498 cv
822.608 362.534 826.376 361.438 829.004 360.722 cv
829.031 360.77 829.063 360.817 829.089 360.865 cv
826.825 362.526 822.712 365.287 819.511 364.792 cv
cp
871.93 361.47 mo
874.837 362.97 878.872 365.148 880.313 366.617 cv
881.076 367.395 881.586 368.034 881.934 368.555 cv
878.104 368.342 874.017 364.198 871.739 361.659 cv
871.801 361.594 871.866 361.533 871.93 361.47 cv
cp
885.693 400.736 mo
885.27 399.12 884.431 397.917 883.273 397.164 cv
882.008 396.166 880.272 395.772 878.209 396.055 cv
878.263 394.129 878.197 392.273 878.02 390.49 cv
877.717 385.522 876.472 381.425 874.52 377.912 cv
872.941 374.724 870.935 371.981 868.634 369.736 cv
868.479 367.795 869.023 365.738 870.044 363.941 cv
870.182 366.033 870.038 368.919 870.87 369.671 cv
872.076 369.127 873.805 368.184 873.502 367.889 cv
871.502 365.952 871.043 364.155 870.585 363.075 cv
870.609 363.041 870.634 363.006 870.659 362.972 cv
878.418 374.345 881.185 371.73 881.833 371.215 cv
883.614 369.795 884.149 368.182 884.149 368.182 cv
884.142 368.185 884.136 368.187 884.129 368.189 cv
884.492 367.516 884.374 367.043 883.627 366.132 cv
881.039 362.976 876.389 361.465 872.87 360.645 cv
874.989 359.005 877.676 358.307 880.415 359.455 cv
882.13 360.173 883.391 361.204 884.268 362.138 cv
884.406 362.285 884.631 362.308 884.796 362.191 cv
884.961 362.075 885.015 361.855 884.922 361.676 cv
883.167 358.263 879.493 355.389 874.199 355.708 cv
872.362 355.819 870.639 356.301 869.073 357.007 cv
868.13 352.591 866.925 346.524 863.666 344.647 cv
862.906 344.208 862.451 344.575 861.764 345.128 cv
861.83 345.061 861.875 345.027 861.875 345.027 cv
861.875 345.027 858.812 347.251 858.513 348.093 cv
857.497 350.937 861.519 355.14 866.26 358.623 cv
866.14 358.709 866.024 358.798 865.907 358.886 cv
864.662 358.234 863.245 357.405 862.144 356.665 cv
859.909 355.163 858.866 354.167 858.866 354.167 cv
858.188 355.106 859.1 357.162 859.245 358.715 cv
859.796 359.238 862.208 359.75 864.442 360.126 cv
862.763 361.725 861.599 363.503 861.158 365.015 cv
861.027 364.965 860.898 364.91 860.766 364.862 cv
860.759 364.858 860.753 364.855 860.746 364.852 cv
860.749 364.854 860.755 364.857 860.759 364.859 cv
850.744 361.187 839.13 363.985 836.86 364.641 cv
836.606 363.51 836.027 362.221 835.164 360.964 cv
837.043 361.043 839.09 361.043 839.628 360.714 cv
840.009 359.479 841.54 357.682 840.712 357.086 cv
840.712 357.086 839.695 357.714 837.621 358.549 cv
836.601 358.959 835.312 359.387 834.19 359.702 cv
834.11 359.61 834.024 359.521 833.941 359.43 cv
838.391 357.419 842.377 354.698 842.038 352.212 cv
841.939 351.477 839.833 349.14 839.833 349.14 cv
839.833 349.14 839.867 349.178 839.912 349.25 cv
839.445 348.677 839.138 348.295 838.44 348.522 cv
835.473 349.484 833.455 354.205 831.933 357.629 cv
830.783 356.786 829.465 356.097 827.993 355.689 cv
824.331 354.677 821.39 355.833 819.655 357.995 cv
819.509 358.177 819.52 358.439 819.682 358.607 cv
819.844 358.774 820.105 358.796 820.292 358.657 cv
820.839 358.249 821.503 357.891 822.302 357.66 cv
824.804 356.937 826.942 358.048 828.155 359.487 cv
828.276 359.63 828.379 359.778 828.486 359.925 cv
825.465 359.964 821.268 360.351 818.548 362.531 cv
817.786 363.142 817.609 363.505 817.787 364.115 cv
817.782 364.111 817.777 364.109 817.771 364.105 cv
817.771 364.105 817.932 365.511 819.139 366.97 cv
819.576 367.501 821.381 370.107 829.65 362.178 cv
829.661 362.21 829.674 362.243 829.684 362.275 cv
829.132 363.075 828.693 364.491 826.715 365.733 cv
826.418 365.919 827.66 366.984 828.549 367.634 cv
829.332 367.18 829.454 364.872 829.925 363.217 cv
830.364 365.353 829.987 367.197 829.896 367.581 cv
825.542 370.102 822.205 373.655 820.25 378.352 cv
819.457 380.255 819.018 382.353 818.802 384.441 cv
817.98 390.317 819.02 395.655 818.859 395.808 cv
811.308 402.865 815.845 414.955 820.264 420.496 cv
827.996 430.178 842.859 434.559 859.908 428.393 cv
864.337 426.788 872.86 420.668 875.461 412.129 cv
875.823 411.718 876.186 411.297 876.55 410.863 cv
876.691 410.881 876.832 410.896 876.977 410.906 cv
878.33 411.234 879.609 411.227 880.783 410.878 cv
884.92 409.643 886.692 404.541 885.693 400.736 cv
cp
f
855.471 407.332 mo
855.479 407.32 855.487 407.31 855.494 407.297 cv
855.533 407.238 855.465 407.328 855.465 407.328 cv
855.467 407.33 855.469 407.331 855.471 407.332 cv
cp
f
593.034 512 mo
466.3 512 li
461.532 512 457.666 508.135 457.666 503.367 cv
457.666 376.633 li
457.666 371.865 461.532 368 466.3 368 cv
593.034 368 li
597.801 368 601.666 371.865 601.666 376.633 cv
601.666 503.367 li
601.666 508.135 597.801 512 593.034 512 cv
cp
0 .368627 .427451 rgb
f
469.694 375.69 mo
467.303 375.69 465.357 377.637 465.357 380.028 cv
465.357 499.973 li
465.357 502.364 467.303 504.31 469.694 504.31 cv
589.64 504.31 li
592.031 504.31 593.976 502.364 593.976 499.973 cv
593.976 380.027 li
593.976 377.636 592.031 375.69 589.64 375.69 cv
469.694 375.69 li
cp
589.64 506.232 mo
469.694 506.232 li
466.243 506.232 463.435 503.424 463.435 499.973 cv
463.435 380.028 li
463.435 376.576 466.243 373.768 469.694 373.768 cv
589.64 373.768 li
593.091 373.768 595.899 376.576 595.899 380.027 cv
595.899 499.973 li
595.899 503.424 593.091 506.232 589.64 506.232 cv
cp
1 1 1 rgb
f
478.789 465.902 mo
478.789 464.82 480.026 464.357 481.301 464.357 cv
482.537 464.357 483.812 464.82 483.812 465.902 cv
483.812 476.45 li
492.158 465.09 li
492.544 464.549 493.008 464.357 493.549 464.357 cv
494.824 464.357 496.447 465.67 496.447 466.945 cv
496.447 467.215 496.408 467.563 496.138 467.911 cv
489.221 476.566 li
497.644 489.394 li
497.838 489.664 497.914 489.973 497.914 490.282 cv
497.914 491.518 496.37 492.794 494.901 492.794 cv
494.245 492.794 493.587 492.522 493.162 491.828 cv
485.898 480.816 li
483.812 483.443 li
483.812 491.016 li
483.812 492.06 482.537 492.601 481.301 492.601 cv
480.026 492.601 478.789 492.06 478.789 491.016 cv
478.789 465.902 li
cp
f
504.711 475.793 mo
504.711 491.016 li
504.711 491.789 503.59 492.601 502.199 492.601 cv
500.769 492.601 499.726 491.789 499.726 491.016 cv
499.726 475.793 li
499.726 474.866 500.769 474.248 502.199 474.248 cv
503.59 474.248 504.711 474.866 504.711 475.793 cv
cp
504.904 467.718 mo
504.904 468.993 503.706 470.152 502.199 470.152 cv
500.654 470.152 499.455 468.993 499.455 467.718 cv
499.455 466.404 500.654 465.283 502.199 465.283 cv
503.706 465.283 504.904 466.404 504.904 467.718 cv
cp
f
512.9 485.027 mo
512.9 486.805 514.446 488.582 516.262 488.582 cv
518.232 488.582 519.778 486.534 519.778 485.723 cv
519.778 481.859 li
519.778 479.696 517.962 478.381 516.3 478.381 cv
514.407 478.381 512.9 480.12 512.9 481.859 cv
512.9 485.027 li
cp
524.762 465.09 mo
524.762 491.016 li
524.762 491.789 523.719 492.601 522.289 492.601 cv
521.053 492.601 520.048 491.789 520.048 491.016 cv
520.048 489.896 li
519.275 491.479 517.15 492.948 514.678 492.948 cv
511.084 492.948 507.916 489.162 507.916 485.027 cv
507.916 481.859 li
507.916 477.57 511.007 474.016 514.793 474.016 cv
517.189 474.016 518.928 475.445 519.778 476.952 cv
519.778 465.09 li
519.778 464.164 520.898 463.545 522.289 463.545 cv
523.719 463.545 524.762 464.164 524.762 465.09 cv
cp
f
537.315 487.5 mo
537.315 484.1 528.158 486.225 528.158 479.773 cv
528.158 477.03 529.897 474.016 535.074 474.016 cv
538.204 474.016 541.217 475.098 541.217 476.527 cv
541.217 477.223 540.561 478.922 539.402 478.922 cv
538.474 478.922 537.276 477.802 535.151 477.802 cv
533.22 477.802 532.447 478.768 532.447 479.541 cv
532.447 482.361 541.72 480.43 541.72 487.307 cv
541.72 490.746 539.17 492.948 534.611 492.948 cv
530.669 492.948 527.617 491.326 527.617 489.625 cv
527.617 488.813 528.312 487.423 529.279 487.423 cv
530.399 487.423 531.249 489.162 534.495 489.162 cv
536.774 489.162 537.315 488.273 537.315 487.5 cv
cp
f
552.765 465.902 mo
552.765 464.82 554.001 464.357 555.276 464.357 cv
556.513 464.357 557.788 464.82 557.788 465.902 cv
557.788 491.016 li
557.788 492.06 556.513 492.601 555.276 492.601 cv
554.001 492.601 552.765 492.06 552.765 491.016 cv
552.765 465.902 li
cp
f
567.446 468.761 mo
567.446 488.196 li
571.464 488.196 li
574.015 488.196 575.521 486.766 575.521 483.752 cv
575.521 473.204 li
575.521 470.19 574.015 468.761 571.464 468.761 cv
567.446 468.761 li
cp
571.464 464.357 mo
576.564 464.357 580.544 466.751 580.544 473.204 cv
580.544 483.752 li
580.544 490.205 576.564 492.601 571.464 492.601 cv
564.625 492.601 li
563.312 492.601 562.423 491.867 562.423 491.055 cv
562.423 465.902 li
562.423 465.09 563.312 464.357 564.625 464.357 cv
571.464 464.357 li
cp
f
522.291 432.333 mo
522.137 432.256 521.971 432.189 521.828 432.086 cv
521.645 431.969 521.483 431.82 521.337 431.655 cv
518.31 439.106 506.736 448.588 495.174 431.55 cv
494.599 431.958 493.747 432.357 492.124 432.214 cv
493.773 431.873 495.008 431.766 495.699 429.2 cv
495.837 428.682 496.441 428.826 496.325 429.35 cv
496.165 430.083 495.975 430.488 495.526 431.13 cv
506.826 438.316 517.077 435.433 521.084 431.333 cv
521.082 431.329 521.08 431.327 521.078 431.324 cv
520.894 431.009 520.769 430.655 520.749 430.293 cv
520.733 430.064 520.753 429.832 520.82 429.615 cv
520.857 429.493 520.973 429.417 521.028 429.685 cv
521.432 431.65 522.687 432.341 522.795 432.47 cv
522.623 432.44 522.457 432.39 522.291 432.333 cv
cp
498.958 412.462 mo
498.985 409.547 503.02 408.274 504.913 411.482 cv
501.462 409.26 498.958 412.462 498.958 412.462 cv
cp
502.772 417.438 mo
502.821 417.03 503.196 416.806 503.394 416.776 cv
504.175 416.657 505.019 417.289 505.105 418.757 cv
505.202 420.405 504.521 421.314 503.743 421.431 cv
502.963 421.546 502.203 420.712 502.033 419.573 cv
501.979 419.197 501.998 418.835 502.077 418.513 cv
502.163 418.624 502.275 418.712 502.419 418.746 cv
502.78 418.842 503.148 418.627 503.244 418.265 cv
503.337 417.904 503.096 417.462 502.772 417.438 cv
cp
506.115 417.856 mo
505.791 415.637 504.509 413.987 503.255 414.172 cv
501.999 414.358 501.242 416.311 501.571 418.531 cv
501.894 420.75 503.18 422.399 504.433 422.211 cv
504.453 422.209 504.47 422.202 504.489 422.197 cv
504.372 422.242 504.259 422.295 504.134 422.314 cv
502.562 422.546 500.962 420.485 500.553 417.71 cv
500.144 414.935 501.085 412.495 502.659 412.263 cv
504.227 412.033 505.833 414.091 506.238 416.866 cv
506.411 418.04 506.333 419.134 506.079 420.047 cv
506.208 419.393 506.233 418.646 506.115 417.856 cv
cp
514.319 425.388 mo
515.908 424.752 515.851 423.483 515.896 423.789 cv
516.345 427.028 510.934 428.229 508.72 425.525 cv
508.316 425.03 508.32 424.581 508.32 424.581 cv
508.794 425.621 512.262 426.215 514.319 425.388 cv
cp
517.744 411.886 mo
519.27 411.823 520.6 413.957 520.718 416.658 cv
520.768 417.797 520.585 418.842 520.247 419.692 cv
520.438 419.078 520.536 418.362 520.505 417.595 cv
520.412 415.434 519.346 413.728 518.125 413.779 cv
516.903 413.832 515.986 415.622 516.076 417.783 cv
516.103 418.395 516.21 418.968 516.374 419.478 cv
516.308 419.254 516.263 419.015 516.252 418.761 cv
516.236 418.372 516.3 418.005 516.406 417.688 cv
516.483 417.801 516.59 417.907 516.731 417.962 cv
517.089 418.095 517.491 417.913 517.623 417.552 cv
517.756 417.197 517.502 416.762 517.05 416.762 cv
517.246 416.461 517.566 416.373 517.699 416.368 cv
518.503 416.336 519.17 416.874 519.249 418.443 cv
519.307 419.625 518.604 420.799 517.804 420.836 cv
517.23 420.859 516.72 420.393 516.45 419.702 cv
516.882 420.868 517.633 421.636 518.458 421.604 cv
518.363 421.624 518.265 421.663 518.163 421.665 cv
516.634 421.736 515.303 419.595 515.187 416.897 cv
515.071 414.195 516.215 411.957 517.744 411.886 cv
cp
520.103 411.731 mo
520.103 411.731 517.08 408.964 515.266 412.654 cv
515.515 408.788 519.008 408.928 520.103 411.731 cv
cp
477.725 433.245 mo
477.506 432.559 477.324 431.965 477.062 430.942 cv
475.294 424.009 472.367 426.858 472.645 428.816 cv
471.772 425.622 476.824 422.591 477.692 430.844 cv
477.757 431.477 477.83 432.487 477.725 433.245 cv
cp
524.481 406.943 mo
522.065 401.647 517.556 398.205 511.717 396.356 cv
512.857 395.243 514.586 394.479 516.633 394.963 cv
519.715 395.694 520.84 398.464 520.84 398.464 cv
519.943 394.535 514.494 391.753 509.464 393.414 cv
508.511 393.729 507.636 394.17 506.838 394.691 cv
509.876 389.051 517.601 389.7 519.484 390.992 cv
509.975 383.194 499.365 391.222 497.682 395.163 cv
497.683 395.164 497.684 395.164 497.686 395.165 cv
492.843 395.642 487.57 397.175 483.674 401.018 cv
478.664 405.957 475.591 412.235 476.28 422.086 cv
473.073 421.577 470.776 422.991 470.114 425.916 cv
469.381 429.143 471.016 433.374 474.523 434.292 cv
475.488 434.543 477.007 434.673 478.093 434.388 cv
478.076 434.336 478.098 434.406 478.131 434.549 cv
479.914 442.245 487.569 447.805 491.461 449.215 cv
505.776 454.393 518.255 450.714 524.747 442.584 cv
528.457 437.932 532.266 427.781 525.927 421.855 cv
525.742 421.681 527.437 413.416 524.481 406.943 cv
cp
f
495.154 431.522 mo
495.161 431.532 495.167 431.541 495.174 431.55 cv
495.175 431.549 495.177 431.548 495.179 431.547 cv
495.179 431.547 495.12 431.472 495.154 431.522 cv
cp
f
586.655 431.074 mo
586.903 429.324 584.288 426.779 582.709 432.972 cv
582.462 433.936 582.182 434.78 582.156 434.789 cv
582.105 434.007 582.171 433.101 582.234 432.49 cv
583.01 425.118 587.435 428.22 586.655 431.074 cv
cp
575.815 396.21 mo
571.955 392.231 570.929 389.814 570.815 388.424 cv
571.184 388.645 571.673 389.002 572.317 389.58 cv
573.438 390.586 575.073 393.651 576.219 395.987 cv
576.081 396.057 575.95 396.136 575.815 396.21 cv
cp
566.52 433.499 mo
558.43 445.574 548.118 443.805 546.447 437.723 cv
545.28 437.104 544.003 435.608 543.121 433.956 cv
542.993 434.104 542.849 434.239 542.687 434.346 cv
542.561 434.44 542.414 434.501 542.277 434.572 cv
542.129 434.625 541.981 434.672 541.828 434.7 cv
541.923 434.584 543.036 433.952 543.371 432.199 cv
543.416 431.96 543.52 432.026 543.556 432.134 cv
543.618 432.326 543.639 432.532 543.628 432.736 cv
543.616 433.058 543.508 433.375 543.349 433.657 cv
543.347 433.66 543.345 433.662 543.343 433.665 cv
547.332 438.539 557.891 438.984 566.199 433.13 cv
565.788 432.566 565.613 432.208 565.46 431.558 cv
565.349 431.094 565.888 430.958 566.018 431.416 cv
566.671 433.688 567.777 433.766 569.256 434.046 cv
567.807 434.196 567.04 433.854 566.52 433.499 cv
cp
546.691 420.381 mo
546.819 420.728 547.204 420.903 547.548 420.774 cv
547.684 420.722 547.786 420.62 547.86 420.511 cv
547.963 420.816 548.023 421.168 548.008 421.542 cv
547.96 422.675 547.293 423.566 546.518 423.536 cv
545.749 423.5 545.16 422.554 545.21 421.419 cv
545.261 420.286 545.927 419.395 546.699 419.426 cv
546.827 419.43 546.951 419.473 547.07 419.528 cv
546.734 419.663 546.564 420.041 546.691 420.381 cv
cp
547.298 415.951 mo
548.664 416.013 549.685 418.013 549.582 420.426 cv
549.479 422.836 548.289 424.749 546.924 424.686 cv
546.833 424.683 546.745 424.649 546.661 424.631 cv
547.752 424.673 548.701 423.15 548.788 421.218 cv
548.868 419.287 548.049 417.688 546.957 417.642 cv
545.868 417.595 544.914 419.119 544.832 421.05 cv
544.804 421.735 544.892 422.374 545.062 422.923 cv
544.761 422.164 544.597 421.23 544.641 420.212 cv
544.746 417.8 545.934 415.894 547.298 415.951 cv
cp
549.512 415.708 mo
547.891 412.413 545.191 414.884 545.191 414.884 cv
546.169 412.38 549.289 412.255 549.512 415.708 cv
cp
553.502 391.967 mo
554.125 391.608 554.583 391.402 554.921 391.287 cv
554.591 392.396 553.342 394.183 549.528 396.748 cv
549.432 396.664 549.334 396.582 549.233 396.5 cv
550.564 394.8 552.418 392.591 553.502 391.967 cv
cp
555.716 427.29 mo
555.716 427.29 555.72 427.691 555.359 428.133 cv
553.381 430.549 548.548 429.476 548.949 426.583 cv
548.989 426.31 548.938 427.443 550.357 428.011 cv
552.195 428.75 555.293 428.219 555.716 427.29 cv
cp
559.57 420.968 mo
559.664 421.323 560.025 421.533 560.377 421.439 cv
560.518 421.406 560.628 421.319 560.713 421.211 cv
560.789 421.527 560.807 421.88 560.756 422.249 cv
560.589 423.363 559.845 424.179 559.083 424.065 cv
558.321 423.952 557.84 422.958 558.006 421.842 cv
558.169 420.725 558.916 419.914 559.68 420.024 cv
559.806 420.043 559.925 420.096 560.032 420.159 cv
559.688 420.257 559.479 420.616 559.57 420.968 cv
cp
557.576 420.399 mo
557.937 417.92 559.371 416.081 560.772 416.287 cv
562.179 416.494 563.019 418.674 562.654 421.153 cv
562.289 423.631 560.859 425.473 559.455 425.266 cv
559.278 425.239 559.112 425.18 558.954 425.1 cv
559.032 425.124 559.103 425.165 559.187 425.174 cv
560.307 425.341 561.455 423.868 561.745 421.886 cv
562.038 419.903 561.362 418.159 560.241 417.992 cv
559.12 417.828 557.974 419.301 557.686 421.283 cv
557.58 421.988 557.602 422.656 557.718 423.24 cv
557.491 422.425 557.421 421.447 557.576 420.399 cv
cp
564.078 416.465 mo
564.078 416.465 561.842 413.605 558.759 415.589 cv
560.45 412.725 564.055 413.861 564.078 416.465 cv
cp
539.549 401.593 mo
539.828 401.321 540.221 400.999 540.785 400.624 cv
541.872 399.901 544.699 399.079 546.67 398.542 cv
546.69 398.578 546.714 398.613 546.733 398.649 cv
545.036 399.895 541.951 401.965 539.549 401.593 cv
cp
578.864 399.103 mo
581.044 400.228 584.071 401.861 585.151 402.963 cv
585.724 403.546 586.106 404.025 586.368 404.416 cv
583.495 404.257 580.43 401.148 578.721 399.244 cv
578.767 399.196 578.816 399.15 578.864 399.103 cv
cp
589.187 428.552 mo
588.869 427.34 588.24 426.438 587.371 425.873 cv
586.423 425.125 585.12 424.83 583.573 425.042 cv
583.614 423.597 583.564 422.205 583.432 420.867 cv
583.204 417.142 582.27 414.069 580.807 411.434 cv
579.622 409.043 578.118 406.986 576.392 405.302 cv
576.276 403.846 576.684 402.304 577.45 400.956 cv
577.553 402.524 577.445 404.69 578.069 405.253 cv
578.974 404.846 580.27 404.138 580.043 403.917 cv
578.543 402.464 578.199 401.116 577.855 400.306 cv
577.873 400.28 577.892 400.255 577.911 400.229 cv
583.73 408.759 585.806 406.797 586.291 406.411 cv
587.627 405.347 588.029 404.137 588.029 404.137 cv
588.024 404.139 588.018 404.14 588.014 404.142 cv
588.286 403.637 588.197 403.283 587.637 402.6 cv
585.696 400.232 582.208 399.099 579.57 398.483 cv
581.159 397.253 583.173 396.73 585.228 397.591 cv
586.514 398.13 587.46 398.903 588.118 399.604 cv
588.221 399.713 588.39 399.731 588.514 399.644 cv
588.637 399.557 588.678 399.392 588.608 399.257 cv
587.292 396.697 584.536 394.542 580.566 394.781 cv
579.188 394.864 577.895 395.226 576.722 395.755 cv
576.015 392.443 575.11 387.894 572.666 386.485 cv
572.096 386.156 571.754 386.431 571.24 386.846 cv
571.289 386.795 571.323 386.771 571.323 386.771 cv
571.323 386.771 569.026 388.438 568.801 389.07 cv
568.04 391.203 571.056 394.354 574.612 396.967 cv
574.521 397.032 574.434 397.099 574.347 397.165 cv
573.413 396.675 572.351 396.054 571.525 395.499 cv
569.849 394.373 569.066 393.625 569.066 393.625 cv
568.558 394.33 569.242 395.871 569.35 397.036 cv
569.764 397.428 571.573 397.812 573.248 398.095 cv
571.989 399.294 571.117 400.627 570.786 401.762 cv
570.687 401.724 570.59 401.683 570.492 401.646 cv
570.486 401.644 570.482 401.642 570.476 401.639 cv
570.479 401.64 570.483 401.643 570.486 401.645 cv
562.974 398.89 554.265 400.989 552.562 401.48 cv
552.371 400.632 551.937 399.666 551.29 398.723 cv
552.699 398.782 554.234 398.783 554.638 398.536 cv
554.923 397.609 556.072 396.262 555.451 395.814 cv
555.451 395.814 554.688 396.286 553.132 396.912 cv
552.368 397.219 551.4 397.54 550.559 397.776 cv
550.499 397.708 550.434 397.641 550.372 397.573 cv
553.709 396.064 556.7 394.023 556.446 392.159 cv
556.371 391.607 554.792 389.854 554.792 389.854 cv
554.792 389.854 554.817 389.883 554.85 389.938 cv
554.5 389.508 554.27 389.221 553.747 389.392 cv
551.521 390.113 550.008 393.653 548.867 396.222 cv
548.004 395.589 547.016 395.072 545.911 394.767 cv
543.165 394.008 540.959 394.875 539.658 396.496 cv
539.548 396.633 539.557 396.829 539.678 396.955 cv
539.799 397.081 539.995 397.097 540.136 396.993 cv
540.546 396.687 541.044 396.418 541.643 396.245 cv
543.519 395.703 545.123 396.536 546.033 397.615 cv
546.123 397.723 546.201 397.833 546.281 397.944 cv
544.016 397.973 540.868 398.264 538.828 399.898 cv
538.256 400.356 538.123 400.629 538.257 401.086 cv
538.253 401.083 538.249 401.082 538.245 401.079 cv
538.245 401.079 538.366 402.133 539.271 403.228 cv
539.599 403.626 540.953 405.581 547.154 399.633 cv
547.162 399.657 547.172 399.682 547.18 399.706 cv
546.766 400.306 546.436 401.368 544.953 402.3 cv
544.73 402.439 545.661 403.238 546.328 403.726 cv
546.916 403.385 547.007 401.654 547.361 400.413 cv
547.69 402.015 547.407 403.398 547.338 403.686 cv
544.073 405.577 541.57 408.241 540.104 411.764 cv
539.51 413.191 539.18 414.765 539.018 416.331 cv
538.402 420.738 539.182 424.741 539.061 424.855 cv
533.398 430.148 536.8 439.216 540.115 443.372 cv
545.914 450.633 557.061 453.919 569.848 449.294 cv
573.17 448.091 579.561 443.501 581.512 437.097 cv
581.784 436.789 582.056 436.473 582.329 436.147 cv
582.435 436.161 582.54 436.172 582.65 436.179 cv
583.665 436.425 584.623 436.42 585.503 436.158 cv
588.607 435.232 589.935 431.405 589.187 428.552 cv
cp
f
566.52 433.499 mo
566.526 433.49 566.532 433.482 566.537 433.473 cv
566.567 433.429 566.516 433.496 566.516 433.496 cv
566.517 433.497 566.518 433.498 566.52 433.499 cv
cp
f
352.242 512 mo
267.092 512 li
264.096 512 261.666 509.571 261.666 506.575 cv
261.666 421.425 li
261.666 418.429 264.096 416 267.092 416 cv
352.242 416 li
355.238 416 357.666 418.429 357.666 421.425 cv
357.666 506.575 li
357.666 509.571 355.238 512 352.242 512 cv
cp
0 .368627 .427451 rgb
f
269.685 421.127 mo
268.091 421.127 266.794 422.424 266.794 424.019 cv
266.794 503.982 li
266.794 505.576 268.091 506.873 269.684 506.873 cv
349.649 506.873 li
351.243 506.873 352.54 505.576 352.54 503.982 cv
352.54 424.018 li
352.54 422.424 351.243 421.127 349.649 421.127 cv
269.685 421.127 li
cp
349.649 508.155 mo
269.684 508.155 li
267.384 508.155 265.512 506.283 265.512 503.982 cv
265.512 424.019 li
265.512 421.717 267.384 419.845 269.685 419.845 cv
349.649 419.845 li
351.95 419.845 353.822 421.717 353.822 424.018 cv
353.822 503.982 li
353.822 506.283 351.95 508.155 349.649 508.155 cv
cp
1 1 1 rgb
f
275.748 481.268 mo
275.748 480.546 276.573 480.238 277.423 480.238 cv
278.247 480.238 279.097 480.546 279.097 481.268 cv
279.097 488.3 li
284.661 480.727 li
284.918 480.366 285.227 480.238 285.588 480.238 cv
286.438 480.238 287.52 481.113 287.52 481.963 cv
287.52 482.144 287.494 482.375 287.314 482.607 cv
282.703 488.377 li
288.318 496.929 li
288.447 497.109 288.498 497.315 288.498 497.521 cv
288.498 498.346 287.469 499.196 286.49 499.196 cv
286.052 499.196 285.614 499.015 285.33 498.552 cv
280.488 491.21 li
279.097 492.962 li
279.097 498.011 li
279.097 498.707 278.247 499.067 277.423 499.067 cv
276.573 499.067 275.748 498.707 275.748 498.011 cv
275.748 481.268 li
cp
f
293.029 487.862 mo
293.029 498.011 li
293.029 498.526 292.282 499.067 291.355 499.067 cv
290.402 499.067 289.706 498.526 289.706 498.011 cv
289.706 487.862 li
289.706 487.244 290.402 486.832 291.355 486.832 cv
292.282 486.832 293.029 487.244 293.029 487.862 cv
cp
293.158 482.479 mo
293.158 483.329 292.36 484.101 291.355 484.101 cv
290.325 484.101 289.526 483.329 289.526 482.479 cv
289.526 481.603 290.325 480.855 291.355 480.855 cv
292.36 480.855 293.158 481.603 293.158 482.479 cv
cp
f
298.489 494.018 mo
298.489 495.203 299.519 496.388 300.73 496.388 cv
302.044 496.388 303.074 495.022 303.074 494.482 cv
303.074 491.906 li
303.074 490.464 301.864 489.588 300.756 489.588 cv
299.494 489.588 298.489 490.747 298.489 491.906 cv
298.489 494.018 li
cp
306.397 480.727 mo
306.397 498.011 li
306.397 498.526 305.701 499.067 304.748 499.067 cv
303.924 499.067 303.254 498.526 303.254 498.011 cv
303.254 497.264 li
302.739 498.32 301.322 499.299 299.674 499.299 cv
297.278 499.299 295.166 496.774 295.166 494.018 cv
295.166 491.906 li
295.166 489.047 297.226 486.677 299.751 486.677 cv
301.348 486.677 302.507 487.63 303.074 488.634 cv
303.074 480.727 li
303.074 480.109 303.821 479.696 304.748 479.696 cv
305.701 479.696 306.397 480.109 306.397 480.727 cv
cp
f
314.766 495.667 mo
314.766 493.4 308.661 494.817 308.661 490.515 cv
308.661 488.687 309.82 486.677 313.271 486.677 cv
315.358 486.677 317.367 487.398 317.367 488.352 cv
317.367 488.815 316.93 489.948 316.157 489.948 cv
315.538 489.948 314.74 489.202 313.323 489.202 cv
312.036 489.202 311.52 489.846 311.52 490.361 cv
311.52 492.241 317.702 490.953 317.702 495.538 cv
317.702 497.831 316.002 499.299 312.963 499.299 cv
310.335 499.299 308.3 498.217 308.3 497.083 cv
308.3 496.542 308.764 495.615 309.408 495.615 cv
310.155 495.615 310.722 496.774 312.885 496.774 cv
314.405 496.774 314.766 496.182 314.766 495.667 cv
cp
f
325.066 481.268 mo
325.066 480.546 325.89 480.238 326.74 480.238 cv
327.564 480.238 328.414 480.546 328.414 481.268 cv
328.414 498.011 li
328.414 498.707 327.564 499.067 326.74 499.067 cv
325.89 499.067 325.066 498.707 325.066 498.011 cv
325.066 481.268 li
cp
f
334.853 483.174 mo
334.853 496.13 li
337.532 496.13 li
339.232 496.13 340.236 495.177 340.236 493.168 cv
340.236 486.136 li
340.236 484.127 339.232 483.174 337.532 483.174 cv
334.853 483.174 li
cp
337.532 480.238 mo
340.932 480.238 343.585 481.834 343.585 486.136 cv
343.585 493.168 li
343.585 497.47 340.932 499.067 337.532 499.067 cv
332.973 499.067 li
332.097 499.067 331.504 498.578 331.504 498.036 cv
331.504 481.268 li
331.504 480.727 332.097 480.238 332.973 480.238 cv
337.532 480.238 li
cp
f
304.749 458.889 mo
304.647 458.837 304.536 458.793 304.441 458.724 cv
304.319 458.646 304.211 458.547 304.113 458.437 cv
302.096 463.404 294.379 469.725 286.671 458.367 cv
286.288 458.639 285.72 458.904 284.639 458.809 cv
285.738 458.582 286.561 458.51 287.021 456.8 cv
287.113 456.455 287.516 456.551 287.439 456.9 cv
287.332 457.389 287.206 457.659 286.906 458.087 cv
294.439 462.877 301.274 460.956 303.945 458.222 cv
303.944 458.22 303.942 458.218 303.941 458.216 cv
303.818 458.006 303.735 457.77 303.722 457.529 cv
303.711 457.376 303.724 457.221 303.769 457.077 cv
303.794 456.995 303.87 456.945 303.907 457.123 cv
304.177 458.433 305.014 458.894 305.085 458.98 cv
304.971 458.96 304.86 458.927 304.749 458.889 cv
cp
289.194 445.642 mo
289.212 443.698 291.903 442.85 293.165 444.988 cv
290.864 443.507 289.194 445.642 289.194 445.642 cv
cp
291.737 448.958 mo
291.769 448.687 292.019 448.538 292.152 448.517 cv
292.672 448.438 293.235 448.859 293.292 449.838 cv
293.357 450.937 292.903 451.542 292.384 451.62 cv
291.865 451.697 291.357 451.142 291.244 450.382 cv
291.208 450.131 291.221 449.891 291.273 449.675 cv
291.331 449.749 291.405 449.808 291.502 449.831 cv
291.742 449.895 291.988 449.751 292.052 449.51 cv
292.114 449.27 291.953 448.975 291.737 448.958 cv
cp
293.965 449.237 mo
293.75 447.758 292.895 446.658 292.058 446.781 cv
291.222 446.906 290.717 448.208 290.936 449.688 cv
291.152 451.167 292.009 452.266 292.845 452.141 cv
292.858 452.14 292.869 452.135 292.881 452.132 cv
292.804 452.161 292.728 452.197 292.645 452.209 cv
291.597 452.364 290.53 450.99 290.258 449.14 cv
289.985 447.29 290.612 445.663 291.661 445.509 cv
292.707 445.355 293.777 446.727 294.047 448.578 cv
294.163 449.36 294.111 450.089 293.941 450.698 cv
294.028 450.262 294.044 449.764 293.965 449.237 cv
cp
299.435 454.259 mo
300.495 453.834 300.456 452.989 300.486 453.193 cv
300.785 455.353 297.178 456.153 295.703 454.35 cv
295.432 454.02 295.435 453.721 295.435 453.721 cv
295.751 454.414 298.063 454.81 299.435 454.259 cv
cp
301.718 445.257 mo
302.736 445.215 303.622 446.638 303.701 448.438 cv
303.735 449.198 303.612 449.895 303.387 450.461 cv
303.514 450.052 303.58 449.575 303.559 449.063 cv
303.497 447.622 302.786 446.485 301.973 446.52 cv
301.158 446.555 300.546 447.748 300.606 449.189 cv
300.624 449.597 300.696 449.979 300.805 450.318 cv
300.762 450.169 300.731 450.01 300.724 449.841 cv
300.713 449.581 300.755 449.337 300.827 449.125 cv
300.878 449.201 300.949 449.271 301.043 449.308 cv
301.282 449.397 301.549 449.275 301.638 449.035 cv
301.726 448.798 301.557 448.508 301.256 448.508 cv
301.387 448.308 301.6 448.249 301.688 448.245 cv
302.224 448.224 302.669 448.582 302.721 449.629 cv
302.761 450.417 302.291 451.2 301.758 451.224 cv
301.376 451.239 301.035 450.929 300.856 450.468 cv
301.143 451.246 301.644 451.757 302.194 451.736 cv
302.13 451.75 302.065 451.775 301.997 451.777 cv
300.978 451.824 300.091 450.396 300.014 448.598 cv
299.936 446.797 300.699 445.304 301.718 445.257 cv
cp
303.291 445.154 mo
303.291 445.154 301.276 443.309 300.066 445.77 cv
300.232 443.192 302.561 443.285 303.291 445.154 cv
cp
275.039 459.497 mo
274.892 459.04 274.772 458.644 274.597 457.961 cv
273.418 453.34 271.467 455.238 271.653 456.544 cv
271.07 454.415 274.438 452.394 275.017 457.896 cv
275.06 458.318 275.109 458.991 275.039 459.497 cv
cp
306.209 441.962 mo
304.599 438.432 301.593 436.137 297.7 434.904 cv
298.46 434.162 299.613 433.652 300.977 433.975 cv
303.032 434.463 303.783 436.31 303.783 436.31 cv
303.184 433.69 299.551 431.835 296.198 432.943 cv
295.562 433.153 294.979 433.447 294.448 433.794 cv
296.473 430.034 301.622 430.467 302.878 431.328 cv
296.539 426.129 289.465 431.481 288.343 434.108 cv
288.344 434.109 288.345 434.109 288.346 434.11 cv
285.118 434.428 281.602 435.45 279.005 438.012 cv
275.665 441.305 273.617 445.49 274.076 452.058 cv
271.937 451.718 270.406 452.66 269.965 454.61 cv
269.476 456.762 270.566 459.583 272.904 460.195 cv
273.548 460.362 274.56 460.449 275.284 460.259 cv
275.273 460.224 275.287 460.271 275.309 460.366 cv
276.498 465.497 281.601 469.204 284.196 470.143 cv
293.739 473.595 302.059 471.143 306.387 465.723 cv
308.861 462.622 311.4 455.854 307.174 451.904 cv
307.05 451.788 308.18 446.277 306.209 441.962 cv
cp
f
286.658 458.348 mo
286.662 458.354 286.667 458.36 286.671 458.367 cv
286.672 458.366 286.674 458.366 286.675 458.365 cv
286.675 458.365 286.636 458.315 286.658 458.348 cv
cp
f
347.659 458.049 mo
347.825 456.883 346.081 455.187 345.028 459.314 cv
344.864 459.957 344.677 460.521 344.66 460.526 cv
344.626 460.005 344.67 459.4 344.712 458.993 cv
345.229 454.079 348.179 456.146 347.659 458.049 cv
cp
340.432 434.807 mo
337.859 432.154 337.175 430.543 337.099 429.616 cv
337.345 429.763 337.671 430.001 338.1 430.387 cv
338.848 431.057 339.937 433.101 340.702 434.658 cv
340.609 434.705 340.522 434.757 340.432 434.807 cv
cp
334.236 459.666 mo
328.842 467.716 321.968 466.537 320.854 462.482 cv
320.076 462.07 319.224 461.072 318.637 459.971 cv
318.551 460.07 318.455 460.159 318.347 460.23 cv
318.263 460.293 318.165 460.334 318.074 460.381 cv
317.975 460.417 317.876 460.448 317.775 460.467 cv
317.838 460.389 318.58 459.968 318.803 458.799 cv
318.833 458.64 318.903 458.684 318.926 458.756 cv
318.967 458.884 318.982 459.021 318.974 459.157 cv
318.966 459.372 318.894 459.583 318.788 459.771 cv
318.786 459.773 318.785 459.775 318.784 459.777 cv
321.443 463.026 328.483 463.323 334.021 459.42 cv
333.747 459.044 333.631 458.806 333.529 458.372 cv
333.455 458.063 333.814 457.972 333.901 458.277 cv
334.336 459.792 335.074 459.844 336.06 460.031 cv
335.094 460.131 334.582 459.903 334.236 459.666 cv
cp
321.016 450.92 mo
321.101 451.151 321.359 451.269 321.587 451.183 cv
321.678 451.148 321.746 451.08 321.796 451.007 cv
321.864 451.211 321.904 451.445 321.894 451.695 cv
321.862 452.45 321.417 453.044 320.901 453.024 cv
320.389 453 319.995 452.37 320.029 451.613 cv
320.062 450.857 320.507 450.263 321.021 450.284 cv
321.107 450.287 321.189 450.315 321.269 450.352 cv
321.045 450.442 320.932 450.693 321.016 450.92 cv
cp
321.421 447.967 mo
322.332 448.009 323.013 449.342 322.943 450.951 cv
322.875 452.558 322.082 453.833 321.171 453.791 cv
321.111 453.789 321.053 453.766 320.996 453.754 cv
321.724 453.782 322.356 452.767 322.414 451.479 cv
322.468 450.191 321.922 449.125 321.194 449.095 cv
320.467 449.063 319.832 450.08 319.777 451.367 cv
319.758 451.824 319.817 452.25 319.93 452.615 cv
319.729 452.109 319.62 451.487 319.65 450.808 cv
319.72 449.2 320.512 447.929 321.421 447.967 cv
cp
322.897 447.806 mo
321.816 445.608 320.016 447.256 320.016 447.256 cv
320.668 445.587 322.748 445.503 322.897 447.806 cv
cp
325.557 431.978 mo
325.972 431.739 326.278 431.601 326.503 431.524 cv
326.283 432.264 325.45 433.455 322.908 435.166 cv
322.843 435.109 322.778 435.054 322.711 435 cv
323.599 433.867 324.834 432.394 325.557 431.978 cv
cp
327.033 455.527 mo
327.033 455.527 327.036 455.794 326.795 456.089 cv
325.476 457.699 322.254 456.984 322.521 455.055 cv
322.548 454.873 322.514 455.628 323.46 456.008 cv
324.685 456.5 326.751 456.146 327.033 455.527 cv
cp
329.602 451.312 mo
329.665 451.548 329.905 451.688 330.141 451.626 cv
330.234 451.604 330.307 451.546 330.364 451.474 cv
330.415 451.685 330.427 451.92 330.392 452.166 cv
330.282 452.909 329.786 453.453 329.277 453.377 cv
328.769 453.301 328.449 452.639 328.559 451.895 cv
328.668 451.149 329.166 450.609 329.675 450.683 cv
329.76 450.696 329.839 450.731 329.911 450.773 cv
329.681 450.838 329.542 451.077 329.602 451.312 cv
cp
328.273 450.933 mo
328.514 449.28 329.47 448.054 330.404 448.191 cv
331.341 448.33 331.901 449.783 331.658 451.435 cv
331.415 453.087 330.461 454.315 329.526 454.177 cv
329.408 454.159 329.297 454.12 329.192 454.067 cv
329.243 454.083 329.291 454.11 329.347 454.116 cv
330.094 454.228 330.859 453.246 331.052 451.924 cv
331.247 450.602 330.797 449.439 330.049 449.328 cv
329.303 449.218 328.538 450.2 328.346 451.522 cv
328.276 451.992 328.29 452.438 328.368 452.827 cv
328.216 452.283 328.169 451.632 328.273 450.933 cv
cp
332.608 448.31 mo
332.608 448.31 331.117 446.403 329.061 447.726 cv
330.189 445.816 332.592 446.574 332.608 448.31 cv
cp
316.255 438.396 mo
316.441 438.214 316.703 437.999 317.079 437.749 cv
317.804 437.267 319.688 436.719 321.002 436.361 cv
321.016 436.385 321.032 436.408 321.044 436.433 cv
319.912 437.263 317.856 438.644 316.255 438.396 cv
cp
342.465 436.735 mo
343.918 437.485 345.936 438.574 346.657 439.309 cv
347.038 439.697 347.293 440.017 347.467 440.277 cv
345.552 440.171 343.509 438.099 342.37 436.83 cv
342.401 436.797 342.433 436.767 342.465 436.735 cv
cp
349.347 456.368 mo
349.135 455.56 348.715 454.959 348.137 454.582 cv
347.504 454.083 346.636 453.886 345.604 454.028 cv
345.632 453.064 345.599 452.137 345.51 451.245 cv
345.359 448.761 344.736 446.713 343.76 444.956 cv
342.971 443.362 341.968 441.99 340.817 440.868 cv
340.74 439.897 341.012 438.869 341.522 437.971 cv
341.591 439.017 341.519 440.46 341.934 440.836 cv
342.538 440.564 343.402 440.092 343.251 439.945 cv
342.251 438.976 342.021 438.078 341.792 437.538 cv
341.805 437.52 341.817 437.503 341.829 437.486 cv
345.709 443.172 347.093 441.865 347.416 441.607 cv
348.307 440.897 348.575 440.091 348.575 440.091 cv
348.571 440.092 348.568 440.093 348.564 440.095 cv
348.746 439.758 348.687 439.521 348.313 439.066 cv
347.019 437.488 344.695 436.732 342.935 436.322 cv
343.995 435.502 345.338 435.153 346.707 435.728 cv
347.565 436.086 348.195 436.602 348.634 437.069 cv
348.703 437.142 348.816 437.154 348.898 437.096 cv
348.98 437.038 349.007 436.928 348.961 436.838 cv
348.084 435.131 346.246 433.694 343.599 433.854 cv
342.681 433.91 341.819 434.15 341.036 434.503 cv
340.565 432.295 339.962 429.262 338.333 428.323 cv
337.953 428.104 337.725 428.288 337.382 428.564 cv
337.415 428.53 337.437 428.514 337.437 428.514 cv
337.437 428.514 335.906 429.625 335.756 430.046 cv
335.249 431.469 337.259 433.57 339.63 435.312 cv
339.57 435.354 339.512 435.399 339.453 435.443 cv
338.831 435.117 338.123 434.703 337.572 434.332 cv
336.454 433.582 335.933 433.083 335.933 433.083 cv
335.594 433.553 336.05 434.581 336.122 435.357 cv
336.398 435.619 337.604 435.875 338.721 436.063 cv
337.882 436.863 337.3 437.751 337.079 438.508 cv
337.014 438.482 336.949 438.455 336.883 438.431 cv
336.879 438.429 336.876 438.428 336.873 438.426 cv
336.875 438.427 336.877 438.429 336.879 438.43 cv
331.872 436.593 326.065 437.993 324.93 438.32 cv
324.803 437.755 324.514 437.11 324.082 436.482 cv
325.021 436.521 326.045 436.522 326.314 436.357 cv
326.504 435.739 327.27 434.841 326.856 434.543 cv
326.856 434.543 326.348 434.857 325.31 435.274 cv
324.801 435.479 324.156 435.693 323.595 435.851 cv
323.555 435.805 323.512 435.76 323.471 435.715 cv
325.695 434.709 327.688 433.349 327.519 432.106 cv
327.47 431.738 326.417 430.57 326.417 430.57 cv
326.417 430.57 326.433 430.589 326.456 430.625 cv
326.223 430.338 326.069 430.147 325.72 430.261 cv
324.236 430.742 323.227 433.103 322.467 434.814 cv
321.891 434.393 321.233 434.048 320.496 433.845 cv
318.665 433.338 317.195 433.917 316.328 434.998 cv
316.254 435.088 316.26 435.219 316.341 435.303 cv
316.422 435.387 316.553 435.398 316.646 435.329 cv
316.92 435.125 317.251 434.946 317.651 434.83 cv
318.902 434.469 319.971 435.024 320.578 435.743 cv
320.638 435.815 320.689 435.889 320.743 435.962 cv
319.232 435.982 317.134 436.176 315.774 437.265 cv
315.393 437.571 315.304 437.752 315.393 438.058 cv
315.391 438.056 315.388 438.054 315.386 438.053 cv
315.386 438.053 315.466 438.755 316.069 439.485 cv
316.288 439.75 317.191 441.054 321.325 437.089 cv
321.33 437.105 321.337 437.121 321.342 437.137 cv
321.066 437.538 320.846 438.246 319.857 438.866 cv
319.709 438.959 320.33 439.492 320.775 439.817 cv
321.166 439.59 321.227 438.436 321.463 437.608 cv
321.682 438.677 321.493 439.599 321.448 439.791 cv
319.271 441.051 317.602 442.828 316.625 445.176 cv
316.228 446.127 316.009 447.177 315.901 448.221 cv
315.49 451.159 316.01 453.828 315.929 453.904 cv
312.154 457.432 314.422 463.478 316.632 466.248 cv
320.498 471.089 327.93 473.28 336.454 470.196 cv
338.669 469.394 342.93 466.334 344.23 462.065 cv
344.411 461.859 344.593 461.648 344.775 461.432 cv
344.846 461.44 344.916 461.448 344.989 461.453 cv
345.665 461.617 346.305 461.613 346.891 461.439 cv
348.96 460.822 349.846 458.271 349.347 456.368 cv
cp
f
334.236 459.666 mo
334.239 459.66 334.243 459.655 334.247 459.649 cv
334.266 459.619 334.233 459.664 334.233 459.664 cv
334.233 459.665 334.235 459.666 334.236 459.666 cv
cp
f
178.675 512 mo
115.325 512 li
112.936 512 111 510.063 111 507.675 cv
111 444.325 li
111 441.937 112.936 440 115.325 440 cv
178.675 440 li
181.063 440 183 441.937 183 444.325 cv
183 507.675 li
183 510.063 181.063 512 178.675 512 cv
cp
0 .368627 .427451 rgb
f
117.014 443.845 mo
115.818 443.845 114.846 444.818 114.846 446.014 cv
114.846 505.986 li
114.846 507.182 115.818 508.155 117.014 508.155 cv
176.987 508.155 li
178.182 508.155 179.155 507.182 179.155 505.986 cv
179.155 446.013 li
179.155 444.818 178.182 443.845 176.986 443.845 cv
117.014 443.845 li
cp
176.987 509.116 mo
117.014 509.116 li
115.288 509.116 113.884 507.712 113.884 505.986 cv
113.884 446.014 li
113.884 444.288 115.288 442.884 117.014 442.884 cv
176.986 442.884 li
178.712 442.884 180.116 444.288 180.116 446.013 cv
180.116 505.986 li
180.116 507.712 178.712 509.116 176.987 509.116 cv
cp
1 1 1 rgb
f
121.561 488.951 mo
121.561 488.41 122.18 488.178 122.817 488.178 cv
123.435 488.178 124.073 488.41 124.073 488.951 cv
124.073 494.225 li
128.245 488.545 li
128.439 488.274 128.671 488.178 128.941 488.178 cv
129.579 488.178 130.39 488.835 130.39 489.473 cv
130.39 489.608 130.37 489.781 130.235 489.956 cv
126.777 494.283 li
130.989 500.697 li
131.085 500.832 131.124 500.986 131.124 501.141 cv
131.124 501.759 130.351 502.397 129.617 502.397 cv
129.289 502.397 128.96 502.261 128.748 501.914 cv
125.116 496.408 li
124.073 497.722 li
124.073 501.508 li
124.073 502.03 123.435 502.3 122.817 502.3 cv
122.18 502.3 121.561 502.03 121.561 501.508 cv
121.561 488.951 li
cp
f
134.522 493.896 mo
134.522 501.508 li
134.522 501.895 133.962 502.3 133.266 502.3 cv
132.551 502.3 132.03 501.895 132.03 501.508 cv
132.03 493.896 li
132.03 493.433 132.551 493.124 133.266 493.124 cv
133.962 493.124 134.522 493.433 134.522 493.896 cv
cp
134.619 489.859 mo
134.619 490.496 134.02 491.076 133.266 491.076 cv
132.494 491.076 131.894 490.496 131.894 489.859 cv
131.894 489.202 132.494 488.642 133.266 488.642 cv
134.02 488.642 134.619 489.202 134.619 489.859 cv
cp
f
138.617 498.514 mo
138.617 499.402 139.39 500.291 140.297 500.291 cv
141.283 500.291 142.056 499.267 142.056 498.861 cv
142.056 496.929 li
142.056 495.848 141.147 495.191 140.317 495.191 cv
139.37 495.191 138.617 496.06 138.617 496.929 cv
138.617 498.514 li
cp
144.548 488.545 mo
144.548 501.508 li
144.548 501.895 144.026 502.3 143.311 502.3 cv
142.693 502.3 142.191 501.895 142.191 501.508 cv
142.191 500.948 li
141.804 501.74 140.742 502.474 139.505 502.474 cv
137.709 502.474 136.124 500.581 136.124 498.514 cv
136.124 496.929 li
136.124 494.785 137.67 493.008 139.563 493.008 cv
140.761 493.008 141.63 493.723 142.056 494.476 cv
142.056 488.545 li
142.056 488.082 142.616 487.772 143.311 487.772 cv
144.026 487.772 144.548 488.082 144.548 488.545 cv
cp
f
150.824 499.75 mo
150.824 498.05 146.246 499.113 146.246 495.886 cv
146.246 494.515 147.115 493.008 149.704 493.008 cv
151.268 493.008 152.775 493.549 152.775 494.264 cv
152.775 494.611 152.447 495.461 151.868 495.461 cv
151.404 495.461 150.805 494.901 149.742 494.901 cv
148.776 494.901 148.39 495.384 148.39 495.771 cv
148.39 497.181 153.026 496.215 153.026 499.653 cv
153.026 501.373 151.751 502.474 149.472 502.474 cv
147.501 502.474 145.975 501.663 145.975 500.813 cv
145.975 500.407 146.323 499.711 146.806 499.711 cv
147.366 499.711 147.791 500.581 149.414 500.581 cv
150.554 500.581 150.824 500.136 150.824 499.75 cv
cp
f
158.549 488.951 mo
158.549 488.41 159.167 488.178 159.805 488.178 cv
160.423 488.178 161.06 488.41 161.06 488.951 cv
161.06 501.508 li
161.06 502.03 160.423 502.3 159.805 502.3 cv
159.167 502.3 158.549 502.03 158.549 501.508 cv
158.549 488.951 li
cp
f
165.89 490.38 mo
165.89 500.098 li
167.899 500.098 li
169.174 500.098 169.927 499.383 169.927 497.876 cv
169.927 492.602 li
169.927 491.095 169.174 490.38 167.899 490.38 cv
165.89 490.38 li
cp
167.899 488.178 mo
170.449 488.178 172.438 489.376 172.438 492.602 cv
172.438 497.876 li
172.438 501.103 170.449 502.3 167.899 502.3 cv
164.479 502.3 li
163.823 502.3 163.378 501.933 163.378 501.527 cv
163.378 488.951 li
163.378 488.545 163.823 488.178 164.479 488.178 cv
167.899 488.178 li
cp
f
143.312 472.167 mo
143.235 472.128 143.152 472.095 143.081 472.043 cv
142.989 471.984 142.908 471.91 142.835 471.828 cv
141.322 475.553 135.535 480.294 129.753 471.775 cv
129.466 471.979 129.04 472.178 128.229 472.107 cv
129.053 471.936 129.671 471.883 130.016 470.6 cv
130.085 470.341 130.387 470.413 130.329 470.675 cv
130.249 471.042 130.154 471.244 129.93 471.565 cv
135.579 475.158 140.705 473.716 142.709 471.666 cv
142.708 471.665 142.706 471.663 142.705 471.662 cv
142.614 471.504 142.551 471.328 142.541 471.146 cv
142.533 471.032 142.543 470.916 142.577 470.808 cv
142.595 470.747 142.653 470.708 142.681 470.842 cv
142.882 471.825 143.51 472.17 143.564 472.235 cv
143.478 472.22 143.395 472.195 143.312 472.167 cv
cp
131.646 462.231 mo
131.659 460.774 133.677 460.137 134.623 461.741 cv
132.898 460.63 131.646 462.231 131.646 462.231 cv
cp
133.553 464.719 mo
133.577 464.515 133.765 464.403 133.864 464.388 cv
134.254 464.329 134.676 464.645 134.719 465.379 cv
134.767 466.203 134.427 466.657 134.038 466.715 cv
133.648 466.773 133.268 466.356 133.183 465.787 cv
133.157 465.598 133.166 465.418 133.205 465.256 cv
133.248 465.312 133.304 465.356 133.376 465.373 cv
133.557 465.421 133.741 465.313 133.788 465.132 cv
133.835 464.952 133.714 464.731 133.553 464.719 cv
cp
135.224 464.928 mo
135.062 463.818 134.421 462.994 133.794 463.086 cv
133.166 463.179 132.787 464.156 132.952 465.266 cv
133.114 466.375 133.757 467.2 134.384 467.106 cv
134.393 467.105 134.402 467.101 134.411 467.099 cv
134.353 467.121 134.296 467.147 134.234 467.157 cv
133.448 467.273 132.647 466.243 132.443 464.855 cv
132.239 463.467 132.709 462.248 133.496 462.132 cv
134.281 462.016 135.083 463.045 135.286 464.433 cv
135.372 465.02 135.333 465.567 135.206 466.023 cv
135.271 465.697 135.283 465.323 135.224 464.928 cv
cp
139.326 468.694 mo
140.121 468.376 140.092 467.742 140.115 467.895 cv
140.339 469.514 137.634 470.114 136.527 468.763 cv
136.325 468.515 136.327 468.291 136.327 468.291 cv
136.563 468.811 138.297 469.107 139.326 468.694 cv
cp
141.038 461.943 mo
141.802 461.912 142.467 462.979 142.526 464.329 cv
142.551 464.898 142.459 465.421 142.29 465.846 cv
142.386 465.539 142.435 465.181 142.419 464.798 cv
142.373 463.717 141.84 462.864 141.229 462.89 cv
140.618 462.916 140.16 463.811 140.204 464.892 cv
140.219 465.197 140.272 465.484 140.353 465.739 cv
140.321 465.627 140.298 465.508 140.293 465.38 cv
140.285 465.186 140.316 465.002 140.37 464.844 cv
140.409 464.901 140.462 464.954 140.533 464.981 cv
140.711 465.047 140.912 464.957 140.978 464.776 cv
141.045 464.599 140.917 464.381 140.692 464.381 cv
140.79 464.23 140.95 464.186 141.016 464.184 cv
141.418 464.168 141.752 464.437 141.791 465.222 cv
141.821 465.812 141.469 466.4 141.068 466.418 cv
140.782 466.43 140.526 466.197 140.392 465.851 cv
140.608 466.434 140.983 466.818 141.395 466.802 cv
141.348 466.812 141.299 466.832 141.248 466.833 cv
140.484 466.868 139.818 465.797 139.76 464.448 cv
139.703 463.098 140.274 461.979 141.038 461.943 cv
cp
142.218 461.866 mo
142.218 461.866 140.707 460.482 139.8 462.327 cv
139.924 460.394 141.671 460.464 142.218 461.866 cv
cp
121.03 472.623 mo
120.919 472.28 120.829 471.983 120.698 471.471 cv
119.814 468.005 118.35 469.429 118.489 470.408 cv
118.053 468.811 120.579 467.295 121.013 471.422 cv
121.045 471.739 121.082 472.243 121.03 472.623 cv
cp
144.407 459.472 mo
143.199 456.824 140.945 455.103 138.025 454.178 cv
138.595 453.621 139.459 453.239 140.483 453.481 cv
142.024 453.847 142.587 455.232 142.587 455.232 cv
142.138 453.268 139.413 451.876 136.899 452.707 cv
136.422 452.864 135.985 453.085 135.586 453.346 cv
137.105 450.526 140.967 450.85 141.909 451.496 cv
137.154 447.597 131.849 451.611 131.008 453.582 cv
131.008 453.582 131.009 453.582 131.01 453.583 cv
128.588 453.821 125.952 454.587 124.003 456.509 cv
121.498 458.979 119.962 462.118 120.307 467.043 cv
118.703 466.789 117.555 467.495 117.224 468.958 cv
116.857 470.572 117.675 472.687 119.428 473.146 cv
119.911 473.271 120.67 473.336 121.213 473.194 cv
121.204 473.168 121.216 473.203 121.232 473.275 cv
122.124 477.122 125.951 479.903 127.897 480.607 cv
135.055 483.196 141.294 481.357 144.54 477.292 cv
146.395 474.966 148.3 469.891 145.13 466.928 cv
145.037 466.84 145.885 462.708 144.407 459.472 cv
cp
f
129.744 471.761 mo
129.747 471.766 129.75 471.771 129.753 471.775 cv
129.754 471.775 129.755 471.774 129.756 471.774 cv
129.756 471.774 129.727 471.736 129.744 471.761 cv
cp
f
175.494 471.537 mo
175.618 470.662 174.311 469.39 173.521 472.486 cv
173.398 472.968 173.258 473.39 173.245 473.394 cv
173.219 473.003 173.252 472.55 173.284 472.245 cv
173.671 468.559 175.884 470.11 175.494 471.537 cv
cp
170.074 454.105 mo
168.144 452.116 167.631 450.907 167.574 450.212 cv
167.759 450.322 168.003 450.501 168.325 450.79 cv
168.886 451.293 169.703 452.826 170.276 453.994 cv
170.207 454.029 170.141 454.068 170.074 454.105 cv
cp
165.427 472.75 mo
161.382 478.787 156.226 477.903 155.391 474.861 cv
154.807 474.552 154.168 473.804 153.727 472.978 cv
153.663 473.052 153.591 473.12 153.511 473.173 cv
153.447 473.22 153.373 473.25 153.305 473.286 cv
153.231 473.313 153.158 473.336 153.081 473.35 cv
153.128 473.292 153.685 472.976 153.852 472.1 cv
153.875 471.98 153.927 472.013 153.945 472.067 cv
153.975 472.163 153.986 472.266 153.981 472.368 cv
153.975 472.529 153.921 472.688 153.841 472.829 cv
153.84 472.83 153.839 472.831 153.838 472.833 cv
155.832 475.27 161.113 475.492 165.266 472.565 cv
165.061 472.283 164.973 472.104 164.896 471.779 cv
164.841 471.547 165.11 471.479 165.176 471.708 cv
165.502 472.844 166.055 472.883 166.795 473.023 cv
166.07 473.098 165.687 472.927 165.427 472.75 cv
cp
155.512 466.19 mo
155.576 466.364 155.769 466.451 155.941 466.387 cv
156.009 466.361 156.059 466.31 156.097 466.255 cv
156.148 466.408 156.178 466.584 156.171 466.771 cv
156.146 467.337 155.813 467.783 155.426 467.768 cv
155.041 467.75 154.746 467.277 154.772 466.71 cv
154.797 466.143 155.13 465.697 155.516 465.713 cv
155.58 465.715 155.642 465.737 155.702 465.764 cv
155.534 465.832 155.449 466.02 155.512 466.19 cv
cp
155.816 463.975 mo
156.499 464.007 157.009 465.006 156.957 466.213 cv
156.906 467.418 156.311 468.375 155.628 468.343 cv
155.583 468.342 155.539 468.324 155.497 468.315 cv
156.043 468.337 156.517 467.575 156.56 466.609 cv
156.6 465.644 156.191 464.844 155.645 464.821 cv
155.1 464.797 154.624 465.56 154.582 466.525 cv
154.568 466.868 154.613 467.187 154.698 467.461 cv
154.547 467.082 154.465 466.615 154.487 466.106 cv
154.54 464.9 155.134 463.947 155.816 463.975 cv
cp
156.922 463.854 mo
156.112 462.206 154.762 463.442 154.762 463.442 cv
155.251 462.19 156.811 462.127 156.922 463.854 cv
cp
158.917 451.983 mo
159.229 451.804 159.458 451.701 159.627 451.643 cv
159.462 452.198 158.838 453.091 156.931 454.374 cv
156.883 454.332 156.833 454.291 156.783 454.25 cv
157.449 453.4 158.375 452.295 158.917 451.983 cv
cp
160.025 469.645 mo
160.025 469.645 160.027 469.846 159.846 470.067 cv
158.857 471.274 156.441 470.738 156.641 469.292 cv
156.661 469.155 156.636 469.721 157.346 470.006 cv
158.264 470.375 159.813 470.109 160.025 469.645 cv
cp
161.952 466.484 mo
161.998 466.662 162.179 466.767 162.355 466.72 cv
162.426 466.703 162.48 466.66 162.523 466.605 cv
162.561 466.764 162.57 466.94 162.544 467.124 cv
162.461 467.682 162.089 468.089 161.708 468.033 cv
161.327 467.976 161.086 467.479 161.17 466.921 cv
161.251 466.362 161.625 465.957 162.006 466.012 cv
162.07 466.022 162.129 466.048 162.183 466.08 cv
162.011 466.128 161.906 466.308 161.952 466.484 cv
cp
160.954 466.2 mo
161.136 464.96 161.852 464.041 162.553 464.144 cv
163.256 464.247 163.676 465.337 163.494 466.576 cv
163.311 467.816 162.596 468.736 161.894 468.633 cv
161.806 468.619 161.723 468.59 161.644 468.55 cv
161.683 468.562 161.718 468.583 161.761 468.587 cv
162.32 468.671 162.894 467.934 163.039 466.943 cv
163.186 465.952 162.848 465.08 162.287 464.996 cv
161.727 464.914 161.154 465.65 161.01 466.642 cv
160.957 466.994 160.968 467.328 161.026 467.62 cv
160.912 467.212 160.877 466.724 160.954 466.2 cv
cp
164.206 464.233 mo
164.206 464.233 163.087 462.803 161.546 463.795 cv
162.391 462.362 164.194 462.931 164.206 464.233 cv
cp
151.941 456.797 mo
152.081 456.661 152.277 456.499 152.559 456.312 cv
153.103 455.95 154.516 455.539 155.501 455.271 cv
155.512 455.289 155.524 455.306 155.533 455.324 cv
154.684 455.947 153.142 456.983 151.941 456.797 cv
cp
171.599 455.551 mo
172.689 456.114 174.202 456.931 174.742 457.481 cv
175.028 457.773 175.22 458.013 175.35 458.208 cv
173.914 458.128 172.382 456.574 171.527 455.622 cv
171.551 455.598 171.575 455.575 171.599 455.551 cv
cp
176.76 470.276 mo
176.601 469.67 176.287 469.219 175.852 468.937 cv
175.378 468.562 174.727 468.415 173.954 468.521 cv
173.974 467.798 173.949 467.103 173.883 466.434 cv
173.769 464.571 173.302 463.035 172.57 461.717 cv
171.978 460.521 171.225 459.493 170.363 458.651 cv
170.305 457.923 170.509 457.152 170.891 456.478 cv
170.943 457.262 170.889 458.345 171.201 458.627 cv
171.654 458.423 172.302 458.069 172.188 457.958 cv
171.438 457.232 171.266 456.558 171.095 456.153 cv
171.103 456.14 171.113 456.127 171.122 456.114 cv
174.032 460.379 175.069 459.399 175.312 459.206 cv
175.98 458.673 176.181 458.068 176.181 458.068 cv
176.179 458.069 176.176 458.07 176.173 458.071 cv
176.309 457.818 176.265 457.641 175.985 457.3 cv
175.015 456.116 173.271 455.549 171.952 455.242 cv
172.746 454.627 173.753 454.365 174.781 454.795 cv
175.424 455.065 175.896 455.451 176.225 455.802 cv
176.277 455.857 176.362 455.865 176.424 455.822 cv
176.485 455.778 176.505 455.696 176.471 455.628 cv
175.813 454.349 174.434 453.271 172.45 453.391 cv
171.761 453.432 171.114 453.613 170.527 453.877 cv
170.174 452.222 169.722 449.947 168.5 449.243 cv
168.215 449.078 168.044 449.215 167.787 449.423 cv
167.811 449.397 167.828 449.385 167.828 449.385 cv
167.828 449.385 166.68 450.219 166.567 450.535 cv
166.186 451.602 167.695 453.177 169.473 454.484 cv
169.428 454.516 169.384 454.549 169.34 454.583 cv
168.873 454.338 168.342 454.027 167.929 453.749 cv
167.091 453.186 166.7 452.813 166.7 452.813 cv
166.446 453.165 166.787 453.936 166.842 454.518 cv
167.049 454.714 167.953 454.906 168.791 455.047 cv
168.161 455.647 167.725 456.313 167.559 456.881 cv
167.51 456.862 167.462 456.841 167.412 456.823 cv
167.41 456.822 167.408 456.821 167.405 456.819 cv
167.406 456.82 167.408 456.821 167.41 456.822 cv
163.654 455.445 159.299 456.495 158.448 456.74 cv
158.352 456.316 158.135 455.833 157.811 455.361 cv
158.516 455.391 159.284 455.392 159.486 455.268 cv
159.628 454.805 160.203 454.131 159.892 453.907 cv
159.892 453.907 159.511 454.143 158.733 454.456 cv
158.35 454.609 157.867 454.77 157.446 454.888 cv
157.416 454.854 157.384 454.82 157.353 454.786 cv
159.021 454.032 160.516 453.012 160.39 452.08 cv
160.352 451.804 159.562 450.927 159.562 450.927 cv
159.562 450.927 159.575 450.941 159.592 450.969 cv
159.417 450.754 159.302 450.611 159.04 450.696 cv
157.927 451.057 157.17 452.827 156.6 454.111 cv
156.169 453.795 155.675 453.536 155.122 453.384 cv
153.749 453.004 152.646 453.438 151.995 454.248 cv
151.941 454.316 151.945 454.415 152.006 454.478 cv
152.066 454.541 152.164 454.549 152.234 454.497 cv
152.44 454.343 152.688 454.209 152.988 454.123 cv
153.926 453.852 154.728 454.268 155.183 454.808 cv
155.228 454.861 155.267 454.917 155.308 454.972 cv
154.174 454.986 152.6 455.132 151.58 455.949 cv
151.295 456.178 151.228 456.314 151.295 456.543 cv
151.293 456.542 151.291 456.541 151.289 456.54 cv
151.289 456.54 151.35 457.066 151.802 457.614 cv
151.966 457.813 152.643 458.79 155.744 455.816 cv
155.748 455.829 155.753 455.841 155.757 455.853 cv
155.55 456.153 155.385 456.684 154.643 457.15 cv
154.532 457.22 154.997 457.619 155.331 457.863 cv
155.624 457.692 155.67 456.827 155.847 456.207 cv
156.012 457.007 155.87 457.699 155.836 457.843 cv
154.203 458.788 152.952 460.121 152.219 461.882 cv
151.921 462.596 151.757 463.382 151.676 464.166 cv
151.368 466.369 151.758 468.371 151.697 468.428 cv
148.866 471.074 150.567 475.608 152.224 477.686 cv
155.123 481.317 160.697 482.959 167.091 480.647 cv
168.751 480.045 171.947 477.75 172.923 474.549 cv
173.058 474.395 173.195 474.236 173.331 474.074 cv
173.384 474.08 173.437 474.086 173.492 474.09 cv
173.999 474.213 174.478 474.21 174.918 474.079 cv
176.47 473.616 177.135 471.703 176.76 470.276 cv
cp
f
165.427 472.75 mo
165.43 472.745 165.433 472.741 165.435 472.737 cv
165.45 472.714 165.425 472.748 165.425 472.748 cv
165.425 472.749 165.426 472.749 165.427 472.75 cv
cp
f
44.4603 512 mo
3.53945 512 li
1.58486 512 -.000101563 510.416 -.000101563 508.46 cv
-.000101563 467.54 li
-.000101563 465.584 1.58486 464 3.53945 464 cv
44.4603 464 li
46.4154 464 47.9999 465.584 47.9999 467.54 cv
47.9999 508.46 li
47.9999 510.416 46.4154 512 44.4603 512 cv
cp
0 .368627 .427451 rgb
f
4.00918 466.563 mo
3.2123 466.563 2.56337 467.212 2.56337 468.009 cv
2.56337 507.991 li
2.56337 508.788 3.21181 509.437 4.00918 509.437 cv
43.9911 509.437 li
44.788 509.437 45.4364 508.788 45.4364 507.991 cv
45.4364 468.009 li
45.4364 467.212 44.788 466.563 43.9911 466.563 cv
4.00918 466.563 li
cp
43.9911 510.078 mo
4.00918 510.078 li
2.85879 510.078 1.92275 509.142 1.92275 507.991 cv
1.92275 468.009 li
1.92275 466.858 2.85879 465.922 4.00918 465.922 cv
43.9911 465.922 li
45.1415 465.922 46.0775 466.858 46.0775 468.009 cv
46.0775 507.991 li
46.0775 509.142 45.1415 510.078 43.9911 510.078 cv
cp
1 1 1 rgb
f
7.04091 496.634 mo
7.04091 496.273 7.45302 496.119 7.87783 496.119 cv
8.28994 496.119 8.71523 496.273 8.71523 496.634 cv
8.71523 500.15 li
11.497 496.363 li
11.6259 496.183 11.7802 496.119 11.9608 496.119 cv
12.3856 496.119 12.9267 496.557 12.9267 496.982 cv
12.9267 497.072 12.9135 497.188 12.8236 497.304 cv
10.518 500.188 li
13.3256 504.465 li
13.3905 504.555 13.4159 504.658 13.4159 504.761 cv
13.4159 505.173 12.9008 505.598 12.4115 505.598 cv
12.1928 505.598 11.9735 505.508 11.8319 505.276 cv
9.41054 501.605 li
8.71523 502.481 li
8.71523 505.005 li
8.71523 505.354 8.28994 505.534 7.87783 505.534 cv
7.45302 505.534 7.04091 505.354 7.04091 505.005 cv
7.04091 496.634 li
cp
f
15.6815 499.931 mo
15.6815 505.005 li
15.6815 505.263 15.308 505.534 14.8441 505.534 cv
14.3676 505.534 14.0199 505.263 14.0199 505.005 cv
14.0199 499.931 li
14.0199 499.622 14.3676 499.416 14.8441 499.416 cv
15.308 499.416 15.6815 499.622 15.6815 499.931 cv
cp
15.7455 497.239 mo
15.7455 497.664 15.3466 498.051 14.8441 498.051 cv
14.329 498.051 13.9296 497.664 13.9296 497.239 cv
13.9296 496.801 14.329 496.428 14.8441 496.428 cv
15.3466 496.428 15.7455 496.801 15.7455 497.239 cv
cp
f
18.411 503.009 mo
18.411 503.602 18.9262 504.194 19.5316 504.194 cv
20.1884 504.194 20.7035 503.511 20.7035 503.241 cv
20.7035 501.953 li
20.7035 501.232 20.0985 500.794 19.5443 500.794 cv
18.9135 500.794 18.411 501.374 18.411 501.953 cv
18.411 503.009 li
cp
22.3651 496.363 mo
22.3651 505.005 li
22.3651 505.263 22.0175 505.534 21.5409 505.534 cv
21.1288 505.534 20.7938 505.263 20.7938 505.005 cv
20.7938 504.632 li
20.536 505.16 19.828 505.649 19.0038 505.649 cv
17.8056 505.649 16.7499 504.387 16.7499 503.009 cv
16.7499 501.953 li
16.7499 500.523 17.7802 499.339 19.0424 499.339 cv
19.8407 499.339 20.4203 499.815 20.7035 500.317 cv
20.7035 496.363 li
20.7035 496.055 21.077 495.848 21.5409 495.848 cv
22.0175 495.848 22.3651 496.055 22.3651 496.363 cv
cp
f
26.5497 503.833 mo
26.5497 502.7 23.497 503.408 23.497 501.258 cv
23.497 500.343 24.0766 499.339 25.8026 499.339 cv
26.8456 499.339 27.85 499.699 27.85 500.176 cv
27.85 500.408 27.6312 500.974 27.245 500.974 cv
26.9359 500.974 26.5365 500.601 25.828 500.601 cv
25.1845 500.601 24.9267 500.923 24.9267 501.18 cv
24.9267 502.121 28.0175 501.477 28.0175 503.769 cv
28.0175 504.915 27.1679 505.649 25.6478 505.649 cv
24.3344 505.649 23.3168 505.108 23.3168 504.542 cv
23.3168 504.271 23.5487 503.808 23.8705 503.808 cv
24.244 503.808 24.5277 504.387 25.6093 504.387 cv
26.369 504.387 26.5497 504.091 26.5497 503.833 cv
cp
f
31.6996 496.634 mo
31.6996 496.273 32.1117 496.119 32.5365 496.119 cv
32.9486 496.119 33.3739 496.273 33.3739 496.634 cv
33.3739 505.005 li
33.3739 505.354 32.9486 505.534 32.5365 505.534 cv
32.1117 505.534 31.6996 505.354 31.6996 505.005 cv
31.6996 496.634 li
cp
f
36.5932 497.587 mo
36.5932 504.065 li
37.9325 504.065 li
38.7826 504.065 39.2851 503.589 39.2851 502.584 cv
39.2851 499.068 li
39.2851 498.063 38.7826 497.587 37.9325 497.587 cv
36.5932 497.587 li
cp
37.9325 496.119 mo
39.6327 496.119 40.9589 496.917 40.9589 499.068 cv
40.9589 502.584 li
40.9589 504.735 39.6327 505.534 37.9325 505.534 cv
35.6532 505.534 li
35.2152 505.534 34.9188 505.289 34.9188 505.018 cv
34.9188 496.634 li
34.9188 496.363 35.2152 496.119 35.6532 496.119 cv
37.9325 496.119 li
cp
f
21.5414 485.444 mo
21.4901 485.419 21.435 485.396 21.3871 485.362 cv
21.3261 485.323 21.2724 485.273 21.2235 485.218 cv
20.2147 487.702 16.3563 490.863 12.5023 485.184 cv
12.3104 485.319 12.0268 485.452 11.4857 485.405 cv
12.0355 485.291 12.4472 485.255 12.6771 484.4 cv
12.7235 484.228 12.9247 484.275 12.8861 484.45 cv
12.8329 484.695 12.7694 484.83 12.62 485.043 cv
16.3861 487.439 19.8036 486.478 21.1391 485.111 cv
21.1386 485.11 21.1376 485.109 21.1371 485.108 cv
21.0756 485.003 21.0341 484.885 21.0272 484.764 cv
21.0224 484.688 21.0287 484.61 21.0512 484.539 cv
21.0634 484.498 21.1019 484.472 21.1205 484.562 cv
21.2548 485.217 21.6732 485.447 21.7094 485.49 cv
21.6522 485.48 21.5966 485.463 21.5414 485.444 cv
cp
13.7641 478.821 mo
13.7728 477.849 15.1181 477.425 15.7489 478.494 cv
14.5985 477.753 13.7641 478.821 13.7641 478.821 cv
cp
15.0351 480.479 mo
15.0512 480.343 15.1762 480.269 15.2426 480.259 cv
15.5028 480.219 15.7841 480.43 15.8129 480.919 cv
15.8451 481.468 15.6181 481.771 15.3583 481.81 cv
15.099 481.849 14.8451 481.571 14.7885 481.191 cv
14.7709 481.065 14.7772 480.945 14.8031 480.838 cv
14.8324 480.875 14.8695 480.904 14.9174 480.916 cv
15.0375 480.947 15.1605 480.875 15.1923 480.755 cv
15.2235 480.635 15.143 480.487 15.0351 480.479 cv
cp
16.1493 480.619 mo
16.0414 479.879 15.6142 479.329 15.1962 479.391 cv
14.7772 479.453 14.5253 480.104 14.6347 480.844 cv
14.7426 481.583 15.1708 482.133 15.5888 482.07 cv
15.5956 482.07 15.601 482.067 15.6073 482.066 cv
15.5683 482.081 15.5307 482.099 15.4892 482.105 cv
14.9652 482.182 14.4315 481.495 14.2953 480.57 cv
14.1591 479.645 14.4726 478.832 14.9975 478.754 cv
15.5204 478.678 16.0556 479.364 16.1903 480.289 cv
16.2484 480.68 16.2221 481.044 16.1376 481.349 cv
16.1806 481.131 16.1889 480.882 16.1493 480.619 cv
cp
18.8842 483.129 mo
19.414 482.917 19.3949 482.495 19.4096 482.596 cv
19.559 483.676 17.7558 484.076 17.018 483.175 cv
16.8832 483.01 16.8842 482.86 16.8842 482.86 cv
17.0424 483.207 18.1981 483.405 18.8842 483.129 cv
cp
20.0258 478.629 mo
20.5346 478.608 20.9779 479.319 21.017 480.219 cv
21.0341 480.599 20.9726 480.947 20.8603 481.23 cv
20.9237 481.026 20.9564 480.788 20.9462 480.532 cv
20.9154 479.811 20.5595 479.242 20.1527 479.26 cv
19.7455 479.277 19.4398 479.874 19.4696 480.594 cv
19.4789 480.798 19.5145 480.989 19.5692 481.159 cv
19.5473 481.084 19.5321 481.005 19.5282 480.92 cv
19.5233 480.791 19.5443 480.668 19.58 480.563 cv
19.6054 480.601 19.641 480.636 19.6884 480.654 cv
19.8075 480.698 19.9413 480.638 19.9857 480.517 cv
20.0297 480.399 19.9452 480.254 19.7948 480.254 cv
19.8598 480.154 19.9667 480.124 20.0106 480.123 cv
20.2787 480.112 20.5009 480.291 20.5272 480.814 cv
20.5468 481.208 20.3124 481.6 20.0458 481.612 cv
19.8544 481.62 19.6845 481.464 19.5946 481.234 cv
19.7382 481.623 19.9887 481.879 20.2636 481.868 cv
20.2318 481.875 20.1996 481.888 20.1654 481.888 cv
19.6557 481.912 19.2118 481.198 19.1737 480.299 cv
19.1347 479.398 19.516 478.652 20.0258 478.629 cv
cp
20.8119 478.577 mo
20.8119 478.577 19.8046 477.655 19.1996 478.885 cv
19.2826 477.596 20.4472 477.643 20.8119 478.577 cv
cp
6.68642 485.749 mo
6.61318 485.52 6.55263 485.322 6.46523 484.98 cv
5.87587 482.67 4.8998 483.619 4.99306 484.272 cv
4.70156 483.208 6.38564 482.197 6.67519 484.948 cv
6.69668 485.159 6.72109 485.496 6.68642 485.749 cv
cp
22.2714 476.981 mo
21.4662 475.216 19.9633 474.068 18.0165 473.452 cv
18.3964 473.081 18.973 472.826 19.6552 472.988 cv
20.683 473.231 21.058 474.155 21.058 474.155 cv
20.7587 472.845 18.9423 471.918 17.266 472.471 cv
16.9481 472.576 16.6566 472.723 16.3905 472.897 cv
17.4032 471.017 19.9779 471.233 20.6059 471.664 cv
17.4359 469.064 13.8993 471.741 13.3383 473.054 cv
13.3388 473.055 13.3393 473.055 13.3397 473.055 cv
11.7255 473.214 9.96767 473.725 8.66884 475.006 cv
6.99892 476.652 5.975 478.745 6.20449 482.029 cv
5.13515 481.859 4.37002 482.33 4.14931 483.305 cv
3.90468 484.381 4.44961 485.791 5.61855 486.098 cv
5.94082 486.181 6.44668 486.224 6.80849 486.129 cv
6.80312 486.112 6.81045 486.135 6.82119 486.183 cv
7.41591 488.748 9.96767 490.602 11.2645 491.072 cv
16.0365 492.797 20.1962 491.571 22.3603 488.861 cv
23.5971 487.311 24.8666 483.927 22.7533 481.952 cv
22.6918 481.894 23.2567 479.139 22.2714 476.981 cv
cp
f
12.4955 485.174 mo
12.4979 485.177 12.4999 485.18 12.5023 485.184 cv
12.5028 485.183 12.5033 485.183 12.5038 485.183 cv
12.5038 485.183 12.4843 485.158 12.4955 485.174 cv
cp
f
42.996 485.024 mo
43.079 484.441 42.2074 483.593 41.6806 485.657 cv
41.5985 485.979 41.5053 486.26 41.4965 486.263 cv
41.4794 486.002 41.5014 485.7 41.5224 485.497 cv
41.7811 483.039 43.2558 484.073 42.996 485.024 cv
cp
39.3827 473.403 mo
38.0961 472.077 37.7538 471.271 37.7162 470.808 cv
37.8393 470.881 38.0019 471 38.2167 471.193 cv
38.5907 471.529 39.1356 472.55 39.5175 473.329 cv
39.4716 473.353 39.4276 473.378 39.3827 473.403 cv
cp
36.2846 485.833 mo
33.5878 489.858 30.1503 489.269 29.5936 487.241 cv
29.2045 487.035 28.7787 486.536 28.4848 485.985 cv
28.4418 486.035 28.3944 486.08 28.3402 486.115 cv
28.2982 486.146 28.2489 486.167 28.2035 486.19 cv
28.1542 486.208 28.1049 486.224 28.0541 486.233 cv
28.0853 486.195 28.4564 485.984 28.5678 485.4 cv
28.5834 485.32 28.6181 485.342 28.6298 485.378 cv
28.6503 485.442 28.6576 485.511 28.6537 485.579 cv
28.6498 485.686 28.6137 485.792 28.5604 485.886 cv
28.56 485.887 28.5595 485.887 28.5585 485.888 cv
29.8886 487.513 33.4081 487.662 36.1776 485.71 cv
36.0404 485.522 35.9818 485.403 35.931 485.186 cv
35.8944 485.031 36.0736 484.986 36.1171 485.139 cv
36.3349 485.896 36.7035 485.922 37.1967 486.016 cv
36.7133 486.065 36.4579 485.951 36.2846 485.833 cv
cp
29.6747 481.46 mo
29.7172 481.576 29.8461 481.634 29.9603 481.591 cv
30.0058 481.574 30.0399 481.54 30.0644 481.504 cv
30.0985 481.605 30.119 481.723 30.1137 481.847 cv
30.0976 482.225 29.8754 482.522 29.6171 482.512 cv
29.3607 482.5 29.1644 482.185 29.1811 481.807 cv
29.1981 481.429 29.4198 481.132 29.6776 481.142 cv
29.7201 481.144 29.7611 481.158 29.8012 481.176 cv
29.6894 481.221 29.6322 481.347 29.6747 481.46 cv
cp
29.8773 479.983 mo
30.3324 480.004 30.6728 480.671 30.6386 481.476 cv
30.6039 482.279 30.2074 482.917 29.7523 482.895 cv
29.7221 482.895 29.6928 482.883 29.6644 482.877 cv
30.0287 482.891 30.3451 482.383 30.3739 481.739 cv
30.4003 481.096 30.1273 480.563 29.7636 480.547 cv
29.4003 480.532 29.0824 481.04 29.0551 481.684 cv
29.0458 481.912 29.0751 482.125 29.1317 482.308 cv
29.0311 482.055 28.9765 481.743 28.9916 481.404 cv
29.0263 480.6 29.4228 479.965 29.8773 479.983 cv
cp
30.6151 479.903 mo
30.0746 478.804 29.1747 479.628 29.1747 479.628 cv
29.5009 478.793 30.5409 478.751 30.6151 479.903 cv
cp
31.9452 471.989 mo
32.1527 471.869 32.3056 471.801 32.4179 471.762 cv
32.308 472.132 31.892 472.728 30.6205 473.583 cv
30.5883 473.555 30.5556 473.527 30.5219 473.5 cv
30.9657 472.934 31.5839 472.197 31.9452 471.989 cv
cp
32.683 483.763 mo
32.683 483.763 32.6845 483.897 32.5639 484.044 cv
31.9047 484.85 30.2938 484.492 30.4276 483.528 cv
30.4408 483.437 30.4237 483.814 30.8969 484.004 cv
31.5097 484.25 32.5419 484.073 32.683 483.763 cv
cp
33.9677 481.656 mo
33.9989 481.774 34.1195 481.844 34.2367 481.813 cv
34.2841 481.802 34.3202 481.773 34.3485 481.737 cv
34.3739 481.842 34.3803 481.96 34.3632 482.083 cv
34.3075 482.455 34.0595 482.726 33.8056 482.688 cv
33.5512 482.65 33.391 482.32 33.4462 481.947 cv
33.5009 481.575 33.7499 481.305 34.0043 481.341 cv
34.0463 481.348 34.0863 481.365 34.122 481.386 cv
34.0072 481.419 33.9374 481.539 33.9677 481.656 cv
cp
33.3031 481.466 mo
33.4237 480.64 33.9018 480.027 34.3685 480.096 cv
34.8373 480.165 35.1171 480.891 34.9955 481.718 cv
34.8739 482.544 34.3974 483.158 33.9296 483.088 cv
33.8705 483.08 33.8148 483.06 33.7626 483.033 cv
33.788 483.041 33.8119 483.055 33.8402 483.058 cv
34.2138 483.114 34.5961 482.623 34.6928 481.962 cv
34.7904 481.301 34.5653 480.72 34.1913 480.664 cv
33.8178 480.609 33.4359 481.1 33.3397 481.761 cv
33.3046 481.996 33.3119 482.219 33.3505 482.413 cv
33.2748 482.142 33.2514 481.816 33.3031 481.466 cv
cp
35.4706 480.155 mo
35.4706 480.155 34.725 479.202 33.6972 479.863 cv
34.2611 478.908 35.4628 479.287 35.4706 480.155 cv
cp
27.2943 475.198 mo
27.3871 475.107 27.518 475 27.706 474.875 cv
28.0687 474.634 29.0106 474.359 29.6679 474.181 cv
29.6742 474.192 29.6825 474.204 29.6889 474.216 cv
29.1229 474.632 28.0946 475.322 27.2943 475.198 cv
cp
40.3993 474.368 mo
41.1259 474.743 42.1347 475.287 42.495 475.654 cv
42.6854 475.849 42.8134 476.008 42.9003 476.139 cv
41.9428 476.085 40.9213 475.049 40.3515 474.415 cv
40.3671 474.398 40.3832 474.383 40.3993 474.368 cv
cp
43.8402 484.184 mo
43.7343 483.78 43.5243 483.479 43.2348 483.291 cv
42.9188 483.042 42.4848 482.943 41.9691 483.014 cv
41.9823 482.532 41.9657 482.068 41.9218 481.623 cv
41.8461 480.38 41.5346 479.356 41.0468 478.478 cv
40.6518 477.681 40.1503 476.995 39.5751 476.434 cv
39.5365 475.949 39.6723 475.435 39.9276 474.985 cv
39.9623 475.508 39.9262 476.23 40.1342 476.418 cv
40.4359 476.282 40.8676 476.046 40.7924 475.972 cv
40.2919 475.488 40.1776 475.039 40.0629 474.769 cv
40.0692 474.76 40.0751 474.751 40.0814 474.743 cv
42.0214 477.586 42.7128 476.933 42.8749 476.804 cv
43.3202 476.449 43.454 476.045 43.454 476.045 cv
43.4525 476.046 43.4506 476.046 43.4491 476.047 cv
43.5394 475.879 43.5102 475.761 43.3236 475.533 cv
42.6762 474.744 41.5141 474.366 40.6342 474.161 cv
41.164 473.751 41.8358 473.577 42.5204 473.864 cv
42.9491 474.043 43.2641 474.301 43.4838 474.535 cv
43.518 474.571 43.5746 474.577 43.6156 474.548 cv
43.6566 474.519 43.6703 474.464 43.6474 474.419 cv
43.2084 473.566 42.2899 472.847 40.9662 472.927 cv
40.5072 472.955 40.0761 473.075 39.685 473.251 cv
39.4491 472.147 39.1478 470.631 38.3334 470.162 cv
38.143 470.052 38.0292 470.144 37.8578 470.282 cv
37.8744 470.265 37.8856 470.257 37.8856 470.257 cv
37.8856 470.257 37.1195 470.813 37.0448 471.023 cv
36.7909 471.734 37.7963 472.785 38.9818 473.656 cv
38.9516 473.677 38.9227 473.7 38.8935 473.722 cv
38.5819 473.559 38.2279 473.351 37.9525 473.166 cv
37.3939 472.791 37.1332 472.542 37.1332 472.542 cv
36.9638 472.776 37.1918 473.291 37.2279 473.679 cv
37.3656 473.81 37.9686 473.938 38.5272 474.032 cv
38.1073 474.431 37.8168 474.875 37.7064 475.254 cv
37.6737 475.241 37.641 475.228 37.6083 475.216 cv
37.6063 475.215 37.6049 475.214 37.6029 475.213 cv
37.6039 475.213 37.6054 475.214 37.6063 475.215 cv
35.1024 474.297 32.1991 474.997 31.6317 475.16 cv
31.5683 474.877 31.4232 474.555 31.2079 474.241 cv
31.6776 474.261 32.1894 474.261 32.3236 474.179 cv
32.4188 473.87 32.8017 473.42 32.5946 473.271 cv
32.5946 473.271 32.3402 473.429 31.8217 473.637 cv
31.5668 473.74 31.2445 473.847 30.9643 473.925 cv
30.9442 473.902 30.9228 473.88 30.9018 473.857 cv
32.0141 473.354 33.0111 472.674 32.9262 472.053 cv
32.9013 471.869 32.3749 471.285 32.3749 471.285 cv
32.3749 471.285 32.3832 471.294 32.3944 471.313 cv
32.2777 471.169 32.2011 471.074 32.0268 471.13 cv
31.2846 471.371 30.7802 472.551 30.3998 473.407 cv
30.1122 473.196 29.7831 473.024 29.4149 472.922 cv
28.4994 472.669 27.7641 472.958 27.3305 473.499 cv
27.2938 473.544 27.2968 473.61 27.3373 473.652 cv
27.3778 473.693 27.4428 473.699 27.4896 473.664 cv
27.6264 473.563 27.7924 473.473 27.9921 473.415 cv
28.6176 473.234 29.1522 473.512 29.4555 473.872 cv
29.4857 473.908 29.5116 473.945 29.538 473.981 cv
28.7831 473.991 27.7338 474.088 27.0536 474.633 cv
26.8632 474.785 26.8187 474.876 26.8632 475.029 cv
26.8622 475.028 26.8607 475.027 26.8593 475.026 cv
26.8593 475.026 26.8998 475.377 27.2011 475.742 cv
27.3104 475.875 27.7621 476.527 29.829 474.544 cv
29.8319 474.552 29.8349 474.561 29.8378 474.569 cv
29.6996 474.769 29.5897 475.123 29.0956 475.433 cv
29.0214 475.48 29.3314 475.746 29.5541 475.909 cv
29.7499 475.795 29.7802 475.218 29.8978 474.804 cv
30.0077 475.338 29.9135 475.799 29.8905 475.895 cv
28.8021 476.525 27.9677 477.414 27.4789 478.588 cv
27.2811 479.064 27.1713 479.588 27.1171 480.11 cv
26.9115 481.58 27.1718 482.914 27.1312 482.952 cv
25.2436 484.716 26.3778 487.739 27.4828 489.124 cv
29.4159 491.544 33.1312 492.64 37.3935 491.098 cv
38.5009 490.697 40.6317 489.167 41.2816 487.032 cv
41.3725 486.93 41.4633 486.824 41.5541 486.716 cv
41.5893 486.72 41.6244 486.724 41.661 486.727 cv
41.9994 486.809 42.3187 486.807 42.6122 486.719 cv
43.6469 486.411 44.0897 485.135 43.8402 484.184 cv
cp
f
36.2846 485.833 mo
36.2865 485.83 36.2885 485.828 36.2904 485.824 cv
36.3002 485.81 36.2831 485.832 36.2831 485.832 cv
36.2836 485.833 36.2841 485.833 36.2846 485.833 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Teneresa) ()
%%Title: (Android_vector_all.eps)
%%CreationDate: 6/18/2018 9:35 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",K=a0/@dcc*CC[M/;&E_*Y@gM["+@+!f@_dMH_8J7f^%]G=gTP-DfZ",XUecM.pZaSC8Ymo%C/U=50Vmq.ZqjGP.JfZm`o6Fk
%!ZHjG$iYfB?B%#`r:M.aTg1LAG,(bgkm_l"YdN@+#_mtZ(M>^`"[TnRe*Fi_Y]GQebpUGoX#"jY@+dA2d0puAUjqE'9beb%-b/;i
%TIBYT9o?f7A'cT+oQP=$7HA,oJo_j>a,0?$\ilV6S>?#5o1>9V+rZLqbl@+un>"jG?oThqr650^lkCi*V^B6"@,_/7*6-@HVo3WW
%^[hDnT,PY0A2skW8:(,A=cU_QZO+p96#VP5#>jLogjq<KfHMXu$Kh\d?D+4Bl1]kETKVFYH8/c'l*k5*J@e'Y[kA;5qYUo!cQ@?,
%G_i&tgZ])uhn0fgFKZjj.8B_/&q<D."Tn-+b^uKZL22s%#WNVBL'`>GNuE(s?uDkf#ETA`^P)iK<p;e6JKF,#EYQe4P5j.Irjujk
%_O2R`!H+U13@&*&'3[[&X&d&d'9!2fD+73'FISo(_rD!3ns&bN]M<\'&,6YH'jr$Tq_ddQ%kJP!m,23dGH_$!TYM`0J4i^)rZAZ<
%Fhe>AL)cB*La2!33!(/qJkPYCfj?O,d%^mRIs<ruOQaIKo"P>0J/fP!9U@"+%%=>VfF;n&Rh0[bg/$02\2Go9RKAF+"[#?'_o:*t
%(]G9h@Qn!=`;e2pVEkH-$4$S'T53CgW)KVVi*i4NkHj/i5l^\A3SC=BKVh(2$'"FN_`tPBbkuB=_u3:cA+6nY-h-dMF5l9)Z=D8D
%R,E98q65ca^G9btk]&E]GdFTQFl1"O3""HNRMLPM!63soWX[+$?r`R?rh(qEFnpNOrY]/F-GLTepbb/3MkK:%BOIMSb(t0ITAn(P
%BZjEP$Tu8AWih,1%12GDBhZ>"1I)_)'^;@YC`n%W":F<]5WTS-5.__=pq!%W`('M2A]-E#;<3hTB-X^[8MP:0UhS45[2N?0q$N;[
%)?1!97,m.^P:fRllsp8hr(A("0\N4Wk&6P1crLm!IV)cQ$M<#i@aRH$!0EsBT=nk:hhAN(V$%)e4=2K$*`!Y"(t(o)3/aC>&B]$U
%Z[EGl7$WbH[8$72*(]E'g"io1+diSr'Nbp8k+(Lgp"lJl1M@23RNm2Ln2k:9ZFM%)hZ8$tXLB10SJob4#nNNm4A[1@Zs?q;c^G.7
%G$h@V"/CPLS0<7+`k\#"4!$gJk'n`-'KgI;atR@Mc4N='fg3M$_r1)D]b.J').Latn7Z&q+J;dHi?.JH6lS6Fe%EC-RDp#%WsKnB
%LXI5niRE8&A\]P.>?`S:Vt`Yn$g&^KD>tb1h&'bVNS*-!T,SrHZtO[9aG^CF38tLR=Z61,FHXU<P+%C"NdE]_A01gqf]]5p6!9W5
%#WV`GC_YBpKG]Dm<ZcM0o?_"lk/@20C!ah%,0(6:F(3ij=]/E"T3>Q=c?+7T`t7U-6BN>4L-LM)E;lau@Q.1OYFR)D#6,9gVKA"H
%JU+R@*L:UK6S0^4=OR&DORqhYC-&!:H5uo#&lR`/Lr)VuipLXshea#=X^-l6ReM!r+0\iiVeR_1;8BEd:U(c/96R!pcNj^[NWfJ:
%l_Zn#:m7J,4X)OI$W*,pBn_"`^[OE(bBme+gZ;e2"n.rISq&=Y$oHA<.sH0ucE8.M/*B"+EbAJA&7d!I7#3=_4h3rLj9?#&9R5ol
%-J>^YG6GW"JrDqkEX+-4cG&)eQTP(b#O9LCIAc/f+<bf"?;?CQMkHL`]MJQU'$"#_cO"hXBLnZ%^XK%AC,58qI0'NjPNDWYi\-J@
%GssKZ`Q`n`%cChCVdfnknN"dUpb\hmK84;&,B-j/70`I8:^GL%!D@B9QJb0M5T`Ftp](%L*7,u&Z0_-%cXo\Xb7RW6fJtb'HUP2q
%;^apYC%Is+0UN>US#`[50lD=FgA*GkZH&<Br&msP0I6q>DmWLXg7=6dp_hs!@6jm'c7,8Tdo2RMV^S(Eg#^9D_pB">r\L=I`*N_P
%],[ff!Lte3cYa["5p4=B+7pT0BP8Bs$g^C#id6+3J'5j1e)ZaoTEU&9s5#T$Mlg/cBVV=ZHM2G?&,p+toSf?)46o.<U1<_=p,h@q
%1^S]*(<1*<[Wis'UB<D4a'KH"]SDIKMYJ4lT_(\3,rIe234P#94<;'mUe$NL_EK,cLbg;8RLgI]1&4\G`H)C%f-u2_\ojX<qlq\c
%Q!f=LUuYBV46R=I1tUbpS]*V4k?P9sO2^EKk;'#FEr`aEBptns$pjeW3*SE@6me_k3VY!T!Y2-!a5hCfPR93kT:D[4_.CM+F(S1h
%0foCbd3mndL*u4fSle`jQ"FVQGdANEa?DjJjKukX.92k2'Zcf`fR`=SZgdh[f[;./&)0N4D`Jl4FUGN'8>V0`Z,)J\$Pl+79THJ6
%^5HHB*Qt$=_6S<Mof77OG1*es#W_H_WU2oTj`r,/kK#;)5S='PT6?ooC*_[5W$N]R><C8%5ilZ9-42L5Y?nqI>5c\0'#IL>HA#(l
%"P"bGrWO/f-Sl]IIL<go_D0=7phb3M@;V2OfboM<#l+7_.R#phQ%KXl3#W)^_81'raTBNA%@k:HJOhibd)@l>=oPJTpun#kgl3lb
%&]HV02Z-u$-bM$IgV,^fq1dh5*K>G6.4RL#CHkW2l0q+^MS/q#5Pi`MRpSmqM2t,&DF"k<rR=^T&C\>t,XnD<)cAnU$q3nt*$G>%
%GhP=U>"AdLekLW$.0P4<d3p=_IF-Di^sE`/#323O'HU2!MQg1O?>i#qD`O1$,:%1);eY.>htV*mGm93/%VH?t#GL6TTnHenLf\C!
%r0kZ7pS(76rtLV)_)p`aq"=M0Hqu'rC9+3rk(=dq@[@oU)&S9T5O)D0;f[I8$gdoE$r5_i2Fls61/W@qP_k!Dbi*n(VfNu*e<q^4
%r3j;q3>LYKK?kt3F7=5:Uf1,e/mpcP>SJIVGpKEQaE(4?,f&C%U**RZ8!8eY4/H0r'P%\[^O3Mt3p378$i$96;3"0.S9%O;eK$W'
%>SJHSF6MV07fpgn(Zgb?gGp)3n8hH'(?t<Wh%/S@*5a5M1$6t.1$"Iuj`+Y!LQnZZ?A\8b#j;'mpR]2mh-ZO#Fu&t9,b8i`Euh%T
%64$j;b=t2KH*b_OhRpMa/Mh%M[Z=Z$SE1Xj$-mSY/D&0fm3q%!Q3"ajc*c"Uf*JmbB;p'?CB*$dm;/kpPd,CtC1jO>5:tF(-UOAB
%c:g2eiJ'ULY9(Y(eH+TR)stD"K'.!(5_ASc3c?5Lchq^oWQL99r!<+/_H\$N.:o6^5D9g`JT^N*JuVcEn'3lDD'#JMF/.6P+2R=r
%$o+GUX87nEp(hfUmr-m=bYd3QEkX9h=DeQ#-.7kS\e&o9-O/X2r=-H'KprZ6QU)78U:*96#gYH'Cr^.9'?\X7>`Ci1_)-$opkrk%
%Io5\Qr'(N0BML./J"IZe%a?iq,/(kiBQEkI$_Hbe0@RaMn"8Y[$]k:mV7hp<%_aj87o*_R$S7q(*8uV@7jHhhGJpa-NZj:f,7t(C
%-.a06'L2qVNRc<a`!ZSbrKu8pJ:h#DO9>gW@H2k^JB'l&Io1G^%8R9?m\@$eN_1[jd`$l!6ZSq._4d5K8#74"1Lg@HPiOP?7-qGh
%O(D&3Q%&Guq=".W=,bbiSH"'0I@%u&G0f?dC7KU!HcPs[(WFBXTDtM/J(I>;56(S*U*cdZrla%rn-%Br71jC<o9o&U7GX"O!-CEr
%4eMPAc[>I%cj6+Qc4#5dD5(>\/nt;`gkHA?l]Zt;S0cVU'UYOl'FD7rj/9+c9]Uk[2_mi-0B[ct'Li&8)\IrIN]>D$d=[e"+s83#
%E55[Ni$ME[+_cA_>5"HYd\3WBpPHQ?p)G5;8'&sfZL;6e"@[GCPF]U%k:kT@CrY\#+c'hH=<^-IE$IB=UOSC_7;u+YkXT=kT;nJu
%TAsQK@4[*D_O:0@E\ch-hU!Y';9P7i`J"<qF9i5$6O]TDgAZ&Y-:@>6HNe/i+3dO%#]=NkTi-r8m8#TO`6O/[0HZ_3.M`#qj+N$s
%hs\#R:hC'OSm&A]*WaI//jG(5MU5JL2Z(f/3/;i(\F+AI]UT'WkJ58$n8]#OS-(G-^rnb-ZBP#jQph:n/>=hGr8eoC3FiZm*-g-]
%nFCY3lb?eHE:O%*k/-(;l3Ph;Q.2C;i996>RFl;CN[4etI+\W*rKERBT\seQQVF.2E9NW_TNmk(ka,#:Va2B<<hr9hNg$JOgga<?
%-[WnPM8#PAX;l^n3M(.u3Xk+p$9'^,BtkaLJiqr-F9EKph4"/3;i\nChS.%e4-oP%hnEY$FhW:g(iNbR(-BbQhP^B;^SL#QWq$b)
%SN=onr,Xmq+hGl'08f*@]W%-6oM_8K%gFT$_'NKF4sGV"NAs1++>kGm=eL7n%YrNEXh;Z[g]*uYn<o8Z/??@S1N7"XF/%XWZ\N_t
%d#QRBF8IZ/DT)N$qa_$;Mfq=>N#)Yc&V687[;,L.hX`[5nbXQ`38At9`BgcfJ'`j=6NY6PrT>0@3"3hRE/nEJO.g^gEK&7)NcE_2
%!+g`,EK"rYj%q\gZ)m4NNcF]LEfOY"iu!Oaa+1lZLEg@XSbb?&k!Z_BUPlHHNZgUK`3b;/Dp$f6e2$b0+sBHdC(;)na5PN*9qi=+
%#lSoj[2T$PfB;':<E$KNO^([6i$es@^ih;m67NM4[/MN8:bF#^c6kKbR=?Ag-#WWjD"e%bIYT9Dch@jI(anKnL;)EV5^4F[8#,8t
%qBrO5Y`]2!4[EL3^=gi3X7O##a)UP]MU?jdp.9].:B0%GT*tYbF)B:=(&2LfRI6RHS)]lgJu<\eaiW?PK&iID8Z6gI,-Q'\F>nFA
%DZi\gfI8+o+X(o#$"%H_fMS]@5Gh6qb46NsaqkBlVk*=23O.$r;;f6E4/"G6DO1ZXCaTQ;*K3KZ2Yp#sr[7*^ZS/e]LX3]iIpHra
%]t(I.GP:1EhV?G(EsNQRfpb&3'MdJR6R^JL4*-28bai-nfL`\r#TN*rcCNe%ZTInaaaJ?qcL0IZ]6!sMEp&OG3@8t<Ni)\@#"K9>
%#OfhrgaD%)TcnF0rnN?9a+.Pb+6@VRLc*k@/iHJ3nFc#6PrRZ^H2M^Mi9ur(\)"uA9N(5)6,nJ3/]8H5+3cE.`96&;aFF>pNpqAc
%8=.2?j/>HBM4WZhP5?7c3^mGeh\8[RHI;/9[o!VZGa,i(F8*TmI$!rqm/`NffeIn!o&A`idAVZp85+]sIU=-_mK>Ua#'c2Bp2DjJ
%,AI-U9SRM%_;`/%BmRq:V]<ZAOSAN!m#YS"H8IArr?\V%0!G9r+dM4gMjMgQ[Y[@+:@\l"]X%`Q65:?#f)Jrll_/"p[hh=Pi.&hi
%*9i](eafV=21TWj%mbbbM",@[gRgfh(B`QB("?$J:Do>IV%pA49)H@`&RGQ>(1QuRboMm'\(=i#O2g<BF\C]jFm>Y=4A5\/_jB$B
%nmhG<.*:ReZiA85.Bs\@lRlhFk\Lt3Mal+I-MmFm1`(N6W/[NM92IfHA*E!jgj:X%3S=:;WR';3&7`,S=7JVm7R+jm-oe/2D^3*7
%He:<NLuIk78mqk+@'%pKJqNs`E'OrF+21dO8?Ru:Wh.<eW^N@#\^?'qHLo!NWQ#UrF?M.pT2pt#6M\un,74p9XrL;`l-P^UT(`%a
%6(ShP&$4=]S8LI/#kIe&K8446SDH^s[eC1O)Fp=gKrd@S)EC83i-^a7ES]\sP&EoRaZ%'Yq8GaId$rjSk&cR!DM!N"&2%WV$8K#N
%3]d0i+UtmT=6\3!Qee&"+&V+UZJgjkFqi2#\+/QgMhr*!JihN+5#,#)*rR)s%Kr]oi%N3NST7T/itQCQ36`#g&RR<`R4WI_B-f68
%%?YCretpD7QXdL[Mg$_hi4+sV`#ArT8F:)6NZ7)FejjFMmjIC\AJZB#5n01BIR#SIOu]B6eIN#R6X*u["sFQ'iE_=SUIKn^Xab)B
%q+5s`K^pLe8T$`Z23(Rn3.i,CF(Vc=@C,lOZC1S@b`7P';EpTi_Rhe3,e1hO;g*]^-A;Q_q7W!EO!<j4@!,pZkK1\+p@AcS`G%F%
%cj-36QDCI/BAX](LU40H3>OeA[M6o7Ba/pu"Nc`V]!5"Rg0_N%M>tg2J*L:fdlJ>"^U;(dpcV%Saf5'WYQ%kRph(c/=e2"6^GZ#`
%7:8I(52@MA.;$kc1f\p\%gb^(A,9Sn],k^?VeMZqaJ#9R(JS*j9tA'sH#KMJfO`Gi(D?j@8>l&4TVaJ/Lk47g/W7geO&+fU0`F<3
%Y=D,Rq>TW6KkEu3CVl"-=g/pi;u5r3rseBfo+PL:*([IR^cC"s9DC*n,UYC*=>drP2>CgP6j*J&a5JZ\nAcCPLHHFCCRp$LcPQ)e
%&)L+_o7IQ>DqO6,O5/Tb`t*Z>HeeTcR/c+=Kf/Tr36X-2kPdF<<W\oM_/Ff*nn>%lV\`%UrrjH%i!odLqd>#'OuVN30ft.6JOHI)
%VHFq;#`^,4jQ^$,:!a[dHJCV@@<\*Z-A[61^kXW+pA'?!\XK-/?j)d*pinNd*^o&f&#?/r_6<mgHf2ZgH9NjXq^l+X$n>Da9r*Ii
%TB$_0%JY_'hifZe_4gk#=A$Y`<J.NCFGB5.-buS"i#LYh6cZV4!V-p%.a`P"#E_>PGc\&S5i\,]q/6`69i0@3J>';LNuL,lj-8s/
%KemOeV\05oiId[2rb=?mo]sngW_6+GC\2ctqLQ)*UeQHQk%TE4/obt05p/5mDEJ9#'\s]A4"jt#B<l@MSP8Qr6>SNE$lu^_-=JS7
%BkO*?mZ0%#r^%e!(V3_!D%D9@+eHA-bL)LU&:a^0Magegg0mg5!^VIaWW.s+e(gK;p"u@eBl.F)nFltQpCTr:Q6L[R,KAPgTA/T>
%]DWXLK>=H<GU'm@Q_2CrmC5BATAT%hM&G$*Eqr:_?BtEZ\2h3.5P,nI4#,NYHHjdqpS$O,nHJhcDnr]+l#pYi$e%'H`.7>KdI]>E
%\hjX#N=%DuC(*,X*>.B\Ze=SNC^OKN$:/)!%HE4P;ug3J&G)8#*8UqOei-8Lr8l&aqhpOB'$lD<$cMNd-BKdih3q@9"dhmQRAPR3
%LN@i6B^55+5$RZpQCBs)&OaB&ce>,HXOL+=U:WD8+D,\P>p`1dq_k*@(AH\8ZLT*]R+(A@HU;-li:1=:jFsam,a^CSG.YGZOB^:L
%a:KlEK2s&;)d#!3[:7(7XS;Sf3Z/@UD`g=H2gj5e%Q=7XjSF.B3i+i#L<$`l*^r3M%Mtms/P)IFkZO&ln0Gg>01'*&DkQP(aD6BF
%2s(MP(Sn4_jHS\-`S?hZ"="L)91Tq`SPf1N.aF!>fI%Q>9B/]Qj+0.)h+l'5i0>Sl7)96)&s[dKZ'=igO4P6Z@R5uIPOW^.&6+R*
%#h'@I<JRK)!"JqtP!feh&+nsRE<cSR<A?0'+E"_t0!\,tRKQ(O\CCp9ZrdH#Y;]1i%<>sGgDT^q6^j[oqlM^Lm7hZ25N$ZnJFgNF
%oUt*V(^899cV`J5%0'&%qguPddhD?U:A4oZhb&#cO.Q=,TCa9lqEW[Tp_)gS(`$A8iXWR2Pk9F>G<pPi-h.)1f6I!9^;mo2gK01A
%`62U(+N4kUpccp^$t(5C+MRl&V2[b<r<9mT'ClD5rKi?/p%oN"GQNXMF?FM<$H*JOrWV<M0C_1hGOQQ-^[fJdSl"o!L_$Vb72t+9
%OTXQ:dA<D6+^(8N3C;2k#l]WLB#Q-U@1BprpA3#o8kZh\!?*\5O;"-)b;!F<1ad3s;rl@Ao*1Lr2T,Db13g&M:\8:q;e.0i29@jK
%CDo1U&IeJJ8W`ua\:.FO1iCRl(0)O(GY7_MoUOA=)-UjO0AD4=1OMYG)O?o;WHHT$0Q'!::IlM57g+-N;mBWAZa%SLhhf'li15ir
%"+*H'31-j0_\m]U(Dr8#"'YUGjK$O([E]=7_>H`8>/WXq-JKn.]Lu-J[q&?[^`2jIL0f1!Bmfanc8O:,9$RAMn)c,\!!&modfaJ6
%>fK)(eK#g4h[_VP!TsH10FYc31TYgCWO8kT4e.,9;:8Y'U'2e&&G1jL=(7"oi5M_C:WW\GG1$L^M%KB,Jq;h].="kKbKGe]7!2Hm
%'I(1bIG$Lm%_5RDL94CD6reo4;W^!Y[Z*0%X3QrJ.%R@ci)r(h8lHIg^nX)6JHk+bSef6FbAH<omq??%kkY-\kFBG:6uk>aFuP1t
%hImp-STgPKrW^eRGR$u^fc^Jl>trE'F)P_jH2jc"7.W!r]1mEcOT!W"I#:UjopYaTTqL*pnP.!g,aPtAblGg\NgKlVMGH61"*=Rh
%.Yn[1e.;mtMOY:tQ=K.K.Z3Cj-R6AsfmgMSKP!ke\3uLgfT'Zb5ccOh'T^:k3Q:e(j('l'Vl6FkCBIsP6,:qqj[:j]-O^I]h99je
%+Z1"o07qogEHi*h2pRGlMd$rB@U7ir-'$M"nCm08M!AFOfP6pI@Vj`M%0[IUF?PQ^7FH7SPFW'".-`B&`.XZSCK"uEAl^/h2Zp9U
%H6o#GM]lh3liZKH:b0r]<W[Hf'(U4'PH*VP,),d2/"=EB^t4Vf"0bEd]HchnoP2YV"7i(t`;h/sS\h:XTJa^J+;b5"RNDiIO>]9K
%fb'UA7&$XHNuga8J/JA`dJj5jcO`S;Q;H0[LSP<q>B5b=!*EWVFE'nup!ge$QKAAL(W"='66*Ui$WlD&P:S/M,#D,(@U=NHI%h]9
%ICAijpb?S4rIJ%$__:pE'GhtSo7FCB\c]Rb>"o;1I>P>kGp+"oi2ZGm/UAb3#;TelLY1\3:`tS8R>[09!_%]L59`Ns4L%0`eR`$5
%Y/P+Ipnp^Uk\5Om:-"JGpS[q(Z809I*TF2a6,=c^I/bJ0fC:.iTE*V"YnU:%V^g(Ak7^RB!3Y:.O]T.171'8;\^_JV/UU;<G.lMM
%$>R"!_2_Q6)K1dpi/#(ZFdLgPRfNb18#Id%d\E3od8qHA`cY!sdc^KLc)giG$CJua`@ba\4D$9P[bfN`jAH8;ZEW@IE_9%Qkk@DJ
%.1'jf[I_*OO9]sb\niQMI,d&JiTZ%)Db+EK>O2hql*^<:OAfKP0?TXBAE(YcT[F&*g;:F98rPm3B*l\gAVSi,j5lr9[E0ar77&5M
%j]lXg$)Jn>BGZ"IpUt?jaR&1dS4akkF!G..q5m^fgmI=^XAd3EPEATujCIZ1DA`b9#AFtH\abX`o4^uA1>?WP?lN.L>rPq"]PZ4i
%j%==[IqI!*K]b;6#;,.BJ%hsPO5AE=Pr#;="ghRDNrcp/>e0sd`hKA]gH!)SffnVoWQ:i:a1c(Y)+H4dh.m$@i>&6YjKBG@Njd/q
%jX=bKLb82pElFo=+r-qSld6CT>(V$)DdU-u`AgpcU.YN>FpT?e")Fj=ajosAUc5B#2A_i?NS>-9"Wa1j#K(r8(,b#hDp\ZMg:e@G
%G-b<nmMSX8@Ts`Y1mgm'j&Vo!jJlSBE&M4%Rp$i<ctkk85O<T?Ph$S0.8DKoRNQFQR,H+VF?9RJ[IGL[?(`M+;ens"J=^k'oQ$:O
%SSlt\$>h5"Zn*SU@EuZKTnPV#Q+J)V@]HaM3\[;-RfUh:3T&G1IqpeJ0Uimordin%1.PaTD,<^8R<V$+$q?0Rmk(<VgMQ@-fSkm1
%DJA`<G6&MajDZRY<I7\K$JTWaT<r`7^?+e-#Fk.Cl`8EP[S(WSI%0JV@UpocBCpqb-Z:K_PDW(bFJKcefRT,=^.QT%iZ)UOJ-2H-
%7Ps^LlN6[.LX*Y2)Qi`./eS-8Ng[/c):eVtUCd`9e?)>;(o]H*\$IcY4BNp;T/jCL#uSTW#gA$eZ'0mLG.SYa9b<Sl%iYl(<lDkT
%6[%Ff_sRO+-Z^QB*mX$?.uGq2(.`%NNQPdd1AD^uETD5Gc*.ck@d%ZuLMt(dC*\"`#7j\C35]W<^bp[n^_.$$K[soR&l<F-_3m$i
%s3P57J2$bic.<V1g*2.ukNl,/KF_n;cF`F$#ql]D@g9<Y=k[+4f%D@C?a;L.Q.o-0J?n1/Zd(!S`'q4X.]n4,k4jhCm>WI>ojJTK
%Hs'ZsK_Ge-fI"r'r7u<cHlL&_=9Jm-'p5s<<"eH2N8B@F.aCaH(a%R1)JuuuP](aOH^!>[.p,@bK9jjo,r^EQEoe``bmikBRm^^u
%+gAYU]cn[nL7be?L@4S%[\E>Z`ORZ2(*o50252nTca_Yi%+#g,2hDO^Q3Oa6)o-%ofI@;&d/;,o]*oZ-T7Ik<ghdBM:Y<XgeRlsa
%aVjT4VIN#QQ=DG/\jUb#5_Y"#/WP;L@@(iIO3QU@Ef^K(Mrfc30%,Ok*(q`V-%adfs!"JYO!/-MZ&HQ)8W&\-bd^R3P&$6*FKl\R
%B*akG`';de[Foi8?:o@I&+R.gj/Nj2d2[%3/lU"\<F>8cYI.Qr%au>EKgm7a95n;p=+1&]W]eQr3FfcYqt'!3<bm!(BXLm):9-7=
%FC<a_^QP_t=oST>BKZ[aVW\4+/f=AkPmkA8.Ib/m"9.LNq,Dse$SsPu?itnQrUO@t+&"$\C\Fl3/A\MerbKXqMI+-&25,$UYnqsu
%Hi2K+kf,[d+3Zc*GUs`4^CS+-b9d)?!atRGB@7:(=CE^c,B"E+Hbh*,2=-o/PAJDG^[b=rB:KD9$U-Q*r6no>?p<N#>PQa2I>`TB
%i<LA#$2[Ym;4$7V$J:$Jg]IJs\j7r3Ge*_cGRVecfkq2Hj^OX'dcml==hQ8NURl:MY_HC@Ab?%LRpWJWMo\h/?n*!Kjgk,NV]&?,
%0,U9f!F&I**I0D/Dq1&^G`#mID0P$d+62^>8H])@EYrIM*ZdIIXWupG:#`VCRXjhqJ,DXN-+k6LQI%[A'Rg`Z]jLh_oK#NY>DN4j
%FpGdK!32pe/,4Nd/fX+#E/A<Mn>+]=:H6EO:$SU$(%OOq45K_^_daqEk[,3+=dS!cccGGmI_=AinaU2A8DdYCWTV'$C)lKm'-@`q
%9#OTm@;Ct^i5d)ToSqmljFeT"F0SuT('p.Om50)kLtK#`MEC?JeI1*:Q/$MtHSP!fq;WB[b$&#>@tG(<9hUUZe"2r(a^H843!:VT
%EG(#6YCbHJ5q\FY>ec>*jakYmS34?#Ab2ljMeo)Qm:,d7ZM^@;JG"<!V&\H`VbF@&1kFU`<.a\<.)2Gp%(b)B2p(]LDVI/K!]Q#)
%V?C:.k[\b;*SF=ncQJj%1CdV5D<`H8%]:p8E'/J'WG4:C?eE>Tro':@O&g1=41'=,0t"TAiE`M/h"^sA123laWl2`Al4sb>Z+fG/
%QL"DYXYga"o#r_f/nhQC^#g.+9qO5j+m`"_c9^+rXCW6#NuX8'[77:Dp_)!>m?qbWKu_cp)M2?5)_YuU\-ktB/?^p<;,:@g[Rk8:
%jeu*n]@!I^p@`9+lZg^hCRnad7I(kTQWe3'^X9XG+JJJn\I5N`IN-Z1NNnX)@+W/.KC05E%4/#\D)g]/BHt"?=)G=b?V7*,1u8DD
%nT_%1]kUma[>Cm;VG0L\)/]4AhpH%qb_7rVs%$f2L=roA=I\Q_A]Hp4Xl+qopA2pDdFO;.U@tIR,dkm+eYg+"mVfN#q7BCK:YW50
%a3NcPJpG)F%;K6gW+YL%bAZ!UgPr)=Im:Ql%f5^QG!tA\G&5)(g.CAa6VH%$H0n,jmR,1N4U%CbLsL5?=fSJXVY!?KH$"P:Z_aiZ
%SV&f4l*)WYeTp!$#lpal^ILo-d'^usMajSi]!r'-kn;4XLFt`)1j-@\Z;4PL.8mb"F.oJ3orC8^K=[K9DRjp`pOIgGSs,C6f4et]
%]']]O*^ko-*I/"sR-809\lh0qKO?dgD*Y:?1)G83mqSZ-OPN"3UDYKDh;3pKhJ`&?oUuT:l=4b[JNhJ+J(/,69/V-kM<4Ap]CD`3
%rd<bT\)&bYq?O^QUji]sFF(T[1O<N_SESinj`^\o5Ad2dHIeH'?Kc-*K+!l+4hS#4k!p4i[/>C3fA97T_U"d6Mg0NE]guekVMg$b
%l+!\Gmedk14*u6mkD\ITSmCa["Wl&U>n!apdDbm?SR9UN][NO5c7]28KCSrP@^+*OcNa,$4uEJQUs0I_2T?1TCsY$"7lMY[[<u[C
%1kX),iBbN?)d]N6LS=`C"q9sk\%6!+kY7#i5414q`r-jOdl<a5I6h/g(ob->N!V7R#%3Dc5eCj6hN+SSQI1.qI([RFNAsE(N'kJ^
%A=R9"SAr+WEb@/5G7KghE8@"2m2)ZLH4t]bV960k<3.tSVYYB3b&g.BB;X;VW+m4R*c.]FV:[MBj2;[sL8OaBf'FB0n'-E&+C`'4
%%rp`J/p_H=!Z>]i9q+WDo/#5ZpIhiMR7^lg1RBTW/>a-/ZaeGl\g:IX`%>&oXOE@4aKUuAF547[QdU)D2d0FoORX(hA,2caI]FX`
%@C&"S:O6g7-1bQY.eq$7K(jl$hABt^qEP^t<a^/8>K>gJPEhn):H",BpgWiJk`.5ucuj2n2f)m6[V%#C?1jeoiB#OtH`r0o2GVj0
%!\ee=8"[)6ElDg@bX"JHZYYZ/f6XOTrpWh[g3[bpXF8M;h`5f-f%Aq8`,1NB`0#-eY<VFpASOIlgAY`gj6cZFl52T%,KG3,LcK=O
%VlDO\lr)-IBEl:4bAHjAZX&Dn3:ZQV_+BohPY5*K`a"NnU[&9[omTtg??gVC,+R9XG[#K:!I"+I53f=Wb\U%o0^l,mN*Z8L**2(a
%HE99RggT"XY9058^huNe>QJ6fmV@a(IG(udgdN3`\o6i+a5(m9C%nu2DgMm7ACBMK1tb!23_Ob@l.60d^"&PFoSI2,o23o)]Tu64
%l4*M>Dr.l$mFGJPVFo^3n3t4k?5\KF]"8jb_"_/>g?-#+"c^7EK2(O@[pF#;io,L^Z/,l>D];n@J+tXpoB4S:KE'M&ZhSm-+m/g/
%>CusW20BW>\_daF>ftS*Zl71aTM(]P^dn19(plL(!l;+;T7\%7s'!,I[c<s!Yg:\I+PV[oVHUS>`<q<%W16WY6BC[#FbhRrhS]1n
%_@uVSja&mtCsTsWfhj<u7U1J7+,\_r<q>2r'$9CF5^Zl!,7h_+(*QnK)#u"0;5WQU0:gEX1DpiFD.R$'dJdFn']j<#/r#eer`CBC
%:<)Ro?871iSh74._;j:Hj6@e9)7T;kQe2#2GM-\;PV6Yq^Gg&VQ^RV[VY_"@/mF8(c=7Tp5^Z&HN)pKZH@-IBAmVWTZV(0'ce1*U
%bR>"0>d_3pOUQP1M5Jt!:%Tgn=]5.n1/</c-Sh+W57Ea"_n/5*h1UheVV(Z,'u$)3;WSe9Ug?uFI;6doC]I/_H#<5OPFbB/h;l(D
%HI0pG1DffWIO81/Ai$9Pe!YKl)^R;H[q[_b1<.FP.V,qtDkFGZ/8:Y;j@jddCbFukKlbkapbpa+EGSr#Z!?GiNmMRUBXrk*nh5`(
%2?.*k0Ej"4:)>[.AmDhfA`JK$Po:G*X`D(AZrl1C[nj\ZnNECT8s[$N\eHOa[SjFhH7=j-7(d?=4gF+la4GJP34**:4@u\b%P\KZ
%bDlg6#?GQ-P1IdSrUaF(\@(^=S4oc[X]s4PI8<;>f='UVFI`hNT<@Y\qWmH=loA!c<ccYljq[L;Sof%#m3=\NeNG-^?S>_Kcg)V>
%Q+PGX%-BLB*3HiPL!9f%k%8!/=;kdQ*G\o*hh-o3aE?%#>i1j90#Dkfbe"eLk%i3sCM@q;[T9>L'l2>Ek#uQA%D'%"?<_oKH7DF&
%+.J+V>G`,U\,ELsmWN^eYI4\Um/*>"earkrGKJh%p?jYGd+pF/GkO<tG^7'-g!%k@iOITgYe=<F+#5LYh1q=E:ZtZ6PCposW,hR`
%Z:F-!8_-dbEXu:<;qX6[IHnRjj3O%7T(Y0]+<R5J]<h9jp;L_K?s]SZOm^E[9saCW\#A5c%hIl2CYHhF.iG_NG+?%NfhTr]%X*0m
%,MS^,=.I%%Vsa*0lP%mf08eRur$p+._]KQb-9a*6Dn==c^#!W#g\!1/m5B9aCT\,^oU;lYWCN;5GX#RX^@uPl(t5+aT.GZ!K_^K$
%j^X1@da?(M>PRCkC3TFD_0D(2%_Wp%EEHup42WdGCId6NBlm<u:"gh,bV5j]fb,TLDBhs<oXY)5e+Z,@=+"pMgEuBq@I\@X2H'Kn
%4-L)5g%Q@Z`NhEGl='*--G'(GI$0:C-^.V-Xu&#(_kq/!jF3]o>hC?>%lu_^<:JblUM`1Po3aHSXPW<Vc"NTT"MfD<hW"Nq]-=Cf
%ZsG,r,b-N)VIL(t=c6]"rkJ6^:\Us^;<l#lVC'1s6jo,5\'HFFei2;@'b^#V`:'R"UHlUOeDtF8i638<%-FH37EtX91!OB"-c**g
%S"0f$8s'LWZsL_5'F[7V1V&O-a-pN%8Wr'3VO;F==*+e4%ea-=XZ5\Ko_9,7MX:;uhU*os'I%bC*^b-kY(H[#<l&d:7k)Tjm)dj(
%AE^e+_TbD9G\WZ5d]5X6DbJt;4f*KMJ1#h$n04Z3-<L"TgEFHnNGJW3hS,RSOpN"/BmSLrcbPEd^jP3n>Qr.ZQ?Z%pBODY<PS)f6
%4W<<9idJ$8;ZkZ)QtA9]/'`I'e%ImtB)@P^ES"pa63<K9m1,6f2KJ'U,@tY=r37!8N9`EqDVLrp$Gs.+^%NjB<0cr&-P5K%LYErT
%pZWUX:NL;_IG3f;8n/-LbPi8'A'-Mq8^(-q_d#NH1#rI<C#0Goh-DP!Z6^^0QG7fZ%Kn1/:f->L%)HuFFAW;giZQ/gMRn^h)IhmK
%FgSpX&K-IrZ]-6R"k\!?[NZgONM>JR=aa_FGEF#p\B3^Y50ie_LTTo&ad"\PdH\Ra>,IX'DsQH8F`Asd5dVN`+Ep3i<b!_J^GQ(e
%=+`;^L)U_n7?3W;lsFuX0<=nq6qfJBFosE&51PIK.,J"B=no=BPr4)rW]YE=DHVEZn5h['DgJRS;4nTTU'07'?t9OH(iG.n;j_bZ
%!bBm_@&pG/J>n9ui=J.=6h3g[\;%kM_^\`82?WhCf`!G74<$tt36gqA6gJ.`BN)-5F"f\%YQdn/Re_%6n$[B`n#7?qc4G]p;Nq9g
%\:(VE_JTA;LeF[H`t]GR>b/%b<+DmJGn?-i)q'BoeWGE=&9$EB]1g0ZO[q@KKC1nFCm5T.\*:B8']d\i(,9Q)i8uj['C(1kXZ6Bn
%M?[)WlmUZD`_^&5nk,f+:5`"BY7U:UfM%GPkH3`4Qs!'];N5/H5[8hHf,Dm]h'l)s.keiUc'F*m&\s']HAdS;UY+VZ$AI@iE\L]X
%X#]W8l\D'P%4I#D]E4Ld-^kunVa1F$3_llk;3V`'hc7qrA;f8LR\KSj^#V'%*2s()T8Xu3WOA&?g<HKOM*'CK^hk56cpn_Xq0:G6
%'ra<bWX3:o$g+adC<-B[FZkJaRJ4qPNa3p)Y>/jWAtQ=7[d7u70SsI3b:Hk_\C@a%;b=oT6o.PD`d8T$dkoj1<Tu^JJAFq)&.(P_
%\]jqDb4k,(-RX"i9bs5Ra;,<MkIHQ?i\'n!RI1'BbQ'/9'h>kAL'PQgc-pa>Q$0UdTo.Sn?4sM_mNiHRSJ,5IDOBV2q>LAEiTZVS
%"6(acGe"4!"2F`S+>r0,UYqnO6BO3:VWY+0,[siP4(06cBf>oNI&4Y,is.\'e>=4ZpPWS2Tq;[U\B"Jf!%.V][e6phs,B$%no^\3
%UqpiRV693(n?h[CQR:kGGe9an7=.1F$pTl_m%?*H5eA`e*b<?M[g;e5lDH&JQ-$kpT'+3fe+`qUYU#s>&NjV77,'AOjKrQgfIj4%
%=)d_X8P2`1,OX*D]hF9""3LdA7.AK[ocn#$KnDg;="hf.4-?7hone4:6cG-X(M!<RX?Gp*#EG53;a;E8VWh/dXPJA`Ge3_fIba_J
%!)SOXXEqB-:P$-nbnQ<jSf1f7NWk'Dq\@?RU9A06Gg)Q(g)_+;-3,.#ntY\K!#Vf</,K#o[WjF5p_:?`QA,$HHhL/Nc1BjB!Y2rb
%D"2c$m`A]C0,F`H?,iW;pZkn02-2R<j4.',,oFuY<E`,UAN^4+q6C$*&O-1Q^G_AAnDo</beCl&i4YInA_q9lJZJ^2`Gs?q.aYlB
%$.fX\\&hf7<R2)Bj@A4i,r1-dahEO27j.#*T`:DH\8CVtmljmtA_ul:C%=FFM@Ltf@4j^I\cE9#Do#hV:TjeRRNI`6Z<"5rEu@Wc
%/5TtNCLIT9(>rfM)r"@3rt&"a#=<YZg>[4r<f*;a+t"V<L_@nM\7`1lTpf?oe^Epi2uD5d$pAO6Wsk;@:3_%JLqUcJ)8IIt].HI,
%?fgT"-*DK4Q]!#kcddiBo5oT:Le1UHjHH-tS*-9.D&.QCR0R;9&rX.=4dM#XQnT1&70<'MR)k\T1J<$.BT0:+MDMa(=0N2VBO9=J
%Z[Kon$*_#g7Y%#cOrfXhCbXSTD'XapSica/e-f5[1:Ss/FkF<7V.BsoM/jMb8[bXI)\=ptE$eS1(b<jtD^oLgIg?P"k/hp':Yo1/
%A07tGZdbsf0&qHRf])]cpbIgdC&kHo+IC@JK;jBrf&gP)dp6YAH)MV4gWZ+4kPCAV2/Ugaf'*)7N)@$c#+/uhoX-&ZF9J5!NPW[=
%]"JqZ!F'-B&=jT(mh,WlV+6,.bdQsJ98O-$P[@VN>[hr'&*<aoVX#2W-#X5U<nbidCp]e4co^?Fn^;9V(Ef)f"1j0);If<Wbf0-j
%ZUiS12QXEU/3p\#7(4-$cElZVO1Vg^OZeC,D<?F;0L;GDd3/'nM\atHOP`475NSJ8:W_a'.D9sE:;/#`KsVLMH#!M-:bej&O7Q,P
%3H+`E:\i",VL`)$$)SLn$;2`&W31p.<@p?C#0XLt.re>kXDFJ=_4Q/`/%b[MiD]""1(6A&a2)\=6N!="R,WHX0]Ju)U1`.A9J:b,
%K27eP?0JZZ^4[U;,`FY)JTb*(nEE(\1g)Z,/\nG7#[<,jik\;DnhEP]?hGh,qjGEFKK6m%nY:V+n6cAmq'"_(/?,N9gL;u\0-1Pg
%/uR-4dW2:OfRc.l49:qL.oH$R=,VW1[o_M6;c6:`*kqG-Yp<lH7RRB1UlVD=jX@=S2/scVl"VZNn%O]'>DY3SO#FbK(RXK^rDS)8
%.LAOsG3c=5e*u]+6#TLb%3(OCiGfDm/VdRnQ$e:u_68h*HYhZ#7r:\Rf:$&)l,>mF_'m](5aNk<Os2*O@:Ma;ndH_ZH9oG+dH$+9
%:()TQ0r381m8a8HVmljZ*)D*2*uFXqHHDsU/!(8O.C9>u:td[_SI)pEI3<-%*nL3tD.&!Eah<mPGcKX/aGDln[JK2a_L<K%5K/TZ
%Z7HP&LrSmt#i-,l/O/bR5sti\@G6ms-F>+(mIE*#0G,np#7N_(r=Me"JbC'aEc9K`85<rC6FDO[h+23n!B;]^4d-a2me"!+2#5is
%A:*>IUS-@02MRj)X1LH&>Jt^*]0"ADPBo@h<&6msj[u``lUB"g>3SWV0he3QS'9j`B\n!XPfk-t0hSDTO_d]I[7'VOl2KZU,q!RZ
%(`VpI7'88E'6ChJB_bSncLM)Xeb1QKZaX2=JDK5s\X)Y_GF0PTftuJ(iXMj74M7Q9_E*#ReO88bfWkMV.s-<Z</r"*B%t<*pHHsK
%6+a.Vk9QQ71n]@Nmsk7mo7Go2n-7AYSJMFTASDXW(tAYL'-(eEL\s2>HS?VcaV5NVE,-:Dbbk88MRRQVUfn:OEfLCnD_F8V_K2TE
%$CCer9/h!WGd=2a$niT=.V#<f4/bCoZ)b`_IlpPNAr?%CHqcWbGX17?Q681>"PZnPQ)rf-!S`6D.e)YJ->G`"5gjm"?sW/PI#87>
%T6T5nJ6BJhRo:VJRJb]&J:2SSKAhk4pgiRY1L2pZ[RGVrdW$ce5"s2-&2s>pP=jImpYgn>f=7i+'"?Ta_OYOH#sb]!Db"c^o/P=!
%8'flpQuT%1A:YOE5hHC>5\aQ3!CrtMn?"T@"SrS2WNkVa]7.!DGq@C9:`*H;P/NOoUiNa,ZZ@ur0_bEQe`X6e3S^2I6[04Vpre-F
%H3sh&Pu?nESu?ue&!Q=u<9FdHjNVhR%:/PdK=c?rK$:S6$]aE+3`_Y/WB=B0(`DQ!p67lCDU:'rD983V"N-19I?EgN'b;IF>t*YD
%".7(4iH.pRG\r`rUjVbJk-j0Q>0/ff]dCYEZ=ER#jnj"[8\nWSg(TFJ<6/2oFrq9$GJF6bpSU8^20-6f76?+2H5!ROlSNU*@l$SD
%[O)<f@JHC+GEJu`#^$h$R1a"X>B&:Che9?9U$6;>91D;'`h#HDaK%]mB!Z8#He38[mFt`"'=a$Q[n%%X,YJ@:n:Ta-(_t_bZtr9d
%BRjdO)_FnKbAHTgkL4""D\@&F[+A+]=<?a4ZM`YK$Yt#j^@#Y1PH]JWJn?$BkHD*`\tBk(PCqH+SO1+WLpl,FqBNqJO][^F:j8`a
%B>Y/_D,,@\"Fq(l?JgKDZCP(7':AbqS+oOfRTCtT[,O7lK*)no5`BXolC_RolZshQQ45L^T6M0%Tu&<IBKuaiWjAR%T*nAG0lNB!
%^=Kk9@'N+nlkrp24WF*boU3TU5SW(/"T)R-hlBPkY&95eie2\Oq:kYhjGgQ29K$'4QuAHQjBmM<Z+J><%2_CI>e2]0Vhu3m+:Z$k
%OO^V5de#mYj$bcUd2O/_"$j.+'tUV^8nO!L2gNtPJ2]-9L,%VFYV%uHBT<e"qLDadYZ[GQ0G*P3\6cL:l8?u'i4'Nc$<ZGa2S`=5
%cm_Za>>Bt7R7W;OTCT8+(b:lpa*"HOK0b/Ih,Js-B2@YF%gB!HEftTpQj=XZTq@pc[;&ouf=bileg*l#>/ksF/TO"5P$'mFkQYME
%mnPe>\X35IZ^P:6pQ_u9i$CMoFA$a%QoA)tqgA6$h7f%,aPuQ=d67SpqP+'l3q4@K)](kM:-dc"pki;Tr'Xs6S7&+X"+eYN7j41l
%.fQi,]NE6V]f%Z[^<pXmGMrf)mAhP2nKP*R8Gq1,hQ,&;=h$M3\WaEl[[`/NAn&)o0t3N1_)T;Q.%q<ri(O)21C1b+ZB#-$P`[g#
%cBqeN(3k6ud\E6G&l$M(.k?MWqRiC`R+>87`%(<#J6.S#_W,18PmiBd]KOri$uT1GU]ma&Qu>9_9.+)$\TD<5-sU#gMoi2=S5aBh
%[([pAXWj?pAN8(ZJ6^[k&s57bQjCs(%Nihm!0d(XXSdAF?E0&_E>@h)kpWf!<Lqe%_0c:KRubVR_eQTl5\an6(ui:24S!A`Zj3_D
%B^g8>1s\-#I0X,/-F2FCT2n4DS#-ul2lhB(On?GaLsuRk6cft..+a9"I9Vl(n;/SlW6I,P=-h+`]=Db%EacH]*;T)dRag?r9r>JK
%!Hg;Lj:/&dgC/b,cN%dkQ7Fb)0u+mL"r#Bb/@$pIGsb>2:,)NG/i0.<VZPb1JK>h8i8N%2/j6`8Y.)g,^O[.f&;G*,djoW^s%[#E
%s*0dM`si0U42M"AEnb@oZE%u?3HMHT#9D0(-nXjC7-kXL&p)g]7pI&JH*([OaNm9CJ?b>g:Y+;M0CZub`edfFVAF0nV0)o)oj&b.
%@]]M_&ARmLPC?$t#)Whu!Z8Wd5LnAUVkp>fFLfONg[e2ABSY'25VH%kfW=5N3]toUFE1bi!<]9-%]PFr#"B=cN)XY#TNbVi/^frM
%E;sBae2G)lDNAdF41D(Yb]B&]!NbsKAU=rH5EdM>5*h2q1c4h+!]T3_&eoin\263^Q_h`cLd437]qhT7ie$n]('gQ7GVTl<cCsH8
%6l^grZbf]^X/Hdb=GihbD_aOa`+^DqhT^5KQq;,O089l@&!@W%^bZE_4RBnI%D'Dfm'VoRdXW7^=4<K!)]jqmgX?=4J>]/REnO9a
%+LaU"$B5D]:.GO&UChbFmt%m'UgOp:Jc*eSq#uO][MTq1]<&,HZ2klX3juGS=2B>:?NAG5V\3YCAd/,c&Yj@^Z%4MLXf9#8iElLS
%?Y@8p]RmE-fuNSc:dWP9Z+;dL=<=+?F6t1EOk@P%?+.mu-s$BSbQ*n6h@Hs7:nHe,6+S:R/ihX"p[*Wn&eX.,@,8&C6,u2:]QqUl
%kc5aJ'qOr,W&krU1^#I\+)gWM0EPr>3g^S>>S,B8N(_Z1FiMXH%ZGFU\AM$KN&Pgg`"4VLF5H3NB&`m[)=s)C?:#Crd%(CY.C&0D
%HJ(?EJDkc1gRILi67"??'a$3<"8Z_(UjV3O5L@,mBnq:AksB^geCQu&9UCRkG[E8gE_Nr'GF!H*G$5A7AeWRY>@<QtDetf]rm:g7
%s)AIsn6hPu;#WP58B1*3XQ<cT.@7\tqt6qVP&stV!Rr3DXj.p#70GGA?Y5&lJ1bH+5EgZnLG]Ip,jRrQQKp,iE[@be@VR?`(,CkT
%p`+FOm4o:'Ab]d=0U%iFYh>pacr?WC]K4UUd7D%0CIL@q[@X*4mT0>dnU:hrL.eZ/ImT@bfBtcqp+d`[A`(/ljI"Y*5(56)$]]5r
%VLV*P\'&ar<r^a@S9B\S9$U"_I.^0XXXM?HOGqouG4"T8d."jO7,6%7rH,kiGKJEQYdGfbGas#^!9>MOOt\8Zo\1D5=Yl"2@^56e
%.$2U#.qOUG102iRMqK2pWFX(VK]<qAL^h+7=*B`Fop6&n0`A;m`_,oe[;l;>]+,o*,s7>Nh<9Bl+J,>&*=]',1Tp)V+dWYeAG5\F
%F:2W?j$BC;>Mus`oY(kpQ/&_2i&M/]V6djc`Lj/6/7`^']Wpu:]0)%#")NO'c31ZRi\BbD#Rs_H40M#i!p$D1Qu$>9CZ(tH?X3^D
%g'kWtQs0o:22W+a01WX:nR^j:I*df(D)DmnrW=/t;&dE"P9)%HN_GR-hoX(Bb]EBWc^DtU&6t_$UR`0_5S??nXCMG?I8k^)gWKBE
%@T!:(&K2=:4s0#q##cS\I/&EiUqKl;)P;jsn[E^hEdFRakMFE9*k3Yj1F;Dg>>K2uGipqfX;)Y)aSfrl?piuj[Nf1iL"n(b0L-'6
%57<#2/<9<,,5N+OX<iA+A'7ni@BfWFG-I<:Cpk-5J>$k?Z]"<ip?<b`]Rue4Qs0U2oUW2-eu6X*=\9(P8p"-5j7@ItEK/];<gSf4
%",uHY$fo<==Rp(@9,m]-X_#&"YZO27>Or91>2J3O$qbHD&^O7;K(ta\KuiMG@QA'soOa'D[5u:k=ApAG:4/fH[c>LKH%k)ZV5C<J
%&'aG<E$:P[hC_;+=NN4>(*fo$EO9(P1._C3:]U':k]-/"_$SnV@-V>7V\H;n=Zrt:0YP.U_n"/!<q8^20nb&lD@#f@>Gl'+9/'?k
%Bg[31P&(=?#6.n\LA54uiHCqXKD4=.O;`N#?PLFp]pi9j<Il%+?j_97rlmp%H-d1+_Mq-6!u&6h5`7,]1\C+OcKSl;rRF(#\=eAg
%aIO#",c>UgjhkI*iNm==5:Pd;g>`+@T^Ac8F^Zn,eR?'.EF/F^j,;_]]W28rX&&YGW;!=2V1>,.*uFR/9,r93n^UR!mBR<@BeA2Y
%V:OT\_,-WP(*CT(QKuSqeik:oZaYKaCR[h_>'op+UNKsE&*CHN0_=f4g9ft]a*Liq)Yu7"hc9%qmS/DJ+X$_2O*o`NQdY2t=J8*t
%S2,hU?ZqY,fl\`@%^Y\%+a3%md>u"bQ?dqt168u$<ph_gflI6WIYt[N`2tWjnD_8VogTiM]_Pj)2f58N[[Ta'eX6Ck#a8\a/+#Il
%<h3<UKg;gW0ht;UhTo18?kVj=_Soroa@e*PLYnP\,j8I$@"%'&Ad&p(g(oTdq;;pbR\JJNiR;6j.P/L41*l"n*s^n%i"@`iplj%g
%Xb>iFG[>/j,N<gMTtG%;nCA=V+AXS^YK)X.pWSOA;oN"UVQ_Uej?RA4UJL'0=@"n?'[F07K)0Kqr"ge]!R(VLs2I-4e=aN10-AuO
%$Ij/Vd(gYC7At%dc4+8k.d.Xq@7,(:$oOn<ZDJ"UV?E0P^H!skh2B;E)Cb`n#)qZJX-a7DJGp`,*JB]OqAu65>UsrlLoW-eK.h[-
%eAuAl$!f*cV^ncD9r3`NW^brOk.0Y(6)YP?l7Y>*ISFA/S_)f_9VA;EhH8LQ7=5-DDDK<Nb1@!_.39tk?eqdt.a5Y8?J=5T)R'?Z
%UuT5W%pb&h?QH7a<N&48TP7RsjnFaJBse_2NS%?EW:f)Lms\6@.m[`@nHZN1<'Q>J_#%m;b38[C*jAld]2jTbb70(?NJXR1";T+n
%]]@X?iS$hhehE[rdqV^!/8p#R.mqQk8J>MB4t&^NCW#E(<sueS%^U!C>[@4ZT*;1HkAa5uoeD2$Jds_mC>FDD+R%pQ%76I08%8']
%LoWcMk_%oEmSs^2#-1p7_FdW*(fj`9La:iFlNRl%%^d03Gu^Q(M5D(fJbnHCRN7<HLUr_s@W]csiqhoe@TJ092GJt,:n+5L\#p?C
%?EO$pnlWLdM^]=Mi\fNR'!Y)@W3_X^'l(@Ef5WoP!(I"F)Kp=)c6u&^`j;5fS!Op[W%YPu;$e_:ck,^DK>4$W+nB[[HXS@Y1=YXa
%fq]AnGnm#rMN0+rQ.IsakV@mi9re?gi>0V"PEI->d'Z6=9tWHk!,CS)%@%Ih64#O<"?R!5]3^D3o2m%a\<Vj70u_B@.BXEPbo0/?
%W:g\Fds:sI\k=&gnKS$]a_[n<g3C/Yb$E\2\8$Tc[g5f/&+6/k.,#R42Qha1SSP/8bX+W2*D:M'S.$m[2(Ke7]lKG[1:_(jq6&V"
%W8<G'\h&P]_(^*M`kW^)9TC`h,j6NnQaCdIm!k(l(/Q57:)Sb.2"B-0oGrL,!cjLB?aqu-dLfW7p!\[8pS=qbF9E">_d)j`gc*ep
%`i.;cXFnod?J&Au3t[]?%><N-jilCt8H*]ldbQRcVc&.T]bl#qm2kh#)fP";8,0,Vp/FGeJ3N3P55%sf=)?>9O8@=CD%K]q$Gb/5
%]l$-46)\0B`,8`:l+lp'Q?BsMOjWpB;n"A'J(cJ3V^nJj1h^N<9D_ZHl(+O6d],N[c9s9r:F/DU1V<oF<4fndoiXTRl+$+Ph5EL@
%?mao=r)Kj"R)D_KYPPWen\srsTD#/<An;@tN*9`]frEWZQq^VnK^.$Lk=Xpo6F<Q>F('p(FS?TUm%ni]Fi58b4gh\8fW3!?Znj%U
%$Ga%*o%'U?K9>idC2#.J4hZ/8eAP.2p;XruoNp>*dLL%2l^OKoCE*,p5k4j._Kj=Ir*,[M%sJ%;j0[B7$9nO:pq6k238nd9XZb-(
%_`r?1m"I+fDS52?<<Zg;!/NR39-MIA4Jp<5A"amt#-l%$lb+Y%cP2lmi4OniQ)bglRXh;]5NeR\_2TAO<_gEd7:(-h5gJW"cl[:!
%7(4#5/`mr-W'CgUosZaB8R`'`!W*oZ<M9JZo^5b6MWG&o9i\+l%+M"7ATW>2I5+].o0NR;FId0(T_=@7r>I/d*taJI<%lSE&gG@\
%/g`)jo99BXjZsV2T^\dJ'e3_pkZY%gbKtsG`N'?qLDP)<FZJ##[0<@VH.P@t.Wd73b"uSOV^b[&<6nQ<Wp'"sMCMS=UpME58q`Q#
%q+lp6JDOK+Ys1NfC3c@GVE<N9oH19iqjOVB1708"l5qUfD]q/>!:f6J9b]3`n)-.r";7XVMS$iKF(QS.N6T:=6EbaQ,@p]J:OHdB
%[h^+f.%qbhj"j>E[MmT<NtDm=0&HCq`5DDK$kQlm(4u7_A^j'!gqZm:_r?`j8hV=V`q9t]H9)&:bF-^F&i&GN@*1>N15=>OL<T0i
%KYD3%p)+,_0,A_LV5r^RDsQ>^&R)8Wl]OMb8$EQM+r]$ln1[6s7PXS@P2B[*s$4lB'0?IlEuKglWcJehkd_"=E7OA2?"(]pGXiND
%j9b:#RA\1__J`6kr`RHNE8>I-\:>PjP840drm/kID!LdBU0rl<1?qpX>#d;12Y$2.2-^\%@2Wc*7bpNenPE\2K[JT+e9c)bBIGtb
%Ff\0LZtqqN?hrlGh)bnB2&,<XMs9a^4(p2L!51Loa)L:,oTDfiMbFHY0ORAR=m>d/5J&,mk9;.JiGuq)b,:&S7R7S7POCB@U9Md^
%lrgsiB0e^):91lf*unIP*8e.eq5C&4EY%a.\QY,DORled>Ld#dcBjLudFh?a9ZDg=(K#Ap(G)f,o2u'j%BggL>-bh<K&5M#BG)gm
%-keLW(*f4)I7@Ab4P4:ar5)DuTT(F0"LXQ3<,(A2dC.4E#H\i3Nufa6fr[(FNt'fVdLBmG1^!6;lL*\Dg--GefA4c^Y,:&m^NJ;i
%T-rCYTOJd:Q*LW+PNH\,ql2:JJ0eJk^Gd#5?jPlQdSAO:X`h%>Q=t.9)_S<RZ$="+WhGj=@lE,ECVr3fZ7NH/Aa/Be.m4pm'g]4C
%g>`aFC*[US-"Z%QclUh!:Y\uFV7=SRKZlfP'P,4c9N*)R<W0R0C2^+$^qS1i>j:6"e)IN&.b_5[=A3A^S<gU60J.EODmas`CDadI
%XeEZX=;Vt249EVC:(=.;-p&t\U0#&mq(bGkPVaA^3W1T0!X_CTeERbB1S[*LGB3C&g(&aR:SN!!D^1]M]'W;#R@)geK$8snbJb4X
%d8I+6@lYA!nJ3'Y1+dW5dNVfNr/Ok8T%oV!qmL/&ro4(1SR-?jia>l>5ZdAoAM4+%9]ptf%XsO*EH\1XeK"r^X[,<Afk;r'((VfL
%iQlF=]g27Ym#VG`)hc=(Xj0_dKI>J+!?cI>D(9jR=F`-p-RF3R]JV#8;)fS%LW:A"+[%Jpf-uT0K24qWpt>&N'KLh8"@Q!K?m;=u
%5=Ask[7d<0$,X'8jp7F-X?J$1cF<k[.!X\Z#TI^(BoT6hTX^%2:rI;f(B@!p5"YMYWc)&O)u<%D]P<c3HP%;LhP"C,KY(6N0uLQ.
%05M[mntG'S_jJ[V47[h>]p*a;7[+"3?>>s8Pp7(A7WGb]0>_4cFL.=pRpFF$gPeQM"B,<llFn0Y.*2P$!XhP3K^<bR8lF\U-"*rR
%CHJ>H]57=!EkGrs\Z,#hR^WGeY2#ka<)_!1>/pfT`BjP\I!EAWdXn/c)iF>&6)$pWShWGX&OrYKG1'u(FAO:uQ>Z`"eHlNr5Tl.Z
%-qHZ;;DUBhkKRgW\/R+(9)N\<R9c,Hfh2,GJUES!_tN?9oV,aH.'#i+eSW[?Rk53D@[SU4<&K+33QlU,+OP@Mipqgjgm?h#L7X[l
%]'rWHBr*je4Z^)Q'O9H4r1=Z,@U#M<U&:-hZeN\-e<+K0<JEt!F5_D2M,+Hji<=[oF2XqSLq!IoV1On#AIEKK<JpR";gsu,C%Z]-
%jM?4BPSQqdD%#bVU#G-"4lVRnX)r4:ib_bL#`R)j,5!e+Z3/3s##a358u&Hs.#!5dHHs?f_DB7WYB)p6W&U7,PYp8t5W\(YFUWH"
%e.PLIfsKLp-X^0Z/P_VoZXc;"IPuRL31@muk=M?s2;\]j:JHMM&KR<YQ#>s@Z6A&VYta:KIEB,m"55"a[Sq8+ibgXFmVfikh*f)+
%0\X!-[p,8Bqj[Zj"58)n2cV:,(@N3<)]49qD?uc@H_B3C9eZfr%eL4.\GSTr:6b)ooBII>V7;/RMl,QJM`=FY!i^"J/FplJ\W4HM
%g5)cHh\;)k5F'V"O49<QdE5os5/g6K*FIPR-;dPci)"8B;SE-_c(A;i<%&3`&2je,Vu7?kHbD=VnROXYT+MTQPYJ2c`+aQ,Zob<T
%2MtB6$pTi2kIp&#Q8q[>LW*KbFno]4j'M<SZu,XO?tbbi8+;uM@0]BLUt,,_Y%suu*2#BIpNPM-rSK%Q7n$0?d>rKu3T/=.Uj-UG
%5<`f[b>rKek0!kKXT-VG21D3HXFE+8`Xh]QlQ;.]WZ6^;]Y3sto>e<<W2ptM0!8GDFuE-eiGX&j)QFZO5T1eXH*(",<:TFm7--#D
%,,V5pI3@B>pSs^1m7F)AoDAKGi%<oCH_c(M,/ec$+`6r/%ObFRVlDbYPQn$*]1W6h[U!Q_JIisdVhN2-b*u)-VUA3Ems)o1<SFE9
%l+Pk3:[5YYhiah)5Y-lu:/(ThJZ#AS)Or;#FP1S+m=h;Y*rkRdqgh+[0;@RN[ffV0d=Q%OBXNHrl%4(TquC.RF\hjB,8X"</Wf*?
%@LHmVk?_l-CBYOK=/Uq9a'oVr(&8noW-(dP3a-n-261jF]s"Yr0=t:GhtC5;5/I7\b5&Kto#ZR0kKE\0fCCMPgTQt8D6N'u,qWF#
%Ho^*X>/"@Ld`#"Ko51\m"(8j@S8Wa+h_/-sihsuq[b()dIIf&PI+rH4"=`gLja<Qb`3jt#a5cLII+o==2pXWO=jABfJ<m0Rjd8aH
%B!UL+43(6O:V@BtG?Vq"%:r_cF5!4U"Y@Z9mbj,:XdhMgFg$=[pcpSZ[uGTp9$IBcb4$0sZtS]fUlknW'M,X/e$%;m.EWrS<XIY5
%jKW!6bm5%uHq<q$BR^OoWFgF4r>R7*1IN8\A%3"5aNEqHJZc,.h`<-Or*\X8K\mO.g9GS)fC'jtmk'rNQ)Le$[omu'pF"sR%sC^4
%C5%m]U7,H+LRXD-`!G>almMBtA5_@%U#.@KY>"*'r"A+Eb?\\'Hfp_D\P]Ttm]2I%==E@djq6rG)tj+A\X0U2BGF#`]=h$W\'Hjo
%V'Wdb2\1>JSr[1DNZon@gb2N9nUAdR`fbMYl?Si!*%9=J='Sg,XF].JBN#?O"+"h+1dD>R8HOl6$]IG/=[WF8^\tT]*+4]H(jb(c
%Zt89HIX=Df@PC6aVJs7BEUHb(f\Kk`UR/p/e8+,eE[cNFlF8jPO^;m"M0244OYX4X)0]WJmus'acV(%)$77Y$)D\Ue*(?oLO3r-]
%+H)p]8p\Zo]1R0g:2G?k$:ij5beFCOZAP2+&oD:?l<Zm5F^)c7M60ZF<olEBqZhm5O/fFtHjA3GL&,Br/`+2.<@ZI@ea3YZB'^@E
%XP5Id2p\NDrcqGujGR:9_RK>n_h-)S<6F<)q1G\Wlk1#T",MWTYd!FCQh>Cf>I#WZ=P:C9*=UIq;j@EgfP[#ifL8\<-VqkY<2[g?
%Ea@3O*LX,4..,g[P,Q3_&qUD$2D9Q^/%m^n4s%"UXcX7\eJNU&$.R7&OK:!+jV6><_K)Y;IP3dbaDZHK4)M17s'A[Yqf4b-NE#en
%Jn.?\,Tdq*YdqK'%qL,6T4bLN[%qd6T[%6`K\TT8[o`36Ha043Rn0s!(3eN?UsU.EB(T\5g)dq)i&$__:$F1US$fJ?QS6'#HK2\p
%5X->6b(1,;.=Fj0&fAOa%J>Y&k`,->4*j%0@e>E4T%iPh^)Xh;F`>'c@66="m&CQlocM*R+]pEHh0]#EWr-%+T!^&-]kVPSe;u<O
%.ZN7u8H2juR,P`i[HY.F^69dRA_$:2W;$G=WrYftWL-[(r_ZP@!4dp]bK-e;iIr!@%&7.b)Ur7o1+qZ%Q.8P*e<;&;;;r72V'a51
%9Dir\"R\r\KXCPI0rr6P.W:<:m]?#Dk5s5r#I4Chi+L!'MliFD]eWCMh]QHmJ$q+.nMCT=dsZ.GhH)]HYqci``oB-1oCrF0c/QB3
%,f=N%b`h,umN1S5\[fI58f']pV62YQ[=>_mFFIG*Shse^mlD'1b.M(0GG]c$1/G>:bMp2'Y0<)\=Vg1KnQZ>8e9s^C5Lan(SLt4V
%eA@_pZu8OL'SK2MQMT@.XC1Y"&mTbH[EXG#Drt;PY#Lu7aSo2'3k^q(Tj#@JH_BgV-sNN<.!aEkh64ui&j?f-)F3%A`S0rmh8lcX
%IFrc?2i.@9^"q$6[CSJ9B0k'L:4$P<83#=IV*[Djesl4$VE1N`mi+snoXA(Jb`CcY"rEUJBZE#7$(IIfTd9U*\t(4^rOuc@_gaP.
%>ILq>KFM*MgLB%KH,1-'9t+>KidlQ3"XAd!d83Q7II?**Q(^7M?f+m0MsIt>JV@IP7C%-p<$_A=nJt'(E0P8iP(e$ohbk^-#Prb/
%/0&5r865,PleQ,_G=krQb4:no"TP#A9WS-U:tUj'#[oEoeD;hpjiQ%VL\Y#/neB^<qht$r[_OL#s%>e+Rmd-TMXh=+cgN:)>D^Y-
%e,")^Sg;F0YKP\8-kF.''TS#Xop*,9\DQ]Jl&D2@ftki1-%>-.PO-5#]f%?q5&`?SHcEMV*A4,PE3ug(1`&Q,d%R""m66rrC["Z5
%Lsn$'4]U!#Qecfh[%FLG&3T2ieN8/?dp:S[(qrMdY*,3Y=9ng7U@Hqc:UT^f7c0hNF5`%qCT\DUB+loCPg6\>Je.c0i%pEs-BTh^
%>,?>`fh85AXtkCl6?BS7:'PGXEk;TS8W1Ho'Yq\p:[0U>$f+59@XaRYqq7^W>#cQO(.%VSXG3+.<\&^4ht@Dj^.Xc2.4`#GV::G%
%i1%f-25kHJMuE4,YR%9,"`Ftl]7MLc]7Y%b?G5i*<emQ)(&?V,mbCQ;W4#fMU/pUsd-Emto4R`*^PA_("`TZB`I;p0V$[rf0ij*-
%?`htAfN-XLF0?'2Hi9196iFF_T#-Db2qh,]HF(Fa@,ETpo:Hfb*`6AIjebnN+aqZOKQb-*[prY-6IS@+V@l_0;O9I)2lG^DG2$kQ
%$#s]5id2/OduEGd\rfJ'"8RZC:+rF?l9t`>XmboY5aW>0S.okDhjVsc\_$-r)9-,]>!B&a^0Y_F6e4t8H-GF"UtVDsM4S@D6$V.A
%`:Vja0"eC#=\gs*RR(#@c)8ic1C,X;i@u%Kc*h?RGe:i<3A#&ube?Z<>NV^qE;nq4aV-aB`[&a.?1+2#/F6<(U=d!SVSYMC971<N
%IpZWV;LIgIs17rC/aSZD\#AR*SZR<A@@pFuam.Y[=]TsJYYV6u%he9!$i<+.mbY.O:W\re1%]Z(p+9:8\>jI!"hq+C:[+B>/o87q
%YYWBQk1/2[(A=`!idPfST2J[]i2qEC@@r_),K+E4[BNG@KiR.7T.fPpVe<oI^0`tY)tf')55C?0+uJrJKmcR/pe-'Uo@FBIen_dX
%UA1:5I7cm*>1S%L?XY%n@I\OUp*j#7I0\/C)N/qS%CNDNNG)ZOlr0qL'<ANZ.dU*6lJ%,;I_Ds]B`Mkdb-r)Y.96$i<NLSQYYWBD
%<d/OJ?.cV-@""'H-JGpDp*m,,8p9r1$N$'fqKDb-WY@b%s%tr#s&*9t%&Jq&r:_]-PKmm/O8)AY865"#.\,>/(\bL^C5X$2h";R]
%jGL/PH1o.9,sZd7T+YAr@r`^+`=M3=&Nen0LIs&ApA`fme)i'A-!g<C1#kJh%1Nq:V:[#F<C0#g@c)A4W.AOsE+\7UqqGJ-g`n"!
%9;POOUcs"*fsR6s-G2)YA+B&:l*O7/)SuE]C@0WEd`-5<TJ>j$G4b-lISP8R-YVEsBtiga]m@9krY'5#"F[;*jtrOZ>TFcT1$+p5
%0qFEYm&DgHd+<^VWD*"fqE>nO1e&5t@lBgfq;:C1)t*a8rt(.Er3*_Hqi6!X]D:>P<fUr#DZ7\G[V,WT$$5rd0AS^84S42ns)fNs
%`q9;#4B6-_k'ob<Pf]Y(VJlG=m^[QA^[?LDD#QA5D7f8g&"_m.iIUuLLu7P\bjkP*a\>;)[C8R'rVD)_s,Wfcq1Eb[#LDWR)r<P_
%F>rCT*?_QM8=NZVkJT[9j,tEQLP9i\k@FCK-+Irp+LMd^Qe7sfP&MaABtEm3k_Xc08BqU5)fLe0b[GVhp6Qfrbrufkp1QuP9rJed
%2Gri4A>*$\g*AuFj($f2$6Dqdk.Y#<p4E.`5R1'Vj\`TOE&?gLE1l#3[&3.4Gt<?CV2+-*B)CH>)2CM^,DT@WO@It^gZ:sjhfFs6
%(Rje<KWT#o)K(#Ph9c$4mUfPRgeFj]IPZIoVrj&Q^]P?*W$ti(P8H)\ep/XJh(,"n5MF-PKT'W6448&V-ZD'6e_./[g`P3n,3DiR
%'YB-]@\<i#M7GM#+d=^CJbG>t1ICOj;#``Ih2H#k`Ifhd?<IukUeiVLQa-FULPKsn8+caAZEJZ%WVcZ$6B>jZG;q$G*0r:]p"tGs
%EK@h`'8l&[mJGN#T"DB/S+[b[mebVPZtT`5<oY5EWqT`tNAc#Vg\7mICo/+f388X^hnO0i4;2?(5+3U9C(d!/r5XABT+7aGBSVl?
%qu"KrmQKY*S2Au%s"Rf/q9dbZj?)3XKVWl3AT.ne>s-IZ8esUsk<K:(YJ^Kb@lQo$f3G>h;Ld%^E,6f\o\&u:k>(ESO/M/1AkW`S
%%Sh*f+&AM"[DQh4cV/\rX-bnQ+r+-G/)B%D3`YARL)Oe%l##.M2;Bq?,hI*rXg>cV?RJB_Sj<#aWH3r%Wa1G5X6oG6<*dIQZ:rYo
%,uSl"g5sZ@U@]\.OmPYJ/>)1)h&TBA*t-73KsRgiA]h[?-f[?R8#4>sUj9FFp/tC2UfAG1*E"];2a9;HA--]!6k'9c`]J]S/'$;T
%gDut.A+FO3Y+1/Z*C;R+CbERrCde9\W5t2I'-d2=b.7CbTChEfV/).CNc&.7[ru3=hYhNQ?7uHXlgeo71OT+JrLGrgrf8pF7'Hr@
%%F-P0l_Oa@]Pt@WeQukEc_D#Ch!S@SqQ9!WY<I:g.PpOLj@8O.'"Io;okD,*=4OlC\Q]hY3-m.4SU]$cEVk#kcc7=UI^cq=p%$M.
%%n:u44sR2oY.bddhlSclr0SJ7gOAn@]UpS2na149[iJ)PS=dF_m.2hiEq<eqn84306H#bC-=9!l*pmo=i1KH"g?[QMo3RFPlK)NL
%IrC)=s4o^3FI00h=*gj;_dC)=lDkQC_e=GriNAZO/mWe-hET_(q"7Vb/#S("5'_$[e8n,*Fg:\>>u_OHWEu2Z]e[EF$`Cc<\s+Xc
%8Nf93`!saQ<.E4"B"C#m^T*fB>SDn,+A;UskPO\C[AflVO,S#CG&D\VeIH*3DYZfu1K+Eom67Guh#li#e>g1qj]DE9BDhU$a_$;K
%G`';=Tri'4r<*.fHYh6G^#E3C:QLu%E,/N;37=\Em1Baf0ij9k!S^u2&17HQ'*BT4_-Nrr3Xfj$3UQ<**?\F(9FTR<pZC4t`7[8D
%*HASNMODgjc_'QfY"OO[S!LCk3e?1.O2c>&D.,<;IhH,HPJo[OCj+?k7hD.W0MB0n1fSj8?hUkkMr'H%Vd2=ls7a]0X[W*-DO$D4
%91bY\]'b\a^4#Y1*([+J7d.5d<Tcq?;+>eF\[11e'Y7U89MKhSI@iFY;*G'Brf*&TVD9!)Y)i&a9Ns0LDgl[jG!mU'C:8m,`!=Dj
%Hb?tCEM?&@]tD:sjLO)BGW5]ch;nqUW[>od8f]rsFO.3UQ/2&u`g(nA6r`VLC\K**p@uY"@54b0Y'rET8@bQA])E,Kn>=9"gq*Sh
%B;fWt)E6CF2UIX^lj+u\@^KE%618<O6[m>`DVC]86rRsV*ZiZW2f6m4cr2K:_`cn*dro7Vn#GnQhe4_8S,K30mO#L5((@h$Pf2E(
%`oJ@F;13pCM3I'HNjM/LSs$Sk*pgs<*$o`&Ocm5@H<^m(4$p'H91bX1+)tonbZ$$JPA]V=pREubE?pj/a@G#QPMRf9E>hPt?R^iT
%17b!%)VM3rO(nVrZbisQ]gqYG'[6uGN%(-6Ls69P22B\[FA0$XSt"r9CK@rDPQ"(@'i&MP4(,D3Y%d)ACfXZkg-=>nE/+ENkuNKm
%E]$X*JuVlKBQuL^<N?3Z4KN7H,J+s+7AfFdiSf%Yl]L#PZ);A^\D-$*%Nu&Ag4TJFHW@JB]]%iE"Mc7;:t:FB*Zdqfk<[QN3nNt2
%%1e5iq4V\]8(tChLL:AD[G0Z&.20kt)&#$I!k#dtLV#)iG<9V0NdYIO:/lmp%pS3r%1gL'4$58i98Z:Z*f`b;]n9`@Cj7p2^?6Xr
%4=hF.3b)e-6LVDBiV7;G]?+bc2a!To4mnDpn[mTep[AbghXL$-Qo8Bj_o_`h*]PBoI(.!/"XY4&Ilss=8KXVaiQru?P^HQ1f<btt
%a2cRJ);QfPqM'dcZX\kC@b9r`2.=D?nPKX]fO2(=2*C6nk0@k"]:Ma;eMC(?_sV/\Fup[VZPa_A4l#OGs64NYQ>aq$o?^Af`cO;4
%M@,;XGW99,_YlATm#Nol\?Q\Np=\qS5HaI'1d'Q1PbiAk_W`!\Nph.96qW"N]]%h@qT[tU4IdTYma1C^Nc'W9d'SWJ*q!B7T;pl/
%phkj-^ZU.Pg>a)GUuG.tn8Rq^Ka2@;=@X63Y&J#_bWZseNn5Ft=Om0#n8Q%o4Xq_+F$C*E8$9FH3uk$T:=nuS]^U"'?P@&WO)K8&
%EOi'$2*>]=,=eR7&"-DkhsbU_.&5d<p=8YOoI.\+I?98f?Gj[OG49CB:=lLpTSA6^;tYoN&c6Kk38P'EM9S=**Y,$O%4PdSCi01]
%&'&J[h6T+<_o)#uIJ8%/W8Z^^VG.tJ3Gl[O$$=M2BQuL6>3WjB*ff]4aIbJOL54s4FutogQpYP331;60*t;`6@5L(dn+"MhG4:6A
%F^cT_RJW.`7Q!:Jn!WC>;*,<\i(:MjgYl[_SWbp>*0[2AB"KKB].As"'i2m?MH^UOo_M%:Ym>j3;&tg.]DFpAnc!qea2gBc*`gCk
%ZmN!JkIu/pSVeh^^GRsgem8m$[<n[7DJb*=X#GA4lc.9<D=dA:/?tUYZO>)s*`G^m5=Ki#=^AASDOeI&:ifuVQejq'md0Y&C[:.J
%^IXH&*h8a)r%`c]ifB#_b57YY7t:HN(hTCY^9dI`lfDX$RGX?khmi@>Y5e%Vag:19mVR#TrUJhB@!gIC>^!;(hYm*)_Rk.R_P7Y9
%[r2$a&*LD#3qd5uhQ?bTa8NX%5Fqe$(<P[q[P#dPrUDB:piCfXCUcD%kiRR4a6_UCnE40)Y$R\!rScrrp[.e-Bg,m!2*Lutrk4)n
%K8#Z8Zf_4ILC7b^M.O)DnbP\^rn#n?l>ek5GC040RbRhp4M(C\kf`IM54d7<H$6g^-/Mug\$YpD?oQLU,m!K'V<so$^S(a:3]`_"
%o^Z;64Pb7I<o2^/NiS<^A4j5beg`^3rcrNqH/mVWrSeik"ogWt]krhTNa:t+\]kdl[uW_#HN3oJYM2_9a,PEVpZg/Pmq1H#^%GQ#
%=.T;<lFXZbJ@HP*3C@h1Ac;W,5Lm$@G6GPVXY7qK+1aqK\D+'TjLoAb(@Kji!(nMSe7P3]J$/cWHb-raR/;fE^:8RbEO`RUmZ6J+
%?Y?Po0E$9BAj%15FSjL]Ac%X6md'\lT-$7G^2bOD^(FiGn4+?t>)^bkKhi;kPtt^=T@oUfk&meRq6og7jnb`BY8/`RI!c*Id=Q:d
%*[$aCPh>!@q^:.">,e?*EsQZ.orDiU97ChH..i\SF)5opD2DWaTCF2),89ITqORV2mM,\bf\3ZKqWI.:]XGP]I`^AYB\Y+Q@I;R:
%^XqYO>eR.5SbV]3k:*IB52Z;jrRrf<\A$>g@:S85rF)u._ooPiIou"8n9stXpG9DPgZ=>XOP+UEA/FrImS+S_k,IbZn(kVP_gkrU
%l79o@'fa,dI:[ESiWm`#3VVp)^2i0b+EtDL^NmSErOm8E*dN)`T$ERZkTZ,TU40_!:?.H_A57R#D_GA7cJ?nDNB7Yqd+im;lr!-F
%!j\Dc;]R[cM[m>7rQa8eq$YAYn<l(OTAR?WH1:gob3cZfD6.$X3d\&!bN_o+D,'nU't7G%Me;t2qUp9,3GL[4lLT3XcIF'kqHp^m
%D-_V\[!BE,n+X)JQ_(q'XfsG6U9T"6qrRD6a3>p4QCbar"j-2EcI1;s`/64/(<bBu[6(GIMN=(G"aEFf^NkBRFcUV[LA`?/%c?cB
%Xa`>Ki6n#HJc>Ie;?$CV/YE$kV)HfG5?29fV]D9p#k#_gUSkQt_qM"uQem2fOjqgW^O980e(f@Nbo^_cq0_YW9;g3#h/DuUfMK/r
%lacAQPpNj<ai;26hE115%,.o=j7BaaY:o*(:EId>04"T5r#C,35C2A'"5&U#d@Ks^&"fr+/N!(bl^)KOCbh@Uou3u62l?b^FC:0#
%4o9R(eblbOUH!QWh@!9.@_bDFp_GJn_5'oa]O5X*Hm,(@IJfRSQQBH1nW6<)agHi`h:Y+_^L*WUDHpEC]m9JjrGW6tA*`C3h05nQ
%XrY2rrl;8s)oL2@ntB@dP3Ee-=K_G]+4oZN\s5c,rW%BXYg(h(k<JM&&gJfQ"uuIL+E<lB-`:9lMKFo$hK(e=PbB2po_n>)kJ8AI
%T&d7W%l84^\fK+S+T9oEe'EaUAlO]X?S@b<&#0,R!52YV6"_!e`0OX#,*VWiX,EA)S9aYr%J6-JTE"\thP[Z41@a=ge^pEohN=u;
%rF3KuQVYrfJ8VRk7iTrkffgU]%A!"c>=)G[S.SKgR@M\i@>#n`]!QYJlo.?8h,9WW]KLH#rCRt*JH626[kO'/^=q-9La@5?4Z,/X
%dn4s%e%,V<Y:r%fo4aY!GWT$IIkK$<1@$m\TCZ]6St8+<nE&3R`MF5lB,C"6E?)aMRpB:(kOG0gZ_q\'^+qdb]mXYheElK7O;K'_
%(&$ZsCYZLLD?9YqpTqU+I/QPM/t)&X?eTmUl-o4T+%rf(+.g">AEEfY^ZX1N4q#tu$I8UTI.kGRTSa:FMP5siM5:`4IQQ(]:F?)+
%lGrSXg[r>&5F0&ifm^7+lI;)o/%=B-h,q5&k)QSBFm%rD,,bC0I;r^j^&.Eeg@k6NVajn00PbTF?.e&4n#ZJ1r;4mjG'30]/cG&e
%gmc"/>Sd6[RteT=L)!/8'"lI:U_H2!7rdQ>Y2Ed^h_>",5M*VU]QJSs`VQ%tYG_?ko/-Hq8)!C`h61J>q=`@\jYP4I]NQ90ID*>j
%f=A)'7W&(+]5C]YB@kicec-VdSU^.ojJ=$M23Z>/f,'frjshJ=Y81;5fNrB1'98[@\@[.bdalHsTB>;(>e4tQUL*r)ZF$o\oukCJ
%lYE-c7IdM=;S'8s`6n#P_Y$#GE*$)Sm.7_WD)crUniaa,qMlsfkC4SGSSIE.%R'(Aa";]J\qtcVo%!2=knhX85MdmV`1PT.k)[L?
%),3_%:S'OlG4sFHmi.q!)c3uHdgqAkTVSOB4aUpmR4.OGMl1/'S&L`#o,g11WVq/+3F5d3rW8s>XCi!0$kMWoLFf[%CHj*Pf'Aa=
%rbuZKiUq7nf3eKf5C;X;\Fj:iCVP@.F*Mf0,H"8Ih30K/k]WH@[=QgVes;NgJ*r,FR/3V&?$2:'1LYWTCi-1f2sHm.cQ&=p:I*p-
%FAC$4Ve>=3K_u&lb`EgN0=Ee;JrcS/ftOnAWWgjaqJ..'DAQ(g=Fe;%`\+p;@\*C=E(h2dj:4Fa^9_S)lVKL^J@9cDTF>OY:N!>*
%qQ?,chVPfR^33r$?X#P`mIZ7CVsD*(XBZ(8D_D'4s8/3WgFqF=nt4gP4N=DZo$[68@i&M02##SM;1H<X'V>.!rqraR"1S6US@EP/
%nrSj5e4!U$3aVtIdM*/]2(@nNkg)m0+.n!a\c;0Hp6i%irJB)iq]YsKEd*."F(o^e`8K(mGCP"uh=$lOTANtV6>S?On`m0g<DWJU
%A&h-Kq!jk<K6*\1=FL!m1)]-8c!6'AMQ[BOj:=I1CP0IV7mu9BkiFVP52DdhX')a\<N)),*)*/u5c?`l9DSN6GT0R$Nje8p<E&>]
%U`7UBc2OQ]6PZ7(c;p!F6J3Lf(#pSIM1hBsN>U!h7t"PPqI$C:$ABKIZJ-tEAWt^H:VXO7TP8c?rp]ZS9ttF<N1#jPE%TOSjgq"p
%41sm`)0#h8SZs.t$fh,/qShh@M3pk:VZ31"8;uTm:&a>/Z\uTD&kBLF6&b$a`q%Q]$eJI_p]gn157d515LoVpj58E_Y8r$-e3Cih
%`fL6mSJ.+BWHHo<g'a$Q9(KTd:WqG`^]&Y(p#;k_?_=M2iea9pgibf\r=ALh*N\["2ed!sm@Ie'6u9RZ.q&baYi02Mh[l&[r4:O.
%*b@[jkP*;-5ILd<B'o0NF.\9,fH4$4pJd:jDq_QLGBurLY_9nLS*g&d?Hkd=pgc?c'_Y,effg37+\b#uVX]8snX/I1mIQL#U1og_
%oG!X.$;BK,[a.Ud8n%1[_7fT=)me+VIcWLaXkbig!oBGQGWN;r]C=LUc^oIUmMc(M@eS<,^L+e;G8"k\1U%&"!]<(>qQC)UR7heS
%c7WEr:Cc,]=FC=-B;cmuo'iLsY!qBTHj'>nl$GUG"0/^)eYMqPd29:`X@Z25CE>a_.2p#'N4+ptIqm0orXb^hBd:R`6WS6C#Y$m,
%%fY]&i\RGP<7CUi/[p)mG@F@CX#5*4TD#Xqhm_5+?Z;'/?Wg0Sr/Rm31J3dlaSY4ER1jYB+(q4j:WdcEChbrh_V("/;%=Ih]_Q=b
%MQK(IokX4fI'L)GjgI$Rr`I7HKDs&hBD7JE6d3I4*4.c/gd.P=([dlB^2j7ih_-@?nG'3[=0qPNR8[QgWg;+>EULo_G"):noiIbL
%T3Pb!]_V:)pRM8X;&7`4cCTA[ibCE%%#-P.s/FJN_X0R7qE*J#s30a!d<"rt5C316_8\]dqOOkVJ+E4>(&3P[^W=e%nEKPlKAZU5
%Va$X-*9QKuWW1S(Kd.nsDjU7#RR_nTnP5:2c5Phl$ql*=^@j"Hj@Fq^/AZ/t@3q\.d-eqm1XfPfGONtl+uI%thYe5]f!EsM[Cd5j
%D>!lIf1qUI7t63L2p)u@ru<*?pRBo%3n!9_Vrh/q%1J^hpZ+ut?loYYCYKm"_*@1QOcTBXlbd5bX3]KSm`>Gh6&PAhU[9=EHi;J$
%1]QQGA/)P]25`+BI'8&/o*iVnT$4E7Ik2`Ace%BrG<7W0XI:(me`K=KQQMdRADEh""qm6[Dh$Nppo&iN$iN9\j_h7*;ISm(5!QQ6
%H2`@:T(MnFc1TBEna*`]9+p!oIIYFcH9FL:]fC91\_d8%>t1-rTSH?rDe7CHcf2"3ZCC:FZfC.rER1\-Zk=>%W/H@JbdXkgbI4_f
%J"E3Z?1u)d[@;^2I-OZZk0?8u$#;coFdm52n*\*^B=I.i%!CMieaC>XRp_TObg#6DfXu0=Qq;AP;^O'de_0Aqm+dBT9t6k"rQJ@$
%ir&J\$!1FArqQAAn=,@I]-;mWFq\,@[m"A60Y_aS'AhTWYo>HgW)aCr\Tr[;1d[0@UPk8H%)=8FD@C6bFFZr%X-6Sig!@o.B^t2<
%#pte6^rS7AR(9DS8Fc)iV"_8.&>6k8PK<K1GRSpMI9JZ;C(9.!fPIE(A$1`ZjdqOJjMQr7``s<C-Q?Q/J1ba-PM")N-_?lmfE3_:
%(9"brHL<g`G7qg*g#D/@OnP'W$`?4;/Rt:jhTZg!VoN_4;S=eD'mbmD8;it4G+qlcZ#$X5:N^79hOE5*mq_s6q%a.aqYc=pZ;4fn
%^pNoo0Q#%Fk!r:bN+nLDc2;IH[KigU0l=YD[/JhZq-Bt-+4J5jdD<2(mqp(Oq%hHQ\WGW$mJ.<jNOerX'/8\('5Pq_j8mKNQi-q[
%%Pd5H&@%ENDXKOlp^"mb@h^)VC(`m-H9ZWRj<V5A$J&Y6_aNkPI[N$.A6XP%5qoumWe5"3s*=-<H4"l=;`IXWbauC'Iu76B,kT\V
%a=Dn+KY7t@W1C\h)jUVB%dM5D6CH[mp>n=*_626*Sp8@a]_M7:kE.B_be0*=Q#j+2e-)m(F.@l>m!C!t?9'GQa^=n*;nSnN3S=r7
%*TX3^2j^O2o=UR'FPb9mWP23tk2oF*+&8GEJ'aNgSj$A-=N5"-hopob)s>C_l\!InSQs/*)lijF.!(7ZT":Q.]Y)#j+-D5^QeeiP
%?=.NXQM0ga2Sh;;Eo,O3>7*p85hH"YYAWLPk-(!S\@oJ(7o!X?nFkDO<[0kl&lIt5D[cCimKZ2\]W4;T2#ZSXrqT[9--AK1L?,!K
%)pIJmi[7h'2!HfsqFo#]]J\na7@`%W3WI^rLTl6niofH;do"rsHsnmod>#h>PVOOAjP?Y0j2$Ycmi`dONd^'+\^RT0&!!9-^%rmY
%s1WN'jm+/LHnlM1SV56Wd!5QWj-n_JhmSrQh*ZXtEN1)6-;h&LC$fj,8ielqG0S3;Rt!Q]"?c&I4jFi(H8ZS3g+-uG+bVn'Q2f"i
%qrYTTH]q0AT,nD+>r8*WF+Sn7_,od[YK^RXkON^YD43MV2`1F7A4W$DhRf52g=cP`fF&5@Y8">!e&A_kc*PGd^]/W>_>;hXmdD1i
%QHP?XjFU%qT3P!dCU6%U7ESu`Q8i07B"i:`rjqb"g4K7QRJF&\Q=2(,ZoaiJoZNNGCOc<Yo=c(1+1mg(Ntm&:00Bi44*-@Zp@uZm
%O)raGUg@DS^3-\r[[SHQ<+6)&kCOaa,,dodO3Rnl`'hsGCe!Q=*b$=lR"e)nK'jiqo\9CirlDi@oO3iUMDNX:EM/N)1J;qAJ)8nn
%[JfXoa0.:@NQrO>f@%fAXWMq=pMG>*C[:uNJ,`^Lp@e6IXfoKO:<tJngfqI<[IJ$:Dnj!?RQ6W8SR]Y*`CqI2;<cXjl.I+(PC;i%
%FSXCNUNb%$Y5P2gS0&5jR($/BEF((^QA+q&c:ZC3W=L(8+Ne+H]C>^i4_.!`bq?"8#'Sda`N2,=l=p%ao^(T'ol'A_<UU_"!KAX_
%T0N'^jja$of9WV<TBD[oB-.T6^HH]M05Wq'Wn*cE5InOXDWT[.bSG)5Tm#f2UTWFeM]1E#ah44YEXR-aE("Q1Mk0)$BsP2'S#)%0
%b`ua7fO"RC_>TiC^<]s:_^X=t.D->Inq`.W>R.5iXRarnf6jP=Ip+\4Y.Qj8fk\I.?Ms`:#VMK7jR!I)a!XLLYG3K+H>?KnE2#c5
%Yupups#dt;<A.+;]DI5!XSh\/cRgT$;3Tk?j$LJ`GG[IJ;sN]7DMa6g`J@HnJ(AWSf=U,m:-Hs($G/Lcrp]pB?_+7NrigY6lA*Yt
%DU.El\+)tj[;iNWCZG!/6*6\sZWh5*o(UV3)/unhAN,kgX1/d#/@5g[HT:nl`Q?lXXm#D7bEW]VSbM8W95m2Z)UO=q8Brf]PIGH^
%M9Ku0nW.2PcNdX,%,l?<T@p%[pHHFGH=(-[C*a9sW)#<TalmmCbZ+M?<dbq+Y7f+Nlfs%VCr^<S@D&$_J$$8FR`k$?-arHH?%$p7
%[Kn1?FY.ZC\eRCm^H.hRqoP`$a;5l2qW=(L'RZtWCu.9Vb$s(oa%F,"\2mE84k#hT]m4>;VlPQtlcl:YJ%]nc#+mOT#^7(Rk!3?5
%qWHl_H[^:<g'TU-?L!Q,d?0MT]sF7O?I%8+,"B8[n`.qn$0+[G5Z$N9lO.n'Ite-=?]SF%r,'H??S@\YXI&,6Y>&=%HIkbYDu"kR
%C4?-KG0J&-HFSEErqr2ZE:Ju.l`Y7).0>2drp",qf.J_,YIt3E(k<S][\hE6>)jC/`Ed^]jrPmWXT(bKguB@_GN7(\n;fSKP\XYI
%\%u!6H^hch^E45XZMEM4YhCEO86eWoFcdS<QHOaGH[Z+N^U\HJRqkY%eRC`jd+jU>NRUWm(K]ae9VBl_s-*HRjP(g+cfNgrR7san
%:9d^?,4<n"a1hgV)YN-idgKD6K]IYVf7l]f,IqDM#p;11&"ruPG`W*5o5VL>apE\^Ir:rRqK`oHLq7%Qf9][gAk4m./Pc+#f+C8(
%>Z3'#1)D>($6eq&?ca^@H1dE;:h,gjGuYo:Q0<.PYM_.GZFCCJg<K'DD,$]q$DV`:WJu"XB%,2E4eq&nU+C=)L1bV@>8..gTm0&I
%]1%FN*J.pG]Nb#9rh#3`FM(iM#T%qR"OH:V[qNm`33[%;8rq)C4eq&nU9-B?J=b0YaA?F2"+*MX]1#rImf>SHHb*i#a"odU=qhMG
%JN]dgh4b.\r1<+5"NK9dZ0p9I\t1s#;39'jnViJM@'k9(+.gmMDUI#uHU,p@[-lUqH:Gre77TA_p>m/4mhY<$B+Nu>*Uac7ghF3P
%B666H/FM0nHUc&f7<c_XBg&6O2g;0HG+YARnSV4D[);Bl:*'[[+OB7r\*+Oog$tZ]akX3-p5G$0JeP\--h3/`l(1$XcffV\fIM\k
%@aF7_\*3gYoE`e,Gdh?E%3=4[3o2HWD4Lq+N/i+?B&ip-4eq&nU;b/l@*e%][j\/Km-YbiJTJ=M.[tnYo$;%W]sAh.br=N;AFhm@
%oaHn$-4O@8>bX0YM?V/[;<S_/Xl!HqAan#.mb=YcFRb-h03$,kS:d4?V^p3N+*>u8HIZ>[\U/G+f,aj_>4)"^deFtUNH_2UYAM=A
%WZ*t5FS+bLKa28!_taQ*k":$kDD%7]IX5q@fHd)sVR4sW73#qrs81WM>+kUh[rUr&F$S&AK3Y\UkuD^FTdj'V'Pj<_R/GS)B.p*Q
%_km1R=8=N@*d5"_^'"M)=&5/;jO4,[VrlOm%4U.M?N%U-#Ceo:pd;1/gU49"54e42qLe)n6[PkZrFg@slE\LOl[OZ4,25>3?`e4S
%(JCSsM*5_t\Eq$oo??C4ei'Stq1TPZ`pngk<edMnC\@[bosN+q]Nr'ps7qLED\e\mPC8aDgZJt8l[+.XRr)VDZ!)Y=HO1E[a2Q_p
%8]Qgoq9<,J-Y4O'f:#8C]3'%8<-GN/]!PTu%D@Q%R;0Q!86"nST5#sG[Dcbd>[k>a(DjVm2V/g:a+D@^a]Vf'qXp]DVQ.%\Mnc98
%pndckU2pl:#"'Yrf1I=Nh(tWZWfVi]>[P^p_Y<63<QVO30CAq*`Fj1Y<qhOI?>tP8m<j3>O$R(qdBqJ9RU&TTc62/Gls_.oL<jDZ
%j%YfPV.$,>]Hq3e4Q?cRUF;i<\*'eb?f-!3Sco%V5kh^9rVk*'pfA9@hLGI7Z2$UggIM7>BB9(,rL]\O1GR,kn+hHJ`WNgBk/b="
%]Jfdas-oY6J90]"d`V9e[?#6UIJie]F8LH!:,D8,NK"0Ef4Ie(be<jklX,o9cHOM[][SHXKmoV+O6\=?p=5:TWL4M!kOF$Bq:BQa
%Im(./*KXLtT0Y6PCRW;Z/#O:QIlQmjTZI\&$BD$_"u\<S7/U_mo6TQh-3fPHdEqoGIpJhar[-9Ic"JtUA*2GP2=p5ArHS(X^D<#U
%K1<D>7;MiE`"Zju&6(aO#MR0Mr%l6m*b_<r#7dCC[kn-9TJ=R_JVHAIJt%$9,@n:oIc-YUDLk8?E)GkfcF7m(")F-ll--3FhKBZ3
%JJ^22L?>4.kOiBPn5idiSdpf_JF2,VpVD!CodcRBft"";k[1r2c7iXDoAf)aGIQH.gALgHo@Ei`dY"_FiN9lhC]!/DpG;a=`lERI
%h>=GPII$Oi/"9o'IGW\l\bTeeUXtM<#nps;mVZljT';;aqXgPDms]]+YGkg!=cmFf1NPLiD1C7:4F0nrG?2IqJ)/hms$)mDam\M_
%V2O6Fm2UWKo=)3$rp/UjK7(S&G?<Z!r:]s\Y?eT=oCh!Y^V@LX+67j8hmYC7=24agnaP)4++J^or-[]%k.C$*YJ853#RRT?]53s1
%n*]>MO2$195-=SL:75(g+Ujh'GC,21gt)1_"7C\"_!^Z(ETMQ(a#J6NNt8b)1:c3o_3M-`mm$_2i+MBWp.t'cs2t)]llZSC2n(`\
%r7pDs4pN:'F7M7G,3Cs:1ID!](s-52`/@ZK\nNA$;$UM?2HaKU0m)=m9Z@eZdF`QV"J\1eciDLt\r!Zs1s$/hNco$"#:OP.mD'Br
%gZV"q-YhE*#l.EQ'1a'i8S7'_$X9`KYb?b[biBe!lp)AN,>b3#[9mW64InrR=eY6D2gXD*U%L44*>u,]X3;[XbZ_Wh=GCUIh[oAk
%QE9_/QqqP7J2Mse4CDcoHt[i1]S3Yr"koSi#B"7'Vj!MtT1\$LoJ:JA2q'k[!aP,f8--p52?RI*@G;rgf)n\+FMHACHAGD6FlPE,
%:b4OZs5rc(C6W"<&%mEn7rR\tn+t-28,i0HYlF7*,QA*,F7V2K+#,=3^["$c/)o7-]:s/8lPkBQ&2.Mb9ti/14@BhJ,(pp$"!NR,
%-I['2UHJ_P+PEV"A=:QN3.UAIJ(WG*;CV6nD1Q7.ZM4bS=_1tb$+bN^[$s#p]Ga>&Bc:(21m>`4TeE;$0mcRcam.i!i-:`UG0F+B
%6/t>t4`""P:^"c08Ab&R%KR`*3?objiNuaJrrUOaLC)!\#`TI)UAMr4)X2&E).h2@YJh?[/35&nOpr;]idMQ.mQR=R#>D)b!2g\>
%X*JAGLDOoJHmEDfcaX-:,aKfbAmF;Grpk3OoH%Bs!%'(_j*=9I0Q.kd_'FjI4\SNB=9WOeM>;m7Bg=3/#>$?:FSN.POuRm,`uqlA
%dL8$gNh9i\U2N-P6.:fcbtbbf`.eSDMhRNh<6k26[K:"d'u.?kf:1,-[KF`p=P`("[20UfOg^Qp<b^EPaCHEWapu'=Zqh1!5oW=M
%mr5fU&uQWpQ3KljNTgH),TFT(6JDFV%@p&mV5QIl$S6A?,IDDNCutcS@7(t.)#@1P0R:F(DYn*[^$V1K2aPq&q'dfO0klRKi_Q9(
%T+(0/HP]FY7.]fb6pf?eaEGl-;`E>Fm8O&D#&&q>lAjR!G#,dR02p^EL>,"5\7FFAJY@<G1q*Of)_11;4PSP^G1<(p[Q9(d3lQYK
%WCo.ao\ob.mD@U0TQt3_K&+\G:XTbsa3G=bodRKO_jW26/#;!042B^u[W%sOWek;"FTC<9KP3g!lj)Uh&JGmGP_aMb8A*RX+$)ZT
%RgT>[FQbptEiC6Pn15@b!GqmTcBPmB-[j]a'%Jpqi#:L]I,jF3Q77_iOBqWr>0pKFDZS#1BH8?*q#81B)//K+)1(#[?l00m!Y.S-
%f5*"MQGJ"KfE$W_=rEXOdkqOZY*t_L[HC\D19l0#SVOgj<JMTGCHZYL46[^9h:"#EE1B_pI',m:@B;0>O8pU1bj^%;*FR_bC`%6>
%cGOdk*<+#]=CFV'E3]7$2ftiI(cE)I@Y)o`<>MM>)7>B6?7td0/jPg@/]!g9q@C&n2.g5j`n(unVm*bUNqGDjP+C.1DW3afF!NN(
%/>MegDrDI:%_%J:%mi+%P]iGiI0W7-,B5bOQPN7#@i]H_er_3pDfcLc20$Fq>Vh>gg6"50f<+YG-,E)cVL#aipo=Xq-$tutN"0*V
%+AH)I%m*M@K*<"$+%g?g:k^Id'c!+65\bpqZ2_%`"O@Hs+>>7J_1gABaoINAXPE19@1ioI,?#^f_m$)m!><BhcncQ5Kj0/8,uWJg
%[u+`CP5Q@l:446V0MRg/4)gXa<fQ,C'2CEr:\ZaY7[o>X-@@A2.[TuB'B;$u=I>\ClnS\h_+<TiAR&p-7,UUtk(b*"nZ]CF-F$rO
%PG48V5$)-`"2rVqq@?(?Hd9VPn\lsr`@S@rAH_j28?(i<gu::D>tcJ5>_ojVS5Bm++pm*:.mY2#X0!e5\=I,([absh!tjC5JNQXf
%+1f?P\^&*7D\?F=m]\:IVZaEs5'QG3X'"))Y/>55\b3LS]9)HuFiiHJ42<Im*jKY$dOpA%q(C5-OKA\%1q'kJM)6F9S#e^![n.n6
%_<>CV2I[S<_1n0Zj/f26*AH_;7'lC=p/Bdiep18g/BPg+h%LE4]BQb8jQm:A>gR-2'.h98_).Z'+V.i:h7`*i$`E??Xc#)[C)+7i
%b8,#<H*&92(`Z"YT_>2*C+C-F7H"q>qP+M9M+*he"ht,Zergk^fcin\-/UP-?o]0oB8+s4g_bVV@8Vai]DZ!*F`4)[\2nqi4Y+XY
%70MUA"7a=S&2bbn2uAYpU<b?$Ar,/pL=Ht^aN>-KN[>VU-:l==FD#6Zp8=9]mMmg@F1RX^a-[$+%qW6O61rIV%>6tbVL`)J(NE6'
%>nKCl9LdMV0Nh3*51CkSr0&<4HO0=IAE<^02j1%D:R]d.&a8G#8;GbP%3J.'>VI(Xi'rnR%GNYm_%!ZVpG8W%M1,qfeYKt?!tM)<
%0ipXZ%5V1ms%-`CU<9:MbeSrFZ9Ui0,1<*?AdO<"??Vu>hTol*B8S,gT96)#%+1^2%>3k?ijTB*0=kU"&L`KJOZ-@.#9,<-&Y^,:
%1<=$@$!*ZFd/fGSWJ!R"HppRmUQA):Lroo.LV$&S\]=6o@a><rYR<64>?GJ\(2BtJ%FIRMKOJ'4De$\7dQTUpI$_9:-ftM->TA7'
%8T^?d?VEj!GX+<na@7UP8lbHrm2]I8=t"f&7@>AtDm(8gK*Q2+@?t$*Z="WCL2MC,30ZkoPsdf0CtR0)*/<NSbqQ_M@_Aq</e,Q:
%9eg,[m$P!hfK5A@UPp4<1pP[<(l;j*5*Lk;"656*53RA]?lKpN3V.a[=!ZL5[`N8$YF4C4+Ql#P"@n<'-K3YI<-hD18:9ugD\#E@
%OgR9u/g06(hDCqa3$]'Q;Hnf2h./5k@[fsMV7XTb$7r1XX9CA-nG2)E-c<AGgbKI;Bd!rUfGP-JWg:,L#`"3K=n];2!^\VX/.n[S
%*=qYfZF/@A-fRiC;QV([07)h]9\",`$JS;gT>S&-WR=EjMpe.Pr%?f-de0jr"+):8$<n6!$rJ4W`asP9?3?=_9Sbtk@-YDL&I_uX
%6i8img<un`+AB<PZkn,7kSd[1h?-6W"l(o<Z,W2/lWu0_*"D?md4FKUQEKeFU>SKHb&koP185Z]bp02iOJ.4[%u%(tL,FXkoW(Q(
%hrt/.1V=V>U\Kjfe;ltt+uFiRhUHI"[m@Y0JeYk2d0=g5&s:&^'t$$\<YP=FLq9!PCV!mbHuYLcp9)%KE!R_E'$Y=bPT6/uEKWb(
%iC?I/`a&diPD/$,0P]$SK]kJ7"R/K^+=o&[*:S^Hh@)#='J;brTtcFF>9SKjQmtNA5ToNa@[]+21)_2L:c85/iC'>%StR/r8IPq1
%ijdr#'+7La%Rk?-=KA4Q(EEal/dWJi<^LR*7/)X8-%Nq7@MFSu*,*Y7@4<Oo2Er)g0[l4R=kF'7N(;C6g89:hcmA5u7?N["d:P`r
%m;QI(#r&'7OIedS6mB(o37()T2U=0k(ek<d%Ua^SOWC0%_!"0M88W%B0gUcPO@b/p)A!L0P*AT+1.u-Z8QqPT0_)o[3+rSiC!79U
%.kcM^(q.m"aMGCDJl^']M%gRI+tR]m1n`g3eIL^CT/)(a:-^iuIH!'aQ?Jp3`^i-.6LG_!()X?-8=tXSN490+W:FhV!9&L@FI#ZC
%V>JS484,410n3;PSs>%eh6ku`>`.rA5np&9XDnke$DHm;$J8@imj,1t/XAF2]tEcc/j&Be):B^u@.T&-(^df#%]7F0.7P;&eE*m_
%7Fr0B1N6'C1soi!WY6c=9MAJTSXe)q.PXEr<G^<0#*=Je6J%OBM/;(#!60$hO`bN`otV<8YE95r`25.QW[;Wl3XZOd0g4eg-D:tr
%f!Fm$fl[on'!(lu7EOf@F,:bUNN\l?>T4()ZRG64IaeOac>`\h?q)Oo'PI`3Ls*!(D+2I!rDU3U?AiboYc(ZB(FC>hWQ1G(_IZ+V
%,S>e#N.%[YMh5q1f%Cu?M0s$93=7]q374':&s.>O6(seZ49c*u%T4!STb<P,EQA=r9,\X]W\8tb>8h5\.%=?*,2J'8_W+gEP%<\1
%1gif[7%t=^Ki]Q1!7iI$5t8AW(a&"nYVq*$KLT4B7)D[76%Hos%I:c:41l_g_LuGka:/oJN4a$o7-a)0M0T,k`UbE2`\QEp=;7eJ
%?u4?n.('PP!:(UdE,bc#d=`3],p9;r%[-nO)TRLD^,]Q)QmAUuP/IdRb[u`->NQT)1mjn(2^--fiIe]R>q:CA6P22KMb3i(OTe&T
%j?/b!j?>kO,^GT0&8CA4:P6J`a2I1?g#Pd[imIk_JZbru9t1Q^</:a[XsaU<:g"j5h1i24HmXD$Z%eCS-Gp[$EA,1F:#CPu8O?sr
%:]Thj,SF95S<AI,$>s@XnJDW$OZZ+m"S'9ng!Xa@78pV5$3aWQ6,3_)<'laV9b_j`KX@`5&`=TcHsfS0V*k5k1D6f@ZN?;1[::7c
%@Fd!57nD$6W1+.bEHmg\)i.q%I#RPdA$ZK6M2^1)opo^N!:lqV.2N;WO6D85=p:c)F;bOF6WJd'6]no!9o5*#QToBHRNP^IKTQ=1
%)qGC1kpeQEe`%iVo*4)MEbB)LL,E`0Gp263:RWm(FID''cYp]cc0hBY(8hbZ9scJWU'b)l3:87L2R$hXOK@+]=Th3G_V5.?QA$Sd
%Vhi>spdJaWYiEP"CS9:u:u$YEj.O@12LUKBG3BT8b-tB$J/)4g-=*Ah+b:k_/&9k-n]lZf1Q5./3#5m2;cXE@X:$UXFIH@Q0Z#=S
%<eJ`62(.,b1HRZR#c=9M<*j;[KIo593Xd1G)TF7m"))Q2?EqX<N7=pT"C'Yk<fu1u_9-1>C'8es_B6EA-P(lD%Km*]E`,b>kXhCc
%?"m2Y]ifDR:cs=,"ETI>8@h'n6!+[\!MBNT-37>3%p@8b7Vi;t_A$JmO]X7Q/&B8hq!EftVM%>_"E?]q!Qkf99*ei(j$fV@&5?9k
%XP#ZR]!YbXNm`I=7Mmht/-D.BnNDfWZCMCqHg'*"i1S+k:Ck67Vu[Y?M`n'+quFrtJAEoZ&7?cpPh50c*2Ve*B+a*e'c1*a(Ka6X
%YR'sa=:q^1UBYkk]QTdt4rtFRLT[!V/H]h>!.c-.ZgR.tAKlaun1EsBQu6lY=.U!<N$q%C<G_^Ao\h0*36GK1_%</UL(fn)gdMQB
%'9l<nm[GD#JdpNWZ@P]??t'cm=>1B7ZfA3rY4@Os%2:(VJk)3UQO<Gf+t%UIRY(>d*rtntdGo*HCbq^b%(<#qaqkF>PKN3C;+\E2
%okcVPYp.K"(bs?db:7rWbAR_1gh\?'n<alm7Y9F32KFu#!],W8M_qYf&]--$mVIAca$&dWR@KAM"kO<t!U)p2f!+,(((iDbN`U.,
%=#=&t9\K7MW"u!;mL4jg2Dn/=*[rddJ/VF`J(*I[5sFNKYp<f3.0/VJZ,"Dh2rSL=m%M7bVTI>K(^PNsQ3,fsAK'V7,_h!0W*F<P
%1m[?\"+.!OAS;f(GKfQqN;T1XH\9A@?mS[$5@[bXd<'$e7h['fh2Fk.$O_pk@%pA+b/(Fj1MKD9a(H?)j7uuB9Y+/A?tthWLla&U
%=9L:MiI_B6+it:Z$bFDs$:kW^R(b):6[Zf1rd1AZ;&g>WS4&`9J.c@M)b7^tec=o>0_m^>!_]1oR7dP@i+XK61eeHYKdkV^O.kDS
%oI;^hmi\T_:sMPc7:8hTYSBjm0'6[JM!Wc3&/5L`1IWPIZ</N^c6rOWJZIMGl>_.f6N7W'X<iCA#X"-l&NLO]@P*7Nlugksa(_Hh
%N)sK"Q8q35TcGA,Og?e]Lt,gtaa.biKH7_F!>qD(cbM0!B%V[',uIi0Q3?fb<J',4XqKuMlG*N)[tP:W&Rnj!Gq7f@$SulV2+pHL
%HlPt=a>q(\(A2@<*&_HPHWgIS"%Q?o=e^Y9%P1(E"%iV'`=SS?QIQ!mcp:2df/b4'%)sh(lq.Nb(bEdA!AVDCjS+JC7N*$T=i4n>
%TQdZU+?BEBh89BK$Aqk6_%-lMQ(YUn[uDk^83.V-mDXO2q\9[4`dprMQ@"Ei@ld*59#ntC+@<.tG=*$TcZX]!cA>oWfkM!V.KZ:f
%ihZs<2-=%DCCFZ;2k-FuU:_pj,dN.M;7^qNg^4EJ$fN/BUbD5&LRM",Lge"@+lJ4PTBMHT*i'C0`Ju[.30@UeBn??AJ'3H^h)Uj$
%eml$-gOO4H_a(IAK2*2nKukL]%!<,3$*'."('>d0/N4l8Lim-8&jS#Q"]O2"$B\12*T?3M(+0YbTSae@F;LLiX4**UMf((Q*n`tM
%*3_eeOPYmCP--PpoEZNPZ$9W!JVXKA]1B=fq(WN<'@,)E,Au*;(<j^T+N@9e)UUlnVM)`U%Ef!AE+u!A)D+Tlp>4`)OB,BZWo-\r
%Y(WgtgUs;g)0DWgj=cKeGD/d-0sX('r)p`6%!A#p%03Y9O?c"u-k`:3D)-GA@r1%>Ckega53N;#4<2:k"p!cR7NH=.h4OqM6@$l<
%2g'h)o()SK9d\7W841Dq"S)d>(<NWj<hgee#20G,73p1(q?1GIS7/T1S'JD#9Ai)WU-s&(K,*fCi%%eJrJ6fVK?3<):&Zc-lO76o
%9fro+DnruILidnYfM"st_NlO)ec_,=M4uh9@763/!KA4,EMg=+':Z9:*fM_T(M48RS^@(h.2NAMK+JC`+Luk<ne'GEh_gB]$UGVG
%k[Zs8>]F]ag*AsAH9l]TnLb-0<;%U\P/T->#%,RF@oD^i'$7Or1/ho>9e8p^ZAP=G";?V@JK]]LY\DQEg;Z`mM%Y@oJZf`HH;_0^
%gkQUZ<i?aodf<i#]KRl.'dDHgg5*a+jb+TTJ8i_8MFfA4(^;-8;g_pZ*Xpbg"S'QiFr(`ng>I^$-#l\QU6)oos/?;3)TG[.9X?a1
%O&A?S-,^p@YJei(c<j\*)R5Wq:aQ`Up-1LQ=#K1K8`k7TMWmGp",#G<k!KbUM<*[N!HR=VAhla\c-.o=!0IQHR>cl2b,`HJ+fu?R
%,gchs1,/]YN/ADl\Jc`pn@Q^:)F0Tc$"VPALCms?RQ&4(.#U>!FX+s:%*4?,Cf1DB(NQC,SFL!HM"DVJ")pe9'k>Bf%>6TJVSH!N
%<]P[eM*CtX%^mSn4PmGX6ld4RUeqTM0MJ3[=#5c374<tm*7I//imW(,gP;-rD5meS3N14kT+K&[2Icq;&8I;-,r&JG$IRfXAVR)W
%r>Flgp'`B?j[#.3<<=S%!XaU^*l6$nI8qH+O<j35;'NPFOPLIr6mVQb"UWhsi7Q0<$Nf:+EI:@[l/:Ykj9%dm(^`%P_GCDB@L(S5
%`#pI:!OaM`E<([e!/OaMPPO#;&th[L(4*g*&o`I/SN>il%>^:'_@VS0:E-`?ZHV!T,X-1106q,0p'FD5N\O]Q;6k5(FK'ke#CKDF
%).X&)_'+CZo2UVB5a5;konpVJ:BMe\,j&0bBVQ2!$n4K=r%8$YB)'lFf]!DLmFY8&9"6&MSQe!@VL2SdR/IF<H"\jF!i`!a#DkJ"
%5Xk/BBLL/3%#T`'#i_n_j#CM-In&'_;dQk+G(uAX*!0)ZNYj$f?j_%<#VEJm">;K[%bc,;>F%Zon=0qu:Jf>59TVrJ,TM_#`&/0s
%#LOp[!#2BI1IWj(Ubdf]LdgIuY^a_uTNnJ[$S6f@8_0'#Q`qo(4@h9BkYhd;3LDd3:86'<e;qBdK+K=iLXf`ig+NZKSsZVMJ<R3;
%$_[_H^]X^mFW&,k&HI)g"os5,(HjB*hK%V?kUI'7@3Zo'"!tkhfbEunMT3TG!b`,hnMr-Z"n5["<bS@R4&$=#^^11f%B)C2/1ZJ,
%Pi/fgXK+g6OJ`:fQ3]MpE^I;=<iFY0lO@ihCjh'G(VF-rib36Cj(To.)$HF4;+X@BG;B_h@F\O0Him&q0Zpt=Ju'_IBbNiqjp<Jh
%VFdLP&L.TqiC65&LGC2@B416u7!rt8ea='.d90QhQ2iopjH'tXUkZ'7PXCf-Q"+A:X-?;Oj:3"-C2@W1MhODlRuYSCjFn?Qa@[6*
%DBsZQ7#\NcaD+/f"->B8G#g#XT<hj'>piKc!#Z[m+R=o9$hTIEQ,#["_?g<>YebV\9IPZt>IHhKEl+\l&W;`fD@5.=FUhN+Ag*Wi
%/MLEBh.[fspk`t[dWr'\Rn[r@%us9W90BgHLVH[#goufTfK7oB@X2#paiC\HDEJ/!.I_a^9u7s<"#]&)J^jgF'pX2$.R<Pin-F#E
%&b$B2`bBu8%rI=JK`Ots,TP--?A>)*1]$=HAUQSSC(H7NHE9)eJ1%*S4'f,VqJ?:hL>t=)[W2uhdYVMu@>uGJ)U"N]JTj_*R6<6e
%/k;X,Yk^kf<-[)bnhLM]H,/?qMSX<@aHo1,O2PjdHoR/#KgAhJ5gV+.T@K<r\*^U9_0'_d+^L8W&b0X6!`/#tM2Vn#5-TnN!QCk?
%E^ZCKZmjcJ0qZiB>)p.G`hAU;j34UDE<Zq=OiY@_fnKm_guKgb#Ke2s5dN!LQin'IP.sEY./#4PGM7.I0E;uq42UUQb0,3<.o&VM
%3L,NIe+BW&'F8Z<R\O^291ae$=2GZ9pmH^5;<!/Z8QPNe;1Of69nsVp+uR6eE%t830]0*$M"%,WGg:%^#NOg`nE>B?(,nC^4+.;n
%M;A\n3q_OUE**e09juY@H%;EoLcbo@dElp4n3E6M&d@GBS!T*`Y&kXo,9B/GB(C(44=-1I%n/[hYEM)57!`gTi,I[H1[rp7W=@N%
%S9M5H@rp&ATET;WGQ[Q.Ed?f5P8bX3YdhcpT\*A,S>$Waab+V9'5^AeEOC</;e6(S9e_lopWpH\!cfugBu3(&RS!qgL7ro*<G-F)
%UTm_*gU!soMDFP'+OAmc'd].XB?S](Nl0D)7Rt<D=$EQV=hobLH:5MYD]^#h0a`;6[43n8D=D[:7'37"+JJp=J;!G(`F'%b^@sB[
%P/_)(_s=B<3J"llrJ!I$Q0<%[.k#Ya=_$$W0b[QHM9T`qD[EKS\-`Q)!UErO!pRC78+\!tj!,.Z,D89S+:R$)OO"&^/OBQGGlVR2
%*^El1eh"L<2XHT?<^:'EE5"9uRtueE.LG*BjK<KS!pp:P,[7j7='H5em>eC]_<s\m<0dsF,\l:'G*4YbiECo)%9#2_'sS]C7AOik
%4Qn*cS:.imM@d<1;H\&/)c\Ei.g>Nqk*<#$+,>,qmOOfB=`5E;2fchZ]7r`j<<rua3J=**3Fjh49"#+FS/"$e+W?lBl(Li9XOtnS
%S=4uO<*na<'48PTLbZn\Qq@uN#18/7$@pgr&`AWnfp\+W9&`"b6RlGRWY-U%#cO=_k(3S5,.mmcfNiG/RkFr95>qY<PU(g6R&+<1
%O+K+1]?i#CFFB@kFN0h4$*P3d4pZ57U5L6ucAU_(?q^DDTN^=ki("P/Ng61YYs(e'IUHr9@iG`X>:jdB:n5Q/c<4\p7\\fPFD-&V
%7@8oJ_)6'dmDmmUVq;8fMb-FF[`lR)Z>i5[;\>G:9'1E=PW2o3c,Sq6'VG+0,+98H?Y3u?,GsNVU,upYLq6Z^;^1'rT(F=L)skr)
%$o<ma/.fUECUHc<CkB`BB_#k,p04ghQRO1RG@&/^Q*1r@]PdKU^o8R`P%@GI#;2T`A3]=[3CXPQ)R,B^$K?CtUokJ<69nhoU.268
%$s[U\0js=Y[37MK<%*>pjlG_IN![$+p4^/!8_efR&H7=4SQk1FnGlLn/sZVNoCO5cbn>.*Qsr2\)RCob";1Vn37J.ha9IGVF^S"n
%9t>l3'<f%XMEUhM@:+e!Pbf?*l\a5%8ZIn9[N$g?,u@LEEERH]_7eHbM[ehRZnb[YRqrOdQ@obl0hW]W2>fQP&j>E4V.*SY])_+8
%^l`-gTiob%)bGb13Bbc19Ts!W`(K(K6XWic:DG,5=GPgo$r+k/,o!1o>=m)DZ2HR?2*OT>U'"k%%,u>lN"&'iMi67Z('hIP=,X(k
%R=#/r/Z66RQ@6#/Ys]a[hJp%-r,fAN,dgbL3BeggD6oK?`#ST:&f(qDB0tQ;Br,!OiTTBuj?1nU+#Rm%o<q%eo5j9.L<7Wj$Oe]o
%#LQODp"R2+\sRkUQj39$,6G>XhuIAS"CNb2?A<H+6:>(K0/2QEbdX*mrl*ZN4g!RP=d"d4YRi7_i1U\m`=Xks`SI9M+N0-nBopU`
%0j+kB=[Da57?MDKGH/I3>Rnahn]1g?P!n[c/Xe,i\KHSS<as"lJZpMs,S3HB@Pc%.ZAIVS&=kEL),0+BpG0T*/riP[`dDHZ\;+V[
%*7G!A#i6aQ/h\#^Ga:!Xp(@&+b%>H`KKVLi!KSnQ#tIsI4[!-,G6j9X@[\4RDT<.mn4LO9'NLX9aC_J0"#!%TSIZ=MR\/(@P'K?8
%Te/$]M*cI*Z"Ihk.OEHi'5#.H;R*l%0>hk)`ODX'SBt]i%;^4@\*Up)!rHkeaHJ%*"^c(6*i5DFZ.uu&E8$N&0*sE@nQ9V56>CYY
%ol18#i)3?-NQ=P\/<h65?@gVKpCZtk'#]=rc?M?'ACc\#cbL"%Lj1[0UEuDIg&Z5n6lrQ_bk&H4'ki%4$3<t)4"g".q)PsT\.bA0
%<Ml]TUk^O_#X@f4$&Pb/B!r_\?0qbgARoM0M)lSq_+Qn[m0[/W4=";p!XGqX+KjQu&Y2(n!*ei=_+Ljh^tr5R%8Z8EG]jK2]*uT!
%rfGX"ff;i275mU+_/9E0F7$O7i5W`@RJ#"[G?gJWEH0<&Xc@2(k&RT[;QW!Js/,fj?E.#?.W>6'0@d'cqt*0\qScV_$DPIF;-#<L
%)F4cl^oC>7Q1tDSg0Cirl)cMqG(>DK^]f!6,8<+8s-Y6^*eK$ijqP?%3LF'pkN^hPn83Y,(!\%NfXR17&)r5tq7.!>bY:R0n@Fq3
%6h#9XmH6N71h**7rgte#$:FFb/)Ya;"^I`^'9/KYId7]OeFK`ur81AcFc*TWlE.!hO^MPq:R#hSr>PU;.H*>,*r\YZ\.UNK^B9WM
%aC/gU5$52Yr/)NiL+j:j>&_%T#;BbL!!TWeo0Ye(8@fE9gVPg'h%:I.0aq]GOu'o=k;;fV.3t/@eci4bC[iG7L4GiUY]kikYiE(K
%U&A!sL3]%t^^@6ff][tB-.aemp1D5IYBF]9F;JFYC9j+?PFa!_W<*;9#"TN;+^)'qTEi[[RQ%gnq_R]VOm"D;?G=G&J^[uKC3FP=
%"':7t-H#G@+D2;A[kihqR@`e4mFOD'*br(OH3>2)E%IL?K)E$R[m;#KaKX3#2YiH8]1*A%^t#.j[&]*:]aI>*[?U/8fkJ\r/S;2"
%/5/F1!u)mdOnJg]G4/ifJ;kWh[KYeRaQcth@fK&?f;L\,LEF"0R1q?UFa7XlJ;K.[(HHWO3@K.1K&/4jP[7s[HgbB2fGaQdOsB8-
%fZILWmsn>ERfgPP41V$[faNb(lW%r'8I<7jYd1R&]0RFM.te:!M[bSb#VE!A!E$b9dT[2VPT,<m,7Z')#Y*=dmJt6F1tI@J.HGk&
%9[9o+BfUBg[I)&o$ap/\",-"]lTGW&$e.);jf1*bEb5qJ'Ut!8)I[Td=XLXW<*<COlj,OLc4@gpN49O[b\+@?[E&S\,G*s3;_'P3
%C-h1B_rUslL2DJsL"0H]d;YAOOH=_3c?)*icC"A^$qIU]V"Gq+`u2l8G[oEN'%gip]>1m2!g:':4NrBAAn]g4R-0Q$B]1RVFSCMY
%,tGCoGNY'=H%^@XSVPsrFb\_W&&n1!T>UtcqEM3<J*DT4a5-tEgR%@jjq1Pa]p!7[h*6(aODAh0+,3o@%?4P"SO9U-1>@d3BHX[H
%\o.1."uR$7eZO'G$a=NF/>;fW]/?-fL\GS,)!O#iLd.CYjd/0@^S;fg]695%Jet](8Z4ul]\B]d*+`VYs'__RGWW:/*FO(e4(&a>
%NEO7.n@1D.]d\tUk4Kt[>B;S:\1K#82Lpp)&KW](VM5psjaI0fVTCQX+JM=TZa;tmk_+@Vk15*YYa<XGW<5XOO&Vjkk7T.^itRbH
%Y_NK+G=il`hDY-LR3?\pL*;U`5RjH&E^b)6F)&N:Ot/hc*I*nsG/:Pjiqs4ifSoo20c*#,-X)'V[<hbaLKh-#LY[Ms4`N3Lc6E]!
%AQ-A9^rTMT%D+@s8*"V7TOPZq+:Ke>>eR'9oA7"trR6,'XP4*V*!UH1cHa,hT5+[l/BkbP#ifAdT2_t"_/jBSa$1;HSm)g<7ebSZ
%+"Y(s[L^Op=<5(d,KmV%amFehMp)SDU&EDp,DFf>p>uUurAqc>Y$old@\lqgU-'GU1>KP_5($a-V`qD\Un#q^mUN[m,d8A:(`"f(
%0\^Ts=V$>2q^#dR$YM*2'.-EROT_&U7M0Xs=YA=M0gPtFk?t)X8bZX]=%IToQ(;0mMHkA;!+c<%&-LjF*qnT1k$bB:Lq>pii?!8p
%(*#s%"7]#PYA6E-P+u7mL^OfqCtaT\d]Rt(0h5RDBGrXlg#4eV!"n"R,_NRS(m2/8M+LY<aY(pbl)94E"n#!RpqZ;eB4SkNP*H*8
%LC7BqSjNT:)LaY:Ku+lC7eT%opK(bZ#F%e7[f:=0"uqIO)0mgj%^S[CbrhG'h5:Xa8kM@%/.5N"m3&W/hK3l[R3i8#8]e.'_se#E
%Ti!>AX8,_6T0]s5.Zq/HlE]2+XWd[Kf?elSXL:'($gdHISNF8Icp\7q`7M4ESMuh$#gkPjIV?4/-]['XU,,r/M<FrU7=B/MG2PnL
%K/7YF%u8LC,_WN&>^*/iDA=SC6I:n`Jn;\WW4;*X"bCH/(:gcn9h%1ZLk7Cj$s_`HrT_:S=a%R2`L/Kf$<u=tPC!I="1#F"GO.Sj
%,Rb2jqJ]\sjGM+1h3]hM,>p1O8=8?9`a!VCR5V+O*FM%#HtX7$%Wc+cN\\T,$;s)iVqk]q#-RC"`]\(J6:=C3*?]_S)E5jW#Y"pI
%+M^3#UkoAO@uh&E4."hn5so@eJ]R.H\")/4<kOOB-9`8cJ'H8,mbZC%+t>Puh*4`tT`k:tYTXUcLaZk$<@"strBA#J;Kc\>8kri#
%A@%CJK!4^gjDgGILY`3!Ga/Vp0d>YaOE/k6[aJC_`]]Zoi9S<lct*//_2s-]o;<"k*qG1[;NVfF,ah<(47ATuM]n*>2\P&3UE%7,
%fQc^D,FCq'!gpE:pQ/?hJ3qW*KqmVeQRHDn\>eQ^$J[NC*b0V#=(#Mg;!A$4-"LC=dQ-)ZTgAs%#f7rl>=1Id+2q-:\0>5^l5?P[
%K8soiEH)&NORg[T!q,NujZ&B0)RATD`Gi=UJOWUQR/dK#EYT#n:mOOR1o0*#--bP+GnY!='u[UeHr:,f,-'76KJNtqO]\gY#_mD*
%;'&XC)kqF$Ytg.O2H#tmO.[f.PMoErPno+Q8Y$ss@]mXa@k&_e<2pd(0(W175j>0:0ZOt0BI'@8JU@Rq>IqcL^]J#bJDq+COUHp8
%6#c6-f>Qi\<QaPr-tAc6.7>'e=-2Cn9gfBM3rp#(P_M\Y2+J=aU=-8kaWUkfAApfs$(S,Pp'8]=.F/7PG*MO>WXbA"b_PFZ:b%NV
%o!1a#7OmlS"R-2;,=sdJ2G7.6#gqCEZ;UmqD5;>8lCXMEN3Z/A$P`DpCjTZ"UEp\iWHLdBTnt[^MO?o-a'!c7$U]CG/%Lkk_WWQR
%E/\2K5VD6@AVi`P&N8PuUS+<IdSfk-PIO(M[g7-:BUggY(TZ'u962XWisB!l^c?nW/BR/tYluGh#imX2qMRZ_DNdGK6%0`dA#R4Z
%OqcC*XCK6dn.>dF5*Ui5Ej(daF8R,%DKb[4I4>1Qia_@<&E=YhSoYstQYNSZ3lh`]FVl]"Eok6`bN(f@GsDromt5DX.)HkTXI<8m
%Jlk#S'R&AM%,gh'N/""1`j\DOb9FLHW3sV&6LtL=C1FOQ7@3lP!CrE$HTV?KQap+XPVpLm,0IUi&kEQeqQQ0,!mh6qWi@_:Z&m@>
%.KT(2)_MGP@UqMMe;2(R(fos4h#sNlYsf8rNOB`+,Wu:8ei";0)EBt`gL,0f9VJ^?_kkqJ=:s2.J?:73SH0Kl?M3DjIJLO?Fr!5J
%k<619j%RNg"gNj)P`i>&#Dnr0&9f-%qr__X!#i"Bb<Ws*(_!Jt0\F+)A-!$g:PHiX@.V<q<<]='J]&P&CT9PC+lY?'jS!hlR*CRp
%=%H-k(HkG/^&qUlF7?,2_f4UM^@6D>!E2^TP(Fr;<++7)\J--p71a@kjGTnF8f3)<bH__%_L`-:Q?5(":b6p5eRPaPb9OqR%m)%1
%1jKRjoW*Kr>n_D6^nt+_$ZkKJB8%21R(\I_(qa7Dl-rI;I#a^h-iKp2ZL-%NJtFj`GeMMh%"u($>0]HU764@>emntrF^Z.]V\j)7
%aR$mu,&E)%.!Pf?Jk/S6\A^o?BF7V$2`CKD]]Dl[e]uf<2-Xr0`AMWkVFr9coM`h_gb<<?2YtL[DQM37%Fa4$Ea>N/',L^ndanej
%3quLg+m\sfiUmfIVNI+^]"5u1SQl9+iEVp=Ej*W%#W[t!KZ<+,S]npiP+DoPeg9!.(sJc`'a&$&O_RSV6"F[$^Z4l:_T5i(KR@^J
%VPrJ/(bqHG>]T/85^KQ*&D'E%VDec**9G:q/rBN=AQW'?@2=sc1+&@21[pO:C3NBCiF9&eYt^=P"YFW_V,8,d=O.`3ejq*cD?M5A
%1`>CTQGl_V_b#2"6@LLc/[<6Zd42uJZW\>"_%ee#;La:LVP&<WAH:06@Y'rm!7CDlF;RP\*aji4)hpf'3'l>61g,?*WKOFf3YREZ
%Oe#)mM9;\P/o$g^O=N6q%Bb'1jOe\E<n9I7\O8"0!Mr,&XXV@[1m5'8[OcrP3T#J;%2<G*^"X7q$Hk+:"9t>\HO)%d>e#UO4^t)0
%j:'lT&Q=3O;6C6aUFQ*QI2h9sBCVQX(Q1+XPVdR:M2NsS3[sM?rN]>eHULSJQEainnbFkD[_?6'0h\bXaXp5a-rIT+F^%U@WZmD'
%"\o)^LUC7p9-mq83gWfS#IP;V)@]VR?eo!=%l*We"*(VEAsd#K<6Z9a&Zj6!<CIDfB'5Um!=#O&;I]nrY,E_Tdb1L=f:3,c8:T"J
%iM9D;\:i1;">LI'/LA#1b6WB)>&oc+n_=@Mb$Fl'4ghSRg`fJ%.qiCebGUe*N^92q3`g@De=rTLl,pFTJ9.Ge,fk\9;0Rh3"ETc/
%PKNhG6A-i4P3/=21EoN!8-\ogiM)i`@Uc0;?CKg33lXjb?jpM$%I1C*[`ek=0,#k#/P6o(G'pIB\J80[O2Ie?9<Ig$)=F4r+:D,T
%X'B=g@7DdgJ]h,lX<hkLa_D\9$>)Y&MRnb.Z8N=O3Jq(7h[7_WCHEN+@t"lOnZ3+moVAcq+%=;r)$u[,\d[nd,+\*1*\$[uT"+DE
%LJ]=:W3@>n`2r)NWL&X!eLj15\DcEe>l$SgP^mhZ*e?bY49[R!@F5U/JXC3%LWe@i;!`QS$65d>/;s4V>C)\GFAaFc;,OT_7fkdY
%S)psE9n$..j`8oN,SgCAMB)d'Js'?U-DdfsU#Se..&Ci9[mX-U(nC6OJpqA_>@BLt'u4sXquDZjQp#nsLW9Y>^f!F'4J9RRfdTh+
%Ysth<W0X)T<RJ01*_,nkcuF.T`t9!;""Ohaq-bd-/U;D"WfbCI(XqYmJ/In7L178MgI%N+3OtRe]@=e/N91e]nI"2(gO3J:'X(Qq
%HDqdG68hl;08Ij)-J24["E9\>,ip5V$k/X?!MHp!p%J,4jD$'QK9>!O>@esoI]6`+cktX#!%"971@iEB9$LjaMpelINNE_<?%=qM
%M$mm[;-WW514E6;/68T.L#-p,MrJb2?BCbi80$.0K`U4O7M4k$N$88a?=n0&8@#]p7=A%&$le-10tab^PKgsX,H\_/_m@R]Z]e&b
%iY'2IR6Es'/Qq?=P<NVIU2H3k$/etN?d"$>)m01Ji]3+K.%qY)#d].UW$H6p\`PXNa>D?:`^A+8Q@9/K.rq>=B@H'\3K`S35.T+Y
%)k8jcie$,MY`!1cjD#fkk;&teO='&>\sOSJP/YV04JMmRjd))n0l<]O#ft>(3ere):'?o=-&l15;HkIpje7bQj\#boce2);5:l@F
%4-I5fAa,MH19_?8/q+:aOCEl4(((g"Q7UAL\YLSn(TB!U,>pf098+lD!O+C>"5K+g771t&_43,CG'5[gl["_!2C7rp-%"!h7Bou@
%EMAnp!g:<#QN@+^V%^"MfQ(?E-aIarTTR)p]PsG7-%Rkl1L*P"!6Diq"Xj[.!8;ULP0&T>P06+r_p6lg,Gc1iLpG8-`,'7FgT;<L
%YrKo1I:XY9c)@+"m6s(.eFHu]'sc-R\9dGe(FAktQ$$?BC0^=,H3<;(8"U/iIc12K.6j%W^tm-6\Qm/%UcdTe:,FS-Tc#7Y7(C'6
%0kTp,H0O[aOm-o2(S+tY<rh@bD_9h,`@qJ*;t;M>#&l"UCfsU9:ulkM:mrRPNm.C3!`Mc->a3hS)UsRCOZc<2ba>T1L^jJhRSm_5
%F.!K&r@oqdLOm%U)3[$*RkM0/72g%Z<QH<JFpZK*e!H5u!saT<Q<-t.Q<4YC8a0[u34lL6$V4sTh-SI/XN?JhfT1\#_gX+:9*Kkj
%jq/N^<:;!^fbJi8lB7Y7Y`jqLgakT(LRUUWHkK!Ue=L$".-;co%(_G?[8d88G6_/9i5:^MP8LhBMa)g/KLEW3WMLS:K2=a1.;XTQ
%ct0^d#QiB,-9pjm6j\B(k(sJm<LFe;>8@&+E6)0TATMrZFHq8m@MLhB7b1Sa%V>qp^_)KtM%r+W>=_3J:ppV[>j9Cg!8gV]a%0BF
%_\Q4DJQd*>Yqf;X=tO+)V9n11c)+p'ZJ%Dl]$Y&P[6e2o.Mkq3kWH#*T<V[j(\7W(g2V[48g&S5)b(/h2/MM.n&%0-<"36%2ofKN
%/UN5K8gT!oHI/n.\<P>?4G`;>E4uY\CJo`FBe`f$!\?H*i2-p!o:`]-HcA<ocK%cTqPeN%>]-@Z%c^"c=sN7KeE3_rZEFk]iJ%(P
%gr`Sj()hi:[VVAu3V4nCNe0N-99*Rn=<l^<F!1UsF_&VL__798Lf]mnZ8BIAmUE'AW<VFO&fe`p2]G9rf>C@8]N3/g+jMBiT8)[J
%qUCNjMpHiu.i!C5q]9nRlP_aqr`tjAh)`=cXJjG\c3P:*8^Xi-gjr;Wr,;kk5Ws?gI=[;?b.r%)\LEB[5UTRFYr#IO"ji^6T+nVk
%7Uh"/PR?DcA`^pA+06/:j6ElqcTQ6`/=YJq=t4W%+1u<n6bYk=m$"_>ikOHXi'KT;\rKU0oM3JF1+4/(%q%34`F4X"-ur=dJn7if
%$'>Y3X?8(fU^Q:kV%G8%+XnT-T\^QB"Z5=k<Q/Zo"H+_L<k':?$B)<Ib\^h_5Zk0KP(>Mjo8$m\:!3@#q]MZTD_sI"^l&IiJha3Q
%VN;t0@>pdnnd2r@%k.U%cj'hl;aq$ikRbu&e]^I$0-pZc]qk`JJ4=^S8\4CO#:l)i9Ym%#TcEZ;$:QV!Did7_T!+JER/e_9q1=TB
%K+OS'\aSIrdVUDbU'9Q8.'@o5UrhAA6`XH.<P0SP&bsZh#$8@Vnt=B>k-A7&;*[F42I+(=O@H,&+U>G;FN([k;The;;0,[j/-Qup
%l8_=Y^U#'<87cB5@qH?.=%15,E\I[62,Y$s);_;!fB(]*k5h=,NFSXRZ=RFCYm\(*,.qU<PiP`S:jTRE5.;c1n)*6N`S/32Dc9FZ
%]:H(rXC5Y*`iL`Vq&8/o\C*eK/7\p<;k"1h7[eaH5'N3!hGq-$MGHf#&"cWFKTm?HDLr$K#Z@RR[BJkM5lR0rk>2sHnb!=G)o\'7
%#$Zh!V#DOS@<F$o#e2XK?lT<?b'YL*"RM&kU^Rp,^u;/Pg?UEB?P%gZ%2'FfMYY=IAh9G83/Rms2aQ+,ek'@-hJccgNKu&@Y[<^#
%A45@Clj6V!\q8>=S-97E$rZ6H#e^tnH)T3O>/Mh:!OV+LN0V1U.?g^rqeS-?^J)kH4Fe]!^_5#$Tt@PCgMCm$/e\b5N8_\n)9N5h
%-"'[W7Bh*$R5/dd2%Y^K\;TNbFU4?h3Bkl(g14#42qAZfL%9>%`Stpb;$9c*^j^LWN03u'^-R`'%dsCS7\u?Nr5"mK&P9_/2ZurM
%d8?ESL-[qf^a#3WD,K+3Psr.O!1kbN/H)LKPWFPjj2^u.!3C?6[[gN+^8A6&"=4EIMh15/@HGgVblf)]`[%c\,rQL]WICr/TU'+f
%g%](\eOEZ&H3$3+TpufhAZ[hd&gWB5Qm-5JO:kF9!k2j\ASK(D^c!F(ZJ'+m#d&u#RW8d8:9I$\JXA=h..oVa9@O#rcdR"F9L^;1
%`8sre:Z3KhR7&qfgL_"aTBVH>+t165lM_sB0=q([PK%itBfe+k#HB;+\ZO0<_*Rbm;W'2!<qL)>&%^e?ROk]*b3AsFjbht<CErp>
%,'1>7(7.U"P/J$:#F%4k,3p,A)\dFr5#K*AK*cMErg:p,<$%@BoaI(H%:GB@<LdJH5$NG/p-0bb/PDQ=iMtm+Ii%ASTdm/P3EX1n
%$]f+cL>BD^5t4Uao*2RbA]#G`U.KOPP+CaNcR<>Kk,8WG/?UD?rJ'^`aNrD)+O-(M>-[hIQ-):@QOot`Go?p9!/ai?7r3-#DjP18
%$8pp3ZQ/)t2f4!\[kVHdQuT:I@k/@9A;9h9Gm1VTX>lL(IE2qOIuD&IN`GW5C/-;d!`ZTtbB&q>-CYpUjs5<Tk1J#pTM>Y]5A.jX
%Sa0A##Yg?GJ\>,u1e)/9]seS(Eo;,biZ?(CeQ%0tWmTq=8Ra9DF5Ts\7^jog*do-:("d^h;A;E7%Gp._G*I$)fo]CjcCuaXYU-m&
%<_ihlCQ1=_8W2Sc"#`JV&R6V&f`2Fs7:Na..0[s!92lB4#XP!5grVlFUaXA2Jf@2;Y\tMMXe%HROZ2C#!L(JrZngc9Q:C.]V4!GO
%=hWaLs6qd%nLM,t^D+3#L]TrGgcjQT<^uFUc8l'ZEn!,3.+u0t#UM#8BsM(WN?PS4)P`1[L+jGpYsD-2S$/+iUrO@&br#Z+]o"iL
%_Wt0P&cmkd$!e3`\VC>qIEcWTFe3N9]Ho,,E<TD_'f44e(@%P+dOrd`G8:dT:gcEHIEtZ)/m]uu$&Di_ne'g&p`eig=T^:@a]O]N
%[!BDHoRoRP>VW?i[Z*('&jSmJ$;p#pEB2fA4!E:Gm4L\T``18.7aBD00_YCL?=KB!iC9i+NPL7*-7Fegb_hrR[\hM.>j"Xc'='OA
%KlmRMpfL5t0pgaN02Y<I4Xdh77'b-7%Kga)Q7+$NNit_X>T>D-Gj].Z%h&*H1*B8D/IJXS.jS2W'9se%RMeSXXQpu^LjPP/3*!%L
%PbA8ij?;X%5o:=<9L)sB\\a2o8W4*6%Knu;.H'in%*MZRoSYPcD[eP6O;=3k;sZ;8%#2hf.-_;Rd>+f!F0FWJ7M3#gZf^!fdFu*-
%>0(<J-s@76ii6R\^1g*aV%b)SfMZ2o]9XBuEMR34P]uI\72AQM#ffAR='[`*@^QhkCo$<UY^U@5)ADL,M;pe!C:2!>j5CtYMRDsG
%3$p*GnsuDR7qG!YjTf[Wq5*"H8/tpQN@eYn;`;6BSX3NpJ4]>:VONRJLrd8%EsPf?)/DgSi347/p@H69TQJ>8d=`:#;3tBrcB^OD
%Y]Sr!W1MDJ!,X9G;7G49/?ZSn2m/U-JkMM1R!a:;*j@Y@.+F3%[Od-LX+El'OR.+R6Xu<[7>X^TD&#!X&$>il,RIK1UjYGPON[G4
%$JLGjlt"1T=/W09($UIDoFebRMUp$rJi?aICI#/K1<lr?-s9;F2D``-jbFH+;Ku7qQjk02;F2F'A`O]EPRqd[Fq@[`V.gG9.8/L\
%*QZaiHRL9N1dO(p0D1F?KIXmR;&&lb6ps<.>:AVAh%[`,S?G#5FqLE%%uK?*-?uLdmd-[ac&+!s+Oo[*J;5[qEhI84jQo<j8gdLD
%X,8cB$rtU1[Nf>.RLNEPL6.g<%)o`AQ$i!('g!m'l^A6c[P]"^K]@*G$@o.4!"%Vsol)0$Mg:Y2hrDV:P\,sT$h]rZBIJCJH7iR3
%PXC!rc<(0<2`A^h=^BFf0eN\kgKK\-F;CE3k?Gia9BBheW4Oa:#8K[H6\J70Hn`[#KkDNfK-acXd!f9G_JqkEfFXd\?OWM`'?c!1
%CN"_81"(*/)P*!RBo+1B3LWer^0JYbF.b1Q"ZeON-%VBp*&fL+!_d'n"#,Ck]qerIL$/Rj&Y54liaqLOP/%((XskikOW5O+f&D5b
%fP1.`)p8`aO&Ka<fh/Ijh5;M!Jn_Fum0H+IEY=ZOK.\fNU11B8/a2M"/fi7mA?f#gVm96$&r,tP?@p$j>=mm4^pJc[ET>`LIGGbI
%b=U--:OlK/1m+2j'-$G:[Q3t.e\D9A>7%+C=K[V@,pJFlf#k?DkC$cA#./0R$kO_tL>g!U!DMSpN<D?Ld$?%re]_DRP^%XZ1MrD#
%/XQ#dbc8?IT]ct;LVl9.WiljdhB>BX`@NJ]<jQV1[-Iq;.[Pe7*"Xrb]0JFaDi;0&29*k:Tb*TWI:lC(EkIQLK16I'ac7*B=NJcS
%g^p+*^]leh3+CRc%q'LjqM8:^/9ih>0au6^I114#A_;:)MqA&3^6<NNL>0;k6t9.hr/kJ-MW7W,Z86NXK'Y,l&uCloa3Raa$c3;u
%W.Is7HuTHC,>hq^k"PG`LZ3Z$^)AS3S<i:B.&iD?E>hF$bH<3u_A%#45t#@]i^UlGZucU`LNtA+c@dh'(Sju)>i)^pFbem>P^k8D
%+;(B9K?6r)_rbVskAh[M"@EL<1FSM2OX+<PJsK"k@rJD><3X>^j7=-CWH)'-&;QX4Oar;.#,&*g39Ydl1'Ro="Qa:lp@?bX@2psn
%fqsE0L=Y(7l>!Jh2e49SDL,5:2C,A8`#c"'+p]uRR2mhGV39:VbY59%,u6/8N.XZ9)&@#S5/:V8"'deX=UABq`\gJI?NA^pr0Ddt
%!]9#lSAr$ZVQ9aM$IKX>TgoiRG4*-0J(#*f/oUZk0+csTpWO])IXu0Shc"?DmM1O9geF<p!c@U?UK@QVrbB[SR3Hj*:t/cof66*E
%-d(M7JI<=RF^BaUp1p*Ym'9gL:9=TTp6S\9>fF5[8C(@3Dib0O7Ya1Z!LB_,^_L*Unp(LIQehI@V`aU-?%2[#\3..QXlA^I.h@'4
%o$FVB:0AVVG+n0C6[SKU96o_m\"e>r223%kli0Y(kZtC.s/,A6PN'W4VEAsQghHIg>*D@SbU`i+#VJ)<i#@B8B[/cDE6q[r*Orm-
%3b:pL:D[]T.j0aK*Ot(r,uG"9p>AP(d!%^0!!MI1k$7'"JZX*]&j#NA_FdLd3;bg,KA7i7g$O0h$cLO])7dWM;Ds9gA_ip'[6$3[
%Rod4ELcS0q.6M1a.A./QdN(=0Mi8ECKgc+N>JIec]W6=e$bSFk*ZPn#f\MfW(MYC74k%H)$sXgmS.*`u%I:XoNR:/^g"QI0(YD$8
%%_SCM`\8Cuc='BD2;d5`*[YFUlKDM;j<E",<geU,;2!7S\d2[a3-s:M5Q\t.Yg\CY@nH_8U:]'f?\*-,"SC>YNOAX;nhA_9efD1&
%juLNB.i`+@[4)::'5Df30cLN6iMXh;fMrgj)[SJt*8Kb4AqA[%P#g8.1,?/fg=q$8TTouPBFX.>2gleMV+aGgm__Kb&>49b&\oZg
%NtV"&%;Sm55!dDW/3:(64isFX/!\<lH8TK;#RDN@FY0,J8M>$5%;PudS2F\7Q!+a"#>@G\1?TF5=pM.Uo:.hQ`bKD9,K's56;/d7
%0^frQTZ#fE[H,.)Ao^]c8t'bD(I#g;q0C@]QC;(D1Y"p<0H`tpY[KMMj/E`"lbX6b/4hE.&U>^4*,i*j!]/CC'^n1i/jjR0(7=9h
%]$$'O/u4i\Z&MESE.LT&debd.kKJ@g*<@UulsE"aOsF,)JET`,8-.kZ6q3;td!=:,qW>J">@=$i*he:/s3@%hW#W`bq_Q<tr-FoN
%kL"HUm>sE<TU;/;;ik06gk4FkRj6jb1[i-<[;O-a`Ahu#FiHd=*YA"j4U&D-ZTg,RNS4G\7pb.c`Z)g'\@$b<9DKJuTI8uff0.Cf
%XLlTtkWR[<:M8294^/rH3LGPddN,(XV%4[%edf@K!8,RW4JfYiNb^cDgfME(.P<(#I2I6Zc41<<!djguJQoCNkII:[GKBMU]MerL
%Enq+N0'(:JaA-c\"-g?imV<tJoi]X-\b`2![<-qVo7lh[3aaU'@q-@9bQ19foOtnXPqi8fp:ad5Z6VO&=6^$fiVOf`2.Zh8;+QtO
%2Yd(][N,#\nZmmcJ7rs'8mQ:ZT82la<]cdOL?5"LEC'ln=bH*B"M"3dL/_^+8e<Y6;XP-AY-Gea=sL98iZHM,"%SB4o(Z<O;"*G'
%f`/RX#B\j4q;4BM)sbo<\)$a14bCh"Lq$a>qWe4f09V]30N1&oTlhe/CWdj:.eO&1/g:qrj3oe[,Z2qSoU%bfm$7B,GomFk_!;;(
%7a-,*o*"eDUBf2Q'Ektb]]5(o#^PA(m:.&BaAt"f"*>?nIQqJ[-&m@:g+X.Z%[#8H6U/.A@e?Ns']oKSc%89UT,?Se98Elj:8Z!V
%@5u0abeBP]KSYT6pt49H3;WLH\2:")0&:-'&N:5^1/NjAl$%NQ&hPXqKe]i"<T9.q1=?9rhm;\>IfC+E?[_7Y2T<^odW&R:1B;ou
%\9ID>889CF4;&IbqS3Z\PihrA^nF]J-<R;$0Hp:''p3opi6+0l-;PWLeZRS7a@UfpbZI\!jI=3/#?U\Gm*<Y-BTn)PB794j@/V%f
%4J.$53-'#(m>X@I`\_bc-"RH,DM0(r".h]<(ZbPTfBD8U`oRSPTdl`=pbT@!?`N..5CVA]]9hto2PJXt_[)#WmE"`'d"SZt66`u4
%TcYuJU<dc#"R46UIK(.H(c,:nUY,nIVZ.Y6j(Wu#<ua@fpO$gRh`dXo1Q]),4lU+T(OLLr^WkH0Lq=dY;O'5:kHlj(#<U#b4Y$mh
%NEJ1BWK-6K86,ckp;M$4OZ<$S#EG/ajhT`FHOTQ?m=:dHph7]h<]o8YfVK+L!%H$4><WZGqAY5gm1C:Vn`PS=j*i>I5PMU+U2L;7
%qMTWJUPiFi*-94#m?Cqf3"?.LjF4bNpPEPGTcY8\MpUW$cZO<kliCUE]P`:mp&+?:=3q5/q]UFVFSfpV!Ik!d)#j]LBS\$OAc#ct
%NOLU#W%.d_@4^%$/&)ccT!>IE^#:1'N]']+nO3-$*PT4F1bD[J<\=ei\h28P4tNZ'?<;GXc].9l&V$]@-Dh"PI3.'@s,:lc8JN*_
%i87]fYQXLM>ReB9&='?74/1Y?C:<^F(g3BI(XWil2#QlA0'PhKBlh2&TTmLOK-%Hhr>//Z*8+1XjR?)TQUlLCOj"(75Qc.cb6k5&
%[>/M.,J\V`h\0%J+iYTm'??dM5'I<<cOmuR%lb%Y:(*1F#bse3e.p,iA6CAnF^5uX^Vi+9).q%],4bHmbfK#$_-]'aah:h4L7[Q\
%*`>=`Lb6[i"K.!6I)m[H*#@!mQ/i#k/sRu7$3*UbU,c&l>"B7[_>+Ob0DbQ-C`V&U?Ps.C>0s)75nn]QPp:^.q_7c=?V@JA8/RO`
%INpb%"9\_*hpY#c=+b3T+=D.uZ4bK3Sr_EW&@)G%#@,$Oo/41f`l!et0+8$W.KGut=cl8d"aK71-Qd7pR;\=e&?d!Sj/9H"@HQ\V
%S'4:hTq,_OXTMN,m0IspOCa2U`mAn3.+un0hT6PRXTWBVg(,,o3FWC3Hu-n4=mbj`:u*?;8PT0O!rD`:,/Yr@kOjt7GD'*7#qm9.
%8++-.S@nYXFhO7G8BW@i%$eh*K`,?jU_1Fh6OePT;:/7f8q$*2@#VZn6k8238fk11:&'m)VghDQVV&">,cVi;49-C'fJtN^\\md:
%6d,Q\=g+TZMN,U4-6Y]o2@k\^!-&D/0G;2-^_9b,<E7n4M3b*W*3[sXrtg*ALM&ZXY74jI8.Va5Rj[dRhu)3q#i]NaZQ_JU$@X!/
%`Fc2)n5Q9'ni;r4aJ!I'%$E(G[&Xf1a]kD%dfiU-@S1/5P9-W&;"hT4G<+ti^kI.'<ohTS10g1d-e54?q26j3`&<JbOe<NpS%YGl
%%pKIfLdi0/-qC._J_93DIEG/^oZ[d0]3Jj#C'5]7<e6s3p8Tf'DP(a(FAa+EYpBI:N=^N/H?l4Zld8&/AFfjGdn_nQo7(Z\ikE@?
%>I5=P7C7aQ7!-RP<@=tIKQskcmr\54HUo>PL-`be''n!cX!9C52[eEib_)T@%i;5uWTP4V^.1"6<7Hb:QD<eS9?SI-Cf-Ni1:(2M
%3Dg;?3A.h!2>AE+7@B-k*Oa08Kbd/K[VJRIiD3H68-:u,aAcDqB.L.[3Q7FF0PZhcG#5Rkf]F'iE/$>l^CQ<]X$7Ba'<rNMQ:ig=
%J^h)qToHM5MR/60^R8Vt?0J$B`">&+i>dMQ<.QQuT9J,h6.roXPY,G#,Qi>[B%F_.$VH?>1_b\Mdor_@Y43\*"&W*pbS(eb/j:&s
%$X-(HQQmp8$,0W&(*qK)mD:Ct6?q%"^T!;6`)k?^!mIurFnuN@#N/#oYLl2984hH'GYfD(`dM*.a$ANZ4KSA_!(ZF[3%I^)-RR!M
%#Ni=iL^bF`9Or!2[R"NPIN2G#OmidmhN0F_2N8PR+dddGa`TGB&?,"@2%%39;I1^t.S7<#aQ-;?-+r/cLA9M'`Kh%&DR'cC(/"IK
%*lNs8IDC%VOL?omk'@Jo7*6^JZc=YaNuqmm,CKcSboR#iMVj*;K3e^6JN=M!M<A0qV?-++26%?EIco?s`hhkqkKV=8-I?'lPZ08a
%V3;Pfd&X9JPt'Jq\@I,?FM2f5o[+4tA-$EI%at.L#d!(96Nc2]gJ[]p]uN3?.8,1`=dGIXqo/^D*_&a9p0]d799KEDM08kfQcPX4
%<6iOH<Cf#=(57-"/kYFs:5&skperFdTr?h.SI3&q$nWM2mA=aC4bf;!)$;q%o"JR[lUSk0UQBk!cRf%/,7o(rMHeb#$=:O5(MoBC
%jC$.p<-8#/?__23+gA0Mn_9%JrFs4R=88\`YICc)XsHF!F)6pm%(.BeFeBYroMs<Lh&N=_#sXSXZM-[c6ukX(N"m;-=M@$,]-H>E
%eFu\O^I=$\h8C5X!4S],kuJL21SpXPd2aNr'6)?b*_.D)R2dh-("q_p;ViI4acf.fHki9G2+P.`X"oDPBB:0Uca#kQJ8$b3Gt$$6
%p2VEoTWcmL+fU=!S@qo\1[!`HVr:7LdR1,-=XeMpW7`n7Jb$+B[bL>rTGENe^JLXa%?08jQWoJ#i+"P_;0IJH?(ru]&5%WJ$mb<+
%L4VG_m$+NpK+nEm*mpt18oH[CaBZG8ZkWD?PYJRTmH=I268c*&WOkFJ/F-`9d3r@j_iBKZ8QFI%U2il1=)#$<[BE***i4UZ]%nG]
%?A8H,9&UU[762#I!eT`oYI3Fe>T9`!I:O$,/1ZiKN+e'LC.')]*_oB>#_E<1rQkd*E6fLR.>Ag^.\NT-*l[FL%\!^H_jh3\W<!Zd
%9AJE:-#b!*^P60)mc1.a-.]3Qe`#<jP>sNnP7KlUk]t62&i?13j;l/p;b8G=X!k&2/)E]:(7,Bd9)I8$8=*arHZ(PaoJ`m+,]\0T
%R[pi'=UIneU&h,f@uBJpLlHSnG/3%jQ/cq>I_73A;X&4/CMa*PiYbB`SH?C@H'g;gVJC$Z"e5X@Nh+\=[bG4s4MhFuSSG7ajsZq^
%<@.ZQ^-rl*:fT_@/uE.K!99;Y2R3ajCiq;8eZDG*V$:>*L.hKVm3C<%DFa@&\Cm)b.lk*?EJOPU8:E_m4>r$ZQZld;Ms7F'BCGMV
%V*EpHlo<"]kR%3;S/.C*ijTQjM.qbs'md)F!h9#bI?CI!CI<p_5.^WN.XE6LC[+/"RB1i@hRl@ao:fS7_NXbP5k#7mis@0ZZ=NE8
%8%9\)DY-+9Vc^#XMuB.I]/!BPP2.]fcOtSSM;OZ'lpUN=&Kf3?9A.N!OGkdNf<i#4XRW4o-@#XY&6XH!CcUV1_9&Uf.?N>HE.O@%
%^4$oFM,$C#LjELc@i@;n>06qO,k;\(4S88%#ZsI5KRaoJ^A[Gdb>\hb5DO'NX?%padN!7nY_Iu?@5oIXh[ZPLefgVkFDFrjlKuJQ
%niHI+0.5:r;1Kur]-DYUMgPtB@3Y7II9]b#_V[#14Q'>0\!)]0HTU?P#2#+p2HfH[h]XhGPX2[k@hqYN+g?8=@9F1n4"HDR],*qr
%][J3jb6@#q<R@hCc`[P:'!/p#\^SZ*R:^#BNbC0/&m8CM9Z&R#Ui:Gn3+#L6$4J)f0=[a1'%-dLjAL1m\/XT2%HW_3;i)/.'Cc?2
%7`/9>aMB0/M^h=>D-h5)P3cY8iX)+(ApfECok]+U`Ng#IrUi($HF+*hA0sI&o<;`/NMRYDJ.H&p?Kp5H3sCPT,W^O[`!1CI'c%7=
%=FMn7J'*hd=9bmPA1`^m*6$$'m#bIh$Qp8[L3O#%g#%h?r9`giN`N(C6],2\gbHJ0pT4JJ.5DBPqUtrQ"2+u>_<i]k.]?oR0f9r$
%4Mro'*@B%u.jc2h)i0'-gq,ifd;#0F(8t,9aDn%l"Oq'i9F9B$r@bB7C4pCl,Ml;-"jNut*5:.E="*C:W/X4?Lh\E6WC#`a$&2mH
%Wr'\KCd%[M<23K$"8S2T5M>CYF7cdfGrJD'g#+tTOml%Fs'TnJEjf5:9&Qd!ZAT=@*_]SobRU';<Ta?CRMKC#A"W`YFuiaa,XA@^
%6/8abH@kEe,hH("XR-[dZY!2Y/-AB'Fk`VtoCRX/W-U=$j-p-'41p4]f).<cb8^cq@TiHGRDdBa\U/WO7H>:f>\<c9XU?#D!Y5b4
%Nn[(.D,CITbeBGX@29<@4+&S'Gj]]o="i.aimoQKr,",[DF.erO"8?_70/I84?4uE[]F,APKiAV=r_jHgML=m4`%o&'upA=l+!%#
%52^CWE6U[W/j'DnW``T[m-`9<UCZBAHU8U-9:GDuU(E0m7c\:C,<D?o#[X(_Y3*X($%/3T$$?d>-HO^l8%aVY@^&=/nU.g`FH.,Q
%#mNR=G9I6iW"0"U87frS>`+^"h#_<YIIUK+7qE'.WW\`Y1>;he*M-?U92rS6]O]mo=T$&"="/.PYn6lkmtc*\_o<DnhErSd=X.@%
%^e<6&m)C*5#k8M:T&Iq?<n";U[A91p/J5ab?.o`uL[+J13g(RB)pS.5D5AGdZ^BX]ph<LEd5EKlbg+\DgJ,@K$6<%Y&U.q?n2d#q
%'g)b!3,u_pn1X>%)F;OmUQ7?5nYN^sK4X>Q_'q.#gQ=TO@SD?hdR>Fs+f2JMPW#HA,)&8lf5/H(:X9/`UK=e#L<`7J649FbZujW'
%/(ot]]Ct@'d`0#.L=k8m51l#?[Ve/233:Q%k*n;]Z+F%!n'^P61QZ*hJ)$75'mRMpHoXsT\BXS/`?N=/2jmai#Z,=o!)"2i0H'J,
%:D*$9o%`SaH#\+#=+m?9Kt+qLZ"*['3)7OFEd8e_@<iFBEX^@Y[<mYk;+d["-6C,@o.NTI:4VVn!6dfqH86P#Ah[@S#@#B.PJLs0
%<PQCF5@Z!_86Xc1*2(7cq+j9^pl)?#oJPHpm;I0DJB^a7<4q=("lkAqe7fF;H/Z@<mU$'G:!E_$dt0Fa0\HRNl=N2\iVRk2RA^Ml
%^<L\712S"Te-Kd"8gMj9gLaJ8N^nfM'g-@kLX$/bkTd)e^5Ro4"D.\F<rpI`ca),Mh$3^>1:']eN)K6,O^oW%kj'U1c[GL-p2SKi
%Eo(f_B$pbe6E;!9k4NCk(MK34dt-(:h+QackP6ET-_E&=BIPuQLY8IDgb?5=GS'Z?&<RU@h4rt2&q_c?-oFt_ELmlY,Wf+56nZZ(
%@TP]*3n$*<\o$BrDoWBFV:Hqe/p(6@0I9@D@#us`67'IV>b:2jD+6K>Re07\+>k0=1:g-+!Xlll,Z%:H&%\`<_]X@[54&_%.-"qO
%'dH@27aYoC))PRkH\,IsQAqg[^S1uNiQe"@EKp`"iK#o@8dERrPbI`GH<Er58tdL`D20iG\s?M;n"mjim:a0mbCR,G+WASrnl*FZ
%cs89!Jq8c5(!qERUU_2RXOVPo5nmpWab%&V`@g.PaoU+Ckfnu?_p>/Up1t3@At=4X;E^8&oh`=sE7E/_)`1E/4cIQU-#J-A7XC!b
%=epRKlko*2jTN_8@AY]0S]'G]$C^;pckUpob>Aa*aCt*A:eUMQNbf0X+XZo2[j>N2pCVF5<)-*`g/kT?YOO@?7WiP!0ZL3R[A-+?
%dbYHg'X0*7(>,6r?NJW$?ptJ=he1oX-$6\$9J82(48G,``/i*bJL$=d>KEpVqIi.@T/GJZH^7MBBNp%2o`3ii,P6a?VJ+a4A*`9.
%piq1^^h7Yrjl-ooli;XL`1?$WHfX1B9+c)e$+!I;n"-P/[U([lO-GB[BfIo%<23G6[K.E\9i*Tp)m+Bsak)qW]3N99>G6G-n5-W^
%S7T4^Rc>o[[=!AN]kNA=rS$YZFGV+D;lg7.6QE=$knpOse</7u3*JVRV&M(mE2CAk"Yqcp/9RmGXPj\*3%Y2#Wp2tPI,.6br2k9=
%ongC]gIko=9TC2.-U2*ujPEU)IpBR+pS"+o]HrUW#MsUJ^ic%b=g1k[(uX^fqTCm[^E^R6OGpC(WY-O#bF2p="e*/`boX>)l5TF&
%s%JSu;7Jl77Dukr-1</fn$WAnnX,#6_O'&Em,hthDgMf8FbsJJ\k!EkF9=s'30rrImrh2K<'cl]e(Q;U3+hN24c]0V4d$g$i7)pX
%?(h=e,<]=G5aGp`c/egoMHCeNCR/N&"X[N:hI1aZ^[K2&&P'*,^%`#M$hn+^<"Yf0.I(;+/t!<oA!nF:,sisL$/#<`HE23eVr]ZL
%9Eaj+mgLi`H"u<2-NDe$1gm%?r0CX&!57Z:p3Dk<cSXF0I@St>8;eEs?BtiSC(c?ul>h.sg/AI+a#:uqAOkmAO:5Ng0+Pr<+qj";
%X,o-K<MG`8Am+cc\SZA)n4^4W&>efb+\XgR+[[;K4c(s3VSA[!IDmL#Le[=LXGgE;0O;Z8c?<c_Ujm4!/1gf<8<J6=p@iuSGKBcQ
%,F9"]&4IQA(]/Z]b1eYm-HYjI?@`_)"k4O9p+R8KbKTGm1l6+DAe!/0o#Jm4\H!LrpM0HM?Mf,OTM?1IG$GH^[cAN`:m8*./Lpi'
%GZ?,[SRmctG#i0]^5qtml'WhQWC,Yo)A-TiQ@9b\Bk`B[Qui/bZuT8mRMC<W"QNp\R8YF9`$20g-Wkb5.7APm#qNit"eJCt-OC)6
%!6IiO2'E5D/"m7ca)KM5*&^X9fuIX`A>IGr^>_?C-DL]2RJS)@SVOOOcon5k<7b%G("u9LMUmASW3O^@O<)m%a3!Fnp+-F`548<,
%AJTXL[_:)GJ*np)bk[-pJEW=p:RI_]pmPLn$1W;Yn$A'[^B!e(.GbO3jJoqOHOdG6c/M:+(:GR.r@NYES6H0.VdcNZLZUO9K^)DY
%&i`fL60l&tU%h2V#2G91BSc0n_50!mkYsV"XRgFtg3,<up9OjRP*CBLm"Rj^6qRRJ7a9,\BY;Qi.P#'2DKMKs(kHGG@;ltpmI@PO
%_BPKZaj[7>5S=?$JE*(s+dRFd:n6m"4@f.B[T2pN@#8*-T;T:TkJ9sgg$@D#@^%^r:X;n0hm_"Z`t!0i*k\HsZH9PF5:nMd)+&CF
%fa>6\SX+kKSXWhsrIk&F[pQ$:7AQk-JtMQ-o,cb)]JU5STS!Ei+0oC)V>jpV[!<G#`uA=,H+TIF'qpb1P@u/KhSR^r.)iQ00_^>l
%4iHTC37iGAU7=^OOqm8jQ4`h>Clk0m+2^8>@n\[m![@[dCEW@,@boMf+VWTuEreVrkF<PNSU62JP[3'2\L];];5RQrk,DdcM:LTG
%ro:K"+?%=,6%O%')+N[MrtU.GAkghXhA],RR@_ejBJ*u]!ncL5*]>UAm@PX^_N;!<VL9I^E_R9<:V,[#R'RM@!t"+WT:gCbEZ>s7
%d/o`)Vnals2S_%Cg<urd!IT`T[3H`!C(/Tt7:H7=Hp:l>Nab>cg1/!sT2n1c:(TM3F=G"s,6>I#L^%gpHs;\.UpHl?F;Ls0\L=d9
%c])32#TZ9SgTg`qH,:DGk'[T#E44`bp#=3r-"?SNWdUe!.=X6"JPqQ*:^@?uP3ah'=KB8]dk]RmE6sa#K(*P:QcrNHYnBY%p5ZIA
%p0EN>A&QosaonWoZ?gD>;'I17*]lNa\eq1n=/[:%cTT(;)W;'O)^>uZDY+k:*q<4+frYUjc1WusA_/W+(_N!5l7l\!cAZD7;eD[$
%<^kITP?(tsDd0`F<GBL5K;1>JNj4G;)@gD$eWYhX)7f7OVXD!cAK42f.l;NtQ_\@Q>745ATAG4844YQs^jj\7+u'8)&=)40D,O%N
%Ve'!:;6sOd)u(%i4apMr]HS-j";kuV4R^-ms.+Uej\!D+\FMJDUgB]F!cfGH7BksTYej$7+.eH+2IJ][:,YTLKO#l+o"bW--kb.r
%.$+;gQG\3XZ:_]VT7o'eP@P\?<*#gl'mT$p,5n7u05A+!Va.W',;*R"3*bKGEG=i?2@0l-l/`H\_rh8+6rSC.`B(E%"aED=0O<'+
%,<+/'b0/^b/sR@Z=I-l)nq\E8F?un"1j5f+&AqnoMb"jU2'0M._q-,`co\=X4rhL03<srufV;*=;?URo"^#4mo;Oh7AF?rYE`0[c
%Ir5CFXoISO7R%i?S<aoGe6R.`[iPJEkOM'.+H(^Ic]^#.O+6'I5L1+Ys&ItV:ZmU)n0l.E?H`)_(&^14bE_5I\Y?pN=BH[4_%dE2
%`ZS!qhNupn!@%$SNm7l)3tFHjs7V9cDlLe';/Fh0h7ap!kPJ?krboY>FP,;o,F>_4rnJ0/hph4L%,5:f[nlo1r;PJ]MLIA-5Q?)`
%U0mZjs,ohNQ]jkU=nS+$cG/Iu`a?A2fRJi1)AU0h5N%Fucd0V)MFR!gIi;>Z?_2iK0hg!p_!^uq0L``/11]c<;^Odo6D+0`i*%A-
%<8]uoK+nDcqnW<M!=Y.oH'!eR3Bf]=E]W=]J^]",;"l'(3,0_N4BhY&NT(RVgp\[+obbksi'63EC%?.+)F;_d9B6!6*Ztj1NG(?A
%1R9,Tp`9/*\`XZTTBEB_#LV:n&3Dhr_i<H*YTj_2M]#[.FR\?%d.@)K:ObT&c]>e)E;I2u+6Vhb1A6O2]6hBPfB;!FmTBQbfe2`Q
%+H!IhO.UcLDgUR'B,uGKiY]0THg0_iq\23eK#+Y*R-4KQ[ci<8mAq3rZFZ%"m9ec@'%,_I@Cof%GWSQ^6[AqOp&dp'6.,nRQest2
%3t'Q,[q;6Tqk2>D*0(gp[kt:EkqG=E/;p90]X?sEP"d2Pg4-h\@tMf-#)/+%,Aa*ei;g]_"T94_.a[\pK_qG)B]4fOU3^t_R@-O5
%5UkplXjk:8"qEEOnWZ`':lJm,W0eVGE\'%,)NIl=%-/5O^'8t>)E\SA3Ws=T8j+lXBQDhE)pX\s&j9j$DH3(EFH75$":'#VXNB6]
%5)/;)Jh96MEc<`G1KsjFRa4SnU^1;>KlGrlT0%RS0_lZJBZ&_U%hmZ;HGeElM#V-`@lV(Y5k!F5`Le6E_shL9K'pP.?_"&*._UG^
%=%[AIdUttDr;+>Z8fh[u@8#O[bL95Q[D-F>&'PF/OkTX$Bm6lF>FQFN#>PAP_[5Oagp^;1Cq+BBm=@R4E-qKWpl=[fm'fQjc'eT2
%X8%J?AEA7&a8#P;5B&HZ?tJt`As;CMhJU(]qh-=QII%PFOR7ID1jd'JA\WK^q8Xim`EJ><rOGFGp?c(7G=j`SkJqe(*mK/'\$+,[
%LZ#V7>M45`Y7LPZC*35AK>-`OHd3B4X3Vr79J+Kf9Sn5q\2Y;cg$AfgS(\+=&4RX@,)j*%V(Z3qGKk,>q7%AJ%]BfmDA(SCd!Z"S
%=l&Ng1RXM`TZHWm%VEHF+iQT`n-Si6q]@e<.:kCX+KQ_l/.*,8=VoJpSFZi)hb\j,jc>I"FLZ+;WuS(R`6MRi2RJ`2D8tJ*aTmh_
%*3oGODA\#0dpCmt1dH3NY5dPBa3M9@Ic#&3K&e%E@"(f8Y>9Nhb[Ysr<\&XaP/8%j9r"$F!'Pb\!VC:Phl24tZF"Q.iAc)"hj3te
%2lDK&k8J%b^f=R&R*E>k;0!Rshms.1^OLWdbX/B/"*>X!raO`57ihPsIq6Kr#?uHg^HQYIrDg?Dem["r@3V-AiL_54Zn94N#7`tg
%b9\Bf[=%>o?BgoT\\UAN^O1FaVW8J.nDkt`@OU*%j/I=@:"e]t4@L`?;;qAIe3QQthB/C05l>X#ppcO$YGp3_P]VL#e<%dQn411]
%C/30cO/lP:jLA9;eJ!UPRd+`5E.iXr%[3DeaWD&F7(sM<E1_Q-EFro5e->P8j8E!\/]?LAclIAEmU^ip4&'r0+.ebBM^>Vqps1%$
%Od?AYUU0#@]BYX^^Ba5U".nC'BmtMii2tMdY@,:20r+DlB-1u2iOs[;h"[#ro_gWEr-TS*fX+'@s/$=?iM!c31m5\l:NZ]n7-+kW
%2j&X*f>k?&^?5@@l4\QD6Pk6%U*'/q:=$+,*o5SWpD<Z9j72X[n>"M=q"@%(T=&Sm0/CNbgNCN>M+,Q\%<D<4(FF[<DAQe'AMSL\
%FOS4A>WagEg=((N,bE/:qtRS>:iFqeoRp`4D`WIt*1(jKck0+%]$HI(j[joQq;fIXiQ$%gi[oF%c`]JjcKSM_?[jfR5Mk7$QoL6c
%GjtIX=G;[^"e*<PFkcf/?R!+^Fp8G\Rp(r8[a`(tVT!O>%ifB\itJ'*3c]^$3rM6?K3s*__Z)Q;1o6Vq)3bA'XL\6KV4U>u\<*I7
%B>=&eFLgVFP.nb"4Gn2M3X!Us8k5ZWbQ9e8dA]rNL,p_1IXi]`f]Yh[JNU,:Z`6>j:6SbW1PA`LT9>=JH=ZAmb.U0faMB2Jd]42*
%pkS?%QZ@OkK:Zoe?ciV)(gEi?_'`DUJ3*uLELZV,9G#a_Bm$:C>JVc*O[3(f+`Xn)Hq>d3B*0oWi+Wr1*-K[m4GZ+?QsW`t&HK(:
%(f,f,Gb/hd@/E3a*%VRH.9i5cG>."_(R@0D0e&G0L9.CO\A81$A+eQMOac8F.(@/5iA!/ZEUpLsW#V[\kpR9JUKUtnR"Zr^-VV3P
%7a5NtdYSr#BAW6P0o1\U06^eK:dr>2(oP"Ek@XEUI":;Nc&2.Fei_g/c-!BV2@=3`0a21jO8&e4_?rss&ITc8.qXn9TGYoS4=O6^
%h_tN4<idf;*BX8I\-A<HJh'6.9Nqe5"Sf;43D1\YPk=,9J`i[G!sI%Mfds8CZ9(>i@,?B!G.m\jTUX.R"36!J8$_MS<a8>M$i*L:
%-3Zdg$KT><&6iJXNe#iUTeohJ+Wu>P=:@Y'?-s_Gh*TZ$X68XjQ&Kc`'njOKOJAqQW.JKmR0tC;hhH6:$s&i=2Zl[_G2T#V<^2a<
%E-6C@S5bIB;J+KTVSj1$PADZ":o1NYC1(H%hL0*bUVdk`f6WG_Hf6(cmiE0aS,IF0J[)6C#PEMba$krUY_+\?nTWIO'rE2%jN6G4
%b6(&l^Q/"=l>U"F/$;80\tWd`(c;4<[';/K-#-F?1r[EB2#dFZm,PQm2c)Yf!se!-p^hp\'8=$&rjHX:a=bJ0E4]_]*OnO-:n["L
%0V/],o7@j.c?KF<$W322'XMLM\W='G@I>Wa=@ukg\;BhAJMN,!8*>8JI&SnW+k<+-%".O]U%kHjH>j?dm@PYA#o2)\B/G)(Fq#<X
%e@?^d;X-3VV;PqS^anjei)D0N7Q]22/PIlmUVCjijdNR9!(UAsG3T,/pHGSu20!N2$&*/sBL0T0P;-_e>lLj3dUNtYX=NMP8EXId
%'Z3J.7p%$_jirZ[Ua,J]lVnArE!;%1bVAG<*!_Q0ZDV-7CXU"iN^9I$@b-lThUt.Q2FUr0V*l0UZ&&mp$3>'+E;4e5hluX:G8QMI
%T&<[,Y\/0Cn6Y^D7+tA'R7mOU=a+8oC&hj?h?nf33oGsQIZ7<b(5Ric.uq#hJFA:^6Q+B-QgU4BZX>LE6$F2mTTZ$'[bbR`Wr*.t
%$=C.o9lg3'7J%#H4O*&$(4.)$hT@un5e#kA@RKfb`rYdA$B*!=Qs:WW;qWD"mK7<85_J+%$cL5L2b.tZ]\/NqK38db%DXI]:6l!R
%k;4nK_WS9h:QpH;0Y2u)p2R&P$U$"$kaY@1s6&*AK,Y1IkE7%iDMB:o<>]5b`n+gTs!]?52=HJQ"LVC_7,jJKJl];(DSo&Sr;)Yk
%Xq83fa%t@,I,P,HId:+mmEbQP83H#Jk1p;P3PH:8kDUqggMj@"K#K?jr'2b%l\H].\AS8GV%-7$-)eQRof@,?=5T$nLPt#>/=n9>
%Y[,<8U?l<q\l<8F@$>,][`0l-Kd(DH*"-hfi0.K\I2k2;=YE4)#Fq)/DCj]p[bu1;RMe!""LdghcibLCf1,q;EsJl>$udVN*2'Ji
%?<#DP+uf17IS@L?;72f:>?/NW[]Rd3P<j9HmORbdhs;JteN@_\9q_UX">CJCo.ia&%1sThJj3`J6Om>kVDeB5)0t6FklK^3aNZet
%RH$d[brZu,<8C^H"R-i"6><NdjK""4]O,<,.4t^@RO*:ZR\,2_lt67PMKb9$^=dqR%T&5d$G<th$]VY@[R^e1j;D:F6:qEq#UemL
%c2#PQ@kVDI$=iUAXLQ7R#1[kr</'SHLaG@'53fer-^&aI*#i*/Z'KTD1m)-ZJ`A.('dCI0.6.l4c9[GP7Xk.19J6[>5So!3h%?d;
%n[>T&_$[c[Y@o'/Cg7j!m+4nAO-Nj(^a8r5;ii&Q(aYIB\JA+LB<6<X#Kt5;"c:9:TSQ,MPLNS'#_/.L,E1Kr*W!#ENpmBB$XMK(
%jcY'5>VT!W92Ve0Cg3_B??3;L!40+eV;*ec5*)1)=k0;Ynb2hQCO_pW"o]iP)cfhGcaC^4HEh]nl$3B3TlaHD1Nj?r!Qi@0[7l,=
%^\D$2ec<o>oEA@67>H3G'G&##R7D`hgQFJHK[3I^5q,<=Q'cRINl^0Mrqk2?,S-;(RtpJo\bc3*TE^BkR<9+pIXI&-#-_1#(5DC5
%=&_Ld8;8TATt:n<;FQrR"2I$.3/e!g_&3i[KnENc:Bu!RRNgU"1UR["TDK3?POu:-Va6Sc!TlSIgmLVg1D.JGc8!2A0c=->/rU@j
%-.Jq-247jY=/"_iX`Xk9ZuKu^`B8ed+.%Li57f,fK%Fk*9kd19Gb'7:oXMZOQX1NoPfYMnd.1B0LI*=:*L"kIq,mL86A^C1IHX9'
%`esK;D@:kDIltS55oN-qD+:ec"?&;"YgTfGOJT_<fV0-)Tk(>d3n$jG"Du8MEV*c'_T+`]rieCs^i5`j7U09^2^e/c'PO2<!rB.U
%Tr@qtI)qTZ]_Yq:fLm1nBp*sk?<1`M_W+kRoSE1hJ-8GqD;5>-);YGW_YHoU5?X^R7ZMYPBkP8O?\'$:J7)#kAGmXY-\]M_$Z=8N
%jr"6D,>=20%D76h:sX]Im%u)PDDs%CPBodI1EFpe;jNRMkp\4oK&_YcZ>'FTSMmm?G$H>KfO2!5P2%/3E?h8WOlF0'1?9OtQ!UZ#
%-#+N`J',V6l#&Kj0Osq/"@iu<RDTY0*g<dHp^@aM&+[IMIp>uSK/G4PPSU4_ClG8E`AE,%96p;3*AqL-R#`PX=.,QZ[\AN`Q%OCt
%UKA_=KKe"&31WIhN/gUIA&=R8`2_1=U2W"pcD2n$+2i'5H-iBR'?uJrFeu(sD8E>t7a[8#3K(+q+RaOrne/:`X,M_9Gb3(eM/?,\
%DKXVhOU*L`Geb%I9bN+o2EuCS)ZG[)q7=COKiEa74*p0SE>Dkrnn2e=W?a7Y@YlAOD('?FE6\I<ft@Js?5)0@P7sJB/JPITZ")Ji
%W6!>G`K8l:-)Sm@*MdmWLXY.L.=4@A0q;L=d[>+ko!7lJ28.[mT60%8=S4e2"i4p:bEe/B&'@Z#gcLOe0$0':[J7/8jD2ad.)-8?
%903=d$s4t('OYAg]5lMRfshHB"*)2?Bs"l!5eW$'(5;fm9gNmb!Lmqn#TPo1!*i@[C;YkpfE,E6%!$;0R/n44b7WFWrAa``'/f1/
%l>l]6l\;T9WOP(A:1T(l?h:r5m)3A`T^X"'SV#.].`<Z%N[u`X'4jfX_X2`h\W02,76"E+-6(\i\Uee0,%)^q!`!dW!%cC].O\Zk
%SR8h%REhhc\fUV'`;%rbMQ?_>S<)@A0;'m1[qUCDWRrY"RVsPJI)9Ii;@h(h-,$j[:!(CQ;A:JH3YEM@gaRL7=K::0>dM+U]+(Yf
%H=RV%HBZt5q:Np5I7V2#`")5MH.U$#?SMqopET56$.NU2VJ6Fr@iq>K9ei`Np,!2DW]X=J+?;eYN*,]8b$NKSfr%(&2GogY8VbdH
%b.c'P`5IUoXrL1nRq.gq"JU'b5rB:g&k01:V[p5$Z!^IdO):?i=='pI<)HT,%*)<K=CGs%<a>0sKM9o!Ws@G-C:\<rn/5M.T"`"K
%:UB/5ja]E>Z9fk'^6V/8pO=%8TsDT]#M1<>24D&pE3)qW9,?pT)KX%Xl)5rfbP65;.%i&j:^a<eSTm0EN,#U)`I9TY9:H1P`l,qR
%=D@TL[kMK'q9G79JP'WSkZG&K73"rr;4=qXEoJrQD(`K1h-&_dMYjVu="?J6(odpedKc[#%-)BG4#k7]c4R^R]r$%'6*?LTDdqoX
%GYY97GX.FZd-*[!=Ckh8N[#tp*m2RKlD'\^;Eu,1W-:%!O)#a)Ne0:9I\]Sr48[cXg&)_O]2aq+\-kn2oQWZsfTn[0W!t3e<C[Vc
%MI<?KSm-@#]s`7R/o.\1O@#W<)3\Qb:)G?9O$#eG&[;DD_\$&<qh2,\$K;8n>-`#VJs[1%'4Of?[NatJ6Tb"fK-)Q3A4Iuh7?2)[
%J%+(_GftCJ`]UO=#R'8H`[s7,!l2=QQ]-5nb^J?Bq^@=I)^K21DED"18/&L7guGQ/]au%qQTL6&BqS&Ml)Z=T`ZSki(9$L1)E;dP
%@.*8]4rYc'F95#*)DQ`c]q*RT0T/l=%!HJJcRa&2OZM0Y[QbfhpfmVt#L#Kh10Q\h@H?\Da$\):(dofm[kC=GR)U10Xns^r'%M),
%_IArXN%aF4i&+MD)7F>ooWOj.)W5em!^AoXjdm[K:(+'K:9_+[_@k0Mi`7=?+J_tLO)COIi`\?S*m2!UK!8qZcHq\VRqF:o;oCYj
%(!cmMm"q*LXYeGV83fj_+#&BoRI>r9\@M2chm.39pOHP^)I&nnA<':636R>HKc9fQ94i_083oNYZ$G1s!u8sFgLK+nA0!AXc$#%*
%bJ(ll;m&_j>+ON=r(QmIi.`AQmdNT2;3uEeQO"PgQD4b7R!7R:EN*p&ol)b9;K?Xej"VchGfi5Q(O\Mg2@d>eER[)Aj,Lk./oN74
%IuXMuIJ9sHV<>i1QRj-mX.:#B"R)jqc3>OS!F.Rn(+Ko7?c9P:#]/<HdY,9150FfGB5;A7-TD?U%IS+%!6OMZG=++5Y?_3h2l)Tg
%nH)!!VZB=n11G)5Y"C@f1#TQb$9B9-$<d6A'ma%F@L]&Q\R?<<IBD14b:?0j2(gF-_p:2o;7A^uFEn+ARnJi2D)+29+#FBDVH3n&
%97JA4MIKnN!0MS]9%%bbW4*gfn(\ZE_MLLM,3ATtDSZPIpq!nB?]sC2S)risRKljua+clYD%UFec@*[k:p"T^^SZNhj;V3i@FdcS
%R:NLb[fsa\`#5LP)d?ic5(k/8%ABKk#jm'nN>oloJ:J[A[nFG%>_mI?ibpQqdpRER:Z)Sd*qUq;ojg^0(h^[61C_A<TiY=592Kn`
%S[VQo/:p`HRm9=O=`mgo@^3c50g.9U#HT%RicT6o1Kd/#<N@-JV&LREKDae:BJ+3'>UD[e1<0E#.rJOsHp]rD%5qAil22UMKm:*Z
%aGq4Eokb2am%>ht]K(qbf\pVKXG,\bU85\+&\=8JB`Y3gP20n\cYD(0A"qB;9Fg26Y4V8OVf"0Gs4G'9ki6h>`ecN=+Gu1I7IXp!
%_.O<J+dd6e>k;K)<'Ft*S4P255c&'\cq><(@\TbG,'\N3n7@:^.c97lTq/s\R6\WF4LgZ5N_SHs2\_id$A"+N&0jiC)g%$TB!pS3
%?oq,Db$k^-KTW`3"-PsI_bCT_"3e(:-[rTn4EnEl%n+CM;sX[KkIX&mh_tBB7"UqCbdlE3qRW5,cF^*]_1?:]WiI1p4O`Nt98Tl0
%!gr\=XFsT6[o?-ZpO]0M=EX/-R\Vh-YoV:XLJ/rgX>*4$VT*C,LCV4'[#eM!]Nm1gP)2/G^,\]\_oI3gDJp57p-?FCI.BhEK!Q]S
%TK&UP1<RVO=GMs".4#.p@u79Mar[5[])ui0jR*n^Mm`M,KE:1`[RiPb'u/>F<gA>kfH-N8!@lZa0bh=V/u0ecnporZg]^cp68?&t
%\"CPQ@.Cq"*I0]bmY&8OD"]G1!e_J)M>(,"RBY&Cg#d/1,p%;_QRZ,/"?9L$qp.;S1,/MV+h1sFa!cZLlnR^ta0!`^[JN9Jo=R9?
%^AZX+j1s:a3?dJ/F1t;Qc[YX#i5^#N3s?/YG'Ips-VoctE'.%)r'R2c`@f"%[:WP@5SVi;?*#rLeBfFA1'OB$hA1Z4\;pM[Q&)?+
%9@ZJkgZ>#,hsQJ1;0QfWH'D'K'Sh*p=`iRqq[m<d!iQh/opZ!>$[tT6+:':jN)pjn*1I=EDcgH*8ZUO/>LkOU]]R$^P]T6HnaR#K
%`U.')b$&.1+M'Tq7brAEG-3&`Z?GuJqAWrMmJ+s->.Z9CVM1VSY/r$U1kSt]KS?Aj$L!FO*e4*2%aJ*@f1*\D[WR:gl67)'6X:jD
%e2FB[lrVA[L+k>mi5VZ^Q9Oq#9*g2hUAj];T=U0u6\2QBBgACQ]h%_S"*YM5l7(r%a$j@:Kbl;7:W',Fgg/Q54JKg2N1cG9$39,_
%b#.B`&t1*"I$b?e\-[:&ASZ%.XW3b\>!LpNmq8[KE<b-(?%J(#6B^\nHG-S.`OTou?*Eo)%p*hfNJdSRW[%Zm"*:RIZ`^^rQ0(23
%Kk-Zr][Ls:%MWM05pL-FmfT`\q`2&=*a5pubmMr_.^tqBGh1"IcrLS!pce4:BV@I&C9I0qCrHkEfK5aeM+\Q1/%5c_[[\]aj&1R=
%Clf?teAl14]=jaebRj&qYK%Pc/;%hU3r!mRb:V9kPMa,8XDNr\AjHm@j`ilJ%KpHrU.#@pSh,j8I9?)L,kT8PdZC[\1qV&$8p1u!
%gfUgs?)fLe:Pkn63uQ9Ri%-a%/PRBI!&;L"9=E7g&DB2>3VKKP`gF`OE2n[`iF(PW_#N/\SmLScV!dW^A,!D#/d&a8\3+YW"?t,a
%S0?YSIJ/!@2'V!3rJG\4_6+Ef&_C.C@gi=F)t")+M_Fa;QBIb>/a0:B=>n#0jX>$U(nb"4V2iPM-7Sd02/($eR)TO`Q%PA+X+/1s
%j:dG<[bZ@Dq-<Z&o],ZLSU=I-:OT[UPJ:\2M>oqs/EN(oPcnS-K%W4)&)/n9d2A?MnrePjr'W?;EV7AO!g83_s#3hd)p>MdB,K,6
%e)eUJqsNCGAdWU><XrZ!eeNDFkHCeM;/uJ<B8kD_j@dbSW$?oi!0.sL1mPsa1j?+W6C"@l:nS_j=BFQ'M%@D[oTuUbRlX^ic4*FL
%##$97oK&46!]90AWiGuA(:)7M!e5S["1-G`fZF49m>T%O/]7on$DlLfCf3oh7^8TQc!h.TIG?^dm#Ed4=Y)0j\]p^:51BY#N4fKT
%lA*[h`SOJq\+qcafO^a`N%h::Rh?cV@iG6QO@m`K9sNU\F`8&c<c"afaB1Qc1Fgu?A%g'DTs*9(9^rOpC3KX7*U=r%'SI5B?K-*<
%jt];,"_kDfIQ5/FO9LtK_Rir?\<L;1hf3)B*A,lF%4;G;q`>.eN0V;7?(?1uF"u\QLD*peFDlX:ZXo2l<MDc[^CWZ%m")/BEkN%l
%b06W):/WO`UU>'>[-I#=DprZ;8-N<E&@/CI'2e?dnLo^&ZqVd/R@8=M;BSK^3NHb2Z'oMLB@oE`HFfKmZi0EUkmk\ZNQ`(sQDE1o
%2Us5dk/CE3`Lj14+EmZT@?_dQ].b>q7UR?p["eCn<Ep+A,P)j3N=iuh+-Z3e$mGPlGD!kRS7#O$Fl@/k"gQVgepZ%NG2s^-*I!39
%3n3F9nS:"VRu"8sMqbP#moECXrp'[V:Lf7,5nX(3&j=FQcgm]@M4XaIn,LG77,t/AMYk4&?/Z!`HLf>o?!/,'*!2H.\TV0t8<uB'
%0_#9CGTq0i0+O=F9#8%8`'N+q,C4j"B(l#1FM)tn_%M1:EcCPEj*8]LI2gS/r:+i(d!]uYj`<!Qp5,Dmhk,6.Bn)c<TDuSUdBEBC
%?^BpUEgCBnjS_FsdJSp;,Xq\?QKU4*^L2ot#KCq#U)PXucrBu^1speu#l_lk7/m?fps5XjI`]Da-!0lHG/tB*1!4Dun/pg>&KP]G
%!&INKj$MRD>Wfg=n1?.;(Ph[$^sr,=';#P&*Ig2$NaW49\oloa"8mJ(ANfN)k9]A2:!f"S$fq,c#NeWuDUn4o`fG?=%QT"%0f?_6
%hleENcuUa:'\8k*e5U_1RZ*U,^@\!S't&BrT$=H@-fOOMIc)k"Adp>WIa%+j@dE1e\AZte,C0uY1WEn;21bQOM7ca\`ua0n^:<s+
%ru[jm7]hQlr3=>PoDC`&Im3)6Il#.F`RN6Ld5DCj!kI-;U\iYe4NU,$0Ji\C`-mP4Q9k0DCM.pCP-<fXq"?9I\W;ePT-1c8'b(9U
%-YY,5KnGK<,^`r1b\__eV2\0s$<+-M?BIDKd1+St0)9j\iB&5pdG)^Gre^%SNX6UoSfeEJQ"]-5(KoAs\dpZ?rCZ7I=9YDRosePj
%G@Hp\7m2I?*0!qo4Y#IYiVto_@7<`F-B9BSFb;R=e5(%Kn-(pofVmDBpJMe(/*hRXK<VC_lt9">En;Ai1,!(:<?%O?)V!C?p0H!B
%K9BqJZ2:@4jQ_dXJFFG$d_FaH-AUL:;sCQ2,GHFKIEMuo)-bt0qgNcb_6^g&a<1HYMkfpdO,(nh[NM@381"0+M8Q.4[t;&fdY1CA
%+lXtHjEN_YQ[i$boAel8Ld,+WR![`q/l%SQouDE[79R:l>q!25k$*<W+5_W4Rf,,P@:857gI-S6,*MUoOR`&KJ&AmZ)n(WkraHmd
%T:ZLOi@uSTnKCR9V7sG5`#e5mn`];"ms%ldo]*DGOXF%kk>W?^;s=lV5CQAPC%g;/I=:OoK"04Z+4oVX&,^iJhf)?lEiMMFIV&pL
%ni_Cr.?]E&NqW6%,"\Eo4gE%l54GGDQ9PH>VHALQ>,CBW8b09Q'g,Qc73h'5TK<A#^"P\77^C2/h<>?6-g1s^p[-t]^=kUDG&RR"
%MT164\&J,7KmU@KF0G6:h)DiHo&n&(E`uZ"VLWc=2<iLR8p4_O54Q*0nU\S.XtqLj90\8*Y^NUM1&(%9qr?/;T,qiugLTci@R2JZ
%E;"?NIsp<68qh<Od/=#bX0s6<L#a9D9O;0:`7r=Fgar(Xei0hBn2EK"pP$;EpQ@:;D\j@H["tNmI.XOtHe>"gf)Nb^os\kcLmdJm
%1NKD0?248SC&9Ia2"(*EFZtlq],`<h`*nt^\R?-/E21]GH[lt"LbS?H^;(0%0d$M)M8]C2=Ho]Nik'Zoh3n8`naS?N3JMa%;<@7j
%E4>=b5&kNaW]2s&I:nD--j#gd/A/r**J851@Bce\HqYG5&$<$W7Zk[-DpU'Yr2S)(Ns@SCq[g`5hnTHrjCuFi%Z=4Cpf(9OMZa0/
%clXC=@'07M6f85:/)<Q6=nR73`J2gu>L2<`/]dMLBmkAfK&kC)[Sq+:+S\*O5kH'Uq&W%5\^?fjY!VB?V`p^1l%:Fb+5c)JdUR;N
%@W5nfOB2a[%CM?ih]Eq):Va9dpA;,iq>!('5;nksqTg*%RL3e3E/gIc!Q^2<9`;+fJG%N9ifB-4+Ho#(TJuA6!+#O$Kmpp,._S&j
%?JaGCk7`7KEBcR<I5^j'+)gfG)>b+h6-@kMBO^:l5!aY7c>P[-KTB2M7nE^n:CqYi,)G3/K*WJSJj2G=UcB0tI"!\;qWO=i%k44M
%^_Hu8bo,##mh:sTRg)9C,&^:LOW8H$a!?)K7<ut8hg'+(e"m&ZraKX"\=X.E&JrXgBuIq3PdCdk?Tk=I*?UrpWXg'l[);%TPa!p%
%"MGrGkJ:X/Isg6(TIf]TrAf#sI@Pu)IQP.@JG#>,7!a(L7#&VX=,<hY5&'e(7>T'Dc3.i3JhA1e<V^kV6QWC?^<@g@A`[m#U_@LD
%YWM.(@Oms"H@&&\C2u;Pg53h"n$.*M8BpGdCOB;RA:\on7;1P<%X72d#_W=a*A1UK3"kAq;a_HW%;$;ZWsU^?OM6G@4-^nC0]I,s
%'(FmRGb6R&\^1toK7Thb,O`*/5*ooSNu!uC"C<ngYX2E;Xi^s;8n#E3i^]M49b2Z1E'A5&hq!+hgH[b.PgdLbQ?*F>'L!8MpkKtg
%:1'@sWY-$Y@_3gSLap.*YiON3c*oI]E]`l+DE@asqCVk1D^i`$2^5#NoY*5AJHhYqZ1Hk["_%8NasPlQ6%U0mGZSAIDCSPf#):RK
%?Uq(F3Xf<Hb'Mi1/6ZqB1"Q".VhV_cKWF[tgn`3?#.*Mi2bT:'6%DpoQND+0-0\o7+$e[g!_"K[h[3s19P!,GGgW@.(BRZ*3h[uV
%p,/^(Y^"$Y21aak8RK:-8.<o\8LPr5j=tD)'bYIrrR.:RIfT"LX6qVjZ7?<6F].:Eh1ll.75(ZBCnr0["^GV]#:Hh`hC.qD1M\^/
%._>+h$iPIMN)c_l(!g-=WqS%5f23jN,DQe;=25F5#)`;.X#C`-LBuQX.PVQ9jCL><5UtgO@Z[da0@'b-3k_Xnn<)\a8tpb#_WLI3
%9]G?"Dd?HbKP3$cKllIF@>DMPp'E,P=;4VeOd-ism:.%Y`eJYfk"NW%:$^D.S9;ma8>jB_=rG8joNHj"rU;J6N&@%a)-s-OE&?p+
%,DP42/F`IN[i]RA<Tb$YJc+-):Q-!;@L\#?E*@E)HAro;Efq2#qoA[?>e)I?gehof?56BIRWN*DoC5h8%BA#).,c[[fWr1Ce;fY`
%`SA,jT9JIlYkb3N]GhdBL:iu+6k!F9dTo79TQ=m+mepB$a4o5W?$r)d%9Y&AetXYKmaZ...:040%FSar7l^RP<Bu&Q)b"U6J%&P2
%+:LD)HPaWgGs,>%+p_A.M]:'!U_Ht=T\'[(i`Cp/Fqcglo?LKgW;,f5nE#>%0MuOm'ICn#&FTtiU9YW"B%ArK:lii*oPO`C3Y$AB
%7KMq]Gm'A'>-oEQ5.9O0heKhh>,\b&/eg*Kd>+U'BC*@+j,DlaWBS*RMCo5ae56q%XFqi.)7lWHc,,:q_!8ERN[WogqirR/=$6qs
%/816l)!t)=UeJ4jln.%:Nr?/]PtXkPq?o/HjX:-lPi*O6K%s[W<jj/!?/46DakPjWjbupbldNR)HX-/FH-gTJS6(([Md<tD#t2?$
%c=9b>,!X@-l"TYDgT:,ca,5'QTi,e>Q;V(@[pr(tieCZbEoN`#Zhl>-]&gQ!LViBi&GnFeCH9"QoFP%fm^H\oLMKD(IXr^n]Y-;\
%Wd1mC:aH_g$1B32A"94?6HETnmlbR2MT'YDCY2F\X?rjZYV!)2\uY_;>!#Kg6DgG*4D[t"Gls`I!`ED*$o)iR#YQgS8GUR*I=Y<G
%Cu7b\oMT42Y2CG"?pk-(G,4N[c!=7m^[MRYEsW'M0"MWGaQO.qKIIWI=jn86#dDY;$ZrB%-GYr-d-_[G3Ir!]p`Rqf[h;7Th)i^3
%#Wno*Db-fWE`7h\]d>U*O)J<m"(2Ik`3pYBT]-]@El;LG[u2P$;L#Ni(BZ2.;3OXhlr>;$)>MM%Ve[eJQU(o:r?;&h['L)ai:;Wk
%[@MSjm3M'J\D'FRL6%+'*>Y'WMu+W7R:T.ZdtP/L*/#?HQ85ocB.E3MTLo!*T9XQn,VuI.7?m\cO-L3.-b>:N2YZ1>Br7?f3[BV1
%:t.rr5I^T2;UkGZ[c?2Ci%NfuDX5"H7kgrchmcfo!Sit"oYX$=U+?)76l"&"@6T'<fsDJ.A>1G]%>.YL63tS*Q2:/5U68)!kY#8B
%)m+FYeN0E0jui]hMA("=3UZfg[n5;YG?u(NS=lrhO3;R&ni/0L*Wkk)p]s?5'sp92LIeZ8M$O0c-Xi.qm5RXJ`EBj+@M%:.UR6c+
%R)UH+I#3)2c>*_pE/V/VX.ubFLaC*%!4[\e;Y)p;H7'gK8@e]D<]FP?Jk#DIj(.3jRfj&meIo32HFCLRR9;QDorQ!p6$i,Y4`*TT
%+fDSps04f7'8)/=K0$h852`j!KG(Z?$q#kneII9s,i,1'@=X+^O+lu&fK`eY+]p\NQ>\&Bm:c,LPA[h,TT.u1Xb;36='l7qal8=h
%%5qu8b]@+YC[3@,LBIq$I2d1.&(J5]c^eGWAB37<`>\\Y/uhNTTnViMh*ZJ@e9RM!WX<"8%if%ki+5fHggjdu6]%3K!Uatp5AE'J
%9^V5p6M=$%1+L>+Mc-0UD,hc#^fHA[P-q`Y$['TGYjmt(OJN-l^o#ZpWft*'BV;f3N\buCG\cJP]l)Y"s2)dlo!f.-?obXEeW-@N
%K$;J3AHscXKN4$sN:?N\380+:^H;`S[3p8SQ2.hMXuX[B5[)lZ_>Q\OD6HZ>lcan]-I=5cb%[Lt#EdcjB"Mk/@.#>q/M\Rl%r:@?
%$E,EdRt(<.<@5Oh:Ug+=(r%-f*8Gh62oeC+km0Q0S2G8b:'=30MZ;V)%%V@rm<j;qXm9A7TQi9K"tUq7fPlnnHY:+`60mJ<S&iTe
%qA&d)^t(t!Lh#Y2iQc(GP<*1km.-[^?C-<)K$oPMfnO1+AaiIYB,-dZYu4Wr)99?'$r]j!<4_$PJYr@k>`V9bLBmg,?X;d@65Q[E
%F?u1(j"JR`$#rEA$H6@tKYc?Ka76d7m#rL\(:9.TQW[?I<pV<li8,j;YXWXYO-XU:MlbCN+"pW,!;j=L2"=ttA2*b'qTqnQ$3'Tu
%cDNu(T1Y"_j:QM028pS.9d0bIGZJ]&)6[ke6(X\!&rOam%.Z:.qRAI0e=[1A2V$&4$n;mC?u_#Cf!AM'$q:(q_"3Rh-qu;qP*"c-
%-?D,i_j\[&+Nc^3Z"-I=K'eR\W[-;*$:&HTEn6,@%Z6H#$5."gat/_AR0G*5Ju&tZhYDO\cF8-?:_n*f/t7(^7fgCFRG=+0K[l6o
%0lpN,DGN\'b'[)+3=j.nQt0b1YshgMX4B\=1eB!9G(0fjC/dn=k:5km,&fui"5-)@?a"8V:n+.XnI3#LdfSo>N4A-2RNRa9B5Vf:
%5UE^f["oqBq'%<sNY^(dM%?7WcQlo<%dE5d5^Sk;(,7!fQQa33obO3r!ca&ZQG"e!RPc-eon[eu+40HL]g8^YnUM-`VKTHK3,D&e
%V-pZ+K>tXl'&.od+J\1LQ?rqZd77f%\448A&;1EY$&/!p-ta/\;l-!/8:>@]T7)I#Yfa76O3JE4dtg;EPfiMiU.8(&b_A<52+k_n
%MeN-/gA9TZ`'e!S#OrF9T)Ke6am>YcOlM:1LH,ZqMrjLq?/+*jO*aII?/lr>DB4>?n_p!qNBU\7=.DZ^:)Ng8DGek4jYJO<8$^3d
%pHE:Nm(7(IoOj,kbht^iD3%ULMK_V/gMj$%Wtla?NWZZ*<.W1s=W;CFe@3K6k#hs(d&`gp.`2eoQ99tiY.-UNY"H%%pFm]'E0"i@
%JIcD+7KJ:H7h=NUZ8,?un&maD2$%ST-7@$EE9j$:gp6+a?[VnQ[Fn$b[fLb-$)Vm]-m$h1IPrn&J_+b3S5rDrI#en&TaMa!RW$'E
%P-T%`V;pFXb!H-mK"h#^csRNW5quS!![^<G9nT<o!SDNXTZG@eSqHd>"g%QJr-@gU'$Lq7Zg:e#EalW]E26R=GdBf0i#W.F)5jV>
%CpI!'5]bcdQDbtrXaClI_C0EWA_7%`IYXE+kDC+q!4EncpL_$CK$AXe,EB>'I&Y<q@/8c;SO;,l$@Z9nY_#<=_=<&9"i&)?$:I5'
%\Hl&%W,rI3R6ek^*h&]UhBW_(PRLgb64_@&Ect+q3rqhl6X(7\c);I<:ep.[inLRBY2GXDg:)6gQ5p`aq#Jjj>_C>fB?X(+ZPi?(
%A[+ieo@[3<X"=B0D'!umd[?X8$aA6gM&ZTTnC.-cR25'D1'Z`Ij(>c)2ui8A\-tAH&Sj2I2hQ<I6#W]r(Zb^BR?'m)(DS-VT]=+.
%<%:c`g_)42&1d<#"inOlQ!rg?S`4/9HuY5!!6m1+<!Cr,nAXur8bS2,&u=L=k"@T86j0*3L';YVR>'egUj1O6!]-($#W^T3a(/)(
%`SNa'A&S?9_VH%\Utu"=FHMOq1a*pm3[7T3IE7<>"R[6D/B%l$CPf8(o.X0@KB9;fM,o:j,XfBnR>7aM_*5*br6]`&0J?G=n/[\&
%h%0SL_:$<^I6c3H7g$&ATXn&@Z'8P\TdUh5(Zt1kmWF:egig54:R4N'_L+56,j"U,g(%+[Gk9S!9r\2)[KBWB9d^d`B0YYbn7B_$
%C<,te>B)h7RJP@)F,H./d(ILU'4pB9dYAG\T&u)@Vg67Cf3.hd7C']8E;SQS^*LcMdGGtU>F-0.d,jQ?fl`7R$094%s,D/)BN@gS
%lAC_s&l[X[OEkp5SYC*K!fgX1!QW/9ST?8bE!`jK^qBkU(Mp`P+pC%OcrP-^Mbt[<1CV_J:%:,j713_?U_^E$Bqa4TP^83[@&S8C
%/uhD05![hb"UcBm)OpaQHd]V/,*<a/cWU'J$)MR##8gMf2$lGmHc2s?*)A@Uq]-='lbW=^[>Z=A,$c]n)*)?7>[>>3bF^Tf3IPUV
%D#8ZC\lVo2ap,n9o=%kZX.+$D0pomI[6ZZJqc.jLU*5%[a?8PGKIe@"A2_[4GC?F5U\a!sB0G'FnsKSb(:uh<>Yblj<(q__%JXD1
%)+?JCb_rL,r>Q^(>F5rg%gj@fD6X`gbDY2s@#DLQEF:$eGRcn2Zl4d4$V]OL>f]oC6cJKE^g?cE=GL;$\Dp=EMQs@-/M#bV?9ZL^
%X]U_!iY[tf6cW4N*pT'eQo3e/#cc#[nY3PEj8(A@M8)j'EC00V9pTbQ%&P0o;J+fW<JhtfKpT!M4O7NI;E_m5I\[L=*\<\!p>_GH
%WO9fuaLcL5o)Xe\pJ/-WMib2b.k_\M7m2[<Pa=3`LqSQTPOIoJeU?*=aS=Y'&O""@^/)S5SWlnV7N@j0#rDrgT:<$ak+L7H6K"3L
%W.0YbpPaGN=k(_o_0YXY[m,?=CUYMtV6V'uZQM=,$G;`]#EC3&[b!3j/i`JT5%:(k)dh^&GpHG/M0K\h`$W!`L0^ZJ,]WmMQUo"q
%5CufX"W&g"4MeV<'1@l>$b"/mOdPNL;esW*])hkq9Eu64?YcJ#DVs0N]>j_E('fA$+(_5P6(k<mnS@]IYlR!-M7/ZDE*W@77_q7[
%XJZn%P;R>Y]Nk^P5C\?$GS]Bl?J+X*VVH=*@F,df-%BZa&,7G`m5kV4U;NtECZHlX>mrF:<C9bX.(Fh#IO%*64d>0`FDha@X@Y[%
%^c\9kANPemna!R?G'3Hj&aL17ku?[pqq-eHn""2UpUCJPoDAs.NX/p4"]^)V[>\c?;'0h%P.+QL;6$'TW")UMQ#2==>-:]Y`B+iP
%eVFeeWum$3gHW_TR[h"BU_8c2ai=b'>'71;E.>2)ah,4.dZ*\+(t;#UhHAe\9*2oL2?tsIG70G(j9jYB61HDp<O,"q#/@$`>B#E;
%au;=Ub*;:I>L*?UX!ufDrp&+qW"m@u+me0X'SgOA(j]5acAXHjflt+WV+U3sl>(<Yh0ZZb[pG]aCkfPt5hJ(;B2hMcqZOEVM?nb!
%@?p&%3)YTLn:(t>?9T,!4qs\#%<kI+Ut`aRJb_o2O.5q>n:Ab"$AXd2l1D6nE]$JedAe>;$lEJUDccU4boq<Vj<8)Y`Cn@?G_c"m
%1#RDbNsH3uTDM3n7_[7.1i;dfcrb73DsO]0!`MiJS(CQAJS(fjU[Lk>#TJo:/s1MmL*I8tKm&j[Ta++>a6';Q&e)Q.2E.S@1PK7'
%H6TTiYhA*Y&P-=RHbJ.YT%HuH4PqLDDA.+ChQ_O8<tjY`jG5"dK(HMhh^i5t^aoHJdAU(%"WreR#,.3YMpW!qO5Koi>p@qjUHnK3
%ER5#3W\r^WCb4*P_\I)<S!FD56aQ6^_.(^(&X!57'7;a\0$VmM-t4iD28F8$'I8_*'"Hhi*>UYca[ZGb<d.C:L>hObIF=DNEB^."
%NRe7q&[F2(9QAsQ&G)J<=VpQuPo:ZDI3ceq`lP$/dK-6;<1-/JU<r*8(8nf0Mo?,9W%EiY*/6B2-T^oHo:D"Ipgr%oTn*_#h;H"a
%\R'8qfnYRh3]TBI3>K.%g&[I)Kq!(Q#<Xg(+Wg.Je5ds`&8/P$gJ'mSqohn?Hs,o]T@ufJoP7"7IE1B9CTMJRHjDnU-a8Z#r<_;F
%L/$%bi?r5t-VKTRoY'pQD4mEG^pMBNbmnF&qOJqX4/*Bm5Dd$h6#db[DN]<X_OIX+%L(*(U<fW]1`q(_5"c*hm^&9@+tU2Q9E=E@
%hOV6L2O:KJY]r@W$E98B4JB$(=,Y_H]&+!e@aN_eWltTWDIc05Lli,aDumCoV,CH9$U*ZT[k3XLhs)6Rn?s-BPJ@=+rC.9^%6ZJt
%Ao`[fee-&%VF84Aa&QU;Ct0!J2DUjKcrDe1ec["'fQ:Y3!2Zt1]C=*]h2l&"a0kpUeW#(;oDJPd[6\3[GubDd2RlMm#ndO*B_\t]
%]0G/4_g&j9eVYbm7d$l>;mmQ_Y46;m$<99&DR#qY$ufdI(K(Rc&956Ld(m$9)F]a"M=L9>HVPq,DEf]2VYFfNRJ/->_\%_PD_8dF
%er88lY>7XGab^C?-"`jr*mm?W8$c2V3dd-.^9oXX%7U8>r`kABX(qEM'ICPd<kU$2($nS@O7R@6#$Z;!,Jcopl_c(nN.eciiHX(M
%]+d^*cu3]V,+5kYS\7m9$)qMsP*LbjI\,a:W7R!9&V4Vthe.e+7):2;?7;u0;-^Z(#-qQRR[)mT5p)Gp5o?'SVu]q%Z2mEU/tH"6
%`qaS"UQf3\G+'mQ$#lg[$au89Z[[%r^WqE!Y'Ihb7j0D3/s_-LJ'*mC)k,c3O;^ab#(^N^Wa+iZJrUP1?rG/+#d.&l^fR_$F.NtV
%j+=?30Wq.Nb2\l]RY@MbKN#!##EBqk+^@;i]A:8UhN+:V7:8G2;,h9g>;&2giCjcb7o^8?2`V:KI%6H:L$67:_ha_FHH?Gg*C2,I
%hJZpm+%n6J,_]')U"YGRNLZGU`&&I(J:Q^bXeq;e8\C=u.AcC2Kl+'DF:>E1+s_@me?dL9G6ii,.k:hDelf!i!Ii81f->J.YFZ3^
%OoEtnaX3r6QCrH<%eC7I*.6\_F5.M6=#$?G4AW:>6CWW5lil8RmLJaag@#NiIleHg>Q<R2J"@%ZrN![4+3t,HO=s8srgaG.Te7Iq
%M0CT92TSbBs*,.s^FnM5M2VGJrdj#j7)n-'WFWgEpMV-5,_+M:m]TK&NaI^I*Ur7h:_'XoOaZ#\JD<Wbr6<Pn0`%Z4%t;OhDkHeB
%p\D5["FZp(TDuSud'",_^J*#Sj\4$/f\?EC(%a`[-^P/Y&cM_O:dP*`@lmZ:,_c)-;*k6D.JOuP"oSs*iBN))\q-`=@:i1c6G;.F
%?rY^e555ZI"[RP7Ja6W\FBam.;.eN0#i.#JRP-:&Ksd];M^M>*ej#`j8$tCCqT%jT"8dBQjba"nLSRK=H*kD&+q\At^\.Y5*)8(-
%r!_]--[s*aIdT3`hl$;9aZXa$">^H+)o#jjZO@+j$]HoIR'nF75=*W\=0sYeal';e&,^[nr,Z3:XRLi9SNu]1qp$@6VRnXglIe^_
%ge%LQa3Qoa[iKMYZOB&^E=RBoEIP(':XRu*!IjurRfA:+Tc8mJd""cL',ZCOIGbrq$8])MGZg.KmT;W&$KXCCKU*+E7.eQ]O/^Uh
%O(Jn>IF-moGZEO^VR;&EVu-A@l@ft/8:E^)p&Oe4C<]7%WX+?oFd]TTj5XVbc0G/5,#?fP3(Ch.]]2pJ'+)+tK+3oS8:[7."f.)[
%&K:Y3ZN!D^(6094eW4B'BlGK5eF'!9c"c<E&u.J'-9=?A5cW_WL*Xg3VhKc,?I&>#[KV:GVSPtK_#]&*`9/;4^W4C9,$Ouu1`Ta0
%7M1cZWqWjJi4KA^4)b5uptPkrOjj;i_qjjPc]O/js*3:PkZ^6D[qpS-bBeY&5JAN+[X'ZNi9N$+djJF-CP_j,Z0V`dq=TSs>Ij$,
%,hifsh^9pb,<,UJ?tU>j?$C5EAg_6*[<b,_iO!RoVQ>MbZUl<UDd>np0XbV<n$d3;N`Np@6<K]P:FhiYDSY-'lP"cNq&?t8BZZ9V
%*MUS8Skd&(Gs_/[q"U0Qf(Gfg-hpg9$bO;@^>n3lI/>c8U$M<`B?'@]p:(IhgUHF(<klu6f=-0`C1HjTBE%a\he)Nfa7pS]C$kY_
%!__6-*KOn<lVeN'oAa?1/D!>cB_DbhBmkVL%T5UNN5Q8paArs&iu758ZD**-KVGD&k'g#prB*;54lt[q8n3<X0VS_Bee:RQBfY"\
%321'XWjDJqBOG0tQtc>,a.ACiKaQL\P+J:(,sRQ*:S&Y9VVVI]bmkB/-iSK-02)`4<np/QKT4ZFp\RPekan>VIsuc'aKsRG4n^K`
%2DWWBB(X[[4Ms>1=L(gEmLs,QZ-',)leUKe]$+j`[u^!"TW4onSI;0@`0&puq"pdl*;#tN\f:3%Orm7H%I@:/G4B`*J9)h_:\+GY
%N#6iG21K*%_:S/=m'iM3W*coPnJ(U8nYT*0JAk&XK8;Qa@p1CtA"]-Yk7g/=<.%kGGG0NQe@JMRFFDopW,Rm>kJsY`m41j2SSo>q
%jneEV%&UTRJ,XcO[_SRfEVrXFg;X.h#?oN#J,=I^N\?0XN^JVk)oOiB#WeORrS&.@BI=RfHhe-mRIYnQl@ZY[L@@6&^.#?%&>('P
%C7c7_3+DO6Nq)PghsRb,8;@al*`jD?MpD9MjV:U^=e)!SdsMB.SGGJ12$b1iBdpL,b1-a@c:<CZeP?6/?-%<QO,oEP+EHI_m:$@7
%m#.E7go.XPp??YE:F2/'jrjU"HjM<TnB61bBtlk$LMHA]$Nl!Q)?G!DrWM'#i]R1KO6K7(+3bkr?/p4gcfb'(*te/Ef].Or4aV[<
%mkC=ThhekF?L7J)J"O&cJh7bHm.hL2VA1Z2ml3R#F&p$i>ng76&Bl.,Z2V[sY217m31+WQ>!>1F)!UElJ8Q7PLi;juk<#)&l>=*L
%_<KFR<G_CM*%0Y:M;JX:`)DSKrG0^s3aE-_lS#.2N>&n^30.o6J?d,/54Qb35!M6"H\[`;]>oVZV(%.=&FJa4It1jpY@o%tYN:g@
%*..fGIb\:OTAP!]+$nAj);p!0$k34aD/mfe=2,XW*7OHY,42-a5NGfF,B.$L^Q,gTjZEc\:L9+6H%`eK.eJJdh26`I0$5V"l\q*[
%/Fdn[j<7Pk7"42AV,V:@A?<Fm=C+[M/CPdf"54)Rajo%[7V\J%R>\u-jrVq(^fq<+1@GNYo0g!Bq?Y`F&Lu8m378)8Ilk,p:G!p;
%S0t+?O!2^gS1XD%,-_1=i.-2CS;,NT<@3*W;(;tcWC0DgPD6i4*Mh0jHEc=!YagbY]jO(_Yr/c"El7u-!u2#rWa&mXV70s9;H>fg
%!W"Ma/HhAPD((+][a&%_N-Qo3d0<-:'9X'UFKX'nM^s3tLtbpI#s])]1(dU%HJ&6CP;A"Pkg0;gZ2LSsWq:0OWr]`qoh9Q6,]nU5
%KCg!)CsTXGl7_`+]0G.Y#Xkda""QgSUi=m-5f:b@'hE*SZP.ZqOC^ED;\=dWCPrON+^r]SKbf:7>Dl`/fYk_RVM\INLo6>IU8F)@
%32mClfJZtp@d`7kOA9)j(;\Xb9BK&Z&^:4hm^?^._(+"@MeS-SA>A:9AYUsp!/HG%[JAjQ\te7c?D/ft>XL`J.:\_l->$reJo2Fp
%A7W0D*-WsV@]g1#G*C10\AbCq-1]71a&8,=71&4%O!B+1W[T=r<(n6=e_Q*:lCRb+YCjbRU]=N%e=/JtcLqcfXODleBh`tOJj_T%
%b0CT0<eeJ7HW\kUBAr.nL/>`5APHo*f]B<33W"nh/k:]3_-U6V!e!I;'_'$D"+4?c%pa0f@o^@P^\P:l&VS[F[p>--qs.E4e<(C:
%!-t!Ue;-d.nOF1em#L//I11(F)4dN"N&=?4l>_`@1A6`G%qL%Li4&dBlLMD?S^B<$nB@S'#Tc9DNU`q;h9I,Pf$+>]K112&@A1pl
%0j?er)U-DXV9/(Q[IKB7B-E47Lb@-#<.16,AbLP-dC+EA=:AABJ*2\r>E"86;JWp-;b@'M'sOZT!t=DS/;t@R_Q(^"O4De^WQG<j
%r-@,go;TZ`GoEdOoP(HaJ/1G,`5tLs)Z/!8dQuMP5/P=,DP5RY6)42:DUgfNXdm.u7p)2L9DJ^bE.\pEK/?Yg<P/Npfi;!9Iq`S"
%%A"a8<;c9donl5p)8[oSBXT\)9jjs0%uGZKbS9X>J;lBB$*<#!LLJ_8Xp07)fnrEkT<PtD`gVhK$F`c-WY#%MCGJ.S\\7U%k.u7)
%F$ADHDXB!O.O+FKe`UNsg)rO&f/;mEc1\k\Eme:a%^`e79P/Q4pi3oA<,o6mbh+(aNu?l%S-P2P&6B<JhJYRQW_h1s0mR"`]@R*=
%OML4Z8C%AqHnX$=O"C$SZX'p8n6+fcJ?!2Dp>'T]EU!??pG%YqP(m?TnYR9-%!G#@R?9T90l\HBO<ZnMjA_7,Z3/0%^,#**RfsJY
%NfVp/@jdZ16\'n7H*;J4r32qoMp=E.@4c$bO3p/i'1F40E4YeDf0<-SfUt<DKje:KKMi4[G]iQo-._+&E55#A@ui2@'!@O#Vd#Nt
%J,qW&gkOma5:m9Z9]UpEjZ%aMr+UPWZeV;=fW59)hNG&Z`>l,hS];pN`ti(X+_GXSYhgH20\2E^YWf<dpa8Cs'gA:5]<L"!&9WbI
%luL>BS(-M]AbVm^B6qQ$]T9F^;2)fH==l+p/BdK1&nH&WUrY/:[Fb9[+W!Ld/2D9p5^1]`AE%KdTdce-LMg@DrYE8\11tgT=`3bG
%cdJP=;O['+<0!^1aO97fWLTo:XnlYu8q6]^N]`dGj"&T^7de=O#i+NC>-Q:kUTEltgF>Wd0^lMNl?\9CYA^TQ'A_t<2@\Wb0gKa+
%Z-Nqp#Iu7h`'q>]3AA]^XnCmZ9!P32P(q7O.:g0P`E5lbH]HolqFcFSZ(%[:mYT]O\*.Z,p^,Q7[osd)hE>.-cf;&r,`^8i<><SC
%n_;lb5tS;g),p%[l(srC)Y$`p"lIttku/YXXYqGaSegmjrM[9GBM74M=15p=I4$"[[Y$;V=d!9kUgF@6+Y3;miZK!O@0^_$'kOst
%Wui#O@a=nq;(\6Gd$2<Dgn3bIKaTA5XiX-'\<\$nnY,AeRGM+i\J'Qn@64IeQ.=CT_ndRHE9U$9nYd[_:kTa-Ff'=K4_7,02SREK
%5F)0[UOMm-g1LL::08N;hemUs'?JX"mnV%5>P?WITIs@1gY%WAU0FME2%iL3gOb7MfYU;o>%6#n"f!1o3DO!%J6hPqVMr+acmcP5
%i@9.ET^_ciJTQ-=M9G#65VIFt;8W<7=o'`l=&1pE0s_UqHh51fdB',MUH]lsWSUW'2[/_4*L+P*NOdNU-X9::'[1.Q%q+](*j)E+
%ScbMCdD?gifb!Paoe(aLa76Leg:S/(HW]X7s1F6V;.!Au[O>@P@*Y@FP-6^_/)&810NkWgV-BV:/'Ld#.^8&j@m-_DrKq:=gRd7f
%*ump3?j%kYNdVB>pahB(;@"H3kBNc)BE.?QIQ^Rj\C&@d[$0/:f>UtdYPV3"=E8q=s$)POnLt_H*#HD31.URFX9X-]0W4Ze;A.Aq
%3rFsU)I[m55f7kTFdl`h&+>VUHBoOMT?V-]cm/rm%/(H,WT)QHN>O?45q"-)2g8[p%1`8:=Xpg_H6,0#Obh>F?D@PlOG.)=j'P>j
%ALpGh#oB?;hgA(/%'0g?0\)jO:d_Y)In?&Zc`Csj1(&j`#h[94JA;/ZpTfm=YR&JK\ck.m;ma6$rN5nU+^V$?TrAlF<Q$"Q/68[&
%jtEhLo#i1m/#SH!.a,T!p,W-ADAVF1^-3V6329/KJui.D/6EJ*rTqA@hH2C&iN5(;3r^b!WZ^(#VO/3"EEXipO!pA>]EYO%cicdW
%6W/S`YiL2bG%r"9ad_-=qEMWR7am8+%A:Z%C:6Y\EC^"eSX<T;[4-8Xjk&9:O)'[Pld+5YgM(05caVoO(01rJ:BRN(ba%_-?#8.f
%"SSG+f3[k4DN\FI;k@:(]0kAXS-PJJZ#(dAJndu9WSF)N,/\?Ima6Z(AD*U'C5Ps@21%l.llJQGfKTQ5p7/FSh7tT3C"i)ek0Du%
%S56VY]DhEG6AlOjqp47$Ek3g;&Ik[D];X7TA0(.R8^c8n&2'e"):c:J!,$Hc?BWaL,B*s&%(F@V`9M@hno.7gq^QJcjb]R?!.0':
%#3p/t.JIMc^NtsYm*ZP<SBd1D^N2A[>SII(^LD[,XrLdsb`2USBni[ZaBCPD7:M)F_j\J7=R5cbINa5)2:J/`EP-E&4YWGLlb(9!
%]k!Z6CQLj"b?0u3]j27TTIk)TksHiu*Zr"i)(Q;h:5kR\2XHqT_4Q=<f6W\D![lj@I/tJoC'Q)o%>&(MXh:K8D?Fr+HS%mUJrRPn
%f*"MlXg]<2Qb@"3ol[0V4-:2bNt_[c18r!?PjL7g<HWo_E?$%@1F[^>\g7[686i:qGeaXm=7&k%bG.F%OQqlsFs=dW$f*.bDS6LD
%*ga#MVjR),I<nR:!,r(LCOL;4XLN=q3Kk,H4fD(6,C%"gN,fRrH8'\N9M7ei"jZ.,p6hGe_aUegB++$SSBo79r*2<c^Xrk95[o$*
%&U@k'X't!3\5Msn,DW$@?ONq&';iQsCH6!C`lHgm0gj(u1'OebGo[s"F,16-bnnRs?!^Z4iF'Q*EfF9WENe$+Pm&XAgpoN+=Lr:0
%9iO_7#3Ue7[(DsTO-WFFnaVK%QL7('+H2pVWZ6!I8\W./*b.9ge@dg[$Q!65;82mIILVm4^q4>3&3P_JJT(Z\FJ7=^k\k>.F<k4i
%'m?H&e6?c`W5W2,,T`oGKL6nD5D@QnQPq5L"KHFZj2Uod9^n!u2-UL+"?i*QCK^$H_d'@SO]Pa!"I370L%M1cTQF7aR?+fhRA``G
%AJL:@;peZC&en\A-qNE8='/d),V."G[E&GW<pV?LX,#iTcA)beF-K!4l%j&="U,mp:tl:1N(/TF&Kt=/8aFCAREqhN1dYZU6]bC\
%J\_R)@-M['T=:ge,\ZB/G5Mo=WHRW!Z.]7a&uu#@TRBatA+uQIh@4^-G4\gOHjgLTEV$*aesujYY@(mtH9;*A<M*"7bo'2ba2Ye;
%TMIL)['M\@lOCC'_tH`R-1:,uhi48n1BooTqLZFbjsP)J@T=oCFG.k;:F/[=DXP"k<>JcsUqSCG.aZ5&bI?M*8(=];Hcgo3TBdr8
%!6792R0UA61hiBtlr]j4V+_R0YAf6qrTorDO/*_Q1K(M`?BXbiKR?aCX-Aq=[T@@*M/[K_loJ^>85_TYkXO\!(:?[.L<qp`:()=Q
%)XsmqYgtc`f*N0\l*2#h:#GJXWbKD%HgD^#n6r[S-sW5+5C(D?b"K"SpR.M%]qhCLK:YH/IV(hG)Q174-=WH+Y^'i-[f+j&,NY<_
%*X>2_PYddrXq>OJl?5/^`t>_aN[rkM3A"5eg=B#d1*VI_ZlY6qrR`kgr"R+.!WI4p:\=G\jblsrbkW,pSAT_e;4R0[apKACcO$@Q
%MId><m^QnR2]=^g!)q0s?V"(J:mpU(:I<s#"`qs&ndh.H>a)t(@lp>iaT[<h'@h89=>kq(P4=^=Q7@26;<7,K<\,;+P!5_h5ut;a
%YO4UBhbP"U&ACME'AGL^-E:d3.@1%TUBd&]A],VO?G^\,E.m@6>P+2sIokm/UL%4#.J0Yr_qqr0[>8a5U\E+VQlSX9q#mG%?\+O^
%Z<Ab)AuV_&cTYq+WL55U&6(pf]G&YPI8B=l"$pqEk4:?-@?)i(a9G_[p'C/!mSN&b<(;d:$TWHt*>Y%g'of6T&OKV;]8&#A=s*r\
%gtl`bm!TY0$UPB,D[8lE^WnnZ1GP6B*H_/i=bl[E8g45UYt+>eLi'0TEUcCY*4!A/e/e,!fHK.TE?(^gXet]h4s-9iG=I!DJK`+O
%%t/>k;Ss&F<VE!^ZM8S&\%YSRR3!'8<*2<$0nPAko)GZ;GL^`<*)_tj\</k/J1TEj?P=5[&*)>$jVah9L(EsdT=YI7$FF[M*($fX
%7GD%gXRnmILjX+c4Q8/Bq%.1?".V<t,<;Qb^Y)dY=-j\r+ebIBAK0S>Fe;Wu)Q0+fd8H`jQR(oj2@REeH&hp6[B%p(jG&56J@pLR
%p\L`-3_7u#89:V9(f#V:?!nVnlc5f5W3st'V<+UN.quPW3#n*7@RX3u13gXse(AmTijii;l3s@(>Gb+5<Ef\OhEn)(H":<V6J/;8
%R.-odU7pr*EXk_h)Y\j<W&*uQ+Kpa"]_F6oG(3HG]0&k8SV3ZPpnJTf^jV_t)5$@?WC\tb'q3Kh^%Q@!K3sN[7&e0&UEUtsb*k.^
%as7Ec9kj255f_mIo!&H.J4mX]<gl@_(:_IF4nAbm9ZOWo&[m8RFh^MGU@&WpgV;N(]f$en\;akClTL!/bN,WThg=.%7T[=M!aj2_
%FlEu#!"B`j,2Y62%>sFHCXc;%W.[cDi$[;RMDd+4R+n#["F+B^V-tfeEP(KBAGqLZ/!a)G^**)2OqbsclmR_@M+%sCiTXc@LW:tO
%+02:iDk3mefPP7+V%l'4oGoA#o#:,Wp`5pe2/BoFH8E^__!m@3)k6C]N&K%"X-uD#Ws\Tfh+X-^XYW`)SBEj>BPmbG(,#Ba*@?*'
%?U>)%T=lVC2."['KLfo<?_nKRE%-)jZ]"s)3Om^JZY5tsd9+4O*_&h4aM\WXPP<NhAhLrAgl:'I+,@:V9?Eo+IP^#j[7B2N3()M^
%a8d9B*SS'#!c/u':j+Q[7m+0jZn\)p^*1u6aAb(fc(aX;U5+kEi@*?HSV9B-]h'.JF'6+EB>C!hMkPh9@\Y74W!1H)\dm(E=Kj1<
%S8<,YK0bq)%d*0abAbtMLIV^5oI/eH$!?E.+Z^=iKX:1a#Vt3dh0qu>=t1Jp:AbC&\%tG3rT;#<STj1rNkRq;qhf/p,?[P3#s-t/
%FHA\+,e1%2`5]lQR&[YC2^b(eMtQ`a/@8bt^I^/M8n!7HnKHgM$.>hiToc$.G?2t:j.c-$2QC6gG'Zb._AIZ4Q'B-0SMNW8>jS\<
%q4*+Ni7\ooiZ3/>Duf9\@;<H`[&erp()2hA<Y'G<Vs(-M@5$[q781e-U[*W?R79-VnSULNm'\^!^bi#Z4gntnlZtJWb&)3M[cPA+
%\<gsF+@*W(pYC(-Hf7Q6oh3<_g:Yt5qhq$PPh:8_Ak16ZOL3SpG!sK#/k4)inL0YS1Ca=AoXR;*];@o^=,L%<k5VJW@t+(r9'JW]
%UoCJ[Raq['@=smm(\5c[39C/30Y$gf,heoCj0]m5@LZ@9Wg8dPNf=amkL=)=jkIY:<Q<8MJ@md9XIUA2iSda/68f#YX[B.S6;`o_
%o`XHtX5L7`e;:^D3,E#1lsXe4^4\:\>tgbWrh,OnYB)Q6X\2=NlCBuk?VH]9,;TZuY&iQ*CEjXeqdo:\[tpoBnopbUq\,aO9>ohs
%E\X3u6kp78+=2#J*GffXp^Yr##8]iVm!1WG*/&M&^gr!.(6p4OkcRF10.f8aOsaN=4%A2umXA,Zn7W)_\8WoW1V-1C*ON\]Oj!10
%al+/r%*,B*@^&ms']Y1>AC%e.=II#4GHSg:=X/M7BB,p/Gjdp`UT3`1]P-&7G(B&_gK44"!Nt``#c_.Mf41=%+iK=n:sj-LH6#=h
%(iPad`k]T(<SHXul[PjsbfdGn#Y]3JSArf%>W%4o>C1G&N$qW2PDhHW)_GlWT_An?'+M=/(p#'4.Y?kE["\u?/d.0i8UKqCS"JeQ
%4\6uDEOgVB[.7X"'sNkBjStFr(/\W<pX2TQ7+l'o[)sWr9Qh?&n@hN[LSYO))\8t5_G/d[R`g5IK00)"=+)cZ\LVmAH]r[:#S'V%
%eHC9]5e+\5A2E&LZ4l*,O'N:@aIR8Z@A\Clg:lNOM:#g/[EpR1iUCtrD_@,eq?D^<81>dKOcTAb5Rp!+T_G`+bosTZ8l%qX(>kj"
%1OLBX.XQEL$tk9_,8F`DH3pb#PW'mqYVlQHPp(p",nWhXie;Vnc@&$S3;8r4UrhYcGbIT-;5?e$bHoSK6o*;I`hEda$H[`[s5"W'
%(hKT8q%Eb=J'ND>/EaEXND:tY]D;JK,nPOo`!AB6]!Id$,5)_RURg0J8s8pS/DMJi:>ES<15p8M2YQAt:!Y4_a-r"^/`M-7_Z,uB
%qY%D1a+rQEmf*.-1IFAjhu3.cF8+e>f9a+9LVI2G\p8[LG^fJboPjF"a4GfHid]*8gtr&.lRtL%n/m20:k&~>
%AI9_PrivateDataEnd
