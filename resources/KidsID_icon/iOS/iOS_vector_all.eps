%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: iOS_vector_all.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Teneresa
%%CreationDate: 6/18/2018
%%BoundingBox: 0 0 825 740
%%HiResBoundingBox: 0 0 824.8334 739.3334
%%CropBox: 0 0 824.8334 739.3334
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">KidsIDApp</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-06-18T21:32:51-03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-06-18T21:32:51-03:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-06-18T21:32:50-03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>232</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA6AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8M/PnXbo6s2n3ksq+XdOtYZ57KF&#xA;zGby8unkWGF3HRAkLOfZW7kEZmmjtfV03aWQ8VH6APmS828paJ5382Xiw6Dotjb2RJ/0qSwga0iA&#xA;O4a4uIp5GIr05M345kTlGPM/a6/DjyZT6YivcK+ZtBebF8z+WNYfStQh017hBUPFptn6bAkj4TJb&#xA;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&#xA;Lt8eOMBURQR+RZv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:355b0d60-cb5f-ed49-adb6-50e7fc53362b</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:355b0d60-cb5f-ed49-adb6-50e7fc53362b</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:8c647bcb-46f4-7b4d-aab8-ced03448fa16</stRef:instanceID>
            <stRef:documentID>xmp.did:8c647bcb-46f4-7b4d-aab8-ced03448fa16</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BFFB4AB5E22BE311A018E6D873A2A7EA</stEvt:instanceID>
                  <stEvt:when>2013-10-03T09:26:36+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CE184AC00C5BE31183E791815EAA4C5E</stEvt:instanceID>
                  <stEvt:when>2013-12-02T08:46:47+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F011E2F5510EE4118538A88D102BAB8E</stEvt:instanceID>
                  <stEvt:when>2014-07-18T13:26:13+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B7A671B7FB10E8119239DE749183B6E1</stEvt:instanceID>
                  <stEvt:when>2018-02-13T17:23:13-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B848859C3D13E811B4CCA01193625BB9</stEvt:instanceID>
                  <stEvt:when>2018-02-16T22:52:06-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F58AFD07EB13E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T11:01:41-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E39B45B30814E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T14:35:09-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E69B45B30814E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T14:47:31-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EB9B45B30814E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T14:53:12-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D611007D0B14E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T15:57:50-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D811007D0B14E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T16:00:21-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:822B69834514E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T21:50:41-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4A06FAA20B17E8119736D27784DB3468</stEvt:instanceID>
                  <stEvt:when>2018-02-21T10:32:18-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74fde70b-e1dc-004c-9a3c-bfc5384f141e</stEvt:instanceID>
                  <stEvt:when>2018-02-22T17:18:25-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8c647bcb-46f4-7b4d-aab8-ced03448fa16</stEvt:instanceID>
                  <stEvt:when>2018-06-18T17:43:56-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:355b0d60-cb5f-ed49-adb6-50e7fc53362b</stEvt:instanceID>
                  <stEvt:when>2018-06-18T21:32:51-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>512.000000</stDim:w>
            <stDim:h>512.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -739.333 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 739.333 li
824.833 739.333 li
824.833 0 li
cp
clp
727.523 739.333 mo
410.144 739.333 li
356.401 739.333 312.833 695.766 312.833 642.023 cv
312.833 324.644 li
312.833 270.901 356.401 227.333 410.144 227.333 cv
727.523 227.333 li
781.266 227.333 824.833 270.901 824.833 324.644 cv
824.833 642.023 li
824.833 695.766 781.266 739.333 727.523 739.333 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 .368627 .427451 rgb
f
433.581 254.012 mo
381.711 254.012 339.512 296.211 339.512 348.081 cv
339.512 618.586 li
339.512 670.456 381.711 712.655 433.581 712.655 cv
704.086 712.655 li
755.956 712.655 798.155 670.456 798.155 618.586 cv
798.155 348.081 li
798.155 296.211 755.956 254.012 704.086 254.012 cv
433.581 254.012 li
cp
704.086 720.101 mo
433.581 720.101 li
377.606 720.101 332.066 674.561 332.066 618.586 cv
332.066 348.081 li
332.066 292.106 377.606 246.566 433.581 246.566 cv
704.086 246.566 li
760.061 246.566 805.6 292.106 805.6 348.081 cv
805.6 618.586 li
805.6 674.561 760.061 720.101 704.086 720.101 cv
cp
1 1 1 rgb
f
387.936 575.429 mo
387.936 571.581 392.332 569.935 396.866 569.935 cv
401.262 569.935 405.794 571.581 405.794 575.429 cv
405.794 612.932 li
435.469 572.542 li
436.843 570.62 438.491 569.935 440.414 569.935 cv
444.947 569.935 450.719 574.605 450.719 579.138 cv
450.719 580.099 450.58 581.334 449.618 582.573 cv
425.028 613.345 li
454.976 658.956 li
455.664 659.916 455.937 661.015 455.937 662.113 cv
455.937 666.509 450.443 671.045 445.222 671.045 cv
442.887 671.045 440.551 670.081 439.041 667.611 cv
413.213 628.456 li
405.794 637.799 li
405.794 664.724 li
405.794 668.435 401.262 670.358 396.866 670.358 cv
392.332 670.358 387.936 668.435 387.936 664.724 cv
387.936 575.429 li
cp
f
480.101 610.598 mo
480.101 664.724 li
480.101 667.471 476.117 670.358 471.172 670.358 cv
466.088 670.358 462.38 667.471 462.38 664.724 cv
462.38 610.598 li
462.38 607.3 466.088 605.104 471.172 605.104 cv
476.117 605.104 480.101 607.3 480.101 610.598 cv
cp
480.787 581.885 mo
480.787 586.418 476.529 590.54 471.172 590.54 cv
465.676 590.54 461.417 586.418 461.417 581.885 cv
461.417 577.215 465.676 573.229 471.172 573.229 cv
476.529 573.229 480.787 577.215 480.787 581.885 cv
cp
f
509.22 643.431 mo
509.22 649.749 514.714 656.068 521.171 656.068 cv
528.177 656.068 533.672 648.788 533.672 645.904 cv
533.672 632.165 li
533.672 624.474 527.217 619.801 521.308 619.801 cv
514.577 619.801 509.22 625.983 509.22 632.165 cv
509.22 643.431 li
cp
551.395 572.542 mo
551.395 664.724 li
551.395 667.471 547.685 670.358 542.603 670.358 cv
538.207 670.358 534.634 667.471 534.634 664.724 cv
534.634 660.741 li
531.886 666.372 524.331 671.593 515.538 671.593 cv
502.762 671.593 491.497 658.131 491.497 643.431 cv
491.497 632.165 li
491.497 616.917 502.487 604.279 515.951 604.279 cv
524.468 604.279 530.65 609.36 533.672 614.717 cv
533.672 572.542 li
533.672 569.247 537.656 567.048 542.603 567.048 cv
547.685 567.048 551.395 569.247 551.395 572.542 cv
cp
f
596.029 652.223 mo
596.029 640.133 563.47 647.69 563.47 624.748 cv
563.47 614.994 569.652 604.279 588.059 604.279 cv
599.188 604.279 609.903 608.125 609.903 613.208 cv
609.903 615.682 607.568 621.724 603.447 621.724 cv
600.149 621.724 595.89 617.742 588.335 617.742 cv
581.467 617.742 578.718 621.176 578.718 623.923 cv
578.718 633.951 611.689 627.084 611.689 651.535 cv
611.689 663.762 602.623 671.593 586.412 671.593 cv
572.399 671.593 561.546 665.825 561.546 659.78 cv
561.546 656.893 564.019 651.949 567.454 651.949 cv
571.438 651.949 574.46 658.131 586 658.131 cv
594.104 658.131 596.029 654.97 596.029 652.223 cv
cp
f
650.962 575.429 mo
650.962 571.581 655.358 569.935 659.891 569.935 cv
664.287 569.935 668.82 571.581 668.82 575.429 cv
668.82 664.724 li
668.82 668.435 664.287 670.358 659.891 670.358 cv
655.358 670.358 650.962 668.435 650.962 664.724 cv
650.962 575.429 li
cp
f
703.159 585.593 mo
703.159 654.696 li
717.447 654.696 li
726.515 654.696 731.872 649.612 731.872 638.897 cv
731.872 601.392 li
731.872 590.677 726.515 585.593 717.447 585.593 cv
703.159 585.593 li
cp
717.447 569.935 mo
735.581 569.935 749.73 578.45 749.73 601.392 cv
749.73 638.897 li
749.73 661.839 735.581 670.358 717.447 670.358 cv
693.132 670.358 li
688.46 670.358 685.301 667.747 685.301 664.86 cv
685.301 575.429 li
685.301 572.542 688.46 569.935 693.132 569.935 cv
717.447 569.935 li
cp
f
542.609 456.073 mo
542.062 455.801 541.471 455.563 540.964 455.195 cv
540.314 454.778 539.737 454.25 539.216 453.663 cv
528.456 480.154 487.301 513.868 446.192 453.291 cv
444.147 454.741 441.119 456.157 435.35 455.648 cv
441.213 454.436 445.603 454.055 448.057 444.932 cv
448.549 443.092 450.697 443.604 450.285 445.465 cv
449.719 448.075 449.043 449.514 447.445 451.795 cv
487.621 477.347 524.071 467.095 538.318 452.515 cv
538.311 452.504 538.303 452.495 538.296 452.484 cv
537.642 451.365 537.197 450.106 537.126 448.819 cv
537.07 448.005 537.142 447.178 537.378 446.409 cv
537.51 445.975 537.921 445.705 538.116 446.657 cv
539.552 453.644 544.017 456.101 544.4 456.56 cv
543.791 456.456 543.199 456.275 542.609 456.073 cv
cp
459.648 385.422 mo
459.742 375.058 474.092 370.532 480.823 381.936 cv
468.551 374.037 459.648 385.422 459.648 385.422 cv
cp
473.208 403.112 mo
473.381 401.664 474.714 400.866 475.421 400.759 cv
478.196 400.337 481.197 402.583 481.503 407.805 cv
481.847 413.664 479.427 416.894 476.658 417.309 cv
473.889 417.72 471.184 414.755 470.578 410.704 cv
470.39 409.366 470.458 408.082 470.735 406.936 cv
471.044 407.328 471.44 407.643 471.954 407.763 cv
473.236 408.104 474.546 407.34 474.887 406.052 cv
475.217 404.771 474.358 403.199 473.208 403.112 cv
cp
485.093 404.599 mo
483.944 396.708 479.384 390.844 474.925 391.501 cv
470.459 392.164 467.768 399.106 468.936 407 cv
470.088 414.889 474.658 420.752 479.116 420.086 cv
479.185 420.079 479.246 420.051 479.311 420.035 cv
478.898 420.193 478.496 420.383 478.05 420.451 cv
472.464 421.275 466.771 413.947 465.319 404.081 cv
463.866 394.214 467.209 385.538 472.806 384.714 cv
478.384 383.894 484.091 391.211 485.531 401.08 cv
486.148 405.253 485.868 409.143 484.966 412.389 cv
485.426 410.065 485.513 407.406 485.093 404.599 cv
cp
514.264 431.381 mo
519.915 429.118 519.713 424.608 519.871 425.695 cv
521.466 437.212 502.229 441.481 494.357 431.867 cv
492.919 430.105 492.934 428.51 492.934 428.51 cv
494.619 432.208 506.949 434.319 514.264 431.381 cv
cp
526.441 383.374 mo
531.868 383.148 536.599 390.737 537.017 400.338 cv
537.196 404.389 536.542 408.106 535.343 411.127 cv
536.019 408.943 536.37 406.399 536.259 403.672 cv
535.93 395.986 532.136 389.919 527.798 390.105 cv
523.452 390.291 520.192 396.654 520.512 404.34 cv
520.609 406.516 520.989 408.553 521.571 410.364 cv
521.339 409.569 521.176 408.721 521.137 407.817 cv
521.081 406.433 521.306 405.13 521.685 404 cv
521.96 404.405 522.339 404.781 522.842 404.975 cv
524.112 405.45 525.54 404.802 526.013 403.518 cv
526.484 402.258 525.581 400.709 523.975 400.709 cv
524.674 399.64 525.81 399.324 526.282 399.308 cv
529.14 399.195 531.512 401.105 531.792 406.688 cv
532.002 410.887 529.498 415.064 526.654 415.196 cv
524.616 415.276 522.799 413.62 521.842 411.161 cv
523.376 415.31 526.046 418.04 528.979 417.927 cv
528.641 417.996 528.294 418.134 527.932 418.143 cv
522.495 418.396 517.761 410.782 517.351 401.188 cv
516.939 391.583 521.004 383.623 526.441 383.374 cv
cp
534.829 382.823 mo
534.829 382.823 524.081 372.983 517.631 386.104 cv
518.515 372.356 530.937 372.855 534.829 382.823 cv
cp
384.154 459.315 mo
383.372 456.877 382.727 454.766 381.795 451.126 cv
375.51 426.478 365.1 436.605 366.092 443.57 cv
362.986 432.212 380.948 421.435 384.035 450.78 cv
384.267 453.03 384.526 456.62 384.154 459.315 cv
cp
550.395 365.798 mo
541.804 346.968 525.774 334.729 505.012 328.156 cv
509.064 324.196 515.212 321.479 522.49 323.202 cv
533.45 325.802 537.451 335.652 537.451 335.652 cv
534.26 321.681 514.885 311.79 497.002 317.695 cv
493.611 318.814 490.503 320.382 487.665 322.235 cv
498.468 302.183 525.932 304.489 532.63 309.083 cv
498.819 281.355 461.093 309.901 455.109 323.912 cv
455.114 323.915 455.119 323.916 455.123 323.919 cv
437.905 325.615 419.155 331.065 405.303 344.729 cv
387.491 362.292 376.565 384.614 379.015 419.641 cv
367.611 417.829 359.445 422.855 357.092 433.255 cv
354.486 444.732 360.298 459.772 372.767 463.04 cv
376.199 463.932 381.599 464.392 385.46 463.381 cv
385.4 463.194 385.477 463.444 385.595 463.954 cv
391.936 491.314 419.154 511.085 432.991 516.097 cv
483.888 534.508 528.259 521.427 551.341 492.522 cv
564.534 475.982 578.078 439.888 555.537 418.819 cv
554.879 418.199 560.906 388.812 550.395 365.798 cv
cp
f
446.121 453.188 mo
446.145 453.224 446.168 453.256 446.192 453.291 cv
446.197 453.287 446.203 453.283 446.209 453.279 cv
446.209 453.279 446.002 453.013 446.121 453.188 cv
cp
f
771.457 451.595 mo
772.342 445.374 763.044 436.327 757.43 458.344 cv
756.552 461.771 755.556 464.775 755.462 464.804 cv
755.282 462.025 755.516 458.803 755.74 456.632 cv
758.497 430.419 774.231 441.449 771.457 451.595 cv
cp
732.917 327.636 mo
719.194 313.488 715.542 304.895 715.138 299.952 cv
716.453 300.736 718.189 302.007 720.478 304.062 cv
724.467 307.639 730.279 318.539 734.354 326.843 cv
733.862 327.092 733.395 327.371 732.917 327.636 cv
cp
699.867 460.218 mo
671.103 503.151 634.439 496.863 628.498 475.237 cv
624.348 473.039 619.807 467.717 616.673 461.843 cv
616.215 462.372 615.706 462.849 615.13 463.229 cv
614.681 463.563 614.157 463.783 613.671 464.033 cv
613.146 464.22 612.619 464.389 612.076 464.49 cv
612.412 464.077 616.371 461.83 617.559 455.597 cv
617.721 454.748 618.092 454.981 618.217 455.366 cv
618.437 456.046 618.514 456.781 618.475 457.506 cv
618.429 458.651 618.049 459.777 617.479 460.781 cv
617.473 460.791 617.466 460.799 617.46 460.809 cv
631.643 478.139 669.189 479.722 698.726 458.907 cv
697.265 456.901 696.641 455.63 696.098 453.317 cv
695.705 451.667 697.619 451.182 698.084 452.812 cv
700.404 460.89 704.337 461.168 709.597 462.166 cv
704.445 462.698 701.717 461.48 699.867 460.218 cv
cp
629.364 413.576 mo
629.819 414.809 631.191 415.432 632.411 414.976 cv
632.894 414.79 633.258 414.428 633.521 414.039 cv
633.886 415.125 634.102 416.375 634.049 417.706 cv
633.876 421.734 631.505 424.902 628.75 424.794 cv
626.016 424.667 623.92 421.304 624.099 417.27 cv
624.278 413.24 626.647 410.071 629.393 410.18 cv
629.846 410.196 630.288 410.349 630.712 410.544 cv
629.519 411.023 628.912 412.366 629.364 413.576 cv
cp
631.524 397.824 mo
636.38 398.047 640.012 405.157 639.643 413.738 cv
639.277 422.307 635.049 429.108 630.192 428.882 cv
629.868 428.874 629.558 428.751 629.256 428.689 cv
633.138 428.839 636.513 423.424 636.82 416.553 cv
637.105 409.688 634.193 404.003 630.312 403.837 cv
626.436 403.671 623.047 409.09 622.754 415.957 cv
622.654 418.392 622.968 420.664 623.572 422.616 cv
622.5 419.917 621.917 416.596 622.076 412.978 cv
622.45 404.402 626.675 397.623 631.524 397.824 cv
cp
639.393 396.964 mo
633.631 385.244 624.031 394.034 624.031 394.034 cv
627.507 385.129 638.603 384.684 639.393 396.964 cv
cp
653.581 312.548 mo
655.795 311.272 657.425 310.54 658.626 310.13 cv
657.452 314.076 653.013 320.426 639.452 329.548 cv
639.109 329.25 638.761 328.957 638.403 328.668 cv
643.137 322.624 649.726 314.768 653.581 312.548 cv
cp
661.454 438.143 mo
661.454 438.143 661.468 439.568 660.182 441.141 cv
653.152 449.729 635.968 445.916 637.392 435.628 cv
637.534 434.657 637.353 438.686 642.401 440.707 cv
648.935 443.332 659.949 441.446 661.454 438.143 cv
cp
675.158 415.665 mo
675.49 416.925 676.773 417.672 678.026 417.34 cv
678.529 417.221 678.917 416.913 679.22 416.529 cv
679.491 417.651 679.556 418.907 679.372 420.216 cv
678.78 424.18 676.134 427.08 673.424 426.678 cv
670.716 426.272 669.004 422.742 669.595 418.773 cv
670.176 414.798 672.833 411.915 675.545 412.307 cv
675.996 412.378 676.419 412.564 676.8 412.789 cv
675.576 413.136 674.834 414.411 675.158 415.665 cv
cp
668.067 413.641 mo
669.352 404.826 674.451 398.289 679.432 399.021 cv
684.432 399.758 687.418 407.507 686.121 416.321 cv
684.824 425.134 679.739 431.681 674.749 430.944 cv
674.119 430.849 673.528 430.64 672.968 430.355 cv
673.242 430.44 673.496 430.586 673.797 430.618 cv
677.778 431.213 681.861 425.976 682.89 418.929 cv
683.932 411.878 681.529 405.676 677.541 405.084 cv
673.557 404.498 669.484 409.736 668.458 416.783 cv
668.082 419.292 668.16 421.667 668.571 423.742 cv
667.765 420.843 667.515 417.369 668.067 413.641 cv
cp
691.186 399.654 mo
691.186 399.654 683.233 389.484 672.272 396.541 cv
678.284 386.354 691.102 390.396 691.186 399.654 cv
cp
603.972 346.777 mo
604.964 345.81 606.361 344.661 608.365 343.328 cv
612.233 340.758 622.282 337.834 629.289 335.926 cv
629.361 336.053 629.446 336.178 629.514 336.307 cv
623.479 340.738 612.509 348.1 603.972 346.777 cv
cp
743.757 337.921 mo
751.51 341.92 762.27 347.728 766.112 351.645 cv
768.146 353.719 769.508 355.424 770.437 356.813 cv
760.222 356.247 749.325 345.195 743.249 338.424 cv
743.415 338.251 743.587 338.089 743.757 337.921 cv
cp
780.461 442.628 mo
779.33 438.32 777.093 435.114 774.007 433.104 cv
770.633 430.442 766.003 429.394 760.502 430.147 cv
760.646 425.011 760.469 420.062 759.999 415.307 cv
759.19 402.059 755.869 391.135 750.664 381.766 cv
746.454 373.265 741.105 365.949 734.968 359.964 cv
734.555 354.787 736.006 349.301 738.729 344.511 cv
739.096 350.087 738.713 357.786 740.93 359.791 cv
744.147 358.34 748.757 355.824 747.95 355.039 cv
742.616 349.872 741.393 345.079 740.172 342.2 cv
740.236 342.107 740.303 342.017 740.368 341.925 cv
761.061 372.254 768.438 365.28 770.165 363.906 cv
774.914 360.121 776.342 355.819 776.342 355.819 cv
776.325 355.827 776.307 355.831 776.289 355.838 cv
777.256 354.042 776.942 352.782 774.95 350.354 cv
768.049 341.935 755.649 337.905 746.266 335.719 cv
751.915 331.346 759.08 329.484 766.385 332.546 cv
770.958 334.462 774.32 337.21 776.66 339.701 cv
777.028 340.092 777.628 340.154 778.067 339.844 cv
778.507 339.534 778.65 338.947 778.404 338.469 cv
773.724 329.368 763.925 321.704 749.808 322.556 cv
744.909 322.851 740.314 324.137 736.14 326.018 cv
733.626 314.242 730.411 298.065 721.721 293.058 cv
719.693 291.887 718.479 292.866 716.649 294.343 cv
716.825 294.161 716.945 294.073 716.945 294.073 cv
716.945 294.073 708.778 300.004 707.978 302.248 cv
705.271 309.833 715.995 321.039 728.638 330.328 cv
728.317 330.558 728.009 330.794 727.697 331.029 cv
724.376 329.29 720.6 327.08 717.662 325.105 cv
711.702 321.102 708.92 318.445 708.92 318.445 cv
707.114 320.95 709.546 326.432 709.93 330.574 cv
711.401 331.967 717.834 333.333 723.79 334.337 cv
719.313 338.601 716.211 343.341 715.033 347.374 cv
714.684 347.239 714.339 347.094 713.989 346.966 cv
713.969 346.955 713.953 346.947 713.933 346.938 cv
713.943 346.943 713.957 346.952 713.968 346.958 cv
687.262 337.166 656.292 344.628 650.239 346.375 cv
649.56 343.359 648.016 339.921 645.716 336.571 cv
650.726 336.782 656.186 336.783 657.62 335.904 cv
658.635 332.609 662.719 327.819 660.509 326.23 cv
660.509 326.23 657.798 327.905 652.267 330.131 cv
649.549 331.224 646.11 332.365 643.117 333.205 cv
642.904 332.959 642.675 332.722 642.454 332.48 cv
654.32 327.117 664.95 319.861 664.047 313.231 cv
663.782 311.271 658.167 305.039 658.167 305.039 cv
658.167 305.039 658.257 305.14 658.376 305.334 cv
657.132 303.805 656.312 302.787 654.452 303.393 cv
646.537 305.959 641.158 318.546 637.1 327.677 cv
634.033 325.429 630.519 323.591 626.591 322.505 cv
616.828 319.806 608.985 322.887 604.357 328.653 cv
603.968 329.139 603.998 329.837 604.43 330.284 cv
604.861 330.732 605.558 330.79 606.056 330.418 cv
607.516 329.331 609.285 328.376 611.416 327.761 cv
618.088 325.833 623.791 328.794 627.024 332.631 cv
627.346 333.014 627.622 333.409 627.908 333.801 cv
619.851 333.904 608.661 334.937 601.407 340.748 cv
599.373 342.378 598.901 343.346 599.376 344.973 cv
599.363 344.963 599.349 344.957 599.335 344.948 cv
599.335 344.948 599.763 348.695 602.981 352.586 cv
604.147 354.003 608.961 360.953 631.011 339.807 cv
631.04 339.893 631.075 339.98 631.102 340.066 cv
629.631 342.199 628.458 345.976 623.185 349.288 cv
622.393 349.785 625.704 352.624 628.076 354.358 cv
630.164 353.146 630.489 346.991 631.745 342.579 cv
632.916 348.275 631.909 353.193 631.666 354.215 cv
620.056 360.939 611.158 370.413 605.944 382.937 cv
603.831 388.014 602.66 393.608 602.083 399.177 cv
599.891 414.846 602.666 429.08 602.234 429.486 cv
582.1 448.306 594.198 480.546 605.982 495.322 cv
626.601 521.141 666.235 532.825 711.699 516.38 cv
723.511 512.102 746.237 495.782 753.173 473.012 cv
754.138 471.915 755.106 470.792 756.079 469.636 cv
756.454 469.682 756.83 469.723 757.217 469.749 cv
760.826 470.624 764.235 470.605 767.365 469.674 cv
778.399 466.382 783.123 452.775 780.461 442.628 cv
cp
f
699.867 460.218 mo
699.888 460.188 699.909 460.158 699.929 460.127 cv
700.034 459.969 699.852 460.208 699.852 460.208 cv
699.857 460.212 699.863 460.215 699.867 460.218 cv
cp
f
145.883 407.333 mo
35.242 407.333 li
15.7781 407.333 -.000197656 391.555 -.000197656 372.092 cv
-.000197656 262.575 li
-.000197656 243.112 15.7781 227.333 35.242 227.333 cv
144.758 227.333 li
164.222 227.333 180 243.112 180 262.575 cv
180 373.217 li
180 392.059 164.725 407.333 145.883 407.333 cv
cp
0 .368627 .427451 rgb
f
42.4505 236.712 mo
24.2146 236.712 9.3792 251.548 9.3792 269.784 cv
9.3792 364.883 li
9.3792 383.119 24.2146 397.955 42.4505 397.955 cv
137.55 397.955 li
155.785 397.955 170.621 383.119 170.621 364.883 cv
170.621 269.784 li
170.621 251.548 155.785 236.712 137.55 236.712 cv
42.4505 236.712 li
cp
137.55 400.572 mo
42.4505 400.572 li
22.7713 400.572 6.76152 384.562 6.76152 364.883 cv
6.76152 269.784 li
6.76152 250.105 22.7713 234.095 42.4505 234.095 cv
137.55 234.095 li
157.228 234.095 173.239 250.105 173.239 269.784 cv
173.239 364.883 li
173.239 384.562 157.228 400.572 137.55 400.572 cv
cp
1 1 1 rgb
f
26.4036 349.711 mo
26.4036 348.358 27.949 347.779 29.5423 347.779 cv
31.0882 347.779 32.6819 348.358 32.6819 349.711 cv
32.6819 362.895 li
43.1141 348.696 li
43.597 348.02 44.1766 347.779 44.8528 347.779 cv
46.4461 347.779 48.4754 349.421 48.4754 351.015 cv
48.4754 351.353 48.4266 351.787 48.0887 352.222 cv
39.4432 363.041 li
49.972 379.076 li
50.2137 379.414 50.3099 379.799 50.3099 380.186 cv
50.3099 381.731 48.3787 383.326 46.5433 383.326 cv
45.722 383.326 44.9007 382.987 44.3699 382.118 cv
35.2898 368.353 li
32.6819 371.638 li
32.6819 381.104 li
32.6819 382.408 31.0882 383.084 29.5423 383.084 cv
27.949 383.084 26.4036 382.408 26.4036 381.104 cv
26.4036 349.711 li
cp
f
58.805 362.075 mo
58.805 381.104 li
58.805 382.069 57.4046 383.084 55.6658 383.084 cv
53.8787 383.084 52.575 382.069 52.575 381.104 cv
52.575 362.075 li
52.575 360.916 53.8787 360.143 55.6658 360.143 cv
57.4046 360.143 58.805 360.916 58.805 362.075 cv
cp
59.0462 351.98 mo
59.0462 353.574 57.5496 355.023 55.6658 355.023 cv
53.7337 355.023 52.2366 353.574 52.2366 351.98 cv
52.2366 350.339 53.7337 348.938 55.6658 348.938 cv
57.5496 348.938 59.0462 350.339 59.0462 351.98 cv
cp
f
69.0423 373.618 mo
69.0423 375.839 70.9739 378.061 73.2439 378.061 cv
75.7068 378.061 77.6385 375.501 77.6385 374.487 cv
77.6385 369.657 li
77.6385 366.953 75.3689 365.31 73.2918 365.31 cv
70.9256 365.31 69.0423 367.483 69.0423 369.657 cv
69.0423 373.618 li
cp
83.8694 348.696 mo
83.8694 381.104 li
83.8694 382.069 82.5652 383.084 80.7781 383.084 cv
79.2327 383.084 77.9764 382.069 77.9764 381.104 cv
77.9764 379.703 li
77.011 381.683 74.3548 383.519 71.2635 383.519 cv
66.7718 383.519 62.8113 378.786 62.8113 373.618 cv
62.8113 369.657 li
62.8113 364.296 66.6751 359.854 71.4085 359.854 cv
74.4026 359.854 76.576 361.64 77.6385 363.523 cv
77.6385 348.696 li
77.6385 347.538 79.0394 346.764 80.7781 346.764 cv
82.5652 346.764 83.8694 347.538 83.8694 348.696 cv
cp
f
99.5608 376.708 mo
99.5608 372.458 88.1145 375.115 88.1145 367.049 cv
88.1145 363.621 90.2879 359.854 96.7591 359.854 cv
100.672 359.854 104.438 361.205 104.438 362.993 cv
104.438 363.862 103.617 365.986 102.169 365.986 cv
101.01 365.986 99.512 364.586 96.8558 364.586 cv
94.4417 364.586 93.4749 365.793 93.4749 366.759 cv
93.4749 370.285 105.066 367.871 105.066 376.467 cv
105.066 380.765 101.879 383.519 96.18 383.519 cv
91.2537 383.519 87.4378 381.491 87.4378 379.365 cv
87.4378 378.35 88.3074 376.612 89.5149 376.612 cv
90.9158 376.612 91.9783 378.786 96.035 378.786 cv
98.8841 378.786 99.5608 377.674 99.5608 376.708 cv
cp
f
118.873 349.711 mo
118.873 348.358 120.419 347.779 122.012 347.779 cv
123.558 347.779 125.152 348.358 125.152 349.711 cv
125.152 381.104 li
125.152 382.408 123.558 383.084 122.012 383.084 cv
120.419 383.084 118.873 382.408 118.873 381.104 cv
118.873 349.711 li
cp
f
137.224 353.284 mo
137.224 377.578 li
142.247 377.578 li
145.435 377.578 147.318 375.791 147.318 372.024 cv
147.318 358.838 li
147.318 355.071 145.435 353.284 142.247 353.284 cv
137.224 353.284 li
cp
142.247 347.779 mo
148.622 347.779 153.596 350.773 153.596 358.838 cv
153.596 372.024 li
153.596 380.089 148.622 383.084 142.247 383.084 cv
133.699 383.084 li
132.056 383.084 130.946 382.167 130.946 381.151 cv
130.946 349.711 li
130.946 348.696 132.056 347.779 133.699 347.779 cv
142.247 347.779 li
cp
f
80.7806 307.75 mo
80.5882 307.654 80.3807 307.57 80.2024 307.441 cv
79.9739 307.294 79.7708 307.109 79.5877 306.902 cv
75.805 316.216 61.3362 328.068 46.8841 306.771 cv
46.1648 307.281 45.1004 307.779 43.0721 307.601 cv
45.1331 307.174 46.677 307.04 47.5398 303.833 cv
47.7122 303.186 48.4676 303.366 48.323 304.021 cv
48.1238 304.938 47.886 305.444 47.3245 306.246 cv
61.4485 315.229 74.263 311.625 79.2718 306.499 cv
79.2693 306.495 79.2669 306.492 79.264 306.488 cv
79.0345 306.095 78.8777 305.652 78.8528 305.2 cv
78.8333 304.914 78.8587 304.623 78.9412 304.352 cv
78.9881 304.199 79.1321 304.104 79.201 304.439 cv
79.7059 306.896 81.2757 307.759 81.41 307.921 cv
81.1961 307.884 80.9881 307.821 80.7806 307.75 cv
cp
51.6145 282.912 mo
51.6478 279.268 56.6927 277.676 59.0589 281.686 cv
54.7444 278.909 51.6145 282.912 51.6145 282.912 cv
cp
56.3821 289.13 mo
56.4427 288.621 56.9114 288.341 57.1595 288.303 cv
58.1355 288.155 59.1902 288.944 59.2981 290.78 cv
59.4187 292.84 58.5682 293.976 57.5945 294.122 cv
56.6209 294.266 55.6702 293.224 55.4573 291.8 cv
55.3909 291.329 55.4148 290.878 55.512 290.475 cv
55.6209 290.613 55.7601 290.724 55.9407 290.766 cv
56.3914 290.885 56.8523 290.617 56.972 290.164 cv
57.0882 289.714 56.7859 289.161 56.3821 289.13 cv
cp
60.5599 289.653 mo
60.1561 286.879 58.553 284.818 56.9852 285.048 cv
55.4153 285.281 54.4695 287.722 54.8797 290.498 cv
55.285 293.271 56.8914 295.333 58.4588 295.098 cv
58.4832 295.095 58.5042 295.086 58.5276 295.08 cv
58.3821 295.136 58.2405 295.203 58.0838 295.226 cv
56.1199 295.516 54.1189 292.939 53.6082 289.471 cv
53.0975 286.002 54.2728 282.952 56.2405 282.663 cv
58.201 282.374 60.2078 284.947 60.7142 288.416 cv
60.931 289.883 60.8328 291.25 60.5154 292.392 cv
60.677 291.575 60.7078 290.64 60.5599 289.653 cv
cp
70.8157 299.069 mo
72.802 298.273 72.7312 296.688 72.7869 297.07 cv
73.3475 301.119 66.5843 302.62 63.8172 299.24 cv
63.3113 298.621 63.3167 298.06 63.3167 298.06 cv
63.909 299.359 68.2439 300.102 70.8157 299.069 cv
cp
75.0965 282.191 mo
77.0047 282.112 78.6678 284.78 78.8147 288.155 cv
78.8772 289.58 78.6478 290.886 78.2259 291.949 cv
78.4637 291.18 78.5872 290.286 78.5481 289.328 cv
78.4324 286.625 77.0989 284.493 75.5735 284.558 cv
74.0457 284.623 72.8997 286.86 73.012 289.562 cv
73.0462 290.327 73.1795 291.043 73.3841 291.68 cv
73.3025 291.4 73.2454 291.103 73.2317 290.785 cv
73.2122 290.298 73.2913 289.84 73.4246 289.443 cv
73.5208 289.585 73.6541 289.717 73.8309 289.786 cv
74.2776 289.953 74.7796 289.725 74.9461 289.273 cv
75.1116 288.83 74.7942 288.286 74.2298 288.286 cv
74.4749 287.91 74.8748 287.799 75.0408 287.793 cv
76.0457 287.753 76.8792 288.425 76.9778 290.388 cv
77.0516 291.864 76.1712 293.333 75.1712 293.379 cv
74.4549 293.407 73.8162 292.825 73.4798 291.96 cv
74.0193 293.419 74.9573 294.378 75.9891 294.339 cv
75.8699 294.363 75.7478 294.412 75.6209 294.415 cv
73.7093 294.504 72.0447 291.827 71.9007 288.455 cv
71.7557 285.077 73.1849 282.279 75.0965 282.191 cv
cp
78.0457 281.998 mo
78.0457 281.998 74.2669 278.538 71.9993 283.151 cv
72.3103 278.318 76.677 278.493 78.0457 281.998 cv
cp
25.074 308.89 mo
24.7986 308.032 24.5721 307.29 24.2444 306.011 cv
22.035 297.345 18.3753 300.905 18.7239 303.354 cv
17.6316 299.361 23.9466 295.572 25.032 305.889 cv
25.1131 306.68 25.2044 307.942 25.074 308.89 cv
cp
83.5179 276.012 mo
80.4974 269.392 74.8621 265.09 67.5628 262.779 cv
68.9876 261.387 71.1487 260.431 73.7073 261.037 cv
77.5603 261.951 78.9671 265.414 78.9671 265.414 cv
77.845 260.502 71.034 257.025 64.7469 259.101 cv
63.5545 259.495 62.4617 260.045 61.4642 260.697 cv
65.262 253.647 74.9178 254.458 77.2723 256.073 cv
65.3855 246.326 52.1228 256.361 50.0188 261.287 cv
50.0203 261.288 50.0223 261.288 50.0237 261.29 cv
43.9705 261.885 37.3787 263.802 32.5086 268.605 cv
26.2469 274.78 22.4056 282.627 23.2669 294.941 cv
19.2576 294.304 16.387 296.072 15.5594 299.728 cv
14.6434 303.763 16.6868 309.05 21.0706 310.199 cv
22.2771 310.513 24.1756 310.674 25.533 310.319 cv
25.5115 310.253 25.5389 310.341 25.5804 310.52 cv
27.8094 320.139 37.3782 327.09 42.243 328.852 cv
60.1365 335.324 75.7356 330.726 83.8504 320.564 cv
88.4886 314.749 93.2503 302.06 85.3255 294.653 cv
85.094 294.435 87.2132 284.103 83.5179 276.012 cv
cp
f
46.8592 306.736 mo
46.8675 306.748 46.8758 306.759 46.8841 306.771 cv
46.886 306.77 46.888 306.769 46.8899 306.768 cv
46.8899 306.768 46.8172 306.674 46.8592 306.736 cv
cp
f
161.235 306.175 mo
161.546 303.988 158.277 300.808 156.304 308.548 cv
155.995 309.753 155.645 310.809 155.612 310.819 cv
155.548 309.842 155.631 308.709 155.709 307.946 cv
156.679 298.731 162.21 302.608 161.235 306.175 cv
cp
147.686 262.596 mo
142.861 257.622 141.577 254.601 141.435 252.863 cv
141.898 253.139 142.508 253.586 143.312 254.308 cv
144.715 255.566 146.758 259.398 148.191 262.317 cv
148.018 262.405 147.854 262.503 147.686 262.596 cv
cp
136.067 309.207 mo
125.954 324.301 113.065 322.09 110.976 314.487 cv
109.517 313.714 107.921 311.843 106.819 309.778 cv
106.658 309.964 106.479 310.132 106.276 310.266 cv
106.118 310.383 105.934 310.46 105.763 310.548 cv
105.579 310.614 105.393 310.673 105.202 310.709 cv
105.321 310.563 106.713 309.773 107.13 307.583 cv
107.187 307.284 107.317 307.366 107.362 307.501 cv
107.439 307.74 107.466 307.999 107.452 308.253 cv
107.436 308.656 107.302 309.052 107.102 309.405 cv
107.1 309.408 107.097 309.411 107.096 309.415 cv
112.082 315.507 125.282 316.063 135.665 308.746 cv
135.152 308.041 134.932 307.594 134.742 306.781 cv
134.603 306.201 135.276 306.03 135.44 306.603 cv
136.255 309.443 137.638 309.541 139.487 309.892 cv
137.676 310.079 136.717 309.651 136.067 309.207 cv
cp
111.281 292.809 mo
111.44 293.243 111.923 293.461 112.351 293.301 cv
112.521 293.236 112.649 293.109 112.742 292.972 cv
112.87 293.354 112.946 293.793 112.928 294.261 cv
112.867 295.677 112.033 296.791 111.064 296.753 cv
110.103 296.708 109.367 295.526 109.429 294.108 cv
109.492 292.691 110.325 291.577 111.29 291.615 cv
111.45 291.621 111.605 291.675 111.754 291.743 cv
111.335 291.912 111.121 292.384 111.281 292.809 cv
cp
112.04 287.271 mo
113.747 287.35 115.024 289.85 114.894 292.866 cv
114.765 295.879 113.279 298.27 111.571 298.19 cv
111.458 298.188 111.349 298.145 111.242 298.123 cv
112.607 298.175 113.793 296.271 113.902 293.856 cv
114.002 291.442 112.978 289.444 111.614 289.386 cv
110.251 289.327 109.06 291.232 108.956 293.646 cv
108.921 294.502 109.032 295.301 109.244 295.987 cv
108.867 295.039 108.662 293.871 108.718 292.599 cv
108.849 289.584 110.335 287.201 112.04 287.271 cv
cp
114.806 286.969 mo
112.781 282.849 109.405 285.939 109.405 285.939 cv
110.628 282.809 114.529 282.652 114.806 286.969 cv
cp
119.794 257.291 mo
120.573 256.843 121.145 256.585 121.568 256.441 cv
121.155 257.829 119.595 260.061 114.827 263.268 cv
114.706 263.164 114.584 263.06 114.458 262.959 cv
116.122 260.834 118.439 258.072 119.794 257.291 cv
cp
122.562 301.446 mo
122.562 301.446 122.567 301.947 122.115 302.5 cv
119.643 305.52 113.602 304.179 114.103 300.562 cv
114.153 300.221 114.089 301.637 115.864 302.348 cv
118.161 303.271 122.033 302.607 122.562 301.446 cv
cp
127.38 293.543 mo
127.496 293.987 127.948 294.25 128.388 294.132 cv
128.565 294.091 128.701 293.982 128.808 293.848 cv
128.903 294.242 128.926 294.684 128.862 295.144 cv
128.653 296.537 127.722 297.557 126.77 297.416 cv
125.818 297.273 125.216 296.032 125.424 294.636 cv
125.628 293.239 126.562 292.225 127.516 292.363 cv
127.675 292.388 127.823 292.454 127.957 292.532 cv
127.527 292.655 127.266 293.103 127.38 293.543 cv
cp
124.887 292.832 mo
125.339 289.733 127.131 287.435 128.883 287.692 cv
130.64 287.951 131.69 290.676 131.234 293.774 cv
130.778 296.873 128.99 299.174 127.236 298.916 cv
127.015 298.882 126.806 298.809 126.61 298.708 cv
126.706 298.738 126.796 298.79 126.901 298.8 cv
128.301 299.01 129.736 297.168 130.098 294.691 cv
130.465 292.212 129.62 290.032 128.218 289.824 cv
126.817 289.618 125.385 291.459 125.024 293.937 cv
124.892 294.819 124.92 295.654 125.064 296.383 cv
124.781 295.364 124.693 294.143 124.887 292.832 cv
cp
133.015 287.915 mo
133.015 287.915 130.219 284.339 126.365 286.82 cv
128.479 283.239 132.985 284.66 133.015 287.915 cv
cp
102.353 269.325 mo
102.702 268.985 103.193 268.582 103.898 268.113 cv
105.258 267.209 108.79 266.182 111.254 265.51 cv
111.279 265.555 111.309 265.599 111.333 265.645 cv
109.211 267.202 105.355 269.79 102.353 269.325 cv
cp
151.496 266.212 mo
154.222 267.618 158.005 269.66 159.356 271.037 cv
160.071 271.766 160.55 272.365 160.876 272.853 cv
157.285 272.654 153.454 268.769 151.318 266.389 cv
151.376 266.328 151.437 266.271 151.496 266.212 cv
cp
164.4 303.023 mo
164.003 301.508 163.216 300.381 162.131 299.675 cv
160.945 298.739 159.317 298.37 157.384 298.635 cv
157.434 296.83 157.372 295.089 157.207 293.417 cv
156.922 288.76 155.755 284.92 153.925 281.626 cv
152.445 278.637 150.564 276.065 148.407 273.961 cv
148.262 272.141 148.771 270.213 149.729 268.528 cv
149.858 270.489 149.723 273.195 150.503 273.9 cv
151.634 273.391 153.255 272.506 152.971 272.229 cv
151.096 270.413 150.665 268.728 150.236 267.716 cv
150.259 267.684 150.283 267.652 150.305 267.62 cv
157.58 278.282 160.174 275.83 160.781 275.347 cv
162.45 274.017 162.952 272.504 162.952 272.504 cv
162.946 272.507 162.94 272.508 162.933 272.511 cv
163.274 271.879 163.163 271.436 162.463 270.582 cv
160.037 267.623 155.678 266.207 152.379 265.437 cv
154.365 263.9 156.884 263.246 159.452 264.322 cv
161.059 264.996 162.242 265.962 163.064 266.838 cv
163.193 266.975 163.404 266.997 163.559 266.888 cv
163.713 266.779 163.763 266.573 163.677 266.404 cv
162.032 263.205 158.587 260.511 153.624 260.81 cv
151.902 260.914 150.286 261.366 148.819 262.027 cv
147.935 257.887 146.804 252.2 143.75 250.44 cv
143.037 250.028 142.61 250.372 141.967 250.892 cv
142.028 250.828 142.071 250.796 142.071 250.796 cv
142.071 250.796 139.199 252.881 138.918 253.67 cv
137.967 256.337 141.737 260.276 146.181 263.542 cv
146.069 263.623 145.96 263.707 145.85 263.789 cv
144.683 263.178 143.355 262.4 142.323 261.707 cv
140.227 260.299 139.249 259.365 139.249 259.365 cv
138.614 260.246 139.47 262.172 139.604 263.629 cv
140.121 264.119 142.383 264.599 144.477 264.952 cv
142.903 266.451 141.812 268.117 141.398 269.535 cv
141.276 269.488 141.154 269.437 141.031 269.392 cv
141.024 269.388 141.019 269.385 141.012 269.382 cv
141.015 269.384 141.02 269.387 141.024 269.389 cv
131.635 265.946 120.747 268.57 118.619 269.184 cv
118.381 268.124 117.838 266.915 117.029 265.737 cv
118.791 265.811 120.71 265.812 121.214 265.503 cv
121.571 264.345 123.007 262.66 122.23 262.102 cv
122.23 262.102 121.277 262.691 119.332 263.473 cv
118.376 263.857 117.167 264.259 116.116 264.554 cv
116.041 264.467 115.96 264.384 115.882 264.299 cv
120.054 262.414 123.791 259.863 123.473 257.532 cv
123.38 256.842 121.407 254.652 121.407 254.652 cv
121.407 254.652 121.438 254.687 121.48 254.755 cv
121.042 254.218 120.754 253.86 120.1 254.073 cv
117.318 254.975 115.427 259.4 114 262.61 cv
112.922 261.82 111.686 261.174 110.305 260.792 cv
106.873 259.843 104.116 260.927 102.489 262.954 cv
102.352 263.124 102.363 263.37 102.515 263.527 cv
102.666 263.685 102.911 263.705 103.086 263.574 cv
103.599 263.192 104.221 262.856 104.971 262.64 cv
107.316 261.962 109.321 263.003 110.458 264.352 cv
110.571 264.487 110.668 264.625 110.768 264.763 cv
107.936 264.8 104.002 265.163 101.451 267.206 cv
100.737 267.779 100.571 268.119 100.738 268.691 cv
100.733 268.687 100.728 268.686 100.723 268.682 cv
100.723 268.682 100.874 269.999 102.005 271.367 cv
102.415 271.866 104.107 274.309 111.859 266.875 cv
111.869 266.905 111.882 266.936 111.891 266.966 cv
111.374 267.716 110.962 269.043 109.108 270.208 cv
108.829 270.383 109.993 271.381 110.827 271.991 cv
111.562 271.564 111.676 269.4 112.117 267.85 cv
112.529 269.852 112.175 271.581 112.09 271.94 cv
108.008 274.304 104.88 277.635 103.047 282.038 cv
102.304 283.823 101.892 285.79 101.689 287.747 cv
100.919 293.256 101.894 298.26 101.742 298.403 cv
94.6639 305.019 98.9173 316.354 103.06 321.548 cv
110.309 330.625 124.243 334.732 140.226 328.951 cv
144.379 327.447 152.368 321.71 154.807 313.705 cv
155.146 313.319 155.487 312.924 155.828 312.518 cv
155.96 312.534 156.093 312.548 156.229 312.558 cv
157.497 312.865 158.696 312.859 159.796 312.531 cv
163.676 311.374 165.336 306.59 164.4 303.023 cv
cp
f
136.067 309.207 mo
136.074 309.196 136.081 309.186 136.088 309.175 cv
136.125 309.119 136.061 309.204 136.061 309.204 cv
136.063 309.205 136.065 309.206 136.067 309.207 cv
cp
f
806.783 120 mo
724.008 120 li
713.418 120 704.833 111.415 704.833 100.825 cv
704.833 19.1748 li
704.833 8.58496 713.418 9.09495e-13 724.008 9.09495e-13 cv
805.658 9.09495e-13 li
816.248 9.09495e-13 824.833 8.58496 824.833 19.1748 cv
824.833 101.95 li
824.833 111.919 816.752 120 806.783 120 cv
cp
0 .368627 .427451 rgb
f
733.134 6.25293 mo
720.976 6.25293 711.086 16.1431 711.086 28.3003 cv
711.086 91.6997 li
711.086 103.857 720.976 113.748 733.134 113.748 cv
796.533 113.748 li
808.69 113.748 818.581 103.857 818.581 91.6997 cv
818.581 28.3003 li
818.581 16.1431 808.69 6.25293 796.533 6.25293 cv
733.134 6.25293 li
cp
796.533 115.492 mo
733.134 115.492 li
720.014 115.492 709.341 104.819 709.341 91.6997 cv
709.341 28.3003 li
709.341 15.1812 720.014 4.50781 733.134 4.50781 cv
796.533 4.50781 li
809.652 4.50781 820.325 15.1812 820.325 28.3003 cv
820.325 91.6997 li
820.325 104.819 809.652 115.492 796.533 115.492 cv
cp
1 1 1 rgb
f
722.436 81.585 mo
722.436 80.6831 723.466 80.2974 724.529 80.2974 cv
725.559 80.2974 726.621 80.6831 726.621 81.585 cv
726.621 90.3745 li
733.576 80.9082 li
733.898 80.4575 734.284 80.2974 734.735 80.2974 cv
735.798 80.2974 737.15 81.3916 737.15 82.4541 cv
737.15 82.6797 737.117 82.9692 736.892 83.2593 cv
731.129 90.4717 li
738.148 101.162 li
738.309 101.387 738.373 101.644 738.373 101.901 cv
738.373 102.932 737.086 103.995 735.862 103.995 cv
735.315 103.995 734.767 103.769 734.413 103.19 cv
728.36 94.0132 li
726.621 96.2031 li
726.621 102.513 li
726.621 103.383 725.559 103.834 724.529 103.834 cv
723.466 103.834 722.436 103.383 722.436 102.513 cv
722.436 81.585 li
cp
f
744.037 89.8276 mo
744.037 102.513 li
744.037 103.157 743.103 103.834 741.944 103.834 cv
740.753 103.834 739.883 103.157 739.883 102.513 cv
739.883 89.8276 li
739.883 89.0547 740.753 88.54 741.944 88.54 cv
743.103 88.54 744.037 89.0547 744.037 89.8276 cv
cp
744.198 83.0981 mo
744.198 84.1606 743.199 85.1265 741.944 85.1265 cv
740.656 85.1265 739.657 84.1606 739.657 83.0981 cv
739.657 82.0034 740.656 81.0693 741.944 81.0693 cv
743.199 81.0693 744.198 82.0034 744.198 83.0981 cv
cp
f
750.862 97.5229 mo
750.862 99.0039 752.149 100.485 753.662 100.485 cv
755.304 100.485 756.593 98.7783 756.593 98.1025 cv
756.593 94.8823 li
756.593 93.0801 755.079 91.9844 753.695 91.9844 cv
752.117 91.9844 750.862 93.4336 750.862 94.8823 cv
750.862 97.5229 li
cp
760.746 80.9082 mo
760.746 102.513 li
760.746 103.157 759.877 103.834 758.686 103.834 cv
757.655 103.834 756.818 103.157 756.818 102.513 cv
756.818 101.58 li
756.174 102.9 754.403 104.124 752.343 104.124 cv
749.348 104.124 746.708 100.968 746.708 97.5229 cv
746.708 94.8823 li
746.708 91.3086 749.283 88.3467 752.439 88.3467 cv
754.435 88.3467 755.884 89.5376 756.593 90.793 cv
756.593 80.9082 li
756.593 80.1362 757.526 79.6206 758.686 79.6206 cv
759.877 79.6206 760.746 80.1362 760.746 80.9082 cv
cp
f
771.207 99.5835 mo
771.207 96.75 763.576 98.521 763.576 93.144 cv
763.576 90.8579 765.025 88.3467 769.339 88.3467 cv
771.948 88.3467 774.459 89.248 774.459 90.4395 cv
774.459 91.019 773.912 92.4351 772.946 92.4351 cv
772.173 92.4351 771.175 91.502 769.404 91.502 cv
767.794 91.502 767.15 92.3071 767.15 92.9507 cv
767.15 95.3008 774.878 93.6919 774.878 99.4224 cv
774.878 102.288 772.753 104.124 768.953 104.124 cv
765.669 104.124 763.125 102.771 763.125 101.354 cv
763.125 100.678 763.705 99.5195 764.51 99.5195 cv
765.444 99.5195 766.152 100.968 768.857 100.968 cv
770.756 100.968 771.207 100.228 771.207 99.5835 cv
cp
f
784.082 81.585 mo
784.082 80.6831 785.113 80.2974 786.175 80.2974 cv
787.205 80.2974 788.268 80.6831 788.268 81.585 cv
788.268 102.513 li
788.268 103.383 787.205 103.834 786.175 103.834 cv
785.113 103.834 784.082 103.383 784.082 102.513 cv
784.082 81.585 li
cp
f
796.316 83.9673 mo
796.316 100.163 li
799.665 100.163 li
801.79 100.163 803.046 98.9717 803.046 96.4604 cv
803.046 87.6699 li
803.046 85.1587 801.79 83.9673 799.665 83.9673 cv
796.316 83.9673 li
cp
799.665 80.2974 mo
803.915 80.2974 807.231 82.293 807.231 87.6699 cv
807.231 96.4604 li
807.231 101.837 803.915 103.834 799.665 103.834 cv
793.966 103.834 li
792.871 103.834 792.131 103.222 792.131 102.545 cv
792.131 81.585 li
792.131 80.9082 792.871 80.2974 793.966 80.2974 cv
799.665 80.2974 li
cp
f
758.687 53.6108 mo
758.559 53.5469 758.421 53.4912 758.302 53.4048 cv
758.149 53.3076 758.014 53.1836 757.892 53.0459 cv
755.37 59.2549 745.724 67.1567 736.089 52.9585 cv
735.61 53.2988 734.9 53.6304 733.548 53.5112 cv
734.922 53.2271 735.951 53.1377 736.527 50.9995 cv
736.641 50.5684 737.145 50.6885 737.049 51.1245 cv
736.916 51.7363 736.758 52.0737 736.383 52.6084 cv
745.799 58.5972 754.342 56.1943 757.681 52.7769 cv
757.679 52.7744 757.678 52.772 757.676 52.77 cv
757.523 52.5073 757.419 52.2124 757.402 51.9106 cv
757.389 51.7202 757.406 51.5259 757.461 51.3457 cv
757.492 51.2441 757.588 51.1807 757.634 51.4043 cv
757.97 53.0415 759.017 53.6172 759.107 53.7251 cv
758.964 53.7007 758.825 53.6582 758.687 53.6108 cv
cp
739.243 37.0522 mo
739.265 34.6226 742.628 33.562 744.206 36.2349 cv
741.33 34.3838 739.243 37.0522 739.243 37.0522 cv
cp
742.421 41.1982 mo
742.462 40.8584 742.774 40.6719 742.94 40.6465 cv
743.59 40.5479 744.294 41.0742 744.365 42.2979 cv
744.446 43.6714 743.879 44.4282 743.23 44.5254 cv
742.581 44.6216 741.947 43.9268 741.805 42.9775 cv
741.761 42.6641 741.777 42.3628 741.842 42.0942 cv
741.914 42.186 742.007 42.2598 742.127 42.2881 cv
742.427 42.3682 742.735 42.189 742.815 41.8872 cv
742.892 41.5869 742.691 41.2183 742.421 41.1982 cv
cp
745.207 41.5464 mo
744.937 39.6973 743.868 38.3228 742.823 38.4766 cv
741.777 38.6323 741.146 40.2593 741.42 42.1094 cv
741.69 43.9585 742.761 45.3325 743.806 45.1763 cv
743.822 45.1748 743.836 45.1685 743.851 45.1646 cv
743.755 45.2012 743.66 45.2461 743.556 45.2622 cv
742.247 45.4551 740.912 43.7373 740.572 41.4253 cv
740.232 39.1128 741.015 37.0791 742.327 36.8862 cv
743.634 36.6938 744.972 38.4092 745.309 40.7217 cv
745.454 41.7002 745.388 42.6118 745.177 43.3721 cv
745.285 42.8276 745.305 42.2046 745.207 41.5464 cv
cp
752.044 47.8237 mo
753.368 47.2935 753.321 46.2363 753.358 46.4912 cv
753.732 49.1904 749.223 50.1909 747.378 47.9375 cv
747.041 47.5249 747.044 47.1509 747.044 47.1509 cv
747.439 48.0176 750.329 48.5122 752.044 47.8237 cv
cp
754.898 36.5718 mo
756.17 36.519 757.279 38.2979 757.376 40.5479 cv
757.418 41.4976 757.265 42.3687 756.984 43.0767 cv
757.142 42.5649 757.225 41.9683 757.198 41.3296 cv
757.122 39.5278 756.233 38.106 755.216 38.1494 cv
754.197 38.1929 753.433 39.6846 753.508 41.4863 cv
753.531 41.9961 753.62 42.4736 753.756 42.8975 cv
753.702 42.7114 753.663 42.5127 753.655 42.3008 cv
753.641 41.9766 753.694 41.6709 753.783 41.4063 cv
753.847 41.501 753.936 41.5894 754.054 41.6348 cv
754.352 41.7461 754.686 41.5942 754.797 41.293 cv
754.907 40.998 754.696 40.6348 754.32 40.6348 cv
754.483 40.3843 754.75 40.3101 754.861 40.3066 cv
755.531 40.2798 756.086 40.728 756.152 42.0361 cv
756.201 43.0205 755.614 43.9995 754.948 44.0303 cv
754.47 44.0493 754.044 43.6611 753.82 43.0845 cv
754.179 44.0571 754.805 44.6968 755.492 44.6704 cv
755.413 44.6865 755.332 44.7188 755.247 44.7212 cv
753.973 44.7803 752.863 42.9956 752.767 40.7476 cv
752.671 38.4961 753.623 36.6304 754.898 36.5718 cv
cp
756.864 36.4429 mo
756.864 36.4429 754.344 34.1367 752.833 37.2119 cv
753.04 33.9897 755.951 34.1069 756.864 36.4429 cv
cp
721.549 54.3706 mo
721.366 53.7993 721.215 53.3047 720.996 52.4517 cv
719.523 46.6743 717.083 49.0483 717.316 50.6807 cv
716.588 48.0186 720.798 45.4927 721.521 52.3701 cv
721.575 52.8975 721.636 53.7388 721.549 54.3706 cv
cp
760.512 32.4526 mo
758.498 28.0391 754.741 25.1709 749.875 23.6304 cv
750.825 22.7021 752.266 22.0654 753.971 22.4692 cv
756.54 23.0786 757.478 25.3872 757.478 25.3872 cv
756.73 22.1128 752.189 19.7944 747.998 21.1787 cv
747.203 21.4409 746.474 21.8081 745.809 22.2427 cv
748.342 17.543 754.779 18.0835 756.348 19.1602 cv
748.424 12.6616 739.582 19.3516 738.179 22.6357 cv
738.18 22.6362 738.181 22.6367 738.182 22.6372 cv
734.147 23.0347 729.753 24.312 726.506 27.5146 cv
722.331 31.6309 719.77 36.8628 720.344 45.0723 cv
717.672 44.6475 715.758 45.8257 715.206 48.2627 cv
714.595 50.9526 715.958 54.478 718.88 55.2437 cv
719.685 55.4531 720.95 55.5605 721.855 55.3237 cv
721.841 55.2798 721.859 55.3384 721.887 55.458 cv
723.373 61.8706 729.752 66.5044 732.995 67.6792 cv
744.924 71.9941 755.323 68.9282 760.734 62.1538 cv
763.826 58.2769 767 49.8174 761.717 44.8794 cv
761.563 44.7344 762.975 37.8467 760.512 32.4526 cv
cp
f
736.073 52.9351 mo
736.078 52.9429 736.084 52.9507 736.089 52.9585 cv
736.091 52.958 736.092 52.957 736.093 52.9561 cv
736.093 52.9561 736.045 52.8936 736.073 52.9351 cv
cp
f
812.323 52.5615 mo
812.531 51.103 810.351 48.9829 809.035 54.1431 cv
808.83 54.9463 808.596 55.6504 808.574 55.6572 cv
808.532 55.0059 808.587 54.251 808.639 53.7417 cv
809.286 47.5981 812.973 50.1836 812.323 52.5615 cv
cp
803.29 23.5083 mo
800.074 20.1924 799.218 18.1787 799.124 17.02 cv
799.432 17.2036 799.839 17.5015 800.375 17.9834 cv
801.31 18.8218 802.672 21.3765 803.627 23.3228 cv
803.512 23.3809 803.403 23.4463 803.29 23.5083 cv
cp
795.545 54.5825 mo
788.803 64.645 780.21 63.1709 778.817 58.1025 cv
777.844 57.5869 776.781 56.3398 776.046 54.9629 cv
775.938 55.0869 775.819 55.1992 775.684 55.2881 cv
775.579 55.3662 775.456 55.418 775.342 55.4766 cv
775.219 55.5205 775.095 55.5601 774.969 55.5835 cv
775.047 55.4868 775.975 54.96 776.254 53.4995 cv
776.291 53.3003 776.378 53.355 776.407 53.4453 cv
776.459 53.6045 776.477 53.7769 776.468 53.9468 cv
776.457 54.2153 776.368 54.479 776.235 54.7144 cv
776.233 54.7163 776.232 54.7188 776.23 54.7207 cv
779.554 58.7827 788.354 59.1533 795.277 54.2749 cv
794.934 53.8047 794.788 53.5073 794.661 52.9648 cv
794.569 52.5781 795.017 52.4644 795.126 52.8467 cv
795.67 54.7397 796.592 54.8052 797.825 55.0386 cv
796.617 55.1636 795.978 54.8784 795.545 54.5825 cv
cp
779.02 43.6504 mo
779.127 43.9395 779.448 44.0854 779.734 43.9785 cv
779.847 43.9351 779.933 43.8501 779.994 43.7593 cv
780.08 44.0137 780.131 44.3066 780.118 44.6187 cv
780.078 45.5625 779.522 46.3052 778.876 46.2798 cv
778.236 46.25 777.744 45.4619 777.786 44.5161 cv
777.828 43.5718 778.384 42.8291 779.027 42.8545 cv
779.133 42.8584 779.237 42.8945 779.336 42.9399 cv
779.056 43.0522 778.914 43.3667 779.02 43.6504 cv
cp
779.526 39.959 mo
780.665 40.0112 781.516 41.6772 781.429 43.6885 cv
781.344 45.6968 780.352 47.291 779.214 47.2378 cv
779.138 47.2358 779.066 47.2075 778.995 47.1929 cv
779.905 47.228 780.696 45.9585 780.768 44.3481 cv
780.835 42.7393 780.152 41.4067 779.242 41.3682 cv
778.334 41.3291 777.54 42.5991 777.471 44.2085 cv
777.448 44.7793 777.521 45.312 777.663 45.7695 cv
777.411 45.1367 777.275 44.3584 777.312 43.5103 cv
777.4 41.5005 778.39 39.9116 779.526 39.959 cv
cp
781.371 39.7573 mo
780.02 37.0103 777.77 39.0703 777.77 39.0703 cv
778.585 36.9834 781.186 36.8789 781.371 39.7573 cv
cp
784.696 19.9722 mo
785.215 19.6733 785.597 19.5015 785.879 19.4053 cv
785.603 20.3301 784.563 21.8184 781.385 23.9565 cv
781.304 23.8867 781.222 23.8179 781.139 23.7505 cv
782.248 22.334 783.793 20.4922 784.696 19.9722 cv
cp
786.541 49.4087 mo
786.541 49.4087 786.545 49.7427 786.243 50.1113 cv
784.595 52.124 780.568 51.23 780.902 48.8193 cv
780.935 48.5918 780.892 49.5356 782.075 50.0093 cv
783.607 50.6245 786.188 50.1826 786.541 49.4087 cv
cp
789.753 44.1401 mo
789.831 44.4355 790.132 44.6108 790.426 44.5327 cv
790.543 44.5049 790.634 44.4326 790.705 44.3428 cv
790.768 44.606 790.784 44.8999 790.741 45.207 cv
790.602 46.1357 789.982 46.8159 789.347 46.7212 cv
788.712 46.6265 788.311 45.7988 788.449 44.8687 cv
788.586 43.937 789.208 43.2612 789.844 43.353 cv
789.949 43.3696 790.049 43.4136 790.138 43.4658 cv
789.851 43.5474 789.677 43.8462 789.753 44.1401 cv
cp
788.091 43.666 mo
788.392 41.5996 789.588 40.0679 790.755 40.2393 cv
791.927 40.4121 792.627 42.228 792.323 44.2939 cv
792.018 46.3594 790.827 47.894 789.657 47.7212 cv
789.51 47.6987 789.371 47.6499 789.24 47.5835 cv
789.304 47.603 789.364 47.6372 789.434 47.645 cv
790.367 47.7842 791.324 46.5571 791.565 44.9053 cv
791.81 43.2524 791.246 41.7993 790.312 41.6602 cv
789.378 41.5229 788.423 42.7505 788.183 44.4023 cv
788.095 44.9902 788.113 45.5469 788.209 46.0332 cv
788.02 45.354 787.962 44.5396 788.091 43.666 cv
cp
793.51 40.3877 mo
793.51 40.3877 791.646 38.0039 789.077 39.6577 cv
790.486 37.2705 793.49 38.2178 793.51 40.3877 cv
cp
773.069 27.9946 mo
773.302 27.7681 773.629 27.4985 774.098 27.186 cv
775.005 26.584 777.36 25.8989 779.003 25.4512 cv
779.019 25.481 779.039 25.5107 779.055 25.5405 cv
777.641 26.5791 775.07 28.3047 773.069 27.9946 cv
cp
805.831 25.9189 mo
807.648 26.856 810.17 28.2173 811.071 29.1357 cv
811.547 29.6216 811.866 30.021 812.084 30.3467 cv
809.69 30.2139 807.136 27.6235 805.712 26.0371 cv
805.751 25.9966 805.791 25.9585 805.831 25.9189 cv
cp
814.433 50.46 mo
814.169 49.4502 813.644 48.6987 812.921 48.2275 cv
812.13 47.6035 811.045 47.3579 809.756 47.5347 cv
809.789 46.3306 809.748 45.1709 809.638 44.0562 cv
809.448 40.9512 808.67 38.3911 807.45 36.1948 cv
806.463 34.2026 805.209 32.4878 803.771 31.085 cv
803.675 29.8721 804.014 28.5864 804.653 27.4634 cv
804.739 28.7705 804.649 30.5747 805.168 31.0449 cv
805.923 30.7046 807.003 30.1152 806.814 29.9307 cv
805.564 28.7197 805.277 27.5967 804.991 26.9219 cv
805.006 26.9004 805.021 26.8789 805.037 26.8574 cv
809.886 33.9658 811.616 32.3315 812.021 32.0093 cv
813.134 31.1221 813.468 30.1138 813.468 30.1138 cv
813.464 30.1157 813.46 30.1167 813.456 30.1182 cv
813.682 29.6973 813.609 29.4023 813.142 28.833 cv
811.525 26.8599 808.618 25.9155 806.419 25.4028 cv
807.743 24.3779 809.422 23.9414 811.135 24.6592 cv
812.206 25.1084 812.994 25.7524 813.543 26.3364 cv
813.629 26.4277 813.769 26.4424 813.872 26.3696 cv
813.975 26.2969 814.009 26.1597 813.951 26.0474 cv
812.855 23.9141 810.558 22.1182 807.249 22.3179 cv
806.101 22.3867 805.024 22.6885 804.046 23.1294 cv
803.457 20.3691 802.703 16.5776 800.666 15.4043 cv
800.191 15.1299 799.906 15.3594 799.478 15.7056 cv
799.519 15.6626 799.547 15.6421 799.547 15.6421 cv
799.547 15.6421 797.633 17.0322 797.446 17.5581 cv
796.811 19.3359 799.324 21.9624 802.287 24.1392 cv
802.212 24.1934 802.14 24.2485 802.067 24.3037 cv
801.289 23.896 800.404 23.3779 799.715 22.9155 cv
798.318 21.9771 797.666 21.3545 797.666 21.3545 cv
797.243 21.9414 797.813 23.2261 797.903 24.1968 cv
798.247 24.5234 799.755 24.8433 801.151 25.0791 cv
800.102 26.0781 799.375 27.1895 799.099 28.1343 cv
799.017 28.103 798.936 28.0688 798.854 28.0391 cv
798.849 28.0366 798.846 28.0347 798.841 28.0322 cv
798.844 28.0337 798.846 28.0356 798.849 28.0371 cv
792.59 25.7417 785.332 27.4907 783.913 27.9004 cv
783.754 27.1934 783.392 26.3877 782.853 25.6025 cv
784.027 25.6519 785.306 25.6523 785.643 25.4463 cv
785.881 24.6743 786.838 23.5513 786.32 23.1787 cv
786.32 23.1787 785.684 23.5718 784.388 24.0933 cv
783.751 24.3496 782.945 24.6167 782.244 24.8135 cv
782.194 24.7559 782.14 24.7002 782.088 24.644 cv
784.869 23.3867 787.361 21.686 787.149 20.1323 cv
787.087 19.6729 785.771 18.2124 785.771 18.2124 cv
785.771 18.2124 785.792 18.2358 785.82 18.2813 cv
785.528 17.9229 785.336 17.6846 784.9 17.8262 cv
783.045 18.4277 781.784 21.3779 780.833 23.5181 cv
780.115 22.9912 779.291 22.5601 778.37 22.3062 cv
776.082 21.6733 774.244 22.3955 773.159 23.7466 cv
773.068 23.8608 773.075 24.0244 773.177 24.1294 cv
773.277 24.2339 773.441 24.2476 773.557 24.1606 cv
773.9 23.9058 774.314 23.6821 774.814 23.5376 cv
776.377 23.0859 777.714 23.7798 778.472 24.6792 cv
778.547 24.769 778.612 24.8613 778.679 24.9531 cv
776.791 24.9775 774.168 25.2197 772.468 26.5815 cv
771.991 26.9634 771.88 27.1904 771.992 27.5718 cv
771.989 27.5698 771.986 27.5679 771.982 27.5659 cv
771.982 27.5659 772.083 28.4443 772.837 29.356 cv
773.11 29.688 774.238 31.3169 779.406 26.3608 cv
779.413 26.3809 779.421 26.4014 779.427 26.4219 cv
779.083 26.9219 778.808 27.8071 777.572 28.583 cv
777.386 28.6997 778.162 29.3647 778.718 29.7715 cv
779.208 29.4873 779.284 28.0449 779.578 27.0107 cv
779.853 28.3457 779.616 29.4985 779.56 29.7378 cv
776.839 31.314 774.753 33.5342 773.531 36.4697 cv
773.036 37.6597 772.761 38.9707 772.626 40.2759 cv
772.113 43.9482 772.763 47.2842 772.662 47.3794 cv
767.943 51.7905 770.778 59.3467 773.54 62.8096 cv
778.373 68.8613 787.662 71.5996 798.318 67.7456 cv
801.086 66.7427 806.412 62.9175 808.038 57.5811 cv
808.264 57.3237 808.491 57.061 808.719 56.7896 cv
808.807 56.8003 808.895 56.8101 808.986 56.8159 cv
809.832 57.021 810.631 57.0171 811.364 56.7988 cv
813.95 56.0269 815.057 52.8379 814.433 50.46 cv
cp
f
795.544 54.5825 mo
795.549 54.5752 795.554 54.5684 795.559 54.561 cv
795.583 54.5239 795.541 54.5801 795.541 54.5801 cv
795.542 54.5811 795.543 54.5815 795.544 54.5825 cv
cp
f
601.867 120 mo
546.592 120 li
537.52 120 530.167 112.646 530.167 103.575 cv
530.167 49.4248 li
530.167 40.3535 537.52 33 546.592 33 cv
600.742 33 li
609.813 33 617.167 40.3535 617.167 49.4248 cv
617.167 104.7 li
617.167 113.15 610.317 120 601.867 120 cv
cp
0 .368627 .427451 rgb
f
550.684 37.5332 mo
541.87 37.5332 534.7 44.7041 534.7 53.5176 cv
534.7 99.4824 li
534.7 108.296 541.87 115.467 550.684 115.467 cv
596.649 115.467 li
605.463 115.467 612.634 108.296 612.634 99.4824 cv
612.634 53.5176 li
612.634 44.7041 605.463 37.5332 596.649 37.5332 cv
550.684 37.5332 li
cp
596.649 116.732 mo
550.684 116.732 li
541.173 116.732 533.435 108.994 533.435 99.4824 cv
533.435 53.5176 li
533.435 44.0063 541.173 36.2681 550.684 36.2681 cv
596.649 36.2681 li
606.16 36.2681 613.899 44.0063 613.899 53.5176 cv
613.899 99.4824 li
613.899 108.994 606.16 116.732 596.649 116.732 cv
cp
1 1 1 rgb
f
542.928 92.1489 mo
542.928 91.4951 543.675 91.2153 544.446 91.2153 cv
545.193 91.2153 545.963 91.4951 545.963 92.1489 cv
545.963 98.5215 li
551.005 91.6587 li
551.239 91.332 551.519 91.2153 551.845 91.2153 cv
552.615 91.2153 553.596 92.0088 553.596 92.7793 cv
553.596 92.9424 553.573 93.1523 553.409 93.3628 cv
549.231 98.5918 li
554.32 106.342 li
554.437 106.505 554.483 106.692 554.483 106.878 cv
554.483 107.625 553.55 108.396 552.662 108.396 cv
552.266 108.396 551.869 108.232 551.612 107.813 cv
547.223 101.16 li
545.963 102.747 li
545.963 107.322 li
545.963 107.953 545.193 108.28 544.446 108.28 cv
543.675 108.28 542.928 107.953 542.928 107.322 cv
542.928 92.1489 li
cp
f
558.589 98.125 mo
558.589 107.322 li
558.589 107.789 557.912 108.28 557.072 108.28 cv
556.208 108.28 555.578 107.789 555.578 107.322 cv
555.578 98.125 li
555.578 97.5649 556.208 97.1914 557.072 97.1914 cv
557.912 97.1914 558.589 97.5649 558.589 98.125 cv
cp
558.706 93.2461 mo
558.706 94.0161 557.982 94.7168 557.072 94.7168 cv
556.138 94.7168 555.414 94.0161 555.414 93.2461 cv
555.414 92.4526 556.138 91.7754 557.072 91.7754 cv
557.982 91.7754 558.706 92.4526 558.706 93.2461 cv
cp
f
563.537 103.704 mo
563.537 104.778 564.47 105.852 565.568 105.852 cv
566.759 105.852 567.692 104.614 567.692 104.125 cv
567.692 101.79 li
567.692 100.483 566.595 99.689 565.591 99.689 cv
564.448 99.689 563.537 100.739 563.537 101.79 cv
563.537 103.704 li
cp
570.703 91.6587 mo
570.703 107.322 li
570.703 107.789 570.073 108.28 569.21 108.28 cv
568.463 108.28 567.855 107.789 567.855 107.322 cv
567.855 106.646 li
567.388 107.603 566.105 108.489 564.611 108.489 cv
562.44 108.489 560.526 106.202 560.526 103.704 cv
560.526 101.79 li
560.526 99.1987 562.393 97.0513 564.681 97.0513 cv
566.128 97.0513 567.178 97.9146 567.692 98.8252 cv
567.692 91.6587 li
567.692 91.0986 568.369 90.7251 569.21 90.7251 cv
570.073 90.7251 570.703 91.0986 570.703 91.6587 cv
cp
f
578.288 105.198 mo
578.288 103.144 572.755 104.428 572.755 100.529 cv
572.755 98.8721 573.806 97.0513 576.933 97.0513 cv
578.824 97.0513 580.645 97.7046 580.645 98.5684 cv
580.645 98.9888 580.249 100.016 579.549 100.016 cv
578.988 100.016 578.264 99.3389 576.98 99.3389 cv
575.813 99.3389 575.346 99.9224 575.346 100.389 cv
575.346 102.093 580.949 100.926 580.949 105.081 cv
580.949 107.159 579.408 108.489 576.654 108.489 cv
574.273 108.489 572.428 107.509 572.428 106.482 cv
572.428 105.992 572.849 105.151 573.432 105.151 cv
574.109 105.151 574.623 106.202 576.584 106.202 cv
577.961 106.202 578.288 105.665 578.288 105.198 cv
cp
f
587.622 92.1489 mo
587.622 91.4951 588.369 91.2153 589.139 91.2153 cv
589.886 91.2153 590.656 91.4951 590.656 92.1489 cv
590.656 107.322 li
590.656 107.953 589.886 108.28 589.139 108.28 cv
588.369 108.28 587.622 107.953 587.622 107.322 cv
587.622 92.1489 li
cp
f
596.491 93.876 mo
596.491 105.618 li
598.92 105.618 li
600.46 105.618 601.37 104.754 601.37 102.934 cv
601.37 96.561 li
601.37 94.7402 600.46 93.876 598.92 93.876 cv
596.491 93.876 li
cp
598.92 91.2153 mo
602.001 91.2153 604.405 92.6626 604.405 96.561 cv
604.405 102.934 li
604.405 106.832 602.001 108.28 598.92 108.28 cv
594.788 108.28 li
593.994 108.28 593.457 107.836 593.457 107.345 cv
593.457 92.1489 li
593.457 91.6587 593.994 91.2153 594.788 91.2153 cv
598.92 91.2153 li
cp
f
569.211 71.8677 mo
569.117 71.8218 569.017 71.7813 568.931 71.7188 cv
568.821 71.6479 568.722 71.5581 568.634 71.4585 cv
566.805 75.96 559.812 81.6885 552.827 71.395 cv
552.48 71.6416 551.965 71.8823 550.985 71.7959 cv
551.981 71.5898 552.727 71.5249 553.144 69.9746 cv
553.228 69.6621 553.593 69.749 553.523 70.0654 cv
553.427 70.5088 553.312 70.7534 553.04 71.1411 cv
559.867 75.4829 566.06 73.7407 568.482 71.2632 cv
568.48 71.2617 568.479 71.2598 568.478 71.2583 cv
568.366 71.0679 568.291 70.854 568.279 70.6353 cv
568.269 70.4971 568.281 70.3564 568.322 70.2256 cv
568.344 70.1519 568.414 70.106 568.447 70.2681 cv
568.691 71.4551 569.45 71.8726 569.515 71.9507 cv
569.411 71.9331 569.311 71.9023 569.211 71.8677 cv
cp
555.114 59.8628 mo
555.13 58.1016 557.568 57.3325 558.712 59.2705 cv
556.627 57.9282 555.114 59.8628 555.114 59.8628 cv
cp
557.418 62.8687 mo
557.447 62.6226 557.674 62.4868 557.794 62.4688 cv
558.265 62.397 558.775 62.7788 558.827 63.666 cv
558.886 64.6616 558.474 65.2104 558.004 65.2808 cv
557.533 65.3506 557.074 64.8472 556.971 64.1587 cv
556.939 63.9312 556.95 63.7129 556.997 63.5181 cv
557.05 63.585 557.117 63.6387 557.205 63.6592 cv
557.423 63.7168 557.645 63.5869 557.703 63.3682 cv
557.759 63.1504 557.613 62.8833 557.418 62.8687 cv
cp
559.437 63.1211 mo
559.242 61.7803 558.467 60.7842 557.709 60.8955 cv
556.951 61.0083 556.493 62.188 556.692 63.5293 cv
556.887 64.8701 557.664 65.8662 558.422 65.7529 cv
558.433 65.7515 558.444 65.7471 558.455 65.7441 cv
558.385 65.771 558.316 65.8032 558.24 65.8149 cv
557.291 65.9551 556.324 64.7095 556.077 63.0332 cv
555.83 61.3564 556.399 59.8823 557.349 59.7422 cv
558.297 59.603 559.267 60.8467 559.512 62.5234 cv
559.616 63.2324 559.569 63.8936 559.416 64.4448 cv
559.494 64.0503 559.509 63.5981 559.437 63.1211 cv
cp
564.394 67.6719 mo
565.354 67.2876 565.32 66.5215 565.347 66.7061 cv
565.618 68.6631 562.349 69.3882 561.011 67.7549 cv
560.767 67.4556 560.77 67.1841 560.77 67.1841 cv
561.056 67.8125 563.151 68.1714 564.394 67.6719 cv
cp
566.463 59.5146 mo
567.385 59.4766 568.189 60.7656 568.26 62.397 cv
568.291 63.0854 568.179 63.7173 567.976 64.2305 cv
568.091 63.8594 568.151 63.4272 568.132 62.9639 cv
568.076 61.6577 567.431 60.627 566.694 60.6587 cv
565.955 60.6899 565.401 61.7715 565.456 63.0776 cv
565.472 63.4468 565.537 63.793 565.635 64.1011 cv
565.596 63.9658 565.569 63.8218 565.562 63.668 cv
565.552 63.4331 565.591 63.2114 565.655 63.0195 cv
565.702 63.0884 565.766 63.1523 565.852 63.1851 cv
566.068 63.2661 566.31 63.1558 566.39 62.9375 cv
566.47 62.7236 566.317 62.4604 566.044 62.4604 cv
566.163 62.2788 566.356 62.2251 566.436 62.2222 cv
566.922 62.2031 567.325 62.5278 567.372 63.4761 cv
567.408 64.1899 566.983 64.8994 566.499 64.9219 cv
566.153 64.9355 565.844 64.6543 565.682 64.2363 cv
565.943 64.9414 566.396 65.4053 566.895 65.3862 cv
566.837 65.3979 566.778 65.4209 566.717 65.4229 cv
565.793 65.4658 564.989 64.1719 564.919 62.542 cv
564.848 60.9097 565.539 59.5571 566.463 59.5146 cv
cp
567.888 59.4214 mo
567.888 59.4214 566.062 57.749 564.966 59.9785 cv
565.116 57.6426 567.227 57.7275 567.888 59.4214 cv
cp
542.286 72.4189 mo
542.153 72.0044 542.043 71.646 541.885 71.0273 cv
540.817 66.8389 539.048 68.5601 539.217 69.7432 cv
538.689 67.8135 541.741 65.9819 542.265 70.9683 cv
542.305 71.3506 542.349 71.9609 542.286 72.4189 cv
cp
570.533 56.5283 mo
569.074 53.3286 566.35 51.249 562.822 50.1318 cv
563.51 49.459 564.555 48.9971 565.792 49.29 cv
567.654 49.7319 568.334 51.4058 568.334 51.4058 cv
567.792 49.0317 564.5 47.3511 561.461 48.3545 cv
560.885 48.5444 560.357 48.811 559.874 49.126 cv
561.71 45.7188 566.377 46.1104 567.515 46.8911 cv
561.77 42.1797 555.359 47.0298 554.343 49.4106 cv
554.343 49.4111 554.344 49.4116 554.345 49.4121 cv
551.419 49.7002 548.233 50.6265 545.879 52.9482 cv
542.853 55.9326 540.996 59.7256 541.412 65.6772 cv
539.474 65.3691 538.087 66.2236 537.687 67.9907 cv
537.244 69.9409 538.232 72.4966 540.351 73.0518 cv
540.934 73.2031 541.851 73.2817 542.508 73.1099 cv
542.497 73.0781 542.51 73.1206 542.531 73.207 cv
543.608 77.856 548.233 81.2158 550.584 82.0674 cv
559.233 85.1958 566.772 82.9727 570.695 78.0615 cv
572.936 75.251 575.238 69.1177 571.407 65.5376 cv
571.296 65.4321 572.32 60.4385 570.533 56.5283 cv
cp
f
552.815 71.3779 mo
552.819 71.3838 552.823 71.3892 552.827 71.395 cv
552.828 71.3945 552.829 71.3936 552.83 71.3931 cv
552.83 71.3931 552.795 71.3477 552.815 71.3779 cv
cp
f
608.097 71.1069 mo
608.247 70.0498 606.667 68.5127 605.713 72.2539 cv
605.564 72.8364 605.395 73.3467 605.379 73.3516 cv
605.348 72.8794 605.388 72.332 605.426 71.9629 cv
605.895 67.5088 608.568 69.3828 608.097 71.1069 cv
cp
601.548 50.0435 mo
599.216 47.6396 598.595 46.1792 598.527 45.3394 cv
598.75 45.4727 599.045 45.6885 599.434 46.0381 cv
600.112 46.6455 601.1 48.498 601.792 49.9087 cv
601.709 49.9512 601.629 49.9985 601.548 50.0435 cv
cp
595.932 72.5723 mo
591.045 79.8677 584.815 78.7993 583.805 75.124 cv
583.1 74.7505 582.328 73.8462 581.796 72.8481 cv
581.718 72.938 581.632 73.0195 581.533 73.084 cv
581.457 73.1406 581.368 73.1782 581.285 73.2202 cv
581.197 73.2524 581.107 73.2808 581.014 73.2983 cv
581.072 73.228 581.744 72.8462 581.946 71.7871 cv
581.974 71.6426 582.037 71.6826 582.058 71.7476 cv
582.095 71.8633 582.109 71.9883 582.102 72.1113 cv
582.094 72.3062 582.03 72.4971 581.933 72.668 cv
581.932 72.6694 581.93 72.6709 581.929 72.6724 cv
584.34 75.6172 590.719 75.8862 595.738 72.3496 cv
595.49 72.0083 595.384 71.7925 595.292 71.3994 cv
595.225 71.1191 595.55 71.0366 595.629 71.3135 cv
596.024 72.6865 596.692 72.7334 597.586 72.9033 cv
596.71 72.9937 596.246 72.7866 595.932 72.5723 cv
cp
583.952 64.6465 mo
584.03 64.856 584.262 64.9619 584.47 64.8848 cv
584.552 64.853 584.614 64.7915 584.658 64.7256 cv
584.72 64.9097 584.757 65.1226 584.748 65.3486 cv
584.719 66.0332 584.316 66.5713 583.848 66.5527 cv
583.383 66.5313 583.027 65.96 583.057 65.2744 cv
583.088 64.5898 583.49 64.0513 583.957 64.0698 cv
584.034 64.0723 584.109 64.0986 584.181 64.1313 cv
583.978 64.2129 583.875 64.4409 583.952 64.6465 cv
cp
584.319 61.9702 mo
585.144 62.0083 585.761 63.2163 585.699 64.6743 cv
585.636 66.1304 584.918 67.2861 584.093 67.2476 cv
584.038 67.2461 583.985 67.2251 583.934 67.2148 cv
584.594 67.2402 585.167 66.3203 585.219 65.1523 cv
585.267 63.9858 584.773 63.02 584.113 62.9917 cv
583.455 62.9639 582.879 63.8843 582.829 65.0513 cv
582.812 65.4653 582.865 65.8511 582.968 66.1826 cv
582.786 65.7241 582.687 65.1597 582.714 64.5449 cv
582.777 63.0879 583.495 61.936 584.319 61.9702 cv
cp
585.656 61.8242 mo
584.677 59.8325 583.046 61.3262 583.046 61.3262 cv
583.636 59.813 585.522 59.7373 585.656 61.8242 cv
cp
588.067 47.48 mo
588.443 47.2632 588.72 47.1387 588.925 47.0688 cv
588.725 47.7393 587.97 48.8184 585.666 50.3687 cv
585.608 50.3179 585.549 50.2681 585.488 50.2192 cv
586.292 49.1919 587.412 47.8569 588.067 47.48 cv
cp
589.405 68.8213 mo
589.405 68.8213 589.407 69.0635 589.189 69.3306 cv
587.994 70.79 585.074 70.1421 585.316 68.394 cv
585.341 68.229 585.31 68.9136 586.167 69.2568 cv
587.278 69.7031 589.149 69.3823 589.405 68.8213 cv
cp
591.734 65.0015 mo
591.79 65.2158 592.008 65.3428 592.221 65.2861 cv
592.306 65.2661 592.372 65.2139 592.424 65.1484 cv
592.47 65.3394 592.481 65.5527 592.449 65.7749 cv
592.349 66.4487 591.899 66.9414 591.439 66.873 cv
590.979 66.8042 590.688 66.2041 590.788 65.5298 cv
590.887 64.8545 591.339 64.3643 591.8 64.4312 cv
591.876 64.4429 591.948 64.4746 592.012 64.5127 cv
591.804 64.5718 591.678 64.7886 591.734 65.0015 cv
cp
590.529 64.6577 mo
590.747 63.1597 591.614 62.0493 592.46 62.1738 cv
593.309 62.2988 593.817 63.6157 593.596 65.1133 cv
593.376 66.6108 592.512 67.7231 591.664 67.5981 cv
591.557 67.5815 591.456 67.5464 591.362 67.498 cv
591.408 67.5122 591.451 67.5371 591.502 67.5425 cv
592.179 67.6436 592.872 66.7539 593.047 65.5562 cv
593.224 64.3579 592.816 63.3042 592.138 63.2036 cv
591.462 63.104 590.769 63.9941 590.595 65.1919 cv
590.531 65.6177 590.545 66.0215 590.614 66.374 cv
590.477 65.8813 590.435 65.291 590.529 64.6577 cv
cp
594.457 62.2813 mo
594.457 62.2813 593.106 60.5532 591.243 61.752 cv
592.265 60.021 594.443 60.708 594.457 62.2813 cv
cp
579.637 53.2959 mo
579.806 53.1318 580.043 52.9365 580.384 52.71 cv
581.041 52.2734 582.749 51.7764 583.939 51.4521 cv
583.951 51.4741 583.966 51.4951 583.978 51.5171 cv
582.952 52.27 581.088 53.521 579.637 53.2959 cv
cp
603.39 51.791 mo
604.707 52.4707 606.536 53.4575 607.189 54.1235 cv
607.534 54.4756 607.766 54.7656 607.924 55.0015 cv
606.188 54.9053 604.336 53.0273 603.303 51.8765 cv
603.332 51.8472 603.361 51.8198 603.39 51.791 cv
cp
609.627 69.5835 mo
609.435 68.8511 609.054 68.3066 608.53 67.9653 cv
607.957 67.5127 607.17 67.3345 606.235 67.4624 cv
606.26 66.5898 606.23 65.7485 606.15 64.9409 cv
606.012 62.6899 605.448 60.8335 604.564 59.2412 cv
603.848 57.7969 602.939 56.5537 601.896 55.5366 cv
601.826 54.6572 602.073 53.7251 602.536 52.9111 cv
602.598 53.8584 602.533 55.1665 602.909 55.5073 cv
603.456 55.2612 604.24 54.8335 604.103 54.6997 cv
603.196 53.8218 602.988 53.0078 602.781 52.5181 cv
602.792 52.5024 602.803 52.4873 602.814 52.4717 cv
606.33 57.625 607.584 56.4404 607.877 56.2065 cv
608.684 55.5635 608.927 54.8325 608.927 54.8325 cv
608.924 54.834 608.921 54.8345 608.918 54.8359 cv
609.082 54.5308 609.029 54.3164 608.69 53.9038 cv
607.518 52.4731 605.411 51.7886 603.816 51.417 cv
604.776 50.6738 605.994 50.3574 607.235 50.8779 cv
608.012 51.2036 608.583 51.6704 608.981 52.0938 cv
609.043 52.1602 609.145 52.1709 609.22 52.1182 cv
609.295 52.0654 609.319 51.9658 609.277 51.8843 cv
608.482 50.3379 606.817 49.0356 604.418 49.1802 cv
603.586 49.2305 602.805 49.4492 602.095 49.7686 cv
601.668 47.7676 601.122 45.019 599.646 44.168 cv
599.301 43.9692 599.095 44.1353 598.784 44.3862 cv
598.814 44.3555 598.834 44.3403 598.834 44.3403 cv
598.834 44.3403 597.446 45.3481 597.31 45.7295 cv
596.85 47.0186 598.673 48.9224 600.821 50.501 cv
600.766 50.54 600.714 50.5801 600.661 50.6201 cv
600.097 50.3247 599.455 49.9492 598.956 49.6138 cv
597.943 48.9336 597.47 48.4819 597.47 48.4819 cv
597.163 48.9077 597.577 49.8389 597.642 50.543 cv
597.892 50.7798 598.985 51.0117 599.997 51.1821 cv
599.237 51.9067 598.709 52.7124 598.509 53.3975 cv
598.45 53.3745 598.391 53.3501 598.332 53.3281 cv
598.328 53.3262 598.326 53.3252 598.323 53.3232 cv
598.324 53.3242 598.326 53.3257 598.328 53.3267 cv
593.79 51.6631 588.528 52.9307 587.499 53.228 cv
587.384 52.7153 587.122 52.1313 586.731 51.562 cv
587.582 51.5977 588.51 51.5977 588.754 51.4487 cv
588.926 50.8887 589.62 50.0747 589.244 49.8047 cv
589.244 49.8047 588.783 50.0894 587.844 50.4673 cv
587.382 50.6533 586.798 50.8472 586.289 50.9897 cv
586.253 50.9482 586.214 50.9077 586.177 50.8667 cv
588.193 49.9556 589.999 48.7227 589.845 47.5962 cv
589.801 47.2627 588.846 46.2041 588.846 46.2041 cv
588.846 46.2041 588.862 46.2212 588.882 46.2539 cv
588.671 45.9941 588.531 45.8213 588.215 45.9243 cv
586.87 46.3604 585.956 48.499 585.267 50.0508 cv
584.745 49.6685 584.149 49.356 583.481 49.1719 cv
581.822 48.7129 580.489 49.2368 579.703 50.2163 cv
579.637 50.2988 579.642 50.4175 579.716 50.4937 cv
579.788 50.5698 579.907 50.5796 579.991 50.5166 cv
580.24 50.3315 580.54 50.1694 580.903 50.0649 cv
582.036 49.7373 583.005 50.2407 583.554 50.8926 cv
583.609 50.9575 583.656 51.0244 583.705 51.0913 cv
582.336 51.1089 580.434 51.2842 579.201 52.2715 cv
578.856 52.5488 578.776 52.7134 578.857 52.9893 cv
578.854 52.9878 578.852 52.9868 578.849 52.9854 cv
578.849 52.9854 578.922 53.6221 579.469 54.2832 cv
579.667 54.5239 580.485 55.7051 584.232 52.1118 cv
584.237 52.1265 584.243 52.1411 584.247 52.1558 cv
583.997 52.5181 583.798 53.1602 582.902 53.7227 cv
582.767 53.8071 583.33 54.2896 583.733 54.5845 cv
584.088 54.3784 584.143 53.3325 584.357 52.583 cv
584.555 53.5508 584.385 54.3862 584.344 54.5601 cv
582.37 55.7026 580.859 57.3125 579.972 59.4404 cv
579.614 60.3032 579.415 61.2539 579.317 62.2002 cv
578.944 64.8628 579.416 67.2813 579.342 67.3501 cv
575.921 70.5479 577.976 76.0264 579.979 78.5371 cv
583.483 82.9243 590.218 84.9097 597.943 82.1152 cv
599.95 81.3882 603.811 78.6152 604.99 74.7461 cv
605.154 74.5596 605.319 74.3691 605.484 74.1724 cv
605.548 74.1802 605.612 74.1875 605.677 74.1914 cv
606.29 74.3403 606.87 74.3374 607.402 74.1792 cv
609.277 73.6196 610.079 71.3076 609.627 69.5835 cv
cp
f
595.932 72.5723 mo
595.936 72.5669 595.939 72.562 595.943 72.5566 cv
595.96 72.5298 595.929 72.5708 595.929 72.5708 cv
595.93 72.5713 595.931 72.5718 595.932 72.5723 cv
cp
f
435.117 120 mo
384.008 120 li
375.72 120 369 113.281 369 104.992 cv
369 55.0083 li
369 46.7192 375.72 40 384.008 40 cv
433.992 40 li
442.281 40 449 46.7192 449 55.0083 cv
449 106.117 li
449 113.784 442.784 120 435.117 120 cv
cp
0 .368627 .427451 rgb
f
387.867 44.1685 mo
379.762 44.1685 373.168 50.7622 373.168 58.8667 cv
373.168 101.133 li
373.168 109.238 379.762 115.832 387.867 115.832 cv
430.133 115.832 li
438.238 115.832 444.832 109.238 444.832 101.133 cv
444.832 58.8667 li
444.832 50.7622 438.238 44.1685 430.133 44.1685 cv
387.867 44.1685 li
cp
430.133 116.995 mo
387.867 116.995 li
379.121 116.995 372.005 109.879 372.005 101.133 cv
372.005 58.8667 li
372.005 50.1206 379.121 43.0054 387.867 43.0054 cv
430.133 43.0054 li
438.879 43.0054 445.995 50.1206 445.995 58.8667 cv
445.995 101.133 li
445.995 109.879 438.879 116.995 430.133 116.995 cv
cp
1 1 1 rgb
f
380.735 94.3901 mo
380.735 93.7886 381.422 93.5317 382.13 93.5317 cv
382.817 93.5317 383.525 93.7886 383.525 94.3901 cv
383.525 100.25 li
388.162 93.939 li
388.376 93.6382 388.634 93.5317 388.934 93.5317 cv
389.643 93.5317 390.545 94.2612 390.545 94.9697 cv
390.545 95.1196 390.523 95.3125 390.373 95.5059 cv
386.531 100.314 li
391.21 107.441 li
391.317 107.591 391.36 107.763 391.36 107.934 cv
391.36 108.621 390.502 109.33 389.686 109.33 cv
389.321 109.33 388.956 109.179 388.72 108.793 cv
384.684 102.675 li
383.525 104.135 li
383.525 108.342 li
383.525 108.922 382.817 109.223 382.13 109.223 cv
381.422 109.223 380.735 108.922 380.735 108.342 cv
380.735 94.3901 li
cp
f
395.136 99.8853 mo
395.136 108.342 li
395.136 108.771 394.513 109.223 393.741 109.223 cv
392.946 109.223 392.366 108.771 392.366 108.342 cv
392.366 99.8853 li
392.366 99.3696 392.946 99.0269 393.741 99.0269 cv
394.513 99.0269 395.136 99.3696 395.136 99.8853 cv
cp
395.243 95.3989 mo
395.243 96.1069 394.577 96.751 393.741 96.751 cv
392.882 96.751 392.216 96.1069 392.216 95.3989 cv
392.216 94.6689 392.882 94.0464 393.741 94.0464 cv
394.577 94.0464 395.243 94.6689 395.243 95.3989 cv
cp
f
399.685 105.015 mo
399.685 106.002 400.544 106.99 401.553 106.99 cv
402.648 106.99 403.506 105.853 403.506 105.402 cv
403.506 103.255 li
403.506 102.053 402.497 101.323 401.574 101.323 cv
400.522 101.323 399.685 102.289 399.685 103.255 cv
399.685 105.015 li
cp
406.275 93.939 mo
406.275 108.342 li
406.275 108.771 405.696 109.223 404.902 109.223 cv
404.215 109.223 403.657 108.771 403.657 108.342 cv
403.657 107.72 li
403.227 108.6 402.047 109.416 400.673 109.416 cv
398.677 109.416 396.916 107.312 396.916 105.015 cv
396.916 103.255 li
396.916 100.873 398.634 98.8979 400.737 98.8979 cv
402.068 98.8979 403.034 99.6914 403.506 100.529 cv
403.506 93.939 li
403.506 93.4243 404.129 93.0806 404.902 93.0806 cv
405.696 93.0806 406.275 93.4243 406.275 93.939 cv
cp
f
413.249 106.389 mo
413.249 104.5 408.162 105.681 408.162 102.096 cv
408.162 100.572 409.128 98.8979 412.004 98.8979 cv
413.743 98.8979 415.417 99.4985 415.417 100.293 cv
415.417 100.68 415.053 101.624 414.408 101.624 cv
413.893 101.624 413.228 101.001 412.047 101.001 cv
410.974 101.001 410.545 101.538 410.545 101.967 cv
410.545 103.534 415.696 102.461 415.696 106.282 cv
415.696 108.192 414.28 109.416 411.747 109.416 cv
409.557 109.416 407.861 108.514 407.861 107.57 cv
407.861 107.119 408.248 106.346 408.784 106.346 cv
409.407 106.346 409.879 107.312 411.682 107.312 cv
412.949 107.312 413.249 106.818 413.249 106.389 cv
cp
f
421.833 94.3901 mo
421.833 93.7886 422.519 93.5317 423.228 93.5317 cv
423.915 93.5317 424.623 93.7886 424.623 94.3901 cv
424.623 108.342 li
424.623 108.922 423.915 109.223 423.228 109.223 cv
422.519 109.223 421.833 108.922 421.833 108.342 cv
421.833 94.3901 li
cp
f
429.989 95.978 mo
429.989 106.775 li
432.221 106.775 li
433.638 106.775 434.475 105.981 434.475 104.307 cv
434.475 98.4468 li
434.475 96.7725 433.638 95.978 432.221 95.978 cv
429.989 95.978 li
cp
432.221 93.5317 mo
435.054 93.5317 437.265 94.8618 437.265 98.4468 cv
437.265 104.307 li
437.265 107.892 435.054 109.223 432.221 109.223 cv
428.422 109.223 li
427.692 109.223 427.198 108.815 427.198 108.364 cv
427.198 94.3901 li
427.198 93.939 427.692 93.5317 428.422 93.5317 cv
432.221 93.5317 li
cp
f
404.903 75.7407 mo
404.817 75.6982 404.725 75.6611 404.645 75.6035 cv
404.544 75.5381 404.454 75.4556 404.372 75.3638 cv
402.691 79.5034 396.261 84.771 389.837 75.3057 cv
389.518 75.5322 389.045 75.7539 388.143 75.6743 cv
389.059 75.4849 389.745 75.4253 390.129 74 cv
390.205 73.7124 390.541 73.7925 390.477 74.083 cv
390.388 74.4907 390.283 74.7158 390.033 75.0723 cv
396.311 79.0649 402.006 77.4629 404.232 75.1846 cv
404.231 75.1831 404.23 75.1816 404.228 75.1797 cv
404.126 75.0049 404.057 74.8081 404.046 74.6074 cv
404.037 74.48 404.048 74.3506 404.085 74.2305 cv
404.106 74.1626 404.17 74.1206 404.2 74.2695 cv
404.425 75.3608 405.122 75.7451 405.182 75.8164 cv
405.087 75.8003 404.995 75.772 404.903 75.7407 cv
cp
391.94 64.7012 mo
391.954 63.082 394.197 62.375 395.248 64.1567 cv
393.331 62.9224 391.94 64.7012 391.94 64.7012 cv
cp
394.058 67.4653 mo
394.086 67.2393 394.294 67.1143 394.404 67.0977 cv
394.838 67.0317 395.307 67.3828 395.355 68.1987 cv
395.408 69.1143 395.03 69.6191 394.597 69.6836 cv
394.165 69.748 393.742 69.2847 393.648 68.6519 cv
393.618 68.4424 393.629 68.2422 393.672 68.063 cv
393.72 68.124 393.783 68.1733 393.863 68.1924 cv
394.063 68.2456 394.268 68.126 394.321 67.9248 cv
394.372 67.7246 394.238 67.479 394.058 67.4653 cv
cp
395.915 67.6978 mo
395.736 66.4648 395.024 65.5488 394.327 65.6514 cv
393.629 65.7549 393.209 66.8398 393.391 68.0728 cv
393.571 69.3057 394.285 70.2217 394.982 70.1177 cv
394.992 70.1167 395.002 70.1123 395.012 70.1094 cv
394.948 70.1343 394.885 70.1641 394.815 70.1748 cv
393.942 70.3037 393.053 69.1582 392.826 67.6167 cv
392.599 66.0752 393.121 64.7192 393.996 64.5908 cv
394.867 64.4624 395.759 65.606 395.984 67.1479 cv
396.08 67.7998 396.037 68.4077 395.896 68.915 cv
395.968 68.5518 395.981 68.1362 395.915 67.6978 cv
cp
400.473 71.8823 mo
401.357 71.5288 401.325 70.8242 401.35 70.9941 cv
401.599 72.7935 398.593 73.4604 397.363 71.9585 cv
397.138 71.6831 397.141 71.4336 397.141 71.4336 cv
397.404 72.0117 399.33 72.3413 400.473 71.8823 cv
cp
402.376 64.3813 mo
403.224 64.3462 403.963 65.5317 404.029 67.0317 cv
404.057 67.665 403.954 68.2456 403.767 68.7178 cv
403.873 68.3765 403.928 67.979 403.91 67.5532 cv
403.859 66.3521 403.266 65.4043 402.588 65.4331 cv
401.909 65.4619 401.4 66.4565 401.45 67.6572 cv
401.465 67.9971 401.524 68.3154 401.615 68.5986 cv
401.579 68.4741 401.553 68.3418 401.548 68.2007 cv
401.539 67.9844 401.574 67.7808 401.633 67.604 cv
401.676 67.6675 401.735 67.7261 401.814 67.7563 cv
402.012 67.8306 402.236 67.7295 402.309 67.5288 cv
402.383 67.332 402.242 67.0898 401.991 67.0898 cv
402.1 66.9229 402.278 66.8735 402.351 66.8711 cv
402.798 66.8535 403.169 67.1519 403.212 68.0244 cv
403.245 68.6802 402.854 69.333 402.409 69.3535 cv
402.091 69.3662 401.807 69.1074 401.658 68.7231 cv
401.897 69.3711 402.315 69.7979 402.773 69.7803 cv
402.72 69.791 402.666 69.8125 402.609 69.814 cv
401.76 69.8535 401.02 68.6636 400.956 67.165 cv
400.891 65.6641 401.527 64.4204 402.376 64.3813 cv
cp
403.687 64.2954 mo
403.687 64.2954 402.008 62.7578 401 64.8076 cv
401.138 62.6597 403.079 62.7378 403.687 64.2954 cv
cp
380.144 76.2471 mo
380.022 75.8662 379.921 75.5361 379.775 74.9678 cv
378.793 71.1162 377.167 72.6987 377.322 73.7871 cv
376.836 72.0122 379.643 70.3286 380.125 74.9136 cv
380.161 75.2651 380.202 75.8257 380.144 76.2471 cv
cp
406.119 61.6353 mo
404.777 58.6929 402.272 56.7808 399.028 55.7534 cv
399.661 55.1348 400.622 54.71 401.759 54.9795 cv
403.471 55.3857 404.096 56.9248 404.096 56.9248 cv
403.598 54.7417 400.571 53.1963 397.776 54.1191 cv
397.246 54.2939 396.761 54.5386 396.318 54.8286 cv
398.005 51.6953 402.297 52.0557 403.343 52.7734 cv
398.06 48.4409 392.166 52.9014 391.231 55.0903 cv
391.231 55.0908 391.232 55.0913 391.233 55.0918 cv
388.542 55.3564 385.613 56.208 383.449 58.3433 cv
380.665 61.0874 378.958 64.5752 379.341 70.0479 cv
377.559 69.7651 376.283 70.5503 375.915 72.1753 cv
375.508 73.9683 376.416 76.3184 378.365 76.8291 cv
378.901 76.9688 379.745 77.0405 380.348 76.8823 cv
380.339 76.8535 380.35 76.8921 380.369 76.9717 cv
381.36 81.2471 385.613 84.3364 387.775 85.1196 cv
395.727 87.9961 402.66 85.9521 406.267 81.436 cv
408.328 78.8511 410.445 73.2114 406.923 69.9199 cv
406.82 69.8228 407.762 65.231 406.119 61.6353 cv
cp
f
389.826 75.29 mo
389.83 75.2954 389.834 75.3003 389.837 75.3057 cv
389.838 75.3052 389.839 75.3047 389.84 75.3042 cv
389.84 75.3042 389.807 75.2622 389.826 75.29 cv
cp
f
440.66 75.041 mo
440.798 74.0688 439.345 72.6553 438.468 76.0952 cv
438.331 76.6309 438.176 77.1001 438.161 77.1045 cv
438.133 76.6704 438.169 76.167 438.204 75.8281 cv
438.635 71.7324 441.094 73.4556 440.66 75.041 cv
cp
434.638 55.6724 mo
432.494 53.4619 431.923 52.1191 431.86 51.3467 cv
432.066 51.4692 432.337 51.668 432.695 51.9888 cv
433.318 52.5479 434.226 54.251 434.863 55.5483 cv
434.786 55.5874 434.713 55.6309 434.638 55.6724 cv
cp
429.474 76.3882 mo
424.98 83.0967 419.251 82.1143 418.323 78.7349 cv
417.674 78.3916 416.965 77.5601 416.475 76.6421 cv
416.404 76.7246 416.324 76.7993 416.234 76.8589 cv
416.164 76.9111 416.082 76.9453 416.006 76.9844 cv
415.924 77.0137 415.842 77.04 415.757 77.0557 cv
415.809 76.9912 416.428 76.6401 416.614 75.666 cv
416.639 75.5337 416.697 75.5698 416.716 75.6299 cv
416.751 75.7363 416.762 75.8511 416.757 75.9644 cv
416.749 76.1436 416.69 76.3193 416.601 76.4761 cv
416.6 76.4775 416.599 76.479 416.598 76.4805 cv
418.814 79.1885 424.68 79.4355 429.296 76.1831 cv
429.068 75.8701 428.97 75.6714 428.885 75.3101 cv
428.824 75.0522 429.123 74.9761 429.196 75.231 cv
429.558 76.4932 430.172 76.5366 430.994 76.6924 cv
430.189 76.7759 429.763 76.5854 429.474 76.3882 cv
cp
418.458 69.1006 mo
418.529 69.293 418.743 69.3901 418.934 69.3193 cv
419.01 69.29 419.066 69.2334 419.108 69.1729 cv
419.164 69.3423 419.198 69.5376 419.19 69.7456 cv
419.163 70.375 418.792 70.8701 418.362 70.853 cv
417.935 70.8335 417.607 70.3081 417.636 69.6777 cv
417.663 69.0479 418.033 68.5527 418.462 68.5698 cv
418.533 68.5723 418.602 68.5962 418.668 68.6265 cv
418.482 68.7017 418.387 68.9111 418.458 69.1006 cv
cp
418.795 66.6392 mo
419.554 66.6743 420.122 67.7852 420.064 69.1255 cv
420.007 70.4648 419.346 71.5273 418.587 71.4922 cv
418.537 71.4907 418.488 71.4717 418.441 71.4619 cv
419.048 71.4854 419.575 70.6392 419.623 69.5654 cv
419.668 68.4927 419.213 67.6045 418.606 67.5786 cv
418 67.5527 417.471 68.3994 417.425 69.4722 cv
417.409 69.853 417.458 70.208 417.553 70.5127 cv
417.386 70.0913 417.294 69.5723 417.319 69.0068 cv
417.378 67.667 418.038 66.6079 418.795 66.6392 cv
cp
420.025 66.5049 mo
419.125 64.6733 417.625 66.0469 417.625 66.0469 cv
418.168 64.6558 419.902 64.5859 420.025 66.5049 cv
cp
422.242 53.3149 mo
422.588 53.1157 422.843 53.001 423.03 52.937 cv
422.846 53.5537 422.153 54.5459 420.034 55.9712 cv
419.981 55.9243 419.926 55.8784 419.87 55.8335 cv
420.61 54.8892 421.639 53.6616 422.242 53.3149 cv
cp
423.472 72.939 mo
423.472 72.939 423.474 73.1616 423.273 73.4077 cv
422.175 74.7495 419.49 74.1533 419.712 72.5459 cv
419.734 72.3945 419.706 73.0239 420.495 73.3398 cv
421.516 73.7495 423.237 73.4551 423.472 72.939 cv
cp
425.613 69.4268 mo
425.665 69.6235 425.866 69.7407 426.061 69.6885 cv
426.14 69.6699 426.2 69.6221 426.248 69.562 cv
426.29 69.7373 426.301 69.9336 426.272 70.1382 cv
426.179 70.7573 425.766 71.2104 425.342 71.1475 cv
424.919 71.084 424.652 70.5327 424.744 69.9126 cv
424.835 69.2915 425.25 68.8408 425.674 68.9023 cv
425.744 68.9131 425.81 68.9424 425.87 68.9775 cv
425.678 69.0317 425.563 69.231 425.613 69.4268 cv
cp
424.505 69.1104 mo
424.706 67.7334 425.503 66.7119 426.281 66.8262 cv
427.062 66.9414 427.529 68.1523 427.326 69.5293 cv
427.123 70.9063 426.329 71.9292 425.549 71.814 cv
425.451 71.7993 425.359 71.7666 425.271 71.7222 cv
425.314 71.7354 425.354 71.7583 425.401 71.7632 cv
426.023 71.8564 426.66 71.0381 426.822 69.937 cv
426.984 68.835 426.609 67.8662 425.986 67.7734 cv
425.363 67.6821 424.727 68.5005 424.566 69.6016 cv
424.508 69.9937 424.52 70.3647 424.584 70.689 cv
424.458 70.2358 424.419 69.6929 424.505 69.1104 cv
cp
428.117 66.9253 mo
428.117 66.9253 426.875 65.3359 425.162 66.4385 cv
426.102 64.8467 428.104 65.4785 428.117 66.9253 cv
cp
414.491 58.6631 mo
414.645 58.5117 414.864 58.3325 415.177 58.124 cv
415.781 57.7227 417.351 57.2656 418.446 56.9673 cv
418.457 56.9873 418.471 57.0068 418.482 57.0273 cv
417.538 57.7192 415.824 58.8696 414.491 58.6631 cv
cp
436.332 57.2793 mo
437.543 57.9043 439.224 58.8115 439.825 59.4238 cv
440.143 59.7476 440.355 60.0142 440.501 60.231 cv
438.905 60.1426 437.202 58.416 436.253 57.3579 cv
436.279 57.3311 436.305 57.3057 436.332 57.2793 cv
cp
442.067 73.6401 mo
441.89 72.9668 441.54 72.4658 441.058 72.1519 cv
440.531 71.7358 439.808 71.5718 438.948 71.6899 cv
438.97 70.8872 438.943 70.1138 438.87 69.3706 cv
438.743 67.3008 438.224 65.5942 437.411 64.1299 cv
436.753 62.8018 435.917 61.6587 434.958 60.7236 cv
434.894 59.9146 435.121 59.0576 435.546 58.3091 cv
435.604 59.1802 435.544 60.3833 435.89 60.6963 cv
436.393 60.4697 437.113 60.0767 436.987 59.9541 cv
436.154 59.1465 435.962 58.3979 435.772 57.9478 cv
435.782 57.9336 435.792 57.9194 435.803 57.9048 cv
439.035 62.644 440.188 61.5542 440.458 61.3394 cv
441.2 60.748 441.423 60.0757 441.423 60.0757 cv
441.421 60.0771 441.418 60.0776 441.415 60.0791 cv
441.566 59.7983 441.517 59.6016 441.206 59.2217 cv
440.128 57.9067 438.19 57.2769 436.724 56.9351 cv
437.607 56.252 438.726 55.9609 439.867 56.4395 cv
440.582 56.7388 441.107 57.168 441.473 57.5576 cv
441.531 57.6187 441.624 57.6284 441.693 57.5796 cv
441.762 57.5313 441.784 57.4399 441.745 57.3647 cv
441.014 55.9429 439.483 54.7456 437.278 54.8784 cv
436.512 54.9248 435.794 55.1255 435.142 55.4194 cv
434.749 53.5796 434.246 51.0518 432.889 50.2695 cv
432.572 50.0864 432.382 50.2393 432.096 50.4702 cv
432.124 50.4419 432.142 50.4282 432.142 50.4282 cv
432.142 50.4282 430.866 51.3545 430.741 51.7056 cv
430.319 52.8906 431.994 54.6416 433.97 56.0928 cv
433.919 56.1289 433.871 56.166 433.823 56.2026 cv
433.303 55.9307 432.714 55.5854 432.255 55.2769 cv
431.323 54.6514 430.888 54.2363 430.888 54.2363 cv
430.606 54.6279 430.987 55.4839 431.046 56.1313 cv
431.276 56.3491 432.282 56.5625 433.212 56.7192 cv
432.512 57.3857 432.028 58.126 431.844 58.7563 cv
431.789 58.7354 431.735 58.7129 431.68 58.6924 cv
431.678 58.6909 431.675 58.6899 431.672 58.688 cv
431.674 58.689 431.676 58.6904 431.677 58.6914 cv
427.505 57.1611 422.665 58.3271 421.72 58.6001 cv
421.614 58.1289 421.372 57.5918 421.013 57.0684 cv
421.796 57.1011 422.649 57.1016 422.873 56.9644 cv
423.032 56.4492 423.67 55.7007 423.324 55.4526 cv
423.324 55.4526 422.901 55.7144 422.036 56.062 cv
421.612 56.2329 421.074 56.4111 420.607 56.5425 cv
420.574 56.5039 420.538 56.4668 420.503 56.4292 cv
422.357 55.5913 424.018 54.4575 423.877 53.4214 cv
423.836 53.1152 422.958 52.1416 422.958 52.1416 cv
422.958 52.1416 422.972 52.1572 422.991 52.1875 cv
422.797 51.9487 422.669 51.7896 422.378 51.8843 cv
421.141 52.2852 420.301 54.252 419.667 55.6787 cv
419.187 55.3276 418.638 55.04 418.025 54.8706 cv
416.499 54.4487 415.274 54.9302 414.551 55.8311 cv
414.49 55.9072 414.494 56.0161 414.562 56.0859 cv
414.629 56.1563 414.738 56.165 414.816 56.1069 cv
415.044 55.937 415.321 55.7881 415.654 55.6919 cv
416.696 55.3906 417.587 55.8535 418.092 56.4526 cv
418.143 56.5127 418.186 56.5742 418.23 56.6357 cv
416.971 56.6519 415.223 56.813 414.09 57.7212 cv
413.772 57.9756 413.698 58.127 413.772 58.3813 cv
413.77 58.3799 413.768 58.3789 413.766 58.3774 cv
413.766 58.3774 413.833 58.9629 414.336 59.5708 cv
414.518 59.792 415.27 60.8779 418.715 57.5742 cv
418.72 57.5874 418.725 57.6011 418.73 57.6143 cv
418.5 57.9478 418.317 58.5381 417.492 59.0552 cv
417.369 59.1328 417.886 59.5767 418.257 59.8477 cv
418.583 59.6582 418.634 58.6963 418.83 58.0073 cv
419.013 58.897 418.856 59.6655 418.818 59.8252 cv
417.004 60.876 415.613 62.356 414.799 64.313 cv
414.469 65.1064 414.285 65.9805 414.195 66.8506 cv
413.853 69.2988 414.286 71.5229 414.219 71.5864 cv
411.073 74.5269 412.963 79.5645 414.804 81.873 cv
418.026 85.9072 424.219 87.7329 431.323 85.1636 cv
433.168 84.4951 436.72 81.9453 437.803 78.3872 cv
437.954 78.2158 438.105 78.0405 438.257 77.8599 cv
438.316 77.8672 438.374 77.8735 438.435 77.8774 cv
438.999 78.0142 439.532 78.0112 440.02 77.8657 cv
441.745 77.3511 442.483 75.2251 442.067 73.6401 cv
cp
f
429.474 76.3882 mo
429.477 76.3833 429.48 76.3789 429.484 76.374 cv
429.5 76.3491 429.471 76.3867 429.471 76.3867 cv
429.472 76.3872 429.473 76.3877 429.474 76.3882 cv
cp
f
282.512 120 mo
244.613 120 li
238.199 120 233 114.801 233 108.388 cv
233 71.6123 li
233 65.1992 238.199 60 244.613 60 cv
281.387 60 li
287.801 60 293 65.1992 293 71.6123 cv
293 109.513 li
293 115.305 288.304 120 282.512 120 cv
cp
0 .368627 .427451 rgb
f
247.15 63.1265 mo
241.072 63.1265 236.126 68.0718 236.126 74.1499 cv
236.126 105.85 li
236.126 111.928 241.072 116.874 247.15 116.874 cv
278.85 116.874 li
284.928 116.874 289.874 111.928 289.874 105.85 cv
289.874 74.1499 li
289.874 68.0718 284.928 63.1265 278.85 63.1265 cv
247.15 63.1265 li
cp
278.85 117.746 mo
247.15 117.746 li
240.591 117.746 235.254 112.41 235.254 105.85 cv
235.254 74.1499 li
235.254 67.5903 240.591 62.2539 247.15 62.2539 cv
278.85 62.2539 li
285.409 62.2539 290.746 67.5903 290.746 74.1499 cv
290.746 105.85 li
290.746 112.41 285.409 117.746 278.85 117.746 cv
cp
1 1 1 rgb
f
241.801 100.792 mo
241.801 100.341 242.316 100.148 242.847 100.148 cv
243.363 100.148 243.894 100.341 243.894 100.792 cv
243.894 105.188 li
247.371 100.454 li
247.533 100.229 247.725 100.148 247.951 100.148 cv
248.482 100.148 249.158 100.696 249.158 101.227 cv
249.158 101.34 249.142 101.484 249.03 101.629 cv
246.148 105.236 li
249.658 110.581 li
249.738 110.693 249.77 110.822 249.77 110.951 cv
249.77 111.466 249.126 111.998 248.514 111.998 cv
248.241 111.998 247.967 111.884 247.79 111.595 cv
244.763 107.007 li
243.894 108.102 li
243.894 111.257 li
243.894 111.691 243.363 111.917 242.847 111.917 cv
242.316 111.917 241.801 111.691 241.801 111.257 cv
241.801 100.792 li
cp
f
252.602 104.914 mo
252.602 111.257 li
252.602 111.579 252.135 111.917 251.555 111.917 cv
250.96 111.917 250.525 111.579 250.525 111.257 cv
250.525 104.914 li
250.525 104.527 250.96 104.27 251.555 104.27 cv
252.135 104.27 252.602 104.527 252.602 104.914 cv
cp
252.682 101.549 mo
252.682 102.08 252.183 102.563 251.555 102.563 cv
250.911 102.563 250.412 102.08 250.412 101.549 cv
250.412 101.002 250.911 100.535 251.555 100.535 cv
252.183 100.535 252.682 101.002 252.682 101.549 cv
cp
f
256.014 108.761 mo
256.014 109.502 256.658 110.242 257.415 110.242 cv
258.236 110.242 258.88 109.389 258.88 109.051 cv
258.88 107.441 li
258.88 106.54 258.123 105.992 257.43 105.992 cv
256.642 105.992 256.014 106.717 256.014 107.441 cv
256.014 108.761 li
cp
260.956 100.454 mo
260.956 111.257 li
260.956 111.579 260.522 111.917 259.926 111.917 cv
259.411 111.917 258.992 111.579 258.992 111.257 cv
258.992 110.79 li
258.67 111.45 257.785 112.062 256.755 112.062 cv
255.257 112.062 253.937 110.484 253.937 108.761 cv
253.937 107.441 li
253.937 105.654 255.225 104.173 256.803 104.173 cv
257.801 104.173 258.525 104.769 258.88 105.396 cv
258.88 100.454 li
258.88 100.068 259.346 99.8101 259.926 99.8101 cv
260.522 99.8101 260.956 100.068 260.956 100.454 cv
cp
f
266.187 109.792 mo
266.187 108.375 262.371 109.261 262.371 106.572 cv
262.371 105.429 263.096 104.173 265.253 104.173 cv
266.557 104.173 267.813 104.624 267.813 105.22 cv
267.813 105.51 267.539 106.218 267.056 106.218 cv
266.67 106.218 266.171 105.751 265.285 105.751 cv
264.48 105.751 264.158 106.153 264.158 106.476 cv
264.158 107.65 268.022 106.846 268.022 109.711 cv
268.022 111.144 266.96 112.062 265.06 112.062 cv
263.418 112.062 262.146 111.386 262.146 110.677 cv
262.146 110.339 262.436 109.76 262.838 109.76 cv
263.305 109.76 263.659 110.484 265.012 110.484 cv
265.962 110.484 266.187 110.114 266.187 109.792 cv
cp
f
272.624 100.792 mo
272.624 100.341 273.139 100.148 273.671 100.148 cv
274.186 100.148 274.717 100.341 274.717 100.792 cv
274.717 111.257 li
274.717 111.691 274.186 111.917 273.671 111.917 cv
273.139 111.917 272.624 111.691 272.624 111.257 cv
272.624 100.792 li
cp
f
278.741 101.983 mo
278.741 110.082 li
280.416 110.082 li
281.478 110.082 282.106 109.486 282.106 108.23 cv
282.106 103.835 li
282.106 102.58 281.478 101.983 280.416 101.983 cv
278.741 101.983 li
cp
280.416 100.148 mo
282.541 100.148 284.199 101.146 284.199 103.835 cv
284.199 108.23 li
284.199 110.918 282.541 111.917 280.416 111.917 cv
277.566 111.917 li
277.019 111.917 276.649 111.611 276.649 111.272 cv
276.649 100.792 li
276.649 100.454 277.019 100.148 277.566 100.148 cv
280.416 100.148 li
cp
f
259.927 86.8052 mo
259.863 86.7734 259.794 86.7456 259.734 86.7026 cv
259.658 86.6538 259.59 86.5918 259.529 86.5229 cv
258.268 89.6274 253.446 93.5781 248.628 86.4795 cv
248.388 86.6494 248.033 86.8154 247.357 86.7559 cv
248.045 86.6133 248.559 86.5688 248.846 85.5 cv
248.904 85.2842 249.156 85.3442 249.108 85.5625 cv
249.041 85.8682 248.962 86.0366 248.775 86.3042 cv
253.483 89.2983 257.754 88.0972 259.424 86.3887 cv
259.423 86.3872 259.422 86.3862 259.421 86.3848 cv
259.345 86.2539 259.293 86.106 259.284 85.9556 cv
259.278 85.8599 259.286 85.7632 259.314 85.6729 cv
259.329 85.6221 259.377 85.5903 259.4 85.7021 cv
259.569 86.521 260.092 86.8086 260.137 86.8623 cv
260.065 86.8501 259.996 86.8291 259.927 86.8052 cv
cp
250.205 78.5259 mo
250.216 77.3115 251.897 76.7813 252.686 78.1177 cv
251.248 77.1919 250.205 78.5259 250.205 78.5259 cv
cp
251.794 80.5991 mo
251.814 80.4292 251.971 80.3359 252.053 80.3232 cv
252.379 80.2739 252.73 80.5371 252.766 81.1489 cv
252.806 81.8354 252.523 82.2144 252.199 82.2627 cv
251.874 82.311 251.557 81.9634 251.486 81.4888 cv
251.464 81.332 251.471 81.1816 251.504 81.0469 cv
251.54 81.0933 251.587 81.1299 251.647 81.144 cv
251.797 81.1841 251.951 81.0947 251.991 80.9434 cv
252.03 80.7935 251.929 80.6094 251.794 80.5991 cv
cp
253.187 80.7734 mo
253.052 79.8486 252.518 79.1616 251.995 79.2383 cv
251.472 79.3159 251.157 80.1299 251.293 81.0547 cv
251.429 81.979 251.964 82.6665 252.486 82.5884 cv
252.494 82.5874 252.501 82.584 252.509 82.582 cv
252.461 82.6006 252.413 82.623 252.362 82.6309 cv
251.707 82.7275 251.04 81.8687 250.869 80.7124 cv
250.699 79.5562 251.091 78.5396 251.747 78.4429 cv
252.4 78.3467 253.069 79.2046 253.238 80.3608 cv
253.31 80.8501 253.278 81.3057 253.172 81.686 cv
253.226 81.4141 253.236 81.1021 253.187 80.7734 cv
cp
256.605 83.9116 mo
257.267 83.6465 257.244 83.1182 257.262 83.2456 cv
257.449 84.5952 255.195 85.0952 254.272 83.9688 cv
254.104 83.7622 254.106 83.5752 254.106 83.5752 cv
254.303 84.0088 255.748 84.2559 256.605 83.9116 cv
cp
258.032 78.2861 mo
258.668 78.2598 259.222 79.1489 259.271 80.2739 cv
259.292 80.7485 259.216 81.1846 259.075 81.5386 cv
259.155 81.2822 259.196 80.9844 259.183 80.6646 cv
259.144 79.7642 258.699 79.0532 258.191 79.0747 cv
257.682 79.0967 257.3 79.8423 257.337 80.7432 cv
257.349 80.998 257.393 81.2368 257.461 81.4487 cv
257.434 81.3555 257.415 81.2563 257.41 81.1504 cv
257.404 80.9883 257.43 80.8354 257.475 80.7031 cv
257.507 80.7505 257.552 80.7949 257.611 80.8174 cv
257.759 80.873 257.927 80.7969 257.982 80.6465 cv
258.037 80.499 257.931 80.3174 257.743 80.3174 cv
257.825 80.1919 257.958 80.1553 258.013 80.1533 cv
258.348 80.1401 258.626 80.3638 258.659 81.0181 cv
258.684 81.5103 258.39 81.9995 258.057 82.0151 cv
257.818 82.0244 257.605 81.8306 257.493 81.5425 cv
257.673 82.0283 257.986 82.3486 258.33 82.335 cv
258.29 82.3433 258.249 82.3594 258.207 82.3604 cv
257.57 82.3901 257.015 81.498 256.967 80.3735 cv
256.919 79.248 257.395 78.3154 258.032 78.2861 cv
cp
259.015 78.2217 mo
259.015 78.2217 257.756 77.0684 257 78.606 cv
257.103 76.9951 258.559 77.0532 259.015 78.2217 cv
cp
241.358 87.1855 mo
241.266 86.8994 241.191 86.6523 241.081 86.2256 cv
240.345 83.3374 239.125 84.5239 239.242 85.3403 cv
238.877 84.0093 240.982 82.7461 241.344 86.1851 cv
241.371 86.4487 241.402 86.8696 241.358 87.1855 cv
cp
260.839 76.2261 mo
259.832 74.0195 257.954 72.5854 255.521 71.8149 cv
255.996 71.3511 256.716 71.0327 257.569 71.2344 cv
258.853 71.5391 259.323 72.6934 259.323 72.6934 cv
258.949 71.0566 256.678 69.897 254.582 70.5894 cv
254.185 70.7202 253.821 70.9043 253.488 71.1211 cv
254.754 68.7715 257.972 69.0415 258.758 69.5801 cv
254.795 66.3306 250.374 69.6758 249.673 71.3179 cv
249.674 71.3179 249.674 71.3184 249.675 71.3188 cv
247.657 71.5176 245.46 72.1563 243.836 73.7573 cv
241.749 75.8154 240.469 78.4316 240.756 82.5361 cv
239.419 82.3237 238.462 82.9126 238.186 84.1313 cv
237.881 85.4766 238.562 87.2388 240.024 87.6216 cv
240.426 87.7266 241.058 87.7803 241.511 87.6616 cv
241.504 87.6401 241.513 87.6694 241.527 87.729 cv
242.27 90.9351 245.459 93.2524 247.081 93.8394 cv
253.046 95.9971 258.245 94.4639 260.95 91.0767 cv
262.496 89.1387 264.083 84.9087 261.442 82.4399 cv
261.365 82.3672 262.071 78.9233 260.839 76.2261 cv
cp
f
248.62 86.4673 mo
248.622 86.4717 248.625 86.4751 248.628 86.4795 cv
248.629 86.479 248.629 86.4785 248.63 86.478 cv
248.63 86.478 248.606 86.4468 248.62 86.4673 cv
cp
f
286.745 86.2808 mo
286.849 85.5518 285.759 84.4917 285.101 87.0718 cv
284.998 87.4731 284.882 87.8252 284.87 87.8286 cv
284.849 87.5029 284.877 87.1255 284.903 86.8711 cv
285.226 83.7993 287.07 85.0918 286.745 86.2808 cv
cp
282.229 71.7544 mo
280.62 70.0962 280.192 69.0894 280.145 68.5098 cv
280.299 68.6016 280.503 68.751 280.771 68.9917 cv
281.238 69.4106 281.919 70.688 282.397 71.6611 cv
282.339 71.6904 282.284 71.7231 282.229 71.7544 cv
cp
278.356 87.291 mo
274.985 92.3223 270.688 91.5854 269.992 89.0513 cv
269.506 88.7935 268.973 88.1699 268.606 87.4814 cv
268.553 87.5435 268.493 87.5996 268.426 87.644 cv
268.373 87.6831 268.311 87.709 268.254 87.7383 cv
268.193 87.7603 268.131 87.7798 268.068 87.792 cv
268.107 87.7432 268.571 87.48 268.71 86.7495 cv
268.729 86.6499 268.772 86.6777 268.787 86.7227 cv
268.813 86.8022 268.822 86.8882 268.817 86.9731 cv
268.812 87.1074 268.767 87.2393 268.7 87.3574 cv
268.7 87.3584 268.699 87.3594 268.699 87.3604 cv
270.361 89.3911 274.761 89.5767 278.222 87.1377 cv
278.051 86.9023 277.977 86.7534 277.914 86.4824 cv
277.868 86.2891 278.092 86.2324 278.147 86.4233 cv
278.418 87.3701 278.879 87.4023 279.496 87.5195 cv
278.892 87.582 278.572 87.439 278.356 87.291 cv
cp
270.094 81.8252 mo
270.147 81.9697 270.307 82.0425 270.45 81.9893 cv
270.507 81.9673 270.55 81.9253 270.581 81.8794 cv
270.623 82.0068 270.649 82.1533 270.642 82.3091 cv
270.622 82.7813 270.345 83.1528 270.021 83.1401 cv
269.701 83.125 269.455 82.731 269.476 82.2583 cv
269.497 81.7861 269.775 81.4146 270.097 81.4272 cv
270.15 81.4292 270.201 81.4473 270.251 81.4702 cv
270.112 81.5264 270.04 81.6836 270.094 81.8252 cv
cp
270.346 79.9795 mo
270.916 80.0054 271.341 80.8389 271.298 81.8442 cv
271.255 82.8486 270.76 83.6455 270.19 83.6191 cv
270.153 83.6182 270.116 83.6035 270.081 83.5962 cv
270.536 83.6138 270.931 82.9795 270.967 82.1743 cv
271.001 81.3696 270.659 80.7036 270.204 80.6841 cv
269.75 80.6646 269.353 81.2998 269.319 82.1045 cv
269.307 82.3896 269.344 82.6558 269.415 82.8848 cv
269.289 82.5684 269.221 82.1792 269.24 81.7554 cv
269.283 80.75 269.779 79.9556 270.346 79.9795 cv
cp
271.269 79.8784 mo
270.594 78.5054 269.469 79.5352 269.469 79.5352 cv
269.876 78.4917 271.176 78.4395 271.269 79.8784 cv
cp
272.931 69.9863 mo
273.191 69.8364 273.382 69.7505 273.523 69.7026 cv
273.385 70.165 272.865 70.9092 271.276 71.9785 cv
271.236 71.9434 271.195 71.9087 271.153 71.875 cv
271.707 71.167 272.48 70.2461 272.931 69.9863 cv
cp
273.854 84.7041 mo
273.854 84.7041 273.856 84.8711 273.705 85.0557 cv
272.881 86.062 270.867 85.6152 271.034 84.4097 cv
271.051 84.2959 271.03 84.7681 271.621 85.0049 cv
272.387 85.3125 273.678 85.0913 273.854 84.7041 cv
cp
275.46 82.0703 mo
275.499 82.2178 275.649 82.3052 275.796 82.2666 cv
275.855 82.2524 275.901 82.2163 275.936 82.1714 cv
275.968 82.3027 275.975 82.4502 275.954 82.6035 cv
275.885 83.0679 275.574 83.4077 275.257 83.3608 cv
274.939 83.313 274.739 82.8994 274.808 82.4346 cv
274.876 81.9683 275.187 81.6304 275.505 81.6763 cv
275.558 81.6851 275.608 81.707 275.652 81.7329 cv
275.509 81.7739 275.422 81.9233 275.46 82.0703 cv
cp
274.629 81.833 mo
274.78 80.7998 275.377 80.0337 275.961 80.1196 cv
276.547 80.2061 276.897 81.1143 276.744 82.147 cv
276.593 83.1797 275.997 83.9468 275.412 83.8608 cv
275.338 83.8496 275.269 83.8252 275.203 83.7915 cv
275.236 83.8013 275.265 83.8188 275.301 83.8223 cv
275.767 83.8921 276.245 83.2783 276.366 82.4526 cv
276.488 81.6265 276.207 80.8994 275.739 80.8301 cv
275.272 80.7617 274.795 81.3755 274.675 82.2012 cv
274.631 82.4951 274.64 82.7734 274.688 83.0166 cv
274.594 82.6768 274.564 82.27 274.629 81.833 cv
cp
277.338 80.1938 mo
277.338 80.1938 276.407 79.002 275.122 79.8291 cv
275.826 78.6353 277.328 79.1089 277.338 80.1938 cv
cp
267.118 73.9971 mo
267.234 73.8838 267.398 73.7495 267.633 73.5933 cv
268.086 73.292 269.263 72.9492 270.085 72.7256 cv
270.093 72.7407 270.103 72.7554 270.111 72.7705 cv
269.404 73.2896 268.118 74.1523 267.118 73.9971 cv
cp
283.499 72.9595 mo
284.408 73.4282 285.668 74.1089 286.118 74.5679 cv
286.357 74.811 286.516 75.0107 286.625 75.1733 cv
285.428 75.1069 284.151 73.812 283.439 73.0186 cv
283.459 72.998 283.479 72.979 283.499 72.9595 cv
cp
287.8 85.23 mo
287.668 84.7251 287.406 84.3491 287.044 84.1138 cv
286.648 83.8018 286.106 83.6792 285.461 83.7671 cv
285.478 83.1655 285.457 82.5854 285.402 82.0283 cv
285.307 80.4756 284.918 79.1953 284.308 78.0977 cv
283.815 77.1016 283.188 76.2441 282.469 75.5425 cv
282.421 74.936 282.591 74.293 282.909 73.7319 cv
282.953 74.3853 282.908 75.2876 283.168 75.5225 cv
283.545 75.3525 284.085 75.0576 283.991 74.9653 cv
283.365 74.3599 283.222 73.7983 283.079 73.4609 cv
283.086 73.4502 283.094 73.4395 283.102 73.4287 cv
285.527 76.9829 286.391 76.1655 286.594 76.0044 cv
287.15 75.561 287.318 75.0571 287.318 75.0571 cv
287.315 75.0576 287.313 75.0581 287.311 75.0591 cv
287.425 74.8486 287.387 74.7012 287.154 74.4165 cv
286.345 73.4297 284.892 72.9575 283.793 72.7012 cv
284.455 72.189 285.295 71.9707 286.151 72.3296 cv
286.686 72.5542 287.08 72.876 287.355 73.168 cv
287.398 73.2139 287.468 73.2212 287.52 73.1846 cv
287.571 73.1484 287.588 73.0796 287.559 73.0239 cv
287.011 71.957 285.862 71.0591 284.208 71.1587 cv
283.634 71.1934 283.095 71.3442 282.606 71.5645 cv
282.312 70.1846 281.935 68.2891 280.917 67.7021 cv
280.679 67.5649 280.537 67.6797 280.322 67.8525 cv
280.343 67.8315 280.357 67.8208 280.357 67.8208 cv
280.357 67.8208 279.4 68.5161 279.306 68.7788 cv
278.989 69.668 280.245 70.981 281.727 72.0698 cv
281.69 72.0967 281.654 72.1245 281.617 72.1519 cv
281.228 71.9482 280.785 71.689 280.441 71.4575 cv
279.742 70.9883 279.416 70.6772 279.416 70.6772 cv
279.205 70.9707 279.49 71.6128 279.535 72.0986 cv
279.707 72.2617 280.461 72.4219 281.159 72.5396 cv
280.635 73.0391 280.271 73.5947 280.133 74.0674 cv
280.092 74.0513 280.052 74.0347 280.011 74.0195 cv
280.008 74.0181 280.006 74.0171 280.004 74.0161 cv
280.005 74.0166 280.007 74.0176 280.008 74.0186 cv
276.878 72.8711 273.249 73.7456 272.54 73.9502 cv
272.46 73.5967 272.279 73.1938 272.01 72.8013 cv
272.597 72.8262 273.237 72.8262 273.405 72.7231 cv
273.524 72.3369 274.002 71.7759 273.743 71.5894 cv
273.743 71.5894 273.426 71.7856 272.778 72.0464 cv
272.459 72.1748 272.056 72.3086 271.705 72.4067 cv
271.68 72.3779 271.654 72.3501 271.627 72.3218 cv
273.018 71.6934 274.263 70.8433 274.158 70.0664 cv
274.127 69.8364 273.469 69.106 273.469 69.106 cv
273.469 69.106 273.479 69.1182 273.493 69.1406 cv
273.347 68.9614 273.251 68.8423 273.033 68.9131 cv
272.106 69.2139 271.475 70.689 271 71.7593 cv
270.64 71.4956 270.229 71.2803 269.768 71.1528 cv
268.624 70.8364 267.705 71.1978 267.163 71.8735 cv
267.117 71.9302 267.121 72.0122 267.172 72.0645 cv
267.222 72.1172 267.303 72.124 267.362 72.0801 cv
267.533 71.9526 267.741 71.8408 267.99 71.769 cv
268.772 71.543 269.44 71.8901 269.819 72.3398 cv
269.857 72.3843 269.889 72.4307 269.923 72.4766 cv
268.979 72.4888 267.667 72.6099 266.817 73.291 cv
266.579 73.4819 266.524 73.5952 266.579 73.7861 cv
266.578 73.7847 266.576 73.7842 266.574 73.7827 cv
266.574 73.7827 266.625 74.2222 267.002 74.6782 cv
267.138 74.8442 267.702 75.6587 270.286 73.1807 cv
270.29 73.1904 270.294 73.2007 270.297 73.2109 cv
270.125 73.4609 269.987 73.9033 269.369 74.2915 cv
269.277 74.3496 269.665 74.6826 269.943 74.8857 cv
270.187 74.7437 270.225 74.0225 270.372 73.5054 cv
270.51 74.1729 270.392 74.749 270.363 74.8691 cv
269.003 75.6567 267.96 76.7671 267.349 78.2349 cv
267.101 78.8296 266.964 79.4854 266.896 80.1377 cv
266.639 81.9741 266.965 83.6421 266.914 83.6899 cv
264.554 85.895 265.972 89.6733 267.353 91.4048 cv
269.77 94.4307 274.414 95.7998 279.742 93.8726 cv
281.126 93.3711 283.79 91.459 284.602 88.7905 cv
284.716 88.6621 284.829 88.5303 284.943 88.395 cv
284.987 88.4004 285.031 88.4048 285.076 88.4082 cv
285.499 88.5107 285.899 88.5083 286.265 88.3994 cv
287.558 88.0137 288.112 86.4189 287.8 85.23 cv
cp
f
278.356 87.291 mo
278.358 87.2876 278.361 87.2842 278.363 87.2803 cv
278.375 87.2622 278.354 87.29 278.354 87.29 cv
278.354 87.2905 278.355 87.291 278.356 87.291 cv
cp
f
153.117 120 mo
115.342 120 li
109.446 120 104.667 115.221 104.667 109.325 cv
104.667 72.6748 li
104.667 66.7793 109.446 62 115.342 62 cv
151.992 62 li
157.887 62 162.667 66.7793 162.667 72.6748 cv
162.667 110.45 li
162.667 115.724 158.391 120 153.117 120 cv
cp
0 .368627 .427451 rgb
f
118.345 65.022 mo
112.469 65.022 107.689 69.8027 107.689 75.6782 cv
107.689 106.322 li
107.689 112.197 112.469 116.978 118.345 116.978 cv
148.988 116.978 li
154.864 116.978 159.645 112.197 159.645 106.322 cv
159.645 75.6782 li
159.645 69.8027 154.864 65.022 148.988 65.022 cv
118.345 65.022 li
cp
148.988 117.821 mo
118.345 117.821 li
112.004 117.821 106.846 112.663 106.846 106.322 cv
106.846 75.6782 li
106.846 69.3374 112.004 64.1787 118.345 64.1787 cv
148.988 64.1787 li
155.329 64.1787 160.488 69.3374 160.488 75.6782 cv
160.488 106.322 li
160.488 112.663 155.329 117.821 148.988 117.821 cv
cp
1 1 1 rgb
f
113.175 101.433 mo
113.175 100.997 113.673 100.811 114.186 100.811 cv
114.684 100.811 115.198 100.997 115.198 101.433 cv
115.198 105.681 li
118.559 101.105 li
118.715 100.888 118.901 100.811 119.119 100.811 cv
119.633 100.811 120.286 101.339 120.286 101.853 cv
120.286 101.962 120.271 102.102 120.162 102.242 cv
117.376 105.728 li
120.769 110.895 li
120.846 111.003 120.878 111.128 120.878 111.252 cv
120.878 111.75 120.255 112.264 119.664 112.264 cv
119.399 112.264 119.135 112.155 118.964 111.875 cv
116.038 107.44 li
115.198 108.498 li
115.198 111.548 li
115.198 111.969 114.684 112.187 114.186 112.187 cv
113.673 112.187 113.175 111.969 113.175 111.548 cv
113.175 101.433 li
cp
f
123.615 105.417 mo
123.615 111.548 li
123.615 111.859 123.164 112.187 122.603 112.187 cv
122.028 112.187 121.608 111.859 121.608 111.548 cv
121.608 105.417 li
121.608 105.043 122.028 104.794 122.603 104.794 cv
123.164 104.794 123.615 105.043 123.615 105.417 cv
cp
123.693 102.164 mo
123.693 102.678 123.21 103.145 122.603 103.145 cv
121.981 103.145 121.498 102.678 121.498 102.164 cv
121.498 101.635 121.981 101.184 122.603 101.184 cv
123.21 101.184 123.693 101.635 123.693 102.164 cv
cp
f
126.913 109.136 mo
126.913 109.852 127.536 110.567 128.267 110.567 cv
129.061 110.567 129.683 109.743 129.683 109.416 cv
129.683 107.86 li
129.683 106.989 128.952 106.459 128.283 106.459 cv
127.52 106.459 126.913 107.16 126.913 107.86 cv
126.913 109.136 li
cp
131.691 101.105 mo
131.691 111.548 li
131.691 111.859 131.271 112.187 130.695 112.187 cv
130.197 112.187 129.792 111.859 129.792 111.548 cv
129.792 111.097 li
129.481 111.735 128.625 112.326 127.629 112.326 cv
126.182 112.326 124.906 110.801 124.906 109.136 cv
124.906 107.86 li
124.906 106.132 126.151 104.701 127.676 104.701 cv
128.641 104.701 129.341 105.276 129.683 105.883 cv
129.683 101.105 li
129.683 100.732 130.135 100.483 130.695 100.483 cv
131.271 100.483 131.691 100.732 131.691 101.105 cv
cp
f
136.747 110.132 mo
136.747 108.762 133.059 109.619 133.059 107.02 cv
133.059 105.915 133.76 104.701 135.845 104.701 cv
137.105 104.701 138.319 105.137 138.319 105.712 cv
138.319 105.993 138.054 106.677 137.588 106.677 cv
137.214 106.677 136.732 106.226 135.876 106.226 cv
135.098 106.226 134.786 106.615 134.786 106.926 cv
134.786 108.062 138.521 107.284 138.521 110.054 cv
138.521 111.439 137.494 112.326 135.658 112.326 cv
134.071 112.326 132.841 111.673 132.841 110.988 cv
132.841 110.661 133.121 110.101 133.511 110.101 cv
133.962 110.101 134.304 110.801 135.611 110.801 cv
136.53 110.801 136.747 110.443 136.747 110.132 cv
cp
f
142.971 101.433 mo
142.971 100.997 143.468 100.811 143.982 100.811 cv
144.48 100.811 144.993 100.997 144.993 101.433 cv
144.993 111.548 li
144.993 111.969 144.48 112.187 143.982 112.187 cv
143.468 112.187 142.971 111.969 142.971 111.548 cv
142.971 101.433 li
cp
f
148.883 102.584 mo
148.883 110.412 li
150.502 110.412 li
151.529 110.412 152.136 109.836 152.136 108.623 cv
152.136 104.374 li
152.136 103.16 151.529 102.584 150.502 102.584 cv
148.883 102.584 li
cp
150.502 100.811 mo
152.556 100.811 154.159 101.775 154.159 104.374 cv
154.159 108.623 li
154.159 111.221 152.556 112.187 150.502 112.187 cv
147.747 112.187 li
147.218 112.187 146.86 111.891 146.86 111.563 cv
146.86 101.433 li
146.86 101.105 147.218 100.811 147.747 100.811 cv
150.502 100.811 li
cp
f
130.696 87.9121 mo
130.634 87.8809 130.567 87.854 130.51 87.8125 cv
130.436 87.7651 130.37 87.7056 130.312 87.6387 cv
129.093 90.6401 124.43 94.459 119.774 87.5967 cv
119.542 87.7612 119.199 87.9214 118.546 87.8638 cv
119.21 87.7266 119.707 87.6831 119.985 86.6499 cv
120.041 86.4414 120.284 86.4995 120.238 86.7104 cv
120.173 87.0059 120.096 87.1689 119.916 87.4272 cv
124.467 90.3218 128.596 89.1606 130.21 87.5088 cv
130.209 87.5078 130.208 87.5068 130.207 87.5054 cv
130.133 87.3784 130.083 87.2358 130.075 87.0903 cv
130.069 86.998 130.076 86.9043 130.103 86.8174 cv
130.118 86.7681 130.165 86.7373 130.187 86.8452 cv
130.35 87.6367 130.855 87.915 130.899 87.9668 cv
130.83 87.9551 130.763 87.9346 130.696 87.9121 cv
cp
121.298 79.9087 mo
121.309 78.7344 122.934 78.2217 123.697 79.5137 cv
122.306 78.6187 121.298 79.9087 121.298 79.9087 cv
cp
122.834 81.9126 mo
122.854 81.7485 123.005 81.6582 123.085 81.646 cv
123.399 81.5981 123.739 81.8525 123.774 82.4438 cv
123.813 83.1079 123.538 83.4736 123.225 83.5205 cv
122.911 83.5674 122.605 83.2314 122.536 82.7725 cv
122.515 82.6211 122.523 82.4756 122.554 82.3457 cv
122.589 82.3901 122.634 82.4258 122.692 82.4395 cv
122.837 82.478 122.986 82.3916 123.024 82.2456 cv
123.062 82.1001 122.964 81.9224 122.834 81.9126 cv
cp
124.18 82.0806 mo
124.051 81.187 123.534 80.5225 123.029 80.5972 cv
122.523 80.6724 122.218 81.4585 122.35 82.353 cv
122.481 83.2466 122.998 83.9106 123.503 83.835 cv
123.512 83.8345 123.518 83.8315 123.526 83.8296 cv
123.479 83.8472 123.433 83.8691 123.383 83.8765 cv
122.75 83.9702 122.105 83.1396 121.941 82.022 cv
121.776 80.9043 122.155 79.9214 122.789 79.8281 cv
123.42 79.7354 124.067 80.5645 124.23 81.6821 cv
124.3 82.1548 124.268 82.5957 124.166 82.9634 cv
124.218 82.7002 124.228 82.3989 124.18 82.0806 cv
cp
127.485 85.1147 mo
128.125 84.8584 128.102 84.3477 128.12 84.4707 cv
128.301 85.7754 126.121 86.2588 125.23 85.1699 cv
125.067 84.9702 125.069 84.7896 125.069 84.7896 cv
125.26 85.2085 126.657 85.4478 127.485 85.1147 cv
cp
128.865 79.6763 mo
129.479 79.6509 130.015 80.5107 130.062 81.5981 cv
130.083 82.0571 130.009 82.478 129.873 82.8203 cv
129.95 82.5728 129.989 82.2847 129.976 81.9761 cv
129.939 81.105 129.51 80.418 129.018 80.439 cv
128.526 80.46 128.157 81.1807 128.193 82.0518 cv
128.204 82.2979 128.247 82.5288 128.313 82.7339 cv
128.286 82.644 128.268 82.5479 128.263 82.4453 cv
128.257 82.2886 128.283 82.1411 128.325 82.0132 cv
128.357 82.0591 128.4 82.1016 128.457 82.1235 cv
128.6 82.1772 128.762 82.104 128.816 81.9585 cv
128.869 81.8154 128.767 81.6401 128.585 81.6401 cv
128.664 81.519 128.793 81.4834 128.846 81.4814 cv
129.17 81.4688 129.439 81.6851 129.471 82.3174 cv
129.494 82.793 129.211 83.2666 128.888 83.2813 cv
128.658 83.2905 128.452 83.103 128.344 82.8242 cv
128.517 83.2944 128.82 83.6035 129.152 83.5908 cv
129.114 83.5986 129.075 83.6143 129.033 83.6152 cv
128.417 83.644 127.881 82.7813 127.835 81.6948 cv
127.788 80.6064 128.248 79.7046 128.865 79.6763 cv
cp
129.815 79.6143 mo
129.815 79.6143 128.597 78.4995 127.867 79.9858 cv
127.967 78.4282 129.374 78.4849 129.815 79.6143 cv
cp
112.746 88.2793 mo
112.658 88.0029 112.584 87.7637 112.479 87.3516 cv
111.767 84.5591 110.588 85.7065 110.7 86.4956 cv
110.348 85.209 112.383 83.9883 112.733 87.3125 cv
112.759 87.5674 112.788 87.9736 112.746 88.2793 cv
cp
131.578 77.6855 mo
130.605 75.5522 128.789 74.166 126.437 73.4214 cv
126.896 72.9727 127.593 72.665 128.417 72.8599 cv
129.658 73.1548 130.112 74.2705 130.112 74.2705 cv
129.75 72.688 127.555 71.5674 125.53 72.2363 cv
125.145 72.3628 124.793 72.5405 124.472 72.7505 cv
125.696 70.479 128.807 70.7402 129.566 71.2607 cv
125.735 68.1196 121.462 71.3535 120.784 72.9404 cv
120.784 72.9409 120.785 72.9409 120.785 72.9414 cv
118.835 73.1333 116.711 73.751 115.142 75.2988 cv
113.124 77.2881 111.887 79.8169 112.164 83.7847 cv
110.872 83.5796 109.947 84.1489 109.68 85.3271 cv
109.385 86.6274 110.044 88.3311 111.456 88.7012 cv
111.845 88.8022 112.457 88.8545 112.894 88.7397 cv
112.887 88.7188 112.896 88.7471 112.909 88.8047 cv
113.628 91.9043 116.711 94.1436 118.278 94.7114 cv
124.044 96.7969 129.071 95.3154 131.685 92.041 cv
133.179 90.167 134.714 86.0786 132.16 83.6919 cv
132.086 83.6216 132.768 80.2925 131.578 77.6855 cv
cp
f
119.766 87.585 mo
119.768 87.5889 119.771 87.5928 119.774 87.5967 cv
119.774 87.5962 119.775 87.5957 119.776 87.5957 cv
119.776 87.5957 119.752 87.5654 119.766 87.585 cv
cp
f
156.62 87.4048 mo
156.721 86.6997 155.667 85.6753 155.031 88.1694 cv
154.932 88.5576 154.819 88.8975 154.808 88.9009 cv
154.788 88.5864 154.814 88.2212 154.84 87.9751 cv
155.152 85.0059 156.934 86.2554 156.62 87.4048 cv
cp
152.254 73.3623 mo
150.7 71.7598 150.286 70.7861 150.241 70.2261 cv
150.389 70.3149 150.586 70.459 150.845 70.6919 cv
151.297 71.0972 151.955 72.332 152.417 73.2725 cv
152.361 73.3008 152.308 73.3325 152.254 73.3623 cv
cp
148.511 88.3813 mo
145.252 93.2451 141.098 92.5327 140.426 90.083 cv
139.955 89.834 139.441 89.231 139.086 88.5654 cv
139.034 88.6255 138.976 88.6797 138.911 88.7227 cv
138.861 88.7603 138.801 88.7852 138.746 88.8135 cv
138.686 88.835 138.627 88.854 138.565 88.8652 cv
138.603 88.8184 139.052 88.564 139.186 87.8579 cv
139.205 87.7617 139.247 87.7881 139.261 87.832 cv
139.286 87.9087 139.295 87.9922 139.29 88.0742 cv
139.285 88.2041 139.242 88.3315 139.178 88.4453 cv
139.177 88.4463 139.176 88.4473 139.175 88.4482 cv
140.782 90.4116 145.035 90.5908 148.381 88.2329 cv
148.216 88.0059 148.145 87.8618 148.083 87.5996 cv
148.039 87.4131 148.256 87.3579 148.308 87.5425 cv
148.571 88.4575 149.017 88.4893 149.613 88.6021 cv
149.029 88.6626 148.72 88.5244 148.511 88.3813 cv
cp
140.524 83.0977 mo
140.575 83.2373 140.731 83.3081 140.869 83.2563 cv
140.924 83.2354 140.965 83.1943 140.994 83.1504 cv
141.036 83.2734 141.06 83.415 141.054 83.5654 cv
141.035 84.022 140.766 84.3809 140.454 84.3687 cv
140.144 84.354 139.907 83.9731 139.928 83.5161 cv
139.948 83.0596 140.216 82.7007 140.527 82.7129 cv
140.578 82.7148 140.628 82.7324 140.676 82.7544 cv
140.541 82.8086 140.472 82.9609 140.524 83.0977 cv
cp
140.768 81.3135 mo
141.319 81.3389 141.73 82.144 141.688 83.1162 cv
141.647 84.0869 141.168 84.8574 140.617 84.8315 cv
140.581 84.8306 140.546 84.8169 140.512 84.8096 cv
140.951 84.8267 141.333 84.2134 141.368 83.4351 cv
141.401 82.6572 141.071 82.0132 140.631 81.9946 cv
140.192 81.9756 139.808 82.5898 139.775 83.3677 cv
139.763 83.6436 139.799 83.9009 139.867 84.1216 cv
139.746 83.8159 139.68 83.4399 139.698 83.0298 cv
139.741 82.0586 140.219 81.2905 140.768 81.3135 cv
cp
141.66 81.2158 mo
141.007 79.8882 139.92 80.8838 139.92 80.8838 cv
140.313 79.8755 141.57 79.8247 141.66 81.2158 cv
cp
143.267 71.6533 mo
143.518 71.5088 143.702 71.4258 143.839 71.3794 cv
143.705 71.8262 143.203 72.5459 141.666 73.5791 cv
141.628 73.5454 141.588 73.5122 141.548 73.4795 cv
142.084 72.7949 142.83 71.9048 143.267 71.6533 cv
cp
144.159 85.8809 mo
144.159 85.8809 144.16 86.042 144.015 86.2202 cv
143.219 87.1934 141.272 86.7612 141.433 85.5957 cv
141.449 85.4858 141.429 85.9424 142 86.1714 cv
142.741 86.4688 143.988 86.2549 144.159 85.8809 cv
cp
145.711 83.3345 mo
145.749 83.4771 145.894 83.562 146.036 83.5239 cv
146.093 83.5107 146.137 83.4756 146.171 83.4326 cv
146.202 83.5596 146.209 83.7017 146.189 83.8501 cv
146.121 84.2988 145.822 84.6274 145.515 84.582 cv
145.208 84.5361 145.014 84.1362 145.081 83.6865 cv
145.147 83.2363 145.448 82.9097 145.755 82.9541 cv
145.806 82.9619 145.854 82.9834 145.897 83.0088 cv
145.759 83.0479 145.675 83.1924 145.711 83.3345 cv
cp
144.908 83.105 mo
145.054 82.1064 145.631 81.3662 146.196 81.4492 cv
146.762 81.5322 147.1 82.4102 146.953 83.4087 cv
146.806 84.4072 146.23 85.1489 145.665 85.0654 cv
145.594 85.0542 145.527 85.0308 145.463 84.9985 cv
145.494 85.0083 145.523 85.0249 145.557 85.0283 cv
146.008 85.0957 146.471 84.5024 146.587 83.7041 cv
146.705 82.9053 146.433 82.2031 145.981 82.1357 cv
145.53 82.0693 145.069 82.6626 144.952 83.4609 cv
144.909 83.7451 144.919 84.0142 144.965 84.2495 cv
144.874 83.9209 144.846 83.5273 144.908 83.105 cv
cp
147.527 81.521 mo
147.527 81.521 146.626 80.3687 145.385 81.168 cv
146.066 80.0142 147.517 80.4722 147.527 81.521 cv
cp
137.647 75.5308 mo
137.76 75.4209 137.918 75.291 138.145 75.1401 cv
138.583 74.8491 139.721 74.5176 140.515 74.3013 cv
140.523 74.3159 140.533 74.3301 140.541 74.3447 cv
139.857 74.8467 138.615 75.6807 137.647 75.5308 cv
cp
153.482 74.5273 mo
154.361 74.9805 155.579 75.6387 156.015 76.082 cv
156.245 76.3174 156.399 76.5103 156.505 76.6675 cv
155.347 76.6035 154.113 75.3516 153.425 74.5845 cv
153.444 74.5649 153.463 74.5464 153.482 74.5273 cv
cp
157.64 86.3887 mo
157.512 85.9009 157.259 85.5376 156.909 85.3101 cv
156.527 85.0083 156.002 84.8896 155.379 84.9751 cv
155.395 84.3931 155.375 83.8325 155.322 83.2939 cv
155.231 81.793 154.854 80.5557 154.265 79.4941 cv
153.788 78.5313 153.182 77.7026 152.487 77.0244 cv
152.44 76.438 152.604 75.8169 152.913 75.2739 cv
152.954 75.9058 152.911 76.7778 153.162 77.0049 cv
153.527 76.8408 154.049 76.5557 153.957 76.4668 cv
153.353 75.8813 153.214 75.3384 153.076 75.0122 cv
153.083 75.0015 153.091 74.9917 153.098 74.981 cv
155.442 78.417 156.278 77.627 156.474 77.4712 cv
157.012 77.0425 157.174 76.5552 157.174 76.5552 cv
157.172 76.5557 157.17 76.5562 157.167 76.5571 cv
157.277 76.354 157.242 76.2109 157.016 75.936 cv
156.234 74.9824 154.829 74.5259 153.766 74.2778 cv
154.407 73.7827 155.218 73.5718 156.046 73.9185 cv
156.564 74.1357 156.945 74.4468 157.209 74.729 cv
157.251 74.7734 157.319 74.7803 157.369 74.7451 cv
157.419 74.71 157.435 74.644 157.407 74.5898 cv
156.877 73.5586 155.767 72.6904 154.168 72.7871 cv
153.613 72.8203 153.092 72.9658 152.619 73.1792 cv
152.335 71.8452 151.971 70.0127 150.986 69.4453 cv
150.756 69.3125 150.619 69.4238 150.411 69.5908 cv
150.431 69.5703 150.445 69.5601 150.445 69.5601 cv
150.445 69.5601 149.52 70.2324 149.429 70.4863 cv
149.122 71.3457 150.337 72.6152 151.769 73.6675 cv
151.733 73.6934 151.699 73.7202 151.663 73.7466 cv
151.287 73.5498 150.859 73.2993 150.526 73.0757 cv
149.851 72.6221 149.536 72.3213 149.536 72.3213 cv
149.331 72.605 149.607 73.2261 149.65 73.6953 cv
149.817 73.853 150.546 74.0078 151.221 74.1216 cv
150.713 74.6045 150.362 75.1416 150.228 75.5986 cv
150.189 75.583 150.15 75.5669 150.11 75.5522 cv
150.108 75.5508 150.106 75.5498 150.104 75.5488 cv
150.105 75.5493 150.107 75.5508 150.108 75.5513 cv
147.082 74.4419 143.574 75.2871 142.888 75.4854 cv
142.812 75.1436 142.637 74.7539 142.376 74.3745 cv
142.944 74.3984 143.562 74.3984 143.724 74.2988 cv
143.84 73.9258 144.302 73.3833 144.052 73.2031 cv
144.052 73.2031 143.745 73.3931 143.118 73.645 cv
142.81 73.769 142.421 73.8984 142.082 73.9932 cv
142.057 73.9653 142.032 73.9385 142.007 73.9111 cv
143.351 73.3037 144.555 72.4819 144.452 71.7305 cv
144.423 71.5083 143.786 70.8027 143.786 70.8027 cv
143.786 70.8027 143.797 70.814 143.81 70.8359 cv
143.669 70.6626 143.576 70.5474 143.366 70.6162 cv
142.469 70.9067 141.86 72.3325 141.4 73.3672 cv
141.053 73.1123 140.655 72.9043 140.21 72.7813 cv
139.104 72.4756 138.215 72.8247 137.691 73.4775 cv
137.647 73.5327 137.65 73.6118 137.699 73.6626 cv
137.748 73.7134 137.827 73.7197 137.884 73.6777 cv
138.049 73.5542 138.249 73.4463 138.491 73.3765 cv
139.246 73.1582 139.892 73.4937 140.259 73.9282 cv
140.295 73.9717 140.326 74.0166 140.359 74.0605 cv
139.446 74.0723 138.179 74.1895 137.357 74.8477 cv
137.126 75.0322 137.073 75.1421 137.127 75.3262 cv
137.125 75.3252 137.123 75.3247 137.122 75.3237 cv
137.122 75.3237 137.171 75.748 137.535 76.189 cv
137.667 76.3491 138.212 77.1367 140.71 74.7412 cv
140.714 74.751 140.718 74.7607 140.721 74.7705 cv
140.554 75.0122 140.421 75.4399 139.824 75.8149 cv
139.734 75.8716 140.109 76.1929 140.378 76.3896 cv
140.614 76.252 140.651 75.5552 140.793 75.0552 cv
140.926 75.7007 140.812 76.2573 140.784 76.3735 cv
139.47 77.1348 138.461 78.208 137.87 79.627 cv
137.631 80.2021 137.499 80.8359 137.433 81.4668 cv
137.185 83.2417 137.499 84.854 137.45 84.8999 cv
135.17 87.0322 136.54 90.6841 137.875 92.3579 cv
140.211 95.2827 144.7 96.6064 149.851 94.7437 cv
151.189 94.2588 153.763 92.4102 154.549 89.8306 cv
154.658 89.7065 154.768 89.5796 154.878 89.4482 cv
154.921 89.4536 154.963 89.458 155.007 89.4609 cv
155.416 89.5601 155.802 89.5581 156.157 89.4526 cv
157.407 89.0796 157.942 87.5381 157.64 86.3887 cv
cp
f
148.511 88.3813 mo
148.512 88.3779 148.515 88.3745 148.517 88.3711 cv
148.529 88.3535 148.509 88.3804 148.509 88.3804 cv
148.509 88.3809 148.51 88.3813 148.511 88.3813 cv
cp
f
33.242 120 mo
7.8831 120 li
3.52959 120 -.000197656 116.471 -.000197656 112.117 cv
-.000197656 87.8833 li
-.000197656 83.5293 3.52959 80 7.8831 80 cv
32.117 80 li
36.4705 80 39.9998 83.5293 39.9998 87.8833 cv
39.9998 113.242 li
39.9998 116.974 36.9744 120 33.242 120 cv
cp
0 .368627 .427451 rgb
f
9.4334 82.084 mo
5.38115 82.084 2.08428 85.3809 2.08428 89.4336 cv
2.08428 110.566 li
2.08428 114.619 5.38115 117.916 9.4334 117.916 cv
30.5667 117.916 li
34.6189 117.916 37.9158 114.619 37.9158 110.566 cv
37.9158 89.4336 li
37.9158 85.3809 34.6189 82.084 30.5667 82.084 cv
9.4334 82.084 li
cp
30.5667 118.498 mo
9.4334 118.498 li
5.06035 118.498 1.50273 114.94 1.50273 110.566 cv
1.50273 89.4336 li
1.50273 85.0605 5.06035 81.5024 9.4334 81.5024 cv
30.5667 81.5024 li
34.9397 81.5024 38.4974 85.0605 38.4974 89.4336 cv
38.4974 110.566 li
38.4974 114.94 34.9397 118.498 30.5667 118.498 cv
cp
1 1 1 rgb
f
5.86748 107.195 mo
5.86748 106.895 6.21074 106.766 6.56523 106.766 cv
6.90849 106.766 7.2625 106.895 7.2625 107.195 cv
7.2625 110.125 li
9.58086 106.969 li
9.68828 106.819 9.81719 106.766 9.96709 106.766 cv
10.3216 106.766 10.7723 107.13 10.7723 107.485 cv
10.7723 107.56 10.7615 107.656 10.6863 107.753 cv
8.76543 110.157 li
11.1048 113.721 li
11.1585 113.795 11.18 113.881 11.18 113.967 cv
11.18 114.311 10.7508 114.665 10.3431 114.665 cv
10.1604 114.665 9.97783 114.59 9.86015 114.396 cv
7.84209 111.338 li
7.2625 112.068 li
7.2625 114.171 li
7.2625 114.461 6.90849 114.611 6.56523 114.611 cv
6.21074 114.611 5.86748 114.461 5.86748 114.171 cv
5.86748 107.195 li
cp
f
13.0677 109.942 mo
13.0677 114.171 li
13.0677 114.386 12.7566 114.611 12.3704 114.611 cv
11.9729 114.611 11.6834 114.386 11.6834 114.171 cv
11.6834 109.942 li
11.6834 109.685 11.9729 109.513 12.3704 109.513 cv
12.7566 109.513 13.0677 109.685 13.0677 109.942 cv
cp
13.1214 107.699 mo
13.1214 108.054 12.7889 108.375 12.3704 108.375 cv
11.9407 108.375 11.6082 108.054 11.6082 107.699 cv
11.6082 107.334 11.9407 107.023 12.3704 107.023 cv
12.7889 107.023 13.1214 107.334 13.1214 107.699 cv
cp
f
15.3426 112.508 mo
15.3426 113.001 15.7718 113.495 16.2762 113.495 cv
16.824 113.495 17.2532 112.926 17.2532 112.701 cv
17.2532 111.627 li
17.2532 111.026 16.7488 110.662 16.2869 110.662 cv
15.7615 110.662 15.3426 111.145 15.3426 111.627 cv
15.3426 112.508 li
cp
18.6375 106.969 mo
18.6375 114.171 li
18.6375 114.386 18.3479 114.611 17.951 114.611 cv
17.6072 114.611 17.3284 114.386 17.3284 114.171 cv
17.3284 113.86 li
17.1136 114.3 16.5232 114.708 15.8362 114.708 cv
14.8382 114.708 13.9583 113.656 13.9583 112.508 cv
13.9583 111.627 li
13.9583 110.436 14.8167 109.449 15.8685 109.449 cv
16.534 109.449 17.0169 109.846 17.2532 110.264 cv
17.2532 106.969 li
17.2532 106.712 17.5643 106.54 17.951 106.54 cv
18.3479 106.54 18.6375 106.712 18.6375 106.969 cv
cp
f
22.1248 113.194 mo
22.1248 112.25 19.5809 112.84 19.5809 111.048 cv
19.5809 110.286 20.0638 109.449 21.5022 109.449 cv
22.3714 109.449 23.2088 109.75 23.2088 110.146 cv
23.2088 110.34 23.0262 110.812 22.7044 110.812 cv
22.4466 110.812 22.1136 110.5 21.5237 110.5 cv
20.9871 110.5 20.7723 110.769 20.7723 110.983 cv
20.7723 111.767 23.3479 111.23 23.3479 113.141 cv
23.3479 114.096 22.6399 114.708 21.3733 114.708 cv
20.2786 114.708 19.4305 114.257 19.4305 113.785 cv
19.4305 113.559 19.6238 113.173 19.8924 113.173 cv
20.2034 113.173 20.4397 113.656 21.3411 113.656 cv
21.9744 113.656 22.1248 113.409 22.1248 113.194 cv
cp
f
26.4163 107.195 mo
26.4163 106.895 26.7596 106.766 27.1141 106.766 cv
27.4573 106.766 27.8113 106.895 27.8113 107.195 cv
27.8113 114.171 li
27.8113 114.461 27.4573 114.611 27.1141 114.611 cv
26.7596 114.611 26.4163 114.461 26.4163 114.171 cv
26.4163 107.195 li
cp
f
30.4944 107.989 mo
30.4944 113.388 li
31.6106 113.388 li
32.3191 113.388 32.7376 112.991 32.7376 112.153 cv
32.7376 109.223 li
32.7376 108.386 32.3191 107.989 31.6106 107.989 cv
30.4944 107.989 li
cp
31.6106 106.766 mo
33.0271 106.766 34.1326 107.431 34.1326 109.223 cv
34.1326 112.153 li
34.1326 113.946 33.0271 114.611 31.6106 114.611 cv
29.7107 114.611 li
29.346 114.611 29.0989 114.407 29.0989 114.182 cv
29.0989 107.195 li
29.0989 106.969 29.346 106.766 29.7107 106.766 cv
31.6106 106.766 li
cp
f
17.9515 97.8701 mo
17.9085 97.8491 17.8626 97.8306 17.8226 97.8018 cv
17.7718 97.769 17.7269 97.728 17.6863 97.6821 cv
16.8455 99.7515 13.6302 102.386 10.4187 97.6528 cv
10.2591 97.7661 10.0223 97.877 9.57158 97.8369 cv
10.0296 97.7422 10.3728 97.7124 10.5643 97 cv
10.6028 96.856 10.7708 96.896 10.7386 97.0415 cv
10.6941 97.2456 10.6414 97.3579 10.5164 97.5361 cv
13.6551 99.5322 16.5027 98.7314 17.616 97.5923 cv
17.6155 97.5913 17.615 97.5908 17.6141 97.5898 cv
17.5633 97.5024 17.5286 97.4043 17.5228 97.3037 cv
17.5184 97.2402 17.5242 97.1753 17.5423 97.1152 cv
17.553 97.0815 17.5848 97.0601 17.6004 97.1348 cv
17.7127 97.6807 18.0613 97.8726 18.0911 97.9082 cv
18.0437 97.9004 17.9974 97.8862 17.9515 97.8701 cv
cp
11.47 92.3506 mo
11.4773 91.541 12.5984 91.1875 13.1243 92.0781 cv
12.1653 91.4614 11.47 92.3506 11.47 92.3506 cv
cp
12.5291 93.7329 mo
12.5428 93.6196 12.6468 93.5571 12.7024 93.5488 cv
12.9192 93.5161 13.1536 93.6914 13.1775 94.0991 cv
13.2044 94.5571 13.0149 94.8096 12.7986 94.8418 cv
12.5823 94.874 12.3714 94.6421 12.324 94.3257 cv
12.3094 94.2212 12.3143 94.1211 12.3362 94.0313 cv
12.3602 94.062 12.3914 94.0869 12.4314 94.0962 cv
12.5315 94.1226 12.6341 94.063 12.6604 93.9624 cv
12.6863 93.8623 12.6189 93.7393 12.5291 93.7329 cv
cp
13.4578 93.8486 mo
13.368 93.2324 13.012 92.7744 12.6634 92.8257 cv
12.3147 92.8774 12.1043 93.4199 12.1956 94.0366 cv
12.2854 94.6528 12.6424 95.1108 12.991 95.0586 cv
12.9964 95.0581 13.0008 95.0562 13.0062 95.0547 cv
12.9739 95.0669 12.9422 95.082 12.9075 95.0874 cv
12.471 95.1519 12.0262 94.5791 11.9129 93.8086 cv
11.7996 93.0376 12.0608 92.3599 12.4978 92.2954 cv
12.9334 92.2314 13.3797 92.8032 13.492 93.5742 cv
13.5403 93.8999 13.5184 94.2041 13.448 94.4575 cv
13.4837 94.2759 13.4905 94.0684 13.4578 93.8486 cv
cp
15.7366 95.9414 mo
16.1785 95.7646 16.1624 95.4121 16.1751 95.4971 cv
16.2996 96.397 14.7967 96.7305 14.1814 95.979 cv
14.0691 95.8418 14.0706 95.7168 14.0706 95.7168 cv
14.202 96.0059 15.1653 96.1709 15.7366 95.9414 cv
cp
16.6883 92.1904 mo
17.1121 92.1733 17.4817 92.7661 17.5145 93.5161 cv
17.5281 93.8325 17.4773 94.123 17.3836 94.3589 cv
17.4363 94.188 17.4637 93.9893 17.4549 93.7764 cv
17.4295 93.1758 17.1331 92.7021 16.7942 92.7163 cv
16.4544 92.731 16.2 93.228 16.2249 93.8286 cv
16.2327 93.9985 16.262 94.1577 16.3074 94.2993 cv
16.2894 94.2373 16.2767 94.1709 16.2737 94.1001 cv
16.2693 93.9922 16.2869 93.8901 16.3167 93.8022 cv
16.3382 93.8335 16.3675 93.8633 16.407 93.8784 cv
16.5061 93.9155 16.6175 93.8647 16.6546 93.7642 cv
16.6917 93.666 16.6209 93.5449 16.4954 93.5449 cv
16.5501 93.4614 16.639 93.437 16.6756 93.4355 cv
16.8992 93.4268 17.0843 93.5757 17.1062 94.0122 cv
17.1224 94.3403 16.927 94.6665 16.7049 94.6768 cv
16.5457 94.6831 16.4036 94.5537 16.3289 94.3613 cv
16.4485 94.6855 16.6575 94.8989 16.8865 94.8901 cv
16.8602 94.8955 16.8328 94.9063 16.8045 94.9072 cv
16.3797 94.9268 16.0101 94.332 15.9778 93.5825 cv
15.9456 92.832 16.2635 92.21 16.6883 92.1904 cv
cp
17.3436 92.1475 mo
17.3436 92.1475 16.5037 91.3789 15.9998 92.4038 cv
16.0691 91.3301 17.0394 91.3691 17.3436 92.1475 cv
cp
5.57207 98.1235 mo
5.51103 97.9331 5.46074 97.7681 5.3875 97.4839 cv
4.89677 95.5581 4.0833 96.3496 4.16093 96.8936 cv
3.91826 96.0059 5.32158 95.1641 5.56279 97.457 cv
5.58086 97.6328 5.60088 97.9131 5.57207 98.1235 cv
cp
18.5594 90.8174 mo
17.8885 89.3462 16.636 88.3901 15.014 87.8765 cv
15.3304 87.5674 15.8108 87.355 16.3792 87.4897 cv
17.2356 87.6929 17.5481 88.4624 17.5481 88.4624 cv
17.2991 87.3711 15.7854 86.5981 14.388 87.0596 cv
14.1233 87.147 13.8802 87.2695 13.659 87.4141 cv
14.5027 85.8477 16.6482 86.0278 17.1717 86.3867 cv
14.5301 84.2207 11.5828 86.4507 11.1155 87.5454 cv
11.1155 87.5454 11.116 87.5454 11.1165 87.5459 cv
9.77129 87.6782 8.30644 88.104 7.22441 89.1714 cv
5.83281 90.5435 4.97929 92.2876 5.1707 95.0239 cv
4.27959 94.8823 3.6414 95.2754 3.45781 96.0874 cv
3.2542 96.9844 3.7083 98.1592 4.68242 98.4146 cv
4.95049 98.4844 5.37236 98.52 5.67412 98.4414 cv
5.66924 98.4268 5.6751 98.4463 5.68437 98.4858 cv
6.17998 100.624 8.30644 102.168 9.3875 102.56 cv
13.3636 103.998 16.8299 102.976 18.6336 100.718 cv
19.6644 99.4258 20.7225 96.606 18.9612 94.96 cv
18.91 94.9116 19.3807 92.6157 18.5594 90.8174 cv
cp
f
10.4129 97.645 mo
10.4148 97.6475 10.4168 97.6504 10.4187 97.6528 cv
10.4192 97.6528 10.4197 97.6523 10.4202 97.6519 cv
10.4202 97.6519 10.4036 97.6313 10.4129 97.645 cv
cp
f
35.8299 97.5205 mo
35.8992 97.0342 35.1727 96.3276 34.7342 98.0479 cv
34.6658 98.3154 34.5877 98.5503 34.5804 98.5522 cv
34.5662 98.3354 34.5848 98.0835 34.6023 97.9141 cv
34.8177 95.8662 36.0467 96.728 35.8299 97.5205 cv
cp
32.8191 87.8364 mo
31.7469 86.731 31.4617 86.0596 31.43 85.6733 cv
31.533 85.7344 31.6683 85.834 31.8475 85.9946 cv
32.159 86.2739 32.6131 87.1255 32.9314 87.7744 cv
32.8929 87.7935 32.8562 87.8154 32.8191 87.8364 cv
cp
30.2371 98.1943 mo
27.99 101.548 25.1253 101.057 24.6614 99.3672 cv
24.3372 99.1958 23.9822 98.7798 23.7376 98.3208 cv
23.7015 98.3623 23.6619 98.3999 23.617 98.4292 cv
23.5818 98.4556 23.5408 98.4727 23.5032 98.4922 cv
23.4622 98.5068 23.4207 98.52 23.3782 98.5278 cv
23.4046 98.4956 23.7137 98.3198 23.8069 97.833 cv
23.8196 97.7666 23.8484 97.7852 23.8582 97.8149 cv
23.8753 97.8682 23.8811 97.9258 23.8782 97.9824 cv
23.8748 98.0718 23.845 98.1597 23.8006 98.2383 cv
23.8001 98.2388 23.7996 98.2393 23.7991 98.2402 cv
24.907 99.5942 27.8401 99.7178 30.1478 98.0918 cv
30.034 97.9351 29.9852 97.8359 29.9427 97.6548 cv
29.9119 97.5259 30.0613 97.4883 30.0975 97.6157 cv
30.2791 98.2466 30.5862 98.2681 30.9974 98.3462 cv
30.5945 98.3877 30.3816 98.2925 30.2371 98.1943 cv
cp
24.7288 94.5503 mo
24.7645 94.6465 24.8719 94.6953 24.9671 94.6597 cv
25.0047 94.645 25.033 94.6167 25.054 94.5864 cv
25.0823 94.6714 25.0989 94.769 25.095 94.8726 cv
25.0813 95.1875 24.8963 95.4351 24.681 95.4268 cv
24.4676 95.4165 24.3035 95.1538 24.3177 94.8389 cv
24.3318 94.5239 24.5169 94.2764 24.7312 94.2847 cv
24.7669 94.2861 24.8011 94.2983 24.8343 94.3135 cv
24.741 94.3506 24.6936 94.4556 24.7288 94.5503 cv
cp
24.8978 93.3198 mo
25.2771 93.3369 25.5608 93.8926 25.532 94.563 cv
25.5032 95.2324 25.1731 95.7637 24.7937 95.7461 cv
24.7684 95.7451 24.7444 95.7358 24.7205 95.731 cv
25.0237 95.7427 25.2874 95.3198 25.3113 94.7827 cv
25.3338 94.2466 25.1062 93.8022 24.803 93.7896 cv
24.5003 93.7764 24.2356 94.1997 24.2127 94.7363 cv
24.2049 94.9263 24.2293 95.104 24.2767 95.2563 cv
24.1927 95.0454 24.1473 94.7861 24.1595 94.5034 cv
24.1888 93.8335 24.5188 93.3037 24.8978 93.3198 cv
cp
25.5125 93.2524 mo
25.0623 92.3369 24.3123 93.0234 24.3123 93.0234 cv
24.5838 92.3276 25.451 92.293 25.5125 93.2524 cv
cp
26.6209 86.6572 mo
26.7937 86.5576 26.9212 86.5005 27.0149 86.4683 cv
26.9231 86.7769 26.5765 87.2729 25.5169 87.9858 cv
25.4905 87.9624 25.4632 87.9395 25.4353 87.917 cv
25.805 87.4448 26.3196 86.8306 26.6209 86.6572 cv
cp
27.2361 96.4697 mo
27.2361 96.4697 27.2371 96.5806 27.1365 96.7036 cv
26.5872 97.3745 25.2449 97.0767 25.3562 96.2729 cv
25.367 96.1973 25.3533 96.5117 25.7474 96.6699 cv
26.2581 96.875 27.1185 96.7275 27.2361 96.4697 cv
cp
28.3064 94.7134 mo
28.3328 94.812 28.4329 94.8701 28.5306 94.8442 cv
28.5701 94.835 28.6004 94.811 28.6238 94.7808 cv
28.6453 94.8687 28.6502 94.9668 28.636 95.0688 cv
28.5896 95.3784 28.3831 95.605 28.1712 95.5737 cv
27.9598 95.542 27.826 95.2661 27.8719 94.9561 cv
27.9173 94.6455 28.1248 94.4204 28.3367 94.4512 cv
28.3724 94.4565 28.4051 94.4712 28.4349 94.4888 cv
28.3392 94.5161 28.2815 94.6152 28.3064 94.7134 cv
cp
27.7527 94.5552 mo
27.8533 93.8667 28.2513 93.356 28.6404 93.4131 cv
29.0311 93.4707 29.2645 94.0762 29.1629 94.7646 cv
29.0618 95.4531 28.6644 95.9648 28.2747 95.9072 cv
28.2254 95.8994 28.1795 95.8833 28.1355 95.8613 cv
28.157 95.8677 28.1766 95.8789 28.2005 95.8818 cv
28.5115 95.9282 28.8304 95.519 28.9109 94.9683 cv
28.992 94.4175 28.8045 93.9331 28.493 93.8867 cv
28.1814 93.8408 27.8636 94.25 27.783 94.8008 cv
27.7537 94.9966 27.7601 95.1821 27.7918 95.3442 cv
27.7293 95.1177 27.7098 94.8467 27.7527 94.5552 cv
cp
29.5589 93.4624 mo
29.5589 93.4624 28.9373 92.668 28.0813 93.2192 cv
28.5511 92.4233 29.5525 92.7393 29.5589 93.4624 cv
cp
22.7454 89.3315 mo
22.8226 89.2559 22.9319 89.166 23.0882 89.062 cv
23.3904 88.8613 24.1756 88.6328 24.7229 88.4839 cv
24.7288 88.4937 24.7356 88.5034 24.741 88.5137 cv
24.2693 88.8599 23.4124 89.4351 22.7454 89.3315 cv
cp
33.6658 88.6396 mo
34.2718 88.9521 35.1121 89.4058 35.4124 89.7119 cv
35.5716 89.874 35.6775 90.0073 35.7503 90.1157 cv
34.9524 90.0713 34.1009 89.208 33.6263 88.6792 cv
33.639 88.6655 33.6526 88.6528 33.6658 88.6396 cv
cp
36.5335 96.8198 mo
36.4451 96.4834 36.2703 96.2329 36.0291 96.0757 cv
35.7654 95.8677 35.4041 95.7861 34.9739 95.8447 cv
34.9856 95.4434 34.9715 95.0571 34.9349 94.6855 cv
34.8719 93.6504 34.6121 92.7969 34.2054 92.0649 cv
33.8768 91.4009 33.4588 90.8291 32.9793 90.3618 cv
32.9471 89.9575 33.0603 89.5288 33.2732 89.1543 cv
33.302 89.5903 33.2718 90.1914 33.4451 90.3481 cv
33.6966 90.2349 34.0564 90.0386 33.9935 89.9771 cv
33.577 89.5732 33.4812 89.1987 33.386 88.9741 cv
33.3909 88.9668 33.3963 88.9595 33.4012 88.9526 cv
35.0179 91.3218 35.594 90.7773 35.7293 90.6699 cv
36.0999 90.374 36.2117 90.0381 36.2117 90.0381 cv
36.2103 90.0386 36.2088 90.0386 36.2073 90.0396 cv
36.283 89.8989 36.2586 89.8008 36.1028 89.6108 cv
35.5638 88.9531 34.595 88.6387 33.8621 88.4678 cv
34.3035 88.126 34.8631 87.9805 35.4339 88.2197 cv
35.7908 88.3696 36.0535 88.584 36.2366 88.7788 cv
36.2654 88.8091 36.3123 88.814 36.3465 88.79 cv
36.3807 88.7656 36.3919 88.7197 36.3728 88.6826 cv
36.0071 87.9712 35.2415 87.3726 34.1385 87.4395 cv
33.7561 87.4624 33.3968 87.563 33.0706 87.7095 cv
32.8743 86.79 32.6233 85.5259 31.9446 85.1348 cv
31.7859 85.0435 31.6912 85.1196 31.5481 85.2349 cv
31.5618 85.2207 31.5711 85.2139 31.5711 85.2139 cv
31.5711 85.2139 30.9334 85.6772 30.8709 85.8525 cv
30.6595 86.4453 31.4969 87.3208 32.4847 88.0464 cv
32.4598 88.0645 32.4358 88.083 32.4114 88.1011 cv
32.1517 87.9653 31.8567 87.7925 31.6272 87.6382 cv
31.1614 87.3257 30.9441 87.1182 30.9441 87.1182 cv
30.803 87.314 30.993 87.7422 31.0232 88.0654 cv
31.138 88.1743 31.6409 88.2813 32.1058 88.3599 cv
31.7561 88.6929 31.514 89.063 31.4217 89.3784 cv
31.3948 89.3677 31.3675 89.3564 31.3401 89.3462 cv
31.3387 89.3457 31.3377 89.3447 31.3362 89.3442 cv
31.3367 89.3447 31.3377 89.3452 31.3387 89.3457 cv
29.2522 88.5806 26.8328 89.1636 26.3597 89.3003 cv
26.3069 89.0645 26.1863 88.7959 26.0066 88.5342 cv
26.3978 88.5508 26.8245 88.5508 26.9363 88.4819 cv
27.0159 88.2246 27.3348 87.8506 27.1624 87.7261 cv
27.1624 87.7261 26.9505 87.8574 26.5184 88.0308 cv
26.306 88.1167 26.0374 88.2056 25.8035 88.271 cv
25.7869 88.252 25.7688 88.2334 25.7518 88.2148 cv
26.6785 87.7954 27.5091 87.2285 27.4388 86.7109 cv
27.4178 86.5576 26.9793 86.0708 26.9793 86.0708 cv
26.9793 86.0708 26.9861 86.0786 26.9954 86.0938 cv
26.8982 85.9741 26.8343 85.895 26.6888 85.9419 cv
26.0706 86.1426 25.6502 87.126 25.3333 87.8394 cv
25.0936 87.6636 24.8191 87.52 24.5125 87.4351 cv
23.7498 87.2246 23.137 87.4653 22.7752 87.9155 cv
22.7449 87.9536 22.7474 88.0083 22.7811 88.043 cv
22.8147 88.0781 22.8689 88.0825 22.908 88.0537 cv
23.0223 87.9688 23.1604 87.894 23.327 87.8457 cv
23.8479 87.6953 24.2937 87.9268 24.5462 88.2266 cv
24.5716 88.2563 24.5931 88.2871 24.615 88.3179 cv
23.9856 88.3257 23.1116 88.4067 22.5447 88.8604 cv
22.386 88.9878 22.3489 89.0635 22.386 89.1904 cv
22.3851 89.1899 22.3841 89.1895 22.3831 89.1885 cv
22.3831 89.1885 22.4163 89.4814 22.6678 89.7852 cv
22.7591 89.896 23.1351 90.439 24.8577 88.7871 cv
24.8597 88.7935 24.8626 88.8003 24.865 88.8071 cv
24.7498 88.9741 24.658 89.269 24.2464 89.5278 cv
24.1844 89.5664 24.4432 89.7881 24.6282 89.9238 cv
24.7913 89.8291 24.8167 89.3481 24.9148 89.0034 cv
25.0066 89.4487 24.928 89.833 24.909 89.9126 cv
24.0018 90.438 23.3064 91.1782 22.8992 92.1567 cv
22.7342 92.5532 22.6429 92.9902 22.5975 93.4253 cv
22.4266 94.6494 22.6434 95.7612 22.6097 95.793 cv
21.0364 97.2637 21.9817 99.7822 22.9021 100.937 cv
24.513 102.954 27.6097 103.867 31.1614 102.582 cv
32.0843 102.248 33.8597 100.973 34.4017 99.1938 cv
34.4769 99.1079 34.5525 99.0205 34.6287 98.9297 cv
34.658 98.9336 34.6873 98.9365 34.7176 98.9385 cv
34.9993 99.0068 35.2659 99.0054 35.5101 98.9331 cv
36.3724 98.6758 36.7415 97.6128 36.5335 96.8198 cv
cp
f
30.2371 98.1943 mo
30.2386 98.1919 30.2405 98.1895 30.242 98.187 cv
30.2498 98.1748 30.2361 98.1934 30.2361 98.1934 cv
30.2361 98.1934 30.2366 98.1938 30.2371 98.1943 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Teneresa) ()
%%Title: (iOS_vector_all.eps)
%%CreationDate: 6/18/2018 9:32 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B7&o'o/QZ\ra".O%[>>0kr".N#m:Ou+U/?7'GK6fmPus"TDamg"1GI#,hWWGZ[6O)Yb][*7aj1=)[n011$b%0@>an/U2bF*
%^9GThL4@tZNu._EKmrum_,)6n"LHK4j:$_?!SBTs`8"\5O#%L>GdrdZ5VO12]e`W+0dUFJSYg]9_ka7<75GNMqDUUe<:M,VJnlE`
%ab9LpPFCFC1$FfPqE$]X6KBP@MR+51a,+fN\ilV6Jt2J:(Xk!&7l28oR/>^oiC:Ll^i3[lpmM"BfI9S3:JHFP_9;pV3/jPn:Pn69
%Ic^Pd5;e6?afmVIP18j;Z5f:0k#7ck1D"?2f.UO1KXK,FJA2C2>JtVI_-)@7R+pfs3W5O'kRba]:+t`;.fHgB$?-gFlje]=?6:0C
%N<S.`&-pW*G!!A\pnJYP`j5`W-8k<08c0UV'F;?IciQY"1ts;U&9'Bg%-.?pNuEo_6/TsY(18$<ILG`mX\sRV!d^r'aA$W6P2*h?
%oj=C]$`Aa_$i#FE/0GrXRa;BK=LJS9Rt.O]&qJKo`2lD8\]Hlp!AERD#I,C:d1$B+&P;!eI&%)Gr>Km9K,+jrL2a=Ci*QEu^q_\`
%LeCi9i?,T'FheJERN.KsLa2!33!(/1^aXPtm&q9Qkg>(Y59(q]8G$86q4E0>TEr^RZR(k:PGYB)QG]6C-3Tm1p!_D)/e8'!V?!sI
%!$=t7U%!1&KmO#Y=Ngr5\0!c`'^.g-i5!,,n!\_AlI70hn1[X:Mg9;#TRQj33SC=AKVh)]#S$f1_`bD@bhR+rc2LGbA+6nY-h-dm
%F5l99Z=D8DQsb7cq67`>?Q$@JoN6tTm+L"?]'nPb*!L4d9oI#<!+YMHeHTSMYU]8XJ'aPZ])4cbrsUU^P@"j9s-fMW780YjBOJOp
%b)#]s5/ZV"d?^j*(O1Oa<F$+A)\VL#d[5R&kC>,=.+1Q;fg,08#o([FJ:o7]I:b>ts)gJGL^jA'b(sbZ1*ME04s,nM9o<72,>F)j
%-EGN/T!'8nT5fp":F$GL4mc,\P*rJgLjuB+*[Z4IUA:9e$+*]dS"H;&AitK"Yn.hp&HJPin$CX4s''0;?:p<p_de;HluA7eJg#QL
%Jg:2@J5DPiSF)M*+KB8UX_jMVj$7'TaR5(J$HYCQB>B>M1`%E1XS4&!SO8<3di@=fK%i</QHf)arXR:j@_LlBm*o]dN.9JrkCEtK
%U&!\OIF^g%\,0q%)V?@kk7$$rAd2$1hXN"o1&j&#beQRNTF=P<(G#RiR2n+XdPNRpdi/<LP9smH$]i;-"9NoB&H6*f6aXZs1WAT/
%OaV&n\=*E7Cae]@(Htt->m;9(SAD&MG_T#i[U;jnf(L3&dZ%[ih2)#(p=U#Z8j^/-7V5&M_\%fWc*H;(Tp%$NP*>\In$mQd7J7<)
%JrP3d)3gE^NI\q8_aZpd8r-@>BD#]b4:b.5@SY.^Rg*/g+`]F0YomXAPU2U&s/G*k(Naj[E\tT`-7I;Pg$gB:!WN,#8*i^&n$Nh*
%e_iZDd#;_F,VX.[UVh'<@(6A/%ng++'QTf$=NqW1>*$Z&6:+<"(fAqa:#*F!ik'%OU:#mk7J#A2rW<oDj@jCo,mkKtqC*24I`X3!
%W&[0(^p-/?A_m!V&8G)N\jtiWBE?6g+g'+Pmha7S@lUY#@CuG1Zf$4ph%Oa=Lk-n!G3.#Pgt@r[Eoh[]=75Ft*J-u'S-VuGZR9r&
%T%nk9JLNgoVF]k9b8l-eLEPX'^>&_sL9iOWp>sT6gk#<BDVlmg3Cq42PF%IWrZW]6&`0Gb5)Ec"LZ\fQ*Af$:gY_6j(2>Vo(juGg
%)j=_-)<*<4bBlZ5S]/j'edgVI-)Y5VjREDkOSCB'c@^mh2^<9G+%6D-Io$DKK)n?D>F+28`BYM6Y4qtl3?6Bko<IZT)TQG[\]YR_
%4.$17^jAJULJL`u9[`&f`F(A?]!bF>P@NDA'56RH]ZV?tlLO[?h8>Ho"M`>bNGj#%o&+/.4+mb<N4G>6FIJXQ/3ZG[]Zi&nL*)/1
%@.p3Q2'_f]E8BVH*=h"LJU_jlkRR_lrqrGXkXIr"cs:$D&f0Bj"92R`7\(`9C]uC=AH2D$d1j$(7F4LoC%UcVE$"r!_!)^u-[4-m
%]L9g"oB^\DEG,sb5qS&Gr+tmi^d\QFClZ1W3-YrQ#8H\ir^#e,_FnWg8oS_kKm5Y'D)`\AXpY&Ze0.SNltB"q.*(C=V&%B+!+2Z%
%U$:-VK'p[bTN-Rb&s/8HC$hQd`7%tPIruOi/>%"&`]b0Aqjbj*L<Tb[18QF7P+i9B&&R#Bi?pB(/^M7'E=m.Lm5u`)';8Bm`r"fu
%71:dfrg5K_8rhR28;TM:ml!:"a7@/hb,Q.=+2OEM&Oc<n\fmst`_NMe%&H5O/B/0!^RU#0Iq)-D5X'!#iOn8sK[qU%RNRkB*leIL
%i[e1?`A0I%_Y>a@d<.!erWLF(;:apg`Rmc6p*8Y>J#0URE0]UK.%VZuTE%O`*.HUq>,m^0n"Z21r+tak(BKerd?l?'*5$UnDJAc"
%Vb7:c1$K96Rh:i21#ZH#JT<NPdH.:qCEOVGm#U%9QQOd:)3UC`n/_U;s&-i!a/O(jJf.''iMJRO%O#!534sf@\1A1_k8_(C`\bkg
%2&dXnP)m5;jZ]EK#0V`c/E?LAL2G[H#;4mF>dgDiD^\&Na*?tVas%k?W'c^!hs<iTg2?M_8N-+d#g+_II&ilCaoPu*f79Abd'=*.
%5DRI9S.R_I!]KPTHgo:A#RIQ%rY/69!e[=G9K_U5V>5Y=VC2km2>\gbB%.5tYMd+N@_1340J>mdh"[eo_C'in^CfNE0FCpP7Pl4^
%Q9U'9JoMo>YpJmT%Yrku->ic]8C@Y(PU#,<n!!6(R4,#9Rf8ZbK#!4K@YeQ&#jm)jZbU57'M0(ms/d0/^r:,Mcj=6WoM-hK"U1=3
%pLI%^5k(^.;,6n'HbFJMb!?9);:apgjk*/&U7bc,G'(8C8F#e;<6p]iU**$X_p:b;Y`Onk(Su=J\L8lI*5$arDJ=7=7JRbh46N=X
%O30KGU)^0pE!j-(835q\`V#5oP]JJ"+j7?90$</9U7a'ciJY8ha@/+D;jq4?WBk"7,?`4M^,uoT:$oS+kK=F^pD<6\K9Nm]0NmaQ
%\3!5Bh]1c>7fA#R[QKkFISTHGR1m8ZH-]],c>mbD\J@0J2$=P^jk<k?S`SR&aL*Q.IQ<m5Ve*"CE)FqZm4?fe\#%g3=?@sAm4?f5
%;XJs;WejN)3o?HqE/_XCJHT=CMERsA_"0J<IiAR;gB`?5kA>=t7M;<ghfr(b+4Kuso#^[;2NUhZ6u@D\.j+oZj?LSY5/D_m^:A.Q
%)!.A/V8iE=DJu5*.A^4uIr)U'0QVJgbALjNlLpP8N?Q>_A&p9bIf.fOOL%,*+D9tXk`m^SSA<edOpDc0rAd/g^'S@42X?i/IR`@4
%geeTZEVmRZ9EY9PK$WBT;=HhlCAIc(h"Yo'VGS/o("Pm=]Dist\d,lA#G8\ZP&Dm6qTG2u5,(%3g@u^HSPos$Htj%B(W%8RFAq!-
%a*K_".+XDH&>YXtGEbu*+Ug804-'t,"Dm^?Ag[WiC2#pG*5%&d",[("s.K9Yi?^?D,riDq``>)LSTmaC'B1jjNhur;@_*PEEnnus
%q4CTKa*80#k8laO2*G%;g!AirkOW%8?AEV$qp"k@*i%@NTDtp2lM9ffkOW$p)uG$^HTqI80AZI%pYUgrSBgp`B32n_?k4#A['@nh
%^5!GG5FMT!q98S\k'K;`h,cidCmkMj!(s\VHAT/-q+kuL6<('_%L*;q85h<PK$I1<gd[?s_G6K>#mkN\N"01>r?`j)lL3Pb9ZZ1K
%"UuG7Gj-^[;Xt;&]X<!%6BrCNed&?h^KE31RQ>D[aSTi#&[HJ2ll72G0(qY/<9Gsg3D=T+PC:\fN"0QRQplQP6::i5P!^_q(J.=,
%2G+Y]-q3/PeT:,!r9PeiV%>sQ'E:Ep(Tc=0qBS.;g%)&N0S"Z`0`g/C_e5^P59-QBOIX3pJXYpqF&Oj,Rp-J(l>a-.WQ'ma3RIrk
%,CNb7!^Lt"E%p;Kh=_r59L7<0!dj>IYh\U9@gJe7%:Q]uJ*+O,g^Cr@QZM*H*-aIK?I"+gF5Z."GW?"8c@M=Q]Ec>*I,IGL_Jo%3
%F5Z/A4j\9.AWOXMcfqV4^>e)3"%Z/&iAp0/d]&M]Sn?pEjDLC<CRL2/"7^cl"9e[eQVF.2E9NW_T\seQQVF,XQuV>V9q\CM*kk[F
%ODGpb<Pu>eW"Mo"NenEt43:Vcrj6].ho'URb4-0`@bT:[58j]N^4keW1aKXio09,mO7Bl2O1f`glZp3mao:URqpI4U^6C0lRNoI@
%rI',dc,iuI,@!<QPZ@PBEqVkBR1Wa>fgg9c.G*d]3/\[`(kRH75SJQ6#!3`CJ?hFT8kuZWs83iHVfc3hNFTHt73CGD)spa.F['Ns
%crT9s_pN*-mHgMeVhaF.@><TorD!!J'(1Er5DG+5"dosRQL)"oq"*A62dc+P,M5!2IY>[+Z/L2ZKL\B2`QnGF*61#Ia!G\b@iUQ'
%FnB[4coI,+f\umBJ^/7oEua4:2qkO<l8alEoS[aMA";QrLD%XX^+tTkALF&F3A]ec\<<VF1IR6M4r2)<LLP2EgAfYXpCJMl7q69D
%BY;CFPA?%D.1G/3m6k\Hr5#P^_+1M;<0JW]Sm&p.&f?/d>3#gc4C$>2ViX9VOD)(iec9@^KnP`$nW0s2%qPPXRb0j^1SeKMSF7?l
%DYjLoKe+d/U8t5b_udbI)UQtJKupi:5Gt[0pHBV<]h^%Gp\EMjp#S:6CS-&.pp8;S62t!DVmW20M[A#U`uGdUS_Hq8m[at8n+9.;
%[JL\aSHG_#\`8/a;!Q%q.H(X@R:Aka>-#H!>4qeJL!ie`kJ1$1:f'.=KJ1Q+SaM=9$T?cHSLLeT9^#tJ;)mfJ4@6@$=(:\aBqLuF
%\IC]Lp>u9p\UF26cJI@0Rlbt<5OZi?=O:]!mP%HsF`.b`<<)=/*J-(kJdGm6mEQkkXKt!4G3@0=gh.r-fpt4:F!pA#q+o,'6UKq&
%gpoM(l47SK7JIq:0B[;HJ2`7<`+f*i-[$L4Jdm-mf.eE!A08D8375UpUVBmiHp?c`bI)u;=+].L'>lOrZ1A,:#9pSf?\!P]],VET
%KARf($#k%^f98_9'>-8aCA=F"3Sl"6h[uY_"GZk<5m^*jm=':!jWK.F\ViXq:X$W[3D\?M@(;[HdjH=m:+dTI.`d[h6oaW/jWW\[
%0FN2WpP<Dl8(0G\k!-gq#e(QTmgVui1[[Ef-k:jAa%p-!r6!K`OkJqOEBSDhrV$Ss4Ei!^N8Cg6*/\a!G<"NO`A81-^lYr&hf;p3
%9cLUU#l4Q$6V\FgVduio5IIKlKH#2m$2B5lmhW>0.?leHnBG$#rM97R+ZWh35s)*Rs-j\\1f-UPZY+(AJ?6;phI:gg2UA@,$K&$c
%&(TT@o&h(.`+G>X_[f%)/n^[PB26^-]b"Fm3?(D"UZc&AMU"--[nieKm,=]tMG>`hq)"))P7)I#[7oakpO?)5[<j(:C1ja0Kn,/3
%MQK]o:qPRRJqNg%EBk,RiuaN&#[Y>LXc3GgpWqfK*csVoXZ.KW3_l]$-HE%tELLE.;Zc4.$V.$3:GgPnX;l^n3MHf@6W]9r3#oMM
%7,at0=,qX]mq2fL<ffPM<r[6PnJELlkEcW!WmPm6)su;71O*RQEQT*'m_!8p(la(;9g6U?PKuh7-1)u8#_1nO'BMMuAkSTA0abNA
%%Yd?\T]IT?gck#en?[d)R..<-Vq!H41$(TnaLu0&+8>+K'OBP7Q\R.>::(;p<%n,.8POR(G@WZES>LqR,boP*7BqkO\0^/l6YJu;
%ai%i#bRpA1^h>SnWc_L3*hQ\th&\3*Ym?!B:*L6f*/#NDUY.YFPZM$1V*2MaW&p;NFS#bp>aG6f60Cf8Pi>b/.'O5!Kfp?-5WF[G
%-U\n2+s^n$;bP>/iqjsb5:K<IMcm6'P[_QKe6n_$RiN$/jc>VMgh1&=9O*n[dGtka`IT>O/K169"-b_n*$ESrS]#sk;%F_K'=0_q
%0(-!:GAo*.gMr!4\<OJ`AFf3URq))0p6@#G_PbG?@eh\%@*b/^)3REIf#c56X-XuL^\QhaSSMt@#GZ7Iei8??;oFcfM4a_B^[!oS
%/AscR:DVl,NI-'cQr((aFU:d"?8*Tu'qaGPK%AH85+(B5LDp/+)P9^E+g97HVCd[o\A6ujDkumTA^NJk#lu<Ie+jeV;je`G5])5k
%+Z%*te$q,kq[`\liR:Z<J,3UQ=d!BdnD\-dCrc+*qKp51K6u&E"P<_[;XFX,c8FMmDTar[l$Ph!)I]'Qr3K(kJcFTen<X@Sis^T.
%*XqhOc9Tb>$i&WbD^^/3_2"[Bm.8(aDK!n^LVL>^DLWeQIIR-NRen?MAso!,ru6D;JPYam\%_rh1f_fL$`<1g!Y65hLB,DD0L7<_
%*-/<OS\pOS,#id8XH$'^Q6ge:l<T3?ckd1<g`/4\GF68pLk4I!LG7laq1HOhbted&!lNGk]GOHUU2g2<;H3MNfDjBJi4mcf4tET/
%/RASh.TruMV"l@0j:rdH\;/>ddk3M/6iDLD.3\Rg%>$:u%+SQUJP2-A=hlJ@NbeFmj<s_&U@Z/2,))ub=C&Uj`[_5a?OcU$:t5,f
%TsIa[)`hTkN9U7odnFk]&dOETK:NMOC,V%Cld:or9?uI2oQDVYJ[U*)9nL(@BS&K%EHD"C+?K[C4:7erW])8J?G=A&AD-T:RH!Oc
%fP2lR3bW;'_I+#)c9POg+(+sEKgOiRFKki#*X7fq4F7HjV5=J?rr,n5NA*?!_k7JCJd.cEs,2<SgmoV]?dIoB[PBZ6qZ-Eg#UDDd
%+a^+3`^:f>1Z\6*1p.%6:UZpUoP.WK,3tTUr]GMB,BS7J5<I7[HW_s['@H,dIi^mGfGAR;mbJ0:beE3dnbZ/0o(W2kJZqAC'="*"
%bPX1,">M$K;A?MJT.\(a>GFLnfG[HoG6^RIa_Z,](pegXQ[Bd?Hcc%kfG-[-*Q1(;"H3#*_=\8$$%I4UqS!Lu6/jn%CRuA,@04QF
%gT=T^@">)\Qtn2HCq.99KVhMh(NZ8T[bTZ;#sn2fe@[B%NIUaX5G>[`Ud<3@'5!X_.IZ#A,$E]J;pia;0Omk]a6a1eZ%0lUM=VOp
%,*H?ZYhSR=H9uLPUEN@5-kBL,0Q1@P9[nq8qm,)Elg&(8:quN'4l5[6j#Yi^f9>O`ak;V^\M,)RDL*#eKKEFtAl'UqR\o4=R_Y*e
%a1hn6*PR*=0B<R&I6MjG'D-W<c;7?1GF]pj/B9F+`aV9]&p]'8i%cQ6TA[Jb3'CT2+A&nF$E*b>&$.UuSWQ(N0M=0WJemc#54rGr
%.I>k6YM0@q&_8oA$"55=.%3h^R'`dr57`3PFa-RcOPq7-<hk?(+^l(Gcb8KimPTa3HnI0IN1.\<kcq1BFDnT!6DW5&`nq!N"2UYZ
%'D/m;e\1s#V7NNoc%#1XqJ\F<le/J'hLbuuUNh1`Nq-P>h@Gu?+MIe^+MGe$2t9%K0TiOP*t5J$Ic+%ZmrNiG@:%[_KDu#C^&&K#
%'+-_(Y6l;2fB3f:nH?*!-,(0'/NH&jDfG^T'&V`e6JoTS.jr0l#otGWqgihNFCQK/-Kkj;)oVL>0Co8eY;6m^GeU%mK>-Fq*pc.K
%0B.@eEWIC:jS`]U#<j;T!_]C"\-$O(rNi$_oBnW[IqItjg]HO99=,4YL%?U1PPo1`L6`c;aJWaU5hRg;*r6@5)p[N20/2RN/\O"N
%a\WY@,rFEa_4=TKI+`$bXML7!?GAg!Bn_6^TFia\3Q7Dk*"upZZ1<)5KNn^,]W5/\*:GQ&i5M!%d@ZUtOfqa6,Sr#.C#BCmd,^fF
%707pG=0#f)EGO,HR0n5Z1TEC2(9D+=;drOFff#q"j)]h'0][=1=]b%m8al1p6L(4,,1&E@MS73(NCEj3:@uL-mqaNnfHY.O_S#7r
%:;biQ^jor;d,GQZ?Yth'Fdc\DqCb1a,5u".ffmO;?#i9;9,;XT]ML-b6SDpRBmfUjc8=.*8tFlS([MdH_:Ug>i9<'!S+3u9:jr"U
%J2I*+2I?Jt!IQR05o2>9GTWomX\_0.!dCE8[CAX5*Yguf.rJZ"-%^k1$q"qr%k-(%'9e7Y@BV$q=Sha^VHg2I04kdG;7V58*:L!9
%mLP"=DO#c]ldR7Y(#c'TGttV]A'ObJ1Z]NIVs49i`4'<X@M3q87kRV'4A`A93,63f]X\>;d3A41riL7eiB8AF)btQ8LND<c*E&GP
%Rj@t;d[>S&<,Zncisr[Y+lH+4kYc^+-6Gk>=tFlelJ*NZV5_EBR6^'qp%^s@[:S?dMUtENEs%j3OIn'Y"2YbEZ(qTf!h<+!,FGDQ
%&Bkf.7VEX)VT,Z=[U5Sag`g>0@FoMA/WJ^%8_RW8VSN>=[^8gm*[g(a-iT'g`S=oX=\?([!!X2A4C(i[,ZAd^d'2EP!f%Cd;^),a
%-9F-r7q1`&g!Nj1DF>]"jXj]r'+4qL>J2+X?#0L6N>5$D/K;<qTV@"?BCNZ,C-d'L1VP>3]g[R@P-]US2Hd#I'hQ?g!,Rg%M5KBD
%L`.!)5^F*-Q"Y@l!P;nKGrru:<Uhf+_L(=.9jr5'lc5"dfHh`u&bk@52&ClGq9Ro,!"uY&_.NnS29"Pt(^(bG)[U);2Ei@R&X](V
%U8[F>hLqC$1BOG;quc;W+cL+gTrq*"8Jdi%j;`XMYe^%tiY.I(;Zeg_RMXI\"?hO.U!+!!>`kdU1*gdq5XDr=H+BL;M11ueg"Od2
%a0;-,#@7QD^MqXu>_nKf$eEbl%dY6P2'j[C-.7h6KjYaKX4Dp1W4?F[aGdYN@ZrT8JKQ.L$3rd&'FBNmL_O"^`!/M,QZ_])(2&'T
%T-hs\B)OkSj[binTCT&)ap>1mPeG4s#*3$Y7BA=Id$eKq!as0h;I#W^W^NIa9Jm7\\:tA7_0dhl'TVd*X"DCqpoHsOGd!AIe8/-:
%)6M[Nc6O"<&USfh0!tjE#7fCH:/TZ?8'uaZY<W/Kl^D:ZchBYsoIffH"\`Ll@M^g>*]"Wc>An7kE[cZ.=kI^53Me&9oR!:6P_?Kn
%g3MQba90%l>rE97Y&PB&n?a=U)\O%V(;%I?C+XlljGXcL662\g9\d,s<8)k-'<J73`5n-gQB5oeAr(:\?4P[mRquP6`&H[YcIM'B
%:eII8G-TY>hn.I=(9ZND\^XIj4!KuVhg/kPNTiXO3;HNP)<k[!:=kNnQB?-2S8;&p)qSc-R.]M@Zctr@gG![8]$Z]!CpQ;D=,MA)
%1O%+i4MNU7BL0o?Md7o\e?0RGS2"S,T^B%5%-XhOdLE-5(,Z3LcLTi7p-FD0,*-1RqiWh5Bt5d:Y6CkX=6RA^]5P_Mg+lHYSN-Lo
%Cm!J=.lNYlCFQAhO.*kW-()aGp;Q>lB]huYF=4ks?%PUG^`)KREj^9>km_F"c,F9hj7WV'6&-iI_(acQ71D63>L\1nCu5U3]D9)M
%pWQ%D@TscB1mgj&j&Vo!jf2\CE'C1rRp$gfheYHG5O<T?Ph$S0.8I3KRNQDk9Q4Pf\t+D6g3Adf7aMe>WO4"L5YjFDC:R!S::KL>
%q6grEZn*SU@EuZKU%rN5Q+J)V@]Hcs44'_$RfUh:3T&G1Iqper0Ul_jrdin%1.PaTD,<^8R<V$+$q?*Pmk(<VgMQ@-fSka-DJA`<
%FTE:4jDZFU<I7\Ko%R*adb?f0f5gWJK2$R2p!m_8dj<Zr^.n;f0sVLmF)&VGP;a6@8]<#A3`7d@Cd:Q/?_ujh360],huIGO&Ol`Q
%]"f<DU%9q%7]S\d9>pk<@qJDQ53`%&d>.rYl;jb$O49XRgK>@g*\>bCT0'ON#uSTW#gA(QZ'0`-Vn3j=9b<Sl%ib)f<lDkT6[%Ff
%_sRO+-aP)1*mX$?.uGq2(.`%NNQPdd1AEj@ETCr?c*6.=U8`"!LMK88MM687#7j\C36c8D^bp[n^_.$$K[soR&l<F-`T]+`s3P57
%J2$bic.<V1g*2.elg.Dj#Tq]T=`g'K&tU1Y:(Jb0Za@8HN3c/D^LV%<.^th%!m6CYc8]IT&/So>WjDgOR,pq)[l9aBf8!5qnmu[+
%&`+mK@[fK8o68),nSJtm@hC9a=%(n;:e@Gb1O::cW&Q`h?sIe@Bscir;81j0lqMs_X^EH'$sGtZPhZO6ad"6W2)h0QC_DSqKu!DF
%p54eW)1KC5)61^tfo#(1KQCQ=/4_C?C.)^1T5h1\)5&X7DZh)F/WIl\D#g'Q@&qW_6#ftZlnWOQHj438E47:'4CK&8<gtNo-Ki0C
%RZ.n6>)o^Yl4VW!!Yln+ZoIouKjD+j5;n-Ib!?q>/X@Ug]1=/ME%IiIQ3^q5s,3fW5DG\(Lh.9\8PUV<PSmP[>]NQER4]7BrX8gk
%K=Ig_XZ!csf1W*'p)tLOAmD`131@_ooOY$_W9Pnikd=GahdK]`YL#g.C'cdlk,QaW6FDTf-tgb*k(!C.d:t7O)6MJ)dV6,OOq%m>
%nlN-)5O3e!(p,/Oh\=o)_Z^La[Z\Ini<4N^gjhW#:d1-eo)+H*,M9f(BYSps^^$'[qjMs!'he%3Pl$p?L8%c=CQ38fHL+)Yf,jZD
%)7o@`_$@:V%N\8tlL+iEa`7^&[K)]-adKMg036^tf>noNf3[sgILWo%dj3C__6;Wnr>B7c_13%+2to.q-Kl!8obN"!ADcAgB(uB3
%J&;2LB@NcgY<4^O0XlR^\o*U&%pgmg"<I[:;7>5rFLbLcO`Yn"=&s7^jesP2+,hA09j'W0hWC/@pEK0m)41bc9R5TFjf$2HdgLon
%<kt$NCIasid9H9S/tO9>>MJ!/o>`i*TG)lAM&Z_'Ne^,#<pN;e7anka\L*t2r#`DpE!^Ff_@g%mO8P'5V\_1_Na;s)D<l.*_X?@V
%&jXuHIKdKIa^nsf">3QR".g2GlNmeVVFfT#Y<q+/CSs7dH?a6O)uV9s.dPO[\/C^*_iIl'-9f/f)QA(!54on?98t0EHfF(:9Sk`D
%4_tSu)]W!KK"c7&Odo=e74slVecLDCYFR!n$P?UO>&boRY'NB<[Z\64GV9iG5CZqu;H[dnZZK$:d]=-S2XQ?(RN2%[JO=DQ*-Z!#
%jslaH*9:"SaS#G_<?Be?_<I0\<]6Rb[)`qrfe-lD,g-_p!EdZl>KRPlH--iu72$Lj2+^KSWJTNZ%0g+^^mh-H7CR+RIXrG,G>eRI
%.o`gbd#MqAXCmVj\nQpOOZ%?G+bs!_)*"5$R8gR4QS5GEU45.7rhJ"Jg^^G-BM>P2?[11;1Nu$u]Q@>X]dg:+VE//%/CkW.eoH3=
%Ts[A,<fYl/eHJ[#h.qIjht/ob'uKqQmMlmEK!>_On<!f.\^m_0).+Rk]fgG=^$s[c>!ikf@cM%E%sNRRK&sE&X3$RVP&4*#CH:\0
%g2;!]XhF\eeiKD/mojAU@F;Z@jJ<W]eo.p5-:hg`HM0\k?/,XkIUfIT%G:?Wg7Z&FCI<rY<u]H\$JNS'p/N(!EOR`<09(0AD*2.)
%Bs66W6Z$;p[V8YPCIXeBdW`'$,CQ91eNX]#JmnY[/_9'1D:u0bC+HffUV4CI=gW<]TW#Qg-:r'\=S6BHZ27aBHh"8fhGa-Lp9A[!
%Jmb2=DhHcqS&r#1Xl[$-]Br'dgV9@fBF"K\76@5_<]`3K"mn/;n=c[ncFikGGP@eBm@Jo)>Jq==rB+*1),kjVc9/\Qe_/APR*NMb
%hK2j7O6XCGl4ecrq;3DC?0L!QejUgiB3j;Ga)hXaiBrqQ24D,3CY>U9^(_s+b&a8RX7`MW?"7n2e(q=sQL4bU"$J"Z3aJY_mHD,[
%!.#2.H?A4"(gsA9^ZahQ:_A:f9t(/:Y"<!aNP;HUhElDSoT!OVTQb`)6@-DoCX\'932;PJ70iZWj8DiI\LuG)KdN,7=74(pqYKfC
%:Z$K5FQah=(6e_D4P/if3_o!t@<8GupQXP9)#^Ou*pFPPEd4:Y>n&D[p@Rjkp6m(/@+"QBKjT0g]a-iH4tbjV\b75<ELSQfhPB2+
%C:j(E2!iHJ`LSfJ^Naq0lPFe6s)]uoQ:DbO2eI%aBCelN2S-C$?jt'Pl\`Ne0KgB1fD*Q$@$<K9m+N:8Up*/6O<<;;%+XpF`R##S
%'8?`4HZ+/"N'@aLG;<QNn%@0[o0I;0eFmmSd5::K(nJ\2guo.2U;fa[rFAT`8M^?VbQlj5A+b:51U`899B5&,^2(YAdUsO4r[6_W
%F6>A4*0r[MOh#P#*/*Y7jD2Li:!oHoZRJnOI&:ATff.HRj&`*>dQBJ%/k/ji+Ribp9e42CM&dtHTJSLE0=>ET+FJ);KEDhXja2e@
%B62IIEtubeF)0>`R\-5BT"/3s=3QjB(,3(oZHcoO&Nu%&D6$lmPtKhPou]6Gq2YqoWB8.KbC(gfB6g8ZAIBAo5qnUc8]Yg-A3Og1
%Vt!>s%D648XB,S_fNRcN&CqdFKj,WIimeAEY@m0gI!N$'<9MA8YmauUSe0GW716]0/b=]+CtJC)`-,4qVerr(1"b?`+fC=M21bge
%h;$DUm%.JPg)b<3:\H?',OMl[UUNJ#e@kS4Rl>,TG/ne:h5iJW3"0er,8bDG*QdW.4%FQOTH%hKZe+a@HrkHLSW/bA0mpp0[a\7+
%))-4]cGXB+_)TVTo:<3nM-W+2nnl3'.Es1l?-+%,3?!m[/(E2J?0Of:eQ%O3?J"4Sl.#sidI6q1^NM?<3>o`I\,%h&ji;FEM66*K
%p+UQCF`4pAC^'mO%7P=AJ8r3)/M?d/dkYq[ENJH>V1Kb4f:AeoZU2@m0mo'SO6=r%o>IWp`)BFG5'ZLtcFg&N1kVB\MVdF%A=>;m
%^h7raVYtGBhKgkUo"Kc1'&NB*0]^^=eM%!Ck@2muhdn?PoT^J63o@XDK(T]d(Q=FF?8-i_fZO'.G<qcaT2$@'\#u1=hfB2\s+fDK
%$s9X2X$Fc)<X@baY%F?WBQaI5M0Ta/#X9/Yen8>4(q0'X:rDC%bP/hrgbTH6C!%?)qG>jECNlISTeI"Bdj\Yf0cn"<OlaN.=C4^G
%_B,FV&#YBRH2&^JMM9rD$aB4i0mgi2528OM3LpqAYH*'3JJcWVAEtuQ^dKiu'.W9?kB#$E`l(8LR?pOQIoeBo=WG&3@:m2;Q:ScS
%Z21D#N8^IC9C-0Xpibo3H:VD_XaSCS2*U;2G1mbobB_4uNSF&93e!L]^;R4uemc;`=G8:;T9F?VQ,A_*?cB55Q`JiQ;SU(ip<477
%a283b/al:WK3hKNBf9W<rTSQue@rYUP@"0D9P4/4_rTYCDNK6)iM2Vd2L\GUD\gf$H&g:Of2Q(KRaXD=!0_S4>J99sV\2ca=gjP9
%FS"nD`VlO'$.c8I9W@/rAmXmpais[bg<@-eEAF!j=Y8=]B5KCs>,Mlke(m*LMn2C:gbgh#c#meQPLi8TQ[-=joU7F:Xs'21MkO4s
%J(Q;o!=P7CKhS$Y([afHG[Y?X%#ag[3F5B_/FUR4Vd?t0*mW4\bJJ=+MA(;?WS&3'PX]L6?8gE,R.BA!CV'upg+X)0,[3!Yk_I;l
%`rkeLX#*OBCLu"EHEUN-g3,>KVUF#G/a97KVkVm\>AuR5:'S""f6;]Bp%:08S>eNL\S*SdMKrr4\qRikOWBqVSe8-/(U'DHoa^lA
%hIp7#MjmP'dbWEiAci$S1U%$6%C<*q26OU\_+$NI\nXpBDbEe@@D$I>?&`an[:Yi9[(9mS/(D.f[H\?FXYjVoh-4ZuXhRRnPp<c!
%c,@jYh276Irmsee]/kgNgB1sZrQ^R@q>cnpjD]'bpD>[LmcZr!HQOZK]\h=Wk32b_>jX],hCaBjR?u[r_on5koVfaN_.."T\U&)F
%,Lka1CT0G,#E8>TllEf(oj>?$B?Oj^qj]R+O3c/.H2L,.i\U]j0@B)VpZ;+G=a?]EPMiJP&*RA9g;h#[)787DS@>u\:=8D<G'`m-
%gRH/`>eHnGmd]&t'ALDXMVVqC.abuJ*u";o^*qQN]$X!\hJN#Aoe(+K2L;'4[LL%ERZ.-C8!T!W5@>SIpMY?ph4M-J/;13[q2+t0
%@u?YLUQ'i6nBi3)md:mDnK?d2H9L-EYgtXSL1>tdNk@<Wkc!p<[RZN99p<;(99d*"NBE?0lO#IBhZNOXn\+a7S%d4(`QN8R39cLY
%R:L9\][-+>/:/&!4=o:+<-LQd:D:"qFSb:EQ"D@afJLd?gs<<u$bN5$5po<j$JmjZe;_N2*iu62f:/>?3G$[*!18ho>MT6u=2]6g
%f'=UFK_)$7GHAVC@keD/s"D+[dlm#EPWF;mWQB,2!q;=.\'HFFei2;@'b^#V`:#$[UHlUOeDu!Pi:J)d%-FJIA?t-F`>#EdSHR,N
%DK[',.n)(PdWuWq;D8)Jcf@-7*c$e5VFd6TS"ds&?-t)l3nR@R>&i*qk]&'"'=.@ZHUg$POcS9DHSj9lfa@_J=9Z`.*i1:FZ6r_7
%OJ2ZFnQ0NAiMgCo9<A8t^+Fc6e;W[P!1qsTfg86;9Wms2[R5eQgt;b]]R;r0,i^\ddaYAESUhOQJGI7e\I+??/Ff$jd(h9V.3lPK
%HSiZR`;<pOV?X7>QtA9]/'_>>l/&!JZ[G<u\Ebtk5(Q@uG)+-C)nC(fOg;AYrn%QW`q:9I[r##oK(,jcY<<4)<@,<##m>S"iASdC
%IC_oDe(e,0T6C%=dMP=,ZG/iMQu\-_&i8(`0UL-j1c^7IRWl\_GLoHaCl-6:jY)sg!s)"$'\'ZA6SL&O'+//9*/$:?;0UD_6gQAZ
%bPZ]/OeKiVgISVTJ8Ieh/+N_t-q_dIeJECS,7aj8Rk-bhj)cAgfZK5<>Y/E>Xj1jYAU<&'[Q\S7KjuP7U?0/p\Ke\i)Jcn]XUu,X
%)Or-2m"j!o3E@'&J)S)jN99R@1"3ql%DWhU9HuHi3*Qi)i6V=lmJt,(o$jYLA[io"?g1t5WJ+qJ!M."A-/`YA,=BiUE'p.c_7Wta
%+M.gX>BQJ;9Jn@)LZf<gP"X6B2&#mHXE);CF0I=mmE`RPjMCJGZOE0UZlXsW2?PJ;!4/F)C[`UE=j4nTP'8;ET'F_a*)WXe76(p;
%gDA&Nmfn<&\:e%.>b2PLe`kd_23usY#9atp+\`eP*>sY=n`JZ9b>`9iM,[D9kh`)Y7QKFLRss*b5q^Dp&Yir`DGK55^+Pf.RKKdp
%BMbPONl&JH$jCf"VfZ,%Zm_dC$8K;Ibp4`YhC;k,RC,F/eL3ls`!,pYXjLV3S`/X?jb<K=g!\5*!gjNsD\:B/'RLg(TlAaT%V@5(
%2&BP3rD5;Y!<j'e=!4j?6urIu1ha[/a6AjJMK2&M];ca@CpCTF;\[!UQb:>,,F+qndnsX8e!>#X]@iDqE@5f>\1M4nqFKU(+0YOD
%,*ce>2*imA_-GPi%2j\sY/`4Co:?iRZ&;$BeS.arluOMiPW^W!-5!@nl"-n.Ri3&[.Z'ORBVrnpGVA*!RYDcc.fBSP0UTs",/M;^
%RsBKTq&URMjHQYua^UGSg#<&2,+%h*gnijTVE4c)1VcUg`R-;iiBa\roCSPhV4DIGW8_u_QUGY[HV$UBkL>g&)\tGT^-;U*3-s]C
%J9]3F?LEF7_!aHB8<)9o./<"l:uolgl+&;dM:e*XNZSO#RRt7(?RbKdp]1m7[4+W0r?Bp:k\'f=md^8XJ-iu[D7sc3Iq)67I%=q%
%C%*$XWGDAM4>"4jV29m`hCe%_d9[>*_b['[4/e*_cu.']#ANbg/OI1;qPf>1b2f44c\l>1C&EJe=;'$0#bEdVU@":8En3$@D3reO
%.l_sk,UFh)&bg%]?DbZJ!Ten[,'`:iq@PLM_SIG.X-[FRSOcJ,odPs>6cG-X(M!<RX?Gp*#EG53;a;E8VQ!X$XPJA`Ge3_fDVY$2
%!)SOXXEqB-:P$-nbm]abSf1f7%Y6q#r<h\9d8r+V4D)fOD3$LV'7^U"\P]j`!"@H/'n+jR><E]85/lrqA\NTHSpfWho/q8TJ:m;F
%><JLbHSS[?94=L*b?2.OIf7Ekk%_nD]NWIm"9Vi(8ujDRXJau7?T):B_T2W;f;:;DNnj,Sfb\lA]_@Skbe#G_E0WYn3,Z;u"hM0%
%iO\"I2H`\NlBsr%r()4J7#(1^g%WkYn-".JoH1C[\#l4lh'[!KbkkZn9tgj;dD=<dbbYPF2kXUW/Jr<rWAVIfo4(s!egf6k/n=.4
%H0Qqpc#3X(!pn]fA%QL9+$<0c5R:.R>HBI1.^=n+jCH1D;.@'QpU#*(<"nVk=rO!jAfpo)U$""NQ,.Le#qs=(Z+!gf"*hb!\#$%m
%X*hUV`"arnE\Vh4\Jd11N_U-)0r[d1I'Q[kF*nY-c(f2;o:YGD@^4LZa)^\gj(BR4879gN'03C=DFoljNH*NMETYjM$MM:<`<i#G
%[LX65!I!)E#a!M>d_eqJ#tB9NNF_P+F!k=MH=>6f%'Icd*VOAQBj&;_U7;EqP-&KV#)#]5S4Q^%`_,jaRYoh\++aU!H*SL8PP8'9
%fnZ]m/G2RkQgm:dD"7EBI&kI021SbHONV86_,S3ICNHf%kq9@1*7Tr5D/N(]Zi+TQ12Bh1f'*)7N)@$c#+0&je?pZ:F9J5!NPW[=
%]"JqZ!F'+\Le\?%G6rfq;BoKnB&!'6V*kP"atG>b/ht#OL[tEre+J^gP.-/e,Ah'e2Hin?d/1`nj.tF500h5W##kneV8hXXR>^1_
%As'$ACfk[3=b(B%M/G9'?"D3H+*VMF,C9b8g<9bV@"LdfUI"+g(+h9D+MW8LJ',Hl4=-J8V6o_KS:!uJ$>Cl$o%"$9TOLU**uCJY
%F4'Q\T5opb9EW%''6Gm:jHiQQ;-a^;X'0fb%$klr<aq[6=P5g]Jj92J<d+5$r27u\AJfg+O+Z?ZK_RM#0ZE^8@)PcZTkE%@9J:b,
%K27ePSaRhG?UEZUi^]L$5eF'$q"10:Rg>#:!gqL@@4Uk5*11G05)*bIWue*W59ijWT+d_82[YoT#DU9`)\PohP%sR&$);KbEF<0u
%3L*X/Q:%dm"R:O-G\itS7,:LP/I#D7?@b=:8MN(_pu^2HP)upf&J98N5+8X@UV%r*`._TpX/3JCq_!V>-.ZHdgAI+?@&cQjVtcES
%&rQ2GemE^"iReBehOK6;2CQbciP9qH%OjN*I"f5LXc3[7CuL@DD+0E8RU7u;`BE.p.+*rCQQsM5+sO*s@n!tL$mNPlT])>QEl:6k
%!T7]$l#]>*Pt1Tu/qFAMj.Y>Mq0fSU1?m6XjF]hjm/\r+[Z%FH@5k\,`2q+tH5G-:2V=AO4.1huqE9n0LsoD*^[B&/a'ngCbfDAo
%J1sbUDGNX`Q9]<_M*hRn_W)!PQGb\T2;)`2B=W\PBE:>*i">:9E,l/ikHL+rX$/pl>,r=:22p`g6;%^%E<5EobW'U?^E'2nf1mOE
%)h/]Mh'TE^r+oZph%ABc[QDdjJ_ljFj5Hl()*0<M]M2K]>+X><:Z@FDqF'(K%];gT`ablNr^_lC8p,r#A!X)?R]gi-(RHO1F\BR'
%37f?pND2Gga'4Re5BZ3A:V]hEca,c]bEWFe4V!TiktZAV)8_goXA(=mJ1<.fCYB'FflO)=o'XG^"n5lm"!!onVu^hFD%(CP"5Or]
%X4hen_MLP\$J=qKa0.HU#bDE:5^h%*61A-Fk2;+o*=t6fZ'KXUYN*"q':LoFK!5`oL9Y,Eh3V$0KtA\^HDm$K4?.h;l#@H01Z_TO
%"<^gXWLLhi20EDR@6%7(/*5SQ"]C1_'or1OJ[.(1Hk54Pb!F&M&l2V]jK&o/:F`JWmC!GU*c+cH8(TOoo/V&Y`WH8-C*2M8PJH[E
%o*k\e[<o,<<MGf$Nsu6EB/_O^roeo/FuDS:Fi.Wle9<Jb\"_m"`(YceaX<RAKFN#FI^j`aX-tDUWsoI)Cs,ENHB!>7JchUbYs(<s
%ejdH64.RZ*]Jor/:+-9Dj/NPJ.eS@2[8A-pDg5!94dXmqK,)^BOoBHS_5/VQ4R#*\(X#!(=/,n>Y:iq)/j!:QmHH?YV]hYHlkch&
%:p="MV/GRT]#X@q]b[KVGVCC]Y+':lOtRp4]mBo<;ar;t??GL8AaZ)LR2SB75VKUE%/P1#L:M"kcHISJH?AJ2<:?tL#Z9q<q?@tU
%1c>W;Mk\%'o2Hmp>GNs^rKbi'f&>jN)31"'Ws:66LQbF&hHJL%TQR(tc>'W]JEXQH%Zn@g"6unKbB5Ai&]E4hLim';M7X^r0f$$l
%8Y?O1mi8rtAG&EjUYs4XB^;/'Bq'LFc,TRVX.:dZ%;d&2!_FW7'"OCSY+=oba!nK9A'n!.2?r"^2+Wo>);r@BN[J46A3\MJ+VCFL
%U2b+Y5aa:7Z.GOBQR?%%Lc_EGL/PhX:hQ!R#BueIbKKI!5LZ6Zm7S3Ol[V'HKk8[94g1@qPW%sj!sX.[mI&CE+l8025cR0,Q'sZO
%DD5aF`n;O9$kMt+2Y<1"]GdBWoS;/=8*\X;;IQ=8pAl-O\1dnlKSrY3%C9?l,:U$:3;NNk\bLa`Y7.**'tgTmRo4[[2\!d>=X*`H
%lZRft&r!W(@*/+YfQ5JR%c77`GSfB,!s-,;T86e/)Df>]q3:HZn"%Q>COMRdZtqGR2K-[O"B/fST,&A"]Rm\9AVs7u/$qP[>SA6\
%@nifaLK_]UB!.mf5%FkJA>r/a_O`3E/S<;h=\Ae@]GMR,J2>'Rkhr0q;Ln$7C:1lgD:ZKfXRG(nbr_oV7/MRI=.h'OR>9Jr>KK1/
%0]d45*Kk%^/QR8Aa+Q0J.[Q(Z<o4.7#\glL!aF!Bb[hh&<[HfPmJJXM2Yoa'4`>,d[K`p^d@...P^'Tp\[Yl)H5Is7G3[Ha`2):]
%D#/3+q'g):_058t@C*dCH3WT!lA.B;Xoe@noQ@`n-"@MFm"<kQ!L*AT!EM8O+Yk!jTeIjen/Zo.1O";BYRXF4;9OO+AaZ<)b=jDb
%[=Kk[jJuUV))U6L1o\+V"9/#EP-]Cq;IUnhD'8;tW89XA*OsnH=sR<I6rS03=Y@oMAkp^5n,c5G6o+Pc^Wm8)Dm&FO_&?l1%DUAh
%(9dsK+-P-PAq`X:ZHUIKik@U[V[oYI<>;]1r%d21if`djR;F7&i<EpjFu"[h"tF=nC'aD_k]?"Lb:o8X$lanY96W*.G)_^.9p4*%
%7(ZI;F0Q-(RLYG&H<h_87gp')3SiX\R0m?-*fH:f0>L6R&Lsrrr?iU3QCh-S[WjK5JGSEg1&A+X/ME3S=U'WUDZGj2)\_U)CEXTY
%*[iTqc:6^-eXq[LGOVLFd,ekRiTOm]Da0C+GSH:/!duJ"!n5(F,$s/mj<f7`MA0f`9];7F1A5T<)m`cdD?36kI&*XI\:9]VDKJ.7
%N?:._.dAnoU$"33)m8;F$sGLW#I2*EZk\MCb?Nhbe!:ZSrft_:.,(Z9[pbq"LDG+oFIu2:Y.X(;[.J:0`=R^]>Mf"p?/32YR)_E4
%Ab'gC!UPhcJ</LZg5jHmgh=u<m,()6oGL8Zq[='`KoX*g[e:;7a$a77fb3l)d5t_ejkl7ZGKL<+nZ-XR(8'p3RrW3`JPU]\Ll`H`
%Igj86IG(FR;8.T*_lWonCW0$@2<S[&.OeZ+1<]Ch1B?.fZma;EPRKIN3Nru(od#eBQrUp%lBakQA!hgEKaf8,Rht;>Q;NRIAL6+b
%XGtp<=N0Y^(2W0b/;\YTE]8NVhQUhbJbE^hL&&cpZ(6K$?@_49r'Or1*Bu/N%bkRZYp:M):dZn88MG/#GoFPNBE4Vt"K`%[3Z8UN
%+@`PR'uqf("UgWb9]g7K5@;?C,$!LEG-RE+Cu5Uf#5AGF#u88l%6Zi?_3,8-_Ii/BO8dRX)D>.?QKT7tN%s)9"^Z_WUSW%b:no/B
%5X#O7$Kk/S#?.B0Gk^ZX[>C\e'i]b^c8rK>LL@P-)UZ0uX_+j>)SS8@[>S,&IOnh+coJ!:BE2WJr@S\Oj=FaB>s;FjI07@"r/n_=
%L>Oro@uE.(iO,>3U(_!YBtgi75S*#27Hu*P_:Do#b&o&6!"bNK8KrCDbU,]&L4olsNh!Z@BW'[q;^P+)N)P7L_]f:*s-Rih,q#Ci
%HA#7>/s;prHmmDSSG7NF_$e$aUp0&j6-sX<9Na/(;306F1WML0b44F#2h<^?biKI)_!K<7X1t-`".X#J;$)%M<PUtG*ake^Wls[=
%lV%A7j3_[]U$M35`5#=\aI!D"V\tWfNViZ>qt?j,$=9P:l-WF:#@0#h,'N!pc'6C+h<Ncuh@81Q3S]ur6sjh_72ihD@35;9%g`-S
%0i5c?H*T0phap3kI\1"!pUX&/j9=>B:X,0#lS8d>rYTHo(@Wn"TP=6X1\:oo1&Ksu%)bB3=l:W05B=#6:LM>1XBLI[V0EV`)C,"s
%Fee=Z&_(C%A-=TMQZTIbVde"PT3o5lee-;#^Y`fq4LhejRQ0*)r;G[S%'0o->0$[<-J,HW7IKPS1#g?i3TnL=ZaY>;@Ybg?A)U,_
%6>a3TE<fPEesr7QLWiB98VVWc9KB4'b1i#:gBMiglN5H&_#QmYc!pWNi3^+,lSdC!P:o$n]N5+(dlU-g'2n\o%d9uS`[%hAoir2%
%jlhsb`EF-0l0?7S&*6bGA1tgiN$Q>rgU/On8WESi"VOMD/?lBW]k"6MJEO)Q#=o/^A55'ETIYhr."4\&WoAsfqejJd_\AMe]cZ&3
%g#I<RB`AjXXZa?*_PWKC<ZO;8@A?f1(U3[5<JuP>cAFP=c=*&pZ#>.E:sGC.='n(%*=niPb'3#kLff1T[1AJ'$tB`oPjteIi'Ei`
%pD%aB!Nnns_W'Zj2_r+k]T<YM&\G.LinT$VK;NBnG]2$*7,O+U:==>A1B@%%4R7(NE[h4DVZ(8,6mRj^ciYd95sc[DTC'(mrjA,X
%J:<0k7%qpq\sL6ta"S<YiB1g-esFBh,$Fj2h4C-BC$W;go8<ikMW[Z)42BD\>RoV9N>?;`7Nc`$gBH4@3PfkA$n',U&dAHVd/L?O
%#g_KiIitJ86-<C%LHDq\eJ8A$cXmE/WPrCpnH'Qmei:DMhe&K5_S\J!8V=Pg?qfJRRV[t0/=`QD:p!-.2)R"9QP%iJX_r:7GWEQq
%qR]"1>_XPC`kT*L]@pGSRg=oeA@FGB6*')f5/Eoa-6)LQ6n*qa\Q=TWN@,/#m"sSXZ+O,83#cW_,f>LXeA6<5=X1,sgS!&4Fo.kX
%SKH/?1;_f--lso7`QhqG<A'=*Mb42qIu"D]4<SsOHpVcRG9`Kdfu#0E=7NA`="0NnhO3EjBEKc1,DI%%^^<"'H*FF"1A`Ab.[%.^
%]h(dRK+*b>/ODgP0fa_F;4bf)n,c,i53iR[0jF)nkBg3:"u2JHf8G!^d:OH,";ZJsdb_e7D@"U`$N(=GHa%QPfi`fI%m8,f?ncUK
%71@9U*,YN@fDfjD[GmgCo42]Xs'*ineaC"&Q`]PW?&_r>r8dCeDBdrfK:CC=mQo?LeRDIm:="t/qSjfk4mi%0WQ028#`Q,+DrFU[
%E1(+49l#ZJ@p7(K@p!LgOl4pI^o=^n,#,2QHCrSGYc7qL>s=W9pjR)6EoUXl$nr.hRBc4\p(mD"6J`98rmO@im`\8eoi%s=+^e%_
%9uep!8c/FsPUM<TGc21cF69Dk?TUnF5@U&$gd<T9RCqmsJK6tm>W(Nl(4UT!@&8/oN>:=J0$g#q:ikAcUUKG]!#UC2d.ETHOa=&\
%Wl[T#=,Ro.Uc%URWsLJ:Fu/)dZ!?@dQD)069h,ig/PWLanKG5j$:A[I@U)+lGcIVhk*l;q/4P>eBjZV5>kd9O]EqgEqAFeR3PC^)
%_A:I5NGCqP/gchW/0<ZZ4:C3t!qc/q;<FI!Z"0l%bLbgAAW7\nCjYg=4:s+-k+9EbejN>ADLqg3L!##[!;g]I@p0?,)u]?DhPrh8
%G68<0iDG9NK^RVL#,Zui_&#!Ta3%4g3[8.GT]SjCl,B.`_VDh<4KkF[0PeI+%_IUt5Rlp16IA)$)63/a)9]Ec2i>-1Ec_$8#=FKP
%2O)S-np7=1$Ir+Upo8'C^87HKSe?]kiLp20ZK9\+f%kT\Ib"XJqP]CMNEjC*W-+:q`_aBM0L+NhK)O6E8tj-"$i6^UD6*b2TLM!A
%g]#Qr#kc`q\lOM'F:F\92,nJNLmD(WTp^^r;2/6b^A@7f'tY)X`Y<oAX$H?q3"*C&-EiB2n)4;jKs>D^W4Lb<GgVn)C._=-gri?.
%%2H%*FD23E=Z*;c(!#n=\$e'A4I.f9k2:k)<4FifhL6aNIW1ZcS*0(jGPTHMbs%20&u^jGX:fWb+]Rb3e,hof[qlVu1c`.4Vajtq
%C-Wj\pN*NQ:bu5(q@Zh\$G\@,i^Y9a:1#q>^iHBuW6)(I[7iEjQjV=j#M/6DF<&f,KGL=e/eHW1Nu#&Ge@''L</'$Gh7RlqTQ4el
%pQW_Pj`sOfa;(o;2OB5*.RTbnFK/0lS\1!ETE6eSkgluMX)^ZIC,MUM]\^<6-pi?]NJgD*TnJ/Nh]MdpS-kCN6eDc&E@=2fI\0DO
%iK.+QC8^9_EDSZDZ\^;OB\KgC:`jS[/3,:264I3^FP=Zk,7C/651WQ@TIuI*Mb^K$T\K-CA=LX1=M_*Z<0&JG/kBua?uOUe&jj!E
%BV*NHLXBDm^l'98i(JA`j\a#j!@iG-PMrMFb2:''9g-"E;P@d%RG54e6?TH)684"E.QWmZVHFd9G\^?1LO/&74(NBZ55/?tEDX=b
%O`X_5on'(2/rY?I^mH*I3_<.@2D/_*db+R@8I83<2bk6EFVOAsiq4=CG62fK_dBo2^/>PGKD!]K)u$_Ap2gEG6c27`.GQl5AB(Rr
%!3Ch#Q549figg@tSd%OLc>r'k3$`u7)sQdWgJb(;Y[38NX*,#!XGo13V^),i,^V!b>!S_P(a"+)h(,qePt1de[l0&B4p>>/\mDk=
%dNDLC(1O`]s)_ZF#g9g:g;rKinC4RuaIdWKc.Rtf$4Y],gX?(#G^=#d]!U`uT/2U&fi&4)h@-U($e=\6CjfVdI6)7m;E(UO!LW+2
%(OoG#!%)\!orC8.H$o./eYg)`[oqBN1o&W(I($%t2eJ9(/tr-KjLN^L[h(-joitTC.c(%,/:2):@N@0nAP[0F)s0b;RWc\]:B?j6
%>MbfJCG<&#>V/Z]V5ICUM444=ce]5'6LVmQ/a]d>Z+fHO]saWl$kpp9':cO:a1oT=o<9%X1JV^+V=4TVN8Ik/Nt_MYe(QU;2#MD"
%`*W4jlc+cV>Ep!_!^OD\=pe,1k:p8n*J/<N)oN(.Y4nAE5Eg;GJFb,A<N^(MAceRdrIT*FGW0@K><2Y.(O=]A!'-t#6@['"&`$op
%[[:]PUB3<GfAFk$:D-ks%+t=DW!X9<Uj'9t<%Ku<DQ6#,@%\;&.AQ3Uk_l/2RMR0HU$GZV"LW/)lISiMrJ5-gTR&VQQ4Q(UEA:am
%S"E6E=rpY:!X`:\<1uVoJ?Hj0YRFh$>.gk#I<\W0<L73C;HlBnQuaiYTgI@?U^T,XFfIdi9_DZ0Ul$d;Vl2q97S6=ZY!dL@TDKn8
%"SC9nO8ULo;p4K93nr=?T`98]hUc<*QGF8,;u]DH5!a:d!92<rRj_OKhSF-m.3q_W'R,Ju(:52sN6T:=6EbaQ,@p]J:OI'J[tKhC
%PYdIEn[Tr(?O^`3`e]BX([p-)io0f6"pcqG$UK-k1.i*92_Z!(+T/KG.00K_>V@8%VZW$mSF]H#&OT:nVHb>i@p&\Da;b^6oMo,'
%cTj10Z*8R*>qIFP>6eMpcsg9_QNZ;2!^Sf(BNR41_[m+l`RMq#IY34K"$,sJll[_$BcJb*cAB$((FHr6<P-:nKb`4u*Eb4],J<2N
%OXeN[^Hm#;8!lC,]&.IH!BH;i/HU[^T:KcMe8\2N_%ak"e?:R5WaZ6NinNj9-kHhr)(?k$h*s'f:h"89dG3=&HZ%GK-p/SoX@^16
%Cd-*Nq<*gp3s_iD'^>dYl1$8cBIsAf]f`:7E9WSYP"HmU9F:eS?q.>&l2#]j]->qk+t]\NElNLLVhg:$?4\QLmkq_OYf_(S=ZcXR
%+<M]'<SX/V%]rEbn(O@<e56gg#Pn'uXiN]IH*>r(l7Q9'b=4d>2H2#eZ(^)Ee=B'["ZCTh$c'..eH8E:[MMQ_>J(bH@O2@m_WK*P
%";AGo.*J"`qqR0<QjO,+;'cXSehWUBD-S=.G.H\,'gm&i,@rXBQ%n;&5oWP0!Nhi'!1m-FI@O!cB*7/)qo..:e@Y+WDEIdfA6U'R
%/46F8p&JRMS1SYd<T+HjdWP2/P<f2':`_7V[*@!52lgYLjp&%uo843>kIZZkRL(TY_qqs_XKsM%@bY.RIX\oWj02Am6lW3j%PatQ
%_KJjU(@DCoJW99>DUh^DMl]1b4JYP7B&(Nc's^]ecV(,.VO@SQ$[p?d0&A?8p8Xp_4_kL83nrf(Zj$5=WS;a"j[34hn:bZf,p%VF
%BPd8G,\o@qTWY!TYZQ`gq>0a,*$H_E3*LCs?2Oj?N,5HC.ILh<He@cIlq+Q)#2c"?ld4NY1oYTOT4i:#]=eC4%I]UB/'=W`>2.)<
%0'qUM2Ul8@l@,NtYeIXgYIm$O/)Br:cd_p6"faYtj>>h'=Fi_=mW)kl!c:WoJVt"eO[*nuV5_uc$!s`"6UTO?/F4,_-o9i-Dc",4
%opP0.#7qi-a[iPZ:X"J:g+ECKF5:[_H?<8>1%-J9Ic7st-3')l*F4H@)s\Y1020tHMM$OW7EG8WmD0Js"<dgj-Qb#S;8OD!0s]LZ
%d^0.+>"`o>c"g@PPC@.L!*L#KYQfc?\)ap9<`)]K7hd@\\;CXo,YamVr!(\1XbR@6,@b%;9E2[2Ntq+[1$$7.Wlpc<h:WSkNun*n
%ESY'Ik(O[u^PuRB4+/?rJOD0!c*#2$_S/n&m,!ZifHoA?-2D.SFQ58h;$t,R^q@7^"s$=A5VC@adMX5**7L)#\5rtR#\n43e8UaK
%?Ug'^Ca(ggSR1or5ff5&[#f$;3F;$]^p[>N@"o3<=&9MH]!S/E57o00QJ`YPK+_U'C2G>8G!uXI6=K-PDd&]n5QLuhM1gI+,U#%O
%'+<+0QA3!P1SDZ.GFR8sR@11aD\0u+\M7omN_D+sQAr1boNp>X9tT'[5qeNaU.JAFVi\6$7h-/Kk9_g".)^PeSS./3=fr,sKp#K:
%"4a0!>=HBYXhk$/;'<:NarAK!R5V\%>X0=/k#5i)1c#r>GF>t:&.r7,2`XBE3e`A/&6:8?.9*_eLK(++h`'XeR@dN0pIu.A2aqGs
%`726R4q\cO*n2DE)8Aeq"tnbU22K'CgaH&rdjmMAgh.b;Xf+)!g43'<kc<kdgaF.p#^N!<ksEA:,c?Ud-3qsZ#HVF>S#)EaR`hSa
%IQRYk!bcSZ1m]Nc8bKFKHc"/mc94r1<N5dh=?1+?XGuGjI&h@!`g.(u`f+aY2sO&u72jN"nZeXRJr@7kbe(XgZ?-``n%i\p-J`QN
%dd;)['F\[D-/DOs!*HmPOD\G?::_Tfg?sN89/k]Igc<_?SDnPkD)kJ!Vp)2o+ID'tOtN2dT.T%ZnHl"sm3:VR/TVq`8$ik.LVG8X
%jaJ\S$Qc8laeP-?VL48j#!9Q->tgua9Yd@U>,6NH"IhWh:8gu-8e<ld&uY[CO*ePuE:II!;kFX4E0O(t?c6Z*%(&*s68j^!!Xq#L
%MW_\9FI"p]We\Ptm</5<46'Z<r3U>;&R]:9lUUH6"(;F+cD9"`,Hbg\jrC$UL%ffKBDp^:.7Zg%6d^s=HTC$4+Ja6rT0GMRrQA5Z
%$0KD5afPNgWASRdIB7oU[Di[JAa:FuU8f4/,J:_^j7C="rMZe;AM1,j5B\q\S`+L6-Q9!&:d>pBApLLW4&kb=^dR99b9Eg\ML?W(
%9D>HUI-jM#n+6GTNSlDILO5hFNZuD%U*4CIh$ti89rG!OXHWpe*4niGP."Y0Ck3-?k,*jR(<W+?Y,9WB#Np?Q1f`8/53]c93)AhR
%^Y"^GRQsE'P>4gM"G*>F@N(adbB0.j9^RP/+Wg[M3;\7oGqYoRb-qLP!7?C3EG2b4"mLV^;#C<B.!8>^@3ZR]PqA*[,[q-q?KYX/
%Z"jLZpK)!bNeahE6:JVD)/:1uRuZ(VIa)UJ8ae/\ilgaicF:KQO%]!BNcMl$[<s`<oD*F@mBq=nEVoEL^?r=U^SI]aT.fB^?H`(9
%<kA(jEk^qKHiVCbPk/aqjng>S?2Se)htC5;\8T*XS8Wa++"mf3Tq$&-S[at]E'1j@cF5q;Hh6%aPN@1t"DF21=,tsE?m\Na]5oM\
%ps^gV32]3Heki6?4K%Sg=hnKOk76pYgWIY0>PAIqM%:jfEnbgdWRMpGV[R2=8;ict8Ldk.8qBrW3rN7<RA*sGAsMkf66=lmf8NOg
%`e@CLM>$[_Q"lVOfY=\c0gjHq5DJLnK<4E7)X,mIpoSUXaU_E9:&&"FXr[COHi5!`n_TFC=,G'LI%-C6Edo9.pg@`'WE)P=-E?kf
%>dtY#5`?7lc@.O`6m`'Y*;[@#o#bM"bV)gg\D1)-[s*:XOrFSJm_0UmJq\6JD'$M7Zr,.&OaAN-L/r:nZJ,c+G5FCC=^&\3Hh5U^
%lhT2PmO3Ygci"JV(@UE+D_,VSX.H6"b(2m]Hc:,-`>ZhbJMu$Y0qd-a9ETr5Rj?A%Z+r=UQUOk=pY0U:`rWW9N1p!J7p@n>kI2fq
%.gAr%CC1li'^%Y;L#).h2gS&S9>*ei-^OnuV2h$d)X5f7PZUGOKp7^*bIAegI\4!#IU3rc<%t;6f8u<Kj="3&H]5DV"VHJ%.HrFZ
%m4-N:3O/8I.NE:q1B/D/asqSK8@4qAX*YFqf51t$-alVb=dAHOmN3Fs4K?9lnf:[c([@Ji[!;>R=/emJ<O^"UR'C.[Z#7T-hE7uZ
%pub@oP7+qdKl?PfLBX)1W0GK1ncr18fHhr1#7q32@:@bf0'hWU[q&9>Z*J_Q3uFumVCDaWZ/%#]Y`#<W:7dX;WD8R]jgqI)3\k+G
%:tiJ?,uK:H,m4flD-m3F=*eH1I6;'5=sG?AX"j7,&u_A++B_j5asjLVKjdu(r*FPMOk]ZrG1p8Ls1PA<pZ6Q:)QEFe"j)^B8Nnu4
%?up`,+3=@L0$e-jBh@LK6(O2NK\TT8[o`36Ha043Rn0s!(3eN?UsU.EB(T\=g)dq)i&$__:$F1US$fJ?QS6'#HK2\p5X->6b(1,;
%.=Fj0&fAOa%J>Y&k`,->4*j%0@e>E0T%iPh^)Xh;F`>'c@66="m&CQlom_c$6Ejio](bni<;Er54DRq8HduR[W?GR(<>rKuOT$P2
%R,P`i[HY.F^69f(A_$:2W;$G=WrYftWL-[(r_ZP@!4dp]bK-e;@6k6JL/G-l%I12H)4,B#b3C:%lH'UY-ufR);Np.)-%<H>!dCLi
%6J?g`QrW-8Q+'4XGLlT3ErkUt"'HZan2'(O`E(6]?C<27D\+\G5?jPRGT$b/l+XV^n#Mt5=IFq@j7+.TH/*u3AoZZTP$th#k/hWK
%G7X>VgtZ6UV2LtI;HK=9g:uDq3kqdP:RWr@GF]"SA_o))4&`k"R3u4.AT?RN=6@W?/;s,6GV0+,lFrt]+6pJO:7$2ZC10jsg:*ka
%o"q7u8cA$P<j6jL#qeC5g1J7"2fgT8=";N*AH/Z$S_d&%:p"0`4j`p;Pc`@YPe?=qmT8Ln#oA@t%A<*\@VttGDWFlg53tB0)oV^-
%hX5%V>$[`-Z_6S6VnKAY,TQ3`;P>2plco3M;]X<ApC4!GqHL*`k!j?<K8[n^Zst&WK[%en:m1g%h9M5@Ibul[iP-;R/_eu/_?MTb
%D6\#6]O2'$VV<[`nN]=UJe>p!BW*9,5'M"Pb"s,7YAYqS`H>JZ^qqbc,2'SH.[#5Zpl6P$36J]EahkWsD^gj'"+@jR(65[t,cc+9
%p$OT@4/JucAbeu(K)a+1VU^-;..#!$KJ46HC@@LIo&OPf6iSZ*H&?D/rC)!I>@<eMs.uI&9qqS:7<o0QkB@X%X[M@'BmmN?:Qf8)
%e`H1*P_WX$o#F/&qF]RWh!at6oL@,[lsOE)&jLNR8Ts+"?5o.s+#k1e4_%^f%[U%8382tORKCkXFD.RL]2'c`=uqleiq1E8:DJ$"
%A[\-1mADHUGYe0=oaW))FP$1DL@<NrX(8(5lbL2"1gV-_-Z-M[dJ"I1>kfN5RVTn.fn>8@V/rc>hui]\prm66:*^3u<[jS[p<r2i
%Wsi@Id$ubSP@:a/\J7G1d\<rt"`Q3`PPWJh68t%<Qs\soI^Wpn<Y`ZW78Wq-X!+@:e-b.%\%P,3mueu%b0'-U.J7.7pa1#d%I2^A
%@_]Q#/:o@$_-=jtXJ!_Zmblj1="erceY2587K0a$41A-'W\#!WWYPC7o_OWai`WtIn)7tb!Shd$YohM2WBpbrN"ogO="Eth[M:^W
%goEfe?9dQ':k*>pVsn0XNHWgEhJ=k[fXCp0mZYHS&LA2hDAkq^de@!4B_RF341;!22\dMjQ%4IO]%k-4`C-k:\(q7T&?#4G^?<9i
%gITVn)_$G&OC(QIoKp-m?5-f#qG+4)KP@.(8`Ah.XVkE:HbH#6@4_,JjjX(elh*.mADO&Ha)!q6WpQ4Ak]o'(KX\'S9[E+p_Y_KF
%ojgFl)0BHCI-NgOKCGTM%R\XtCn'"9[k$g8P@+c/p.a8r1+/oKo-a9,T%NQg-<X[BEo27S@@ts^`Q%:((%s(Zi[[t+q[34bia]a5
%f=cZL@@mZ_TrLn1[e=!\I7dWgX)h'J=nS3"5,G8C8@3:fm/(n7Hb[E]-!sEed,.^Q[o@M0WkPkTppS%'V/m]gYka$j4sfZd;et8p
%fVa%Qqn7]38l^;P\+ZqXI7bgs+1(do_EOe2<fIK7^9CD)SdhasIdMAue0bV#j@?pNB^!&9qio\$Qi,k*Y8?o7f5Ms'nN.-UP_T%B
%XS;Y,_ENXjipS;^;l]-[%\i>I(AB!kC1/2&dCrl<Vc;1o<bpSlfV_^![h7s(H=<Go!7HaiD^k$OWp3N_=SZE7T9<K^mc&],Y\u\?
%s3KPk2FWmQCW#&u#lXq5[Xr1TF67WK6(DncB+\jc'aN7cSFbk<m;H<HXj"JZW%+ft^7Y!d4OMPGZ"dA.**04fB`4msVB&fKhlp#t
%&`%l&`4fY_IJ`?%,Bm\Xr1B+3r'Me(%4l3h"okP7qtfK_T8kle4@utg7i^O#rVQFj25eHm;:kPXj#M*KfT3l4LOG1jU+Uo4cuL%e
%A&9jI'D778[u9.>>P2d:dlp>[JqIpjg95q$NPQf(A(o])l.J/sSEP8od(jSJI+&\@HFj4W'5uD(IB!P71n<3'*uge+jd]^5SWMK_
%<1,B')a=R,-@<E$4rDp/7MZhN2Oh;Rhsa>Zm/M;!&.E:PfA3e97m6:tr,3c0a,NGFs.`<C\,Y?=3IRYqpJ)b?IAl:XSVXF'rVn3?
%PoA'JDnq_q=`hjZc2YRBp[A.6SaX;;s!Fmcp\j75ZTKm(dXMbrRfeF+hOHF5C$&e"9B=uK*]j4K#*m7O?!'(6:>a^n`X/EP.AuVG
%Gtg)3>3VXm#>pOTFrVP=dcI'ajZAdd`i4R>L'1ajK-j4-R4tK%g=p*bqa3gu05uBQ4ao/AdFGijHh<d0-E?I^OCXeVX$#*(Z-SVf
%>34-Y#pLH5dnWm3BG*$1e:P"[W36VOkX8brV98srPKjI>)BGM/>n>%%lGL_,,`ae:pVG]GN!u19](1T$[#s#o1]@-@P9dg%q+a9/
%]!eHOjsSsoI5p2'G*U<L@Kl@mKi<=UJ)gbSZ?SZ0_)e%'R)-)RH\q-=iB7(6D2_93R&7E(rpK1W%d3dO)tj[61C$[nS195%FSI6g
%3jbNH>2pVh)$:pn?O:'NHJa;Mn)ODlLdim9FA_bTU6m9]@^3V*h:FbQUAHpGn))??ni`o=qo8t*VY/ioUbkqN_RS0H'AgcXqYj2;
%WZS\<?`SO6B`0mW2&b?GYCgQ<$oG*+4[`9<DuDWMi&PZ3^OBWJeS'Tg^>o(hN=4p;0\c?D"JJbXd'T-(%P@U#0J/?/<8"u=IgkPt
%"+JQfZ[MKge+K%LDB2-Zj/jOsRa7c$NZb'S#+@s%_JAickj\E`>G,jCVWa&aV:mTq#@.JQ7RBkBI=HG>oUbr)G(+,EoK_d$7/-69
%oSHOob]`rQBs1$aRF<H[@5W>,UM[/4L$i?ITpD=b9q/ME4%>_#HB,7Qp2A[:$.>:jcokOsS0F;7";-!e4$Je,X*@=(.=.XTW\.!b
%&/p=gI\\g+K1Ls_2>q657hj*9_D4R=N-)-pR<SOE]Z4Z>]DPEmGPg`W<OIQbeM5bi28ah9P9N=?n4$.%5]CGM"/rVJN6Suj'A>/f
%mrn`R8XS'@1rC#K&Pcd[dL1h!VA,F0\TcXX4C%cb="c5_Gd;L/qo48r98a<%?MO5;1#u,3mrG#Ye!KChc,klnX>(rO7C[,PDV83#
%9&T)0pUbA2bKTj/m.%Eo?-?8uCV$jQ0:iWrba[SHW6m&F]>*6peK`tOf%$`s=bu%hnT]QB<M,0'T/ZIa>U&0O48Q'\O$.tLm&g(@
%gm[[-]AA<?Xm$V@jN-0MUGMLjSr>%?]@#GX+R*oTrmH]X,BDi\`jXj\*1DS;:#es^H+lGq_3D`"h<hVZUGDGtN-Xa>j.ZM0%/0_5
%GO5-]\#*qhWLe`\]g(kc*6pobI.QmL9ib>u4Bh2<g>hu%FT!I6TtaB/=;png%&Y`O4_e'K"@K2uVp;G=nD*$VDniF\KeB@F(S81R
%3/Hkg)8]'Ka66Tio8RPFcnEK&IJ"!Hm\I7iU,-H%[ro;:5/1in0kF>`Oh>:`^oc"*=reVC2cHdN:6],Yo76AsHR5.EG2OeN[g':@
%Ab?]>>jepu&,(osSNK&Qd_MuIGVIUDa6aNK3\aYEMZGnAe.<o+:(m`Lf"mKt)BK)@rLES+UCND:3@4rHb'W_s9]E-IB29N8Smj$l
%WY\J(PHHE+A"2Ve\NYT%EM(6nj)&3^^jcu(i3P6:K\275ObXL;,;;d*^+rN4k<SaJl&4C-\#3Ll$NKkd/$26dAlRlfa\ia!Xfa`a
%bI8#>RmUmIK*].KU$=a3.*<)s/TpbKP![dd8#]'uXrl#F4Np<GgqPT7f2Ms,c1N5DJnaNsop]=DO$+']T@<5$JbUpEG#(Ui(al=o
%d?g30T0,(/KEhTehHufrTk^lLWhr-rMs`UVV_U<ZDHsa(8OW6cBoPk#BTI*0)&AENhUTrmO!qJZ8CsI7(Z#jOM>K43lO5'TW,\Sl
%DZ`/U`+CDh(8HlQ"FYf3%er0t\S:qQ'2>lKqfkB(gpDKV6;Ol1%JOo8VX;K7*i\[)he5j]bs>8@7nN-DJmf1WP1V^M1&6W*<'OJW
%ihZC+6g`6aV^.;<K0B$d_kbR,;A/_&O,Li":T2fc.>a8N,OQ"kR49M&dOcL#Sl;L3%`OSSq2"o]defjd:8:B&-m`l$VmCSQ6^nha
%A(j/uXDf^Wmuojl7C0k!0a0@nYZW-Ok(jq@NbMPHk9g&gRMG8@V#QQhKp.tm%b[qfCE!$SRh\u4p<PWIg`o'Y\lE0t>YW\8TW6NC
%)BMX[e`os?%r9nVcu+U@OXUNRGW=RZ3\rf;Hb+reUD>e<">N_3-4J8RYH$.6%1gK,!6uQM<@_g/GU3*VLJ>\M>gL;F4<0IF#J(r$
%Zu+WZ^^`K4gYpA@$"X@#M&]uU3`s;;&W;ijLTSX;TM34ZMQlPZl^Y!6iV7;G1R#2AR&&^"GQche(j<cNLQgeG*^R]]Z9cAaG4m'N
%5oUl*mrgZ_:7JiRiUlAS8!Jtim<6"#O'qO5LPNjU#oap\eu/#a)>W=)*O[@MiBRY.Jc2&0+W;C3N&!Z?7ln>\D0S$(Nc&HRYDDE^
%*feR,.B\JhfeI6YL54fa'SP+H[)4a`m-a#mDMKI_VW6s0W8V1Z21)qUNjIDt%IkKUG^/`M\0K0U-16%h.2QL**DT$,`\flKZ;9FF
%)]n^6175SV(Bk<$nF.R'mfPC/*&Yme3)AN*%1gL'4.P8-@#&ZF\?C@&1^stn8<5j<qm`QYi?U6sU5"F.(Y,EuGW<Fl@E7h^W.FZQ
%7MDc2P;GCl]MIL[)BRI,L6a@FRi$4^L54f3Lcnf3K/Ph3YBCEaM;LEd_o&1KY2'T.W4:;64<-$Pbku89m,7CC%jrtgFh!0]D0"^A
%eDL@klG4D\NZVh7SBZU'*Y'9gR'.#6dFHk<E3C:p)lV5nWZS8"iV6CN!E[4U)]k"uK2lB%fS5.`Bl!mofDo,;Gf.Ghg3r^3%b:&f
%]QW2GSqh'*33[+\#$apXn8JHbo-bLu:6\e*pkFRa],f=8NhYLk`Ne5/3<81I)BKA9$H5M&R!'/Q&''$EACD%Gn?>Z(W'0`;P0L4c
%LZ:N2>r?BcJK@!H=1TDI(=tQL'?2au\n&7=ZEh[%&74mS*3ZmDBVqtOe/4,5a$%rr#r^KRg)'58Drhh)8(iYt]Ig8-lf*Weh0,\I
%b/q9X#M@bbhR@ZHeC'oT:j;SUT>J20F*H76r&C%rb`00P(UoI+V5Kq15D#u>\`:.O?LOlhYB*?@0>9N[qsh]&`@nD582cN(c(EZl
%3-k>?ATdCXm?M0GIU<S+0/qeCr9<V>nT=3nPnUXpr4)3FI"(c5qOZG6\(72FDYA8:r5Mb2p@A1.O"S+qE%='Hpi-,=s7(>_qlf$U
%<YjKEhg[c$J+N9b0B\I&rb_P\r7<$/if?<JQbS:0F&-[\3dKN+?O_Map#>i@L#3u5]l;k8DP*csV,Yp%NugK04P*eb]f]pkr-5l!
%hO[tQl^)Nr<pP6Ph,%1jM>OosDk$RYTBXJjT>t8nGPO*\rOWkiCL6#<`=#=OT(MA=o1)Bfqg3&OkK@f-^t0PF:/:ZV?-b[kGgia1
%h><55+q6:fg2;6P*>\Z;[BdGbA(Z7XNoUBD3jH;4O3`eklc8hGPM:;B4b!D"ipj4a9C!saqZ-BUYqPS/hBT`,7S-[PqgJ=Q]8_?N
%>@/gHEc,IeiPRn1na6&gG5#4U2#i!^)Wero?0rp+M&i%qB;YcD-?6p]j'qe)p%R23p$J[,?Zbtkeb`.[mFCr\/2-r_Iq*cgkPK>d
%c*>T=Y<5srYOg%f]m04nj/4P3Y(aE19PbdM.-#?+d<WG#3?ks'g$@a@)frWuY*GPr)a@DA5'c^2n]KmifC14Bq!OIi;Me2U/af?_
%[S*Wc>5C+;i.a2*W[>F?HRG4J06o]V2Wq_)nSA+[St^>f9REplc[T7\9n-c`p0ou\\_8Pu>@1RK@W&#)mPVD^G5BPBlgr`2?e;2O
%IXFNSjON$jk^M.]g+7$L\_-ji@r\PuEMiWPlaU68=R(A*IJ#u%27iD8e]U1=fl6gf(\VPA>oDl"l0]?0h#$q:O'4d5CWDbV35ffb
%mEE/\(ReZOiS/!nmF$DJmWAbapL+[2Hg`dUZ?8:$'hXeV,*;/shE#^Dj,kWu:@78I9@pFipU'kXhBNq<)K233L-8m3eh_<Gj(@8/
%K5U1_ZSuLTddfE2jrE1>pFh$\I5nWTGO)Gl[@>e2*jfT`*=AjLBtn#o/Q^o:=h(nhrd[?G)\8\>_S(p:Fi_c*fA5KA='n*d+''H\
%55sfhoCmGDetlS-2QqSE?=*T;\YRd(Ze)W.fgF@oqV%cJn`@l\E].OshC?%pPGN:#T&d`F]gB?B-X)13s+HcW2ghq(PN)\HSD+AG
%cf\s9cSo'MqTkM^9J?ENQ%>NNE"4&$T?<+ag[5knT9!@4qY[*c9:u7XAMqf1ql![XSs9'Ai6NpORtZ7)e`5ZlkmD@l`B279CB"lU
%TpYR,qH(B(XnK]M*UN*mr6M\soD#-I-UZ5Af>s_r4ue)KO;ZkYJ,B#olIo]N=C8g`lZ!OiqeO6Qm<<1FYdA&(T0N@!rQW3;kJK9*
%2;U,f(GXig(AJZKLgX+/Y:Q'01gc+fc^soDgm'7RIlu#Po@2K'j5'Mt7)**O?ei5tp3ZE!Sc$G1"HKTCa7$cMI<FT&[>R80mq`D5
%=-,e]Yp8lkc^:p2jrZMtkdm$L*rc4hpTVopYEqKDm1LRUILU8gAVS-/,+XsE9e"M=V"9/4_4_;9OONsIB.+931%8=@48i9;oCh!b
%Sd"An*h@^6:b\YJK`?A3r,N>Pn-/%CdL\IOa<\4LW`MO40<Un_'^*`ATC8H1>lO<7fCaSBRo(Lr^:*n3o?-s3X+%f7=7PS/"WYl@
%'&`<b--b22$#@[2r8A,!<[)1EVKsD`q+hhN1IYSQ]5dh>aogHsR)4G<IdY*G)>oTt%,86NOQO:2ebq6rlpuJ<^3?`Fp*uq^"hn>P
%DW1<\Ao;Uh[u>ehc^cu[\,"@(o=*&kSUUM5qV7L8PP=5Un,75-h`dDhZXPTITD*E)D`tcl\$3JkHLCF\gQR^9+*SIn'5VI>^3a9#
%r)rl!?[93]UC*>Up6Mmu^:j)_q<O*<\''h.hLE!)nD)pmCY)pH)jq&Ys06tNdX&*S&3l&GMr]_kO+2U?h63DDr79ColR-lI$_RE#
%rcW/Qg%q2ef8cugq/Cdmjl)Xi^@p0lTD+86p2fZPaYibjc`_,r],.%\,8nD#D;DaEYZK^dqs22p@qY2og:P#iXZ*aKqldO]q!2f=
%npq`Z'S/pH2P9&.$rW/GelQ+m1Y$tBoLo-fqg/(`h;q`(CYlgsp=1gcnZSNu]46'B/u3RSc)KfG00d0RleR'&]DC-5YO@3_r5`0Q
%/%]k<D3X=8%b!$oH?8AoJEeV[oBORh,+VWnA,XY].gatRaej%Dm)K"cZWFS"?2crNJ+(Of]:\`dO-QQ,[HfoHI]fl&d?iOqL.gd^
%5%Tatrthj$ae$,QZ?*hA*k(&'23[M)V6fnun[\Gl`8"<b06ZPN=$LTeA'g4kX-9ad!)((Kmc'((@F+jS/T(JH1H;.$C$M[]a3N#%
%rpbC=1j&oCp<ENSR9`WeeF&ni]s+"Un#=L.kK]kZYNHZbIEA;Ylb/Y[\\ds)0WjA`eptm3T\at8!XH:0;kd[5T(;TqgWPXr?F[`K
%k1@M].rW=rNtYmtK+j`LUN7G9D:7gCI)/(W]D5\FUe\A,SGM_r:E7=&-TuM#7>;SppA"F:<7c$94-s;qBIZ4IM'p_3/SC]IXcj@f
%+(-c)Em0*eg@PcE6".)%D>.!;cEHJ>o+6#UI.GVc**tFEiU%BGgonV*g7TR4#SQa"<3*_CA]"piX-\1UAF8g<m?Q/Xeagl6^"_jg
%QPTOZQ.+X9Sm6WVrp/+W[IEn`nm;pBT=_E+lJ3K\jk]7_U^A_-mJ].qq<`%j@(eS_0D6iKkC.ojGkuI,m63EU0:f[8?t1^0d?^`V
%=-&:s7>#uW(%uV5kEX"^cTeQpI/IOLgig%$3Nmr#A,L?6r^M@]Q-IR;]dqFds7)4p^N0m7IXAI0Z,'t1='tE#oq\cTIQYdh5@3L(
%i#M;"XM0-DR>g\-[M32?iiPm8l,?HB>-E/L8LEr1o^]O3TC5SG<fnq&$<@"m_hjTk#ZW[/.DPlcD^1-,d<6P@C<A]3FMg\U3Ognk
%U]T')g$/tlPT><O0j^U48B<71M")I5fW,m`&'&F^:tT2#]A(b<13jo2oXe<<R^V,A&&/(_oW+k-QmoQSeM=g8Y1n[-K=_V_&QNf&
%)p?WA@Jg\_^:JZlail"]kC:cacA^f9D>Nl%q(oe2B9%"T,;Z&!)p:mh0&9dCjra7Oqg&)^s/FSqT(oa;G4!rZT`,gX1PQT/lC<D&
%:9DtTcsDMJ;j-$j]UI0Ds6\]F="f%eq=WiQ0:r)%^hq,ugA`kAfu*)e\k,PYDtaqRcG\lBnIh/W%i]Bjpe@XVB>0s/?\Xs[%f$$E
%2ik..Z<=ecotolc@dK/TNdE7tMDf<TQ9.7,F'-:VRE\48RT=Ks.m=ir'nq(aHZm1.:IrqEJSDK!GW_k6B*Z([_e@c"-U#EpRf_(&
%SfR<`O]'hUcf!Z,er<huO+*p4SmK$I?j+,*\+k?"H#E/1>G""Uk5>beH#i?Fa1kutjEDP\QZKA7_?)U(nFj$gQcp1,C?NmtBV$6P
%Z*='1Nm:Hc9]VmA4'IQ^;>CJ-T[WZ2#S*iZ*`S=eQpkN;dRB@k8CfnVP#F2h6PsYfH2lB[gOgY5g!b\3gIJ@+J.W36=<.=j*Q0=!
%405=L:KhZ1fC.@`QESm;[0,.3^4+sFIsB'u-%0@<q;Z[8FdZZq$qK/MYKNH+?i;hU@UW03"(G3H&JrcC$;VpXjQYg1"":VSjS#e-
%O7CcoI[8a>I/.8L@L)kWP8=a*4@%-.=UA9&<pn&4$(((PHF`V9dGM,TP47\aqO>%nl.fu2-<87R8=Z1Ff1<8U=b$&=bGk0"0:RGe
%E6mcI*bB?ikM1bm-*DF_7rKLps.;@N.bt$0Vn^8HoZs$k*BchUr1g/s)f5GYVr%fmr[1LV:k=,koSX.V&"c$+4o!8dHhtYUbu((H
%8H$:U/^BSk^Cg!=23.a2j..MCSM_tj0eE::qm4Vn.>gN,_\11J+&k#L#jqWdD.7gL(EQh,?\IRD'A[jED`rUA8]t>SelEm,F6up5
%I-aAuIB/=sp<UQ0I_WMlUEc>$G]%D@ej-IM$dX!r#5a50>2/J$%fTV_N-rKl>9=j&?@U@_nULk+"KB$]'Q(m1gZrcQRY@<UO\ju]
%p:S-9qL\i)/.`Z=GY2A9s&_\eT<HXnn+UKl=>_sbWm-Mu/O)8'8[sntk]'^V^\_kdj.d5.bk1efcMbHm8;41<qsrr/k4o7rGh1aW
%C;0.QT$Dag]#(`N]9f/'W7UY$r4D"`?g>m#gf7l&o_K-!pT88cmlA%'Nd&tNHuYn90C!i5*37!^1[8H.47fT@_m8[r_k6,ThNiS/
%9C4'63hJJKMQ(Y.Do15S#Miur0>%,Nqo,,;%g-+I::L*SEYIg1^%ls,K[!/6#+7<54XIt^Dk628bMIXagk8>s`_X,HQPXPj9t9ns
%pW)0PR,805N'mlQmDcXUmsGm]0Y_aS'=R>a)MJSIX-J<MDEchpN_ncUk[NV/!=/kKNPS>T%P\9)Fj`l?#It]X/\\eU_'F[@$lu+$
%R0Qn$(Z2AhqEPDh!U<B?$+W!IA(]hdkG?(hec9Tnc"=OAk.A-+meQWN50+"Ic$.QVZ7uOfki1_*M9S/,in6DMIF+^(JXZ&%kK#Bh
%P8N*"(,lJYZsP8pFS>=X1<-<0h/(J[HMlnReQ_WDU$&Y6[(&,4-RoiJb6D2C<7f\B]W:Gm^@je#d%[1:IsAM!p=ZK0R'n[\VN"a1
%_D!GfQo=3c/<%HQI8I>0BaZMi*UN2IN22((Qo9DP%]2sID["T*>"h$96:PD;b5k9UF8$It@+'*Df3[<t!R/mAr<&Q.@+#9'@]*Db
%*'"?##fb/"(a5Da&d(i(+F!k8,e+-fem[!Z7-rDhR5AVggOF-/0YMY@K4uY3q94i\3SZ(0iC(47GP]V%Bi;3ucsIG0YOtL#p.!]0
%G5bZ?,RN$AeCT*TAU<tCc:d5Nh99YZjuIq]o$]O^7s_%Ck*<"tagnu`'==pe;[t.[mubP6m1a=]J*B0mdun;gfam]Aa].Ag93%[2
%g!*d5kiV21?`Eeko4Q5_B2>pBkUWj_ShFG%j#-4Jk2`@uMrhSD?K[5AY2[D0eUB673CO6Mh,drh?DN?h32,\]p[)&6ca6oGp[HRJ
%L2AJ5hV-LA$:qmuYPlbMDW]I2Y=8`+]=Neg:5`_/p\L:Y,=%A(<pT3lo]Rah#F5>%Y<[teroZHDI*1J]b)d>Ic9XVM>EF6lB@lB)
%o4qD"\WX"=Vq77MEGk[H_I'>c_toqI?dc4/;;LJa@5Zuj#0Tc+1*q4eqb+iHK,=9t6U"BgqokfCB3/.USN-@eojbZ1IHBG1f-eB0
%`a!t4$8rhmj+XV527N1ND)52(L\u&MF?R"U9Z_T`CO^Q#e$2cZCOn]erpc?gn?D3h-sMeufj&uDYE=)V,LlPToL[@&h$6aM7SI]l
%+8%m)F?[6WP.o"iYKZU9c/Yi@A3->A9qBSA4T$F78=&^.\=/0+g&U!_997Z-'sl`f1M]XQk>.WHnFbk;p%)8?hg=]A=.e?5JkQ$&
%Pg\gMCsI6eo%/dG8f,`.?TH)tY.VEPaIbLLs7O2@XCR-1V\>Zj>l1i#f:P8LZLRpn>IjQ/_'f*%B>S\-Se0GDq"3_U9"O*5lROWt
%06bZa;^?s8m,7A<cm)3ejiI>X\Y)H[#V*c)BJ/K\-A&O;BQu/n!>7]5rL]!(rsI//?5$>/N@)W9DS2NG])VZNp?nL-:EMcKS^#dM
%gs!O!<j$6:kj/+alatp+&%DT9f@m^9h`KS"J'FRU?!;NXHMr0\CYN(NhJ^`3Q9aV81&Hok#U(\RqBgX!8'YXPql@:(q:`+N(H0nE
%;U6s*L-I6ACDSD&'I(`[`R!^-BBo-0:EL21d$n8;IJ*]IU=SJPW*9ILgnD]g3lL</fQhrFbhMf/nVL97(]+:Q8HuqSiSDZ@n$d3d
%he[aJ9\7QSl)fG^mN,`gIJI-M4^W^4E;dYrKe6^@GICA\p6AK6mbUHnDSK`=c<\$a4F0,c2U(8XFSI[qg[<nGjX]KI1*p`is7PU7
%D$o0uXR3igm@"aGM/7H(`,35@e/_S8BD\`7Wi)K8QoEXRT;Ls4k#\a8IO#&/bff)7%jK%A9C]2q-i&((<5!7P7:fr5r%7qoG*/h3
%S@ih@#MiM]o@;0(/r*;fhJ_C?I].If43uC@le?<6MJgChe#RuLEYLIEjX<kgdT$Xdg$=+WiPJrmX4_rAk4nV1S_)Y'OF+J,8$01=
%]3B(2lK_cYST)2FCZF^SZ`"a\]*`,Y'c3p\(,d_N%%[-3mPfudGF)O]km`n.c*2?ERo:oT"dr#V'.K-84./k#]sGX4a5s3`NorVK
%BbiIkfA1j`QYnt]$tJTjNhNJ<0USOtgLqn.\)fJGnZ,jdD&C$&ngqPY*dYnN][d`cWsK.md_-u5?!fe+rG_0#q[7I6.!_h.R1%KG
%nF>Vb0u<<kS$!uCFSP.54"O4TXerFMpLm.:[!,<2I^a<F+b+g3L#'FhD([`u9g5b)S$m]jmq<+jh^fo*5Jo5]$FAhYT,-,Oo*a)L
%OSSfXG=7CMK`(YZm<nGMcG!^AlKt\qJ!N\D4(/1VOZ'=KY\X7V'^U93D<:=?_3\N4Q+j8bkOYTG>s>r?-)3''hmAhZJ%Ij"o"Q6L
%T3AaL/j;Jja0#$D\,Koh_Oc#D1TDBq(W"^0"VCq]LQ&>a1fMTf_P&r@[g;^fokOFa@cX+Q0\icX:Vf9X_,5*#Fkd-rakGLdV2,"X
%EK->=NXr.,I"Id00XiZ4j/I(P++0DFOSp]+KA:iY3iEhk3Jlm9ZtW[fKQM3NJ]IsdIF=b`T4d&-69gh"?4!$)m@>T#Q:0N):JZK5
%\2<KKdq9Jr?:^@aY1sj*h.NNqIMP1dh]+l^I.9`1Y`!LpUWP<D]6Ibh9_tUl,FQ,P2)gk*d:PX'c<?b/mqs>"B!A./W+@SVeJ1F1
%Hat=KG]i[9_bai$s*:.WJX,G;P-<du\TVR*?FAPD_:tDFP8$LPQ;S[e()><HiB<srh4c08*//$I]NZ'Oe<+uFa1Fd.VB(5#FM(iM
%E;lJiB6:djFG:,e++\'H]N_aR<?0^K3i0mXTUsR$DUI%)F\'jBG[r3XoV"FCj5$H3jnFk.d='iW8)kI-Ik?P5rm77anSZal=aj.i
%*<P9hpK71V+^Ika[jXf1Oa'@9%kud%HN;CUGdhAPSirl^FB\G*!Bm4<h4hfWAd@mcNd$ET\RuH5)'//]S_RqfO(WPs%kR/%6[M;C
%]1#5!g9dI!nXI/B4aTH?k]jQb@G4S'7OJ]L30\&t]N]Ibp[!.Nk[a,76[M;C;o+=GZ]fW'pN=e'NG!>q>3m%m26ge9]Nb#99R;M-
%FM(gW9LFU0N/i+?MQQL>T$d(G;)/%lhD74L/R!N1L\?[eGDf?Kb%T,b&"LOS<n[,Wf7-goke0DCBtjJI+e.@N;pXqmA^US0P7kQ;
%Pq>i3SjK@M?+kCJNkq>CmagtG](eYE(TZY\cbV/cZP@0qp:BKiIFVY^\U/S/f00,*>4)"AdeFu@NAo>DYAMUIWZ*t5FR82d`CK*7
%_o5.6p.B`*IU5VL5CY@gCm$GT;qg!W,*'!4q#125/^SjU>IjL^"eb%BSlG')I\#:bW(JA&@dV>`,G0G"Gg5n$Xt4D'O\b*Alu#UH
%#m;r#ShFTpk<2^<c'p@*>eJb&q0cTSJ%P4BA$+&2[BRA.p\sXXL$L]cqc<=^akZ12AW]d<Ig4(?gHU0pYAUdM9;P7;4^fBlnR.r8
%iT8PBB(\=%ZL#[mnT\\XE&r2D+21ocqsqeYb5I)K:L8<jAskd7kGbr(>``=M"+8g5'4ZsNqA\=Y:pG+oSLm/hDLIdWhUt*3)d0l*
%7#K()JifmK`U`*4B%]$5,3fKbJorbGXjd5JCWWZKH*Kmd`iF+L%$f&63ofF+n?b5:9++V3^,4JA[5N$pf@:qW1jtMN*!DG]!/[JY
%AeO_7"\fn8a?^MXSe5JkLC<IK,[$cnmK8Wk(Nu3IpC$k)E.cg1I!+J1SuaWp[+8e</uD=f+QFki0kE+pf8/\][M!LmfOtM.a]U(=
%\,t81MQ">Xq<#iOpKa+u#61)W&%6udr_AOL2j_!<I/:FZq*3WG1]Pn0r1D.3l.J%s9re5o=V(#A]:"/nHYraDs1^8"!UmmpV3TkD
%CS/%aIJWY[F8(/rcP#U/Xc5j&f4N@ScG00nledq6S=?(q'2ri?:\**FjDo[$l+WS]Q^V3r5>V;pk$PkXR?d79o1o:_f,3PUT2e%X
%S4Y,XE8I"EVqNpV3:ATbSdd-9LbDJE?I(gk_uRHA4RW7-Y8d;dh\l,pZWbW1RXO]uc+]gl?f%FNf,5TgmcArXm$YkiT$he*-\IDa
%WTUri/bf^))q-U&CKg3FUTO"H8XKobY32=9IDFoD0.IWI[kL&TpX]&>Z(;2<i@[#OT9Pi4^<P=RDeg_$?sETQ-t!Ia6\p##Ra;p<
%#@mM@WWT?oU2aC^?,r:\Ge<1bgZn28g#"p[?R'Q(&2:lpl0R+#gKVEN^OGs`]eI(jkj'TUmN;A\rUfd#/:G5%l/15+5&Pi,5(!"W
%k1B?7[WcY.mVE9*m27Y=jQt=nmEI;jrF;H_qrH6'?Q\BBC;_nY4:QUKrq<hWS]rh*-e8%;lF5TQgUe!r#88rb><TT?q:iBlj0*q-
%[e9I255dUf4)F`[b.F;'^ARsf@bWrY^AmTpfD#(Krk4KPgY&Fh?[qHgq"iT<^HQL`\bCIBrU/h"?h/.LHWFcY)SU&N^&+;f5Q1S,
%p8gHnDp"kbPEFFpA4QSJe%G)(B8>7DF,93JaQgqF>`,ea<UsX$p[jQJ.l//n's;D'qXF%,+^\^iZ&,K!'1Zq1h^4Z`S_HLImV_H1
%mee'pF[&C=D!9Ae@SF^tP]0+i#MtUMRWH08)R'4*H81?6_D/FdC$iM$%>%++;dF&`p,_h4-L@/!-JL>E^%DJ%m$Wqal7-e.$MQaV
%@Si3-mD)`!bfPXnp19XTk&CK0f$:;t=8UTHi>Y2<;sFPP;KiZmSB^*j^6`tnAS*c>$a2)6(kC4LG@&m=d',Z>-*EqSfD>5&:TkS'
%b-aV#2(=Fa/Nds9C3hp$Mn-H+C32\A47s)rDsCVQ-9mo$'.^5(CGM*[(8(HM5_,nfBHqKQPg&0_-(\6Ed38*bmkWU@?Io@(&YoNt
%6]`q5XLn)4G([An:k5SkG'S^8iRFWjIm)fGnaue(^V]@8_X,`!S\)4/Uq",4-gt5.+Q)5ra5f"XbOaF*KP(lMYQU1lA:r,d&S&fo
%%6V`th+LdkJL"GKQc0L$FT98(oGXQ#s0*N:b^ii#i@,j<d(8"@Sak6`JEM(SPf5;,kF$QfDp2IcBc$ppTajgbV4L94m?t;d^$%5b
%ml[\@9_Fhk0`it"Ea\qbHV$_n./VruY/Ji:_^QZJDJ<odQF\'PR\#BKTY(JIS?+_DE`m?S=L76@;\69Lo#u1XFN\-!Y[+cE\cFpO
%U.sRN1LBm1N=/HM'q'%F`dG5j.[M$^n;LeTc8\Tl:d4$&Zb/@P@Xfn)FtHA1+<Q$Xjs<+%39?^Tf7<'n^:1r-THTq'^'q[:/8`!e
%0=.)(g7[Oig[fV4^U`#*O*O3?q0V'tmRd]n0frrVkel'\jHW[Imlk![6?h&l;!+uCi]acZ'\>).D*Ga)V9%<IK8Xj5qVXQ$AfukH
%U?Q5\*oggb0c?Mg(jk,lfE(P?B)GX(g\usaIN$)@m][_)bX"^sn<=HK[%6Whq7\_dEW'r,5TZViE9H2'Bq8],mK4sap^4N)fVA%)
%noZQh<8lYsmt6Cep<(P/q3ZR(0K[bO48HP/9N+r5r=>fb%b`l?_fgR$POHB3S2UZ25'*[U^6`D/QDr$BbR1RlW%=_8E+agGTR6EL
%FTD"Gj>WpHKQF%5hS60uGe8EiKc47"HeBj5oi[B@_/7HHf+CU=5-/$cYnl(3[KGmNeeXikREJdDChjfr&n)TtQL]cLh7.i^JR&TK
%KbRhKA//9pOQ6c0\[f@oQ7dOI@?3\IKS<r^,&%egJNdSQ<[+nni(iqXaPFi9gisBA)EH8#U\GfbSaqc6\Rjdd^h,'XkEZon9^7+.
%B8t^NX95(cDTKW+GQXI,R<."-Q<c$!4r2h*B67q[U1k$qiG]D#<p"i"I4&3L4L9A3SVK:_eIFYDgU^j(?@+l^8/J&flHUM7_1EhC
%fHcGf#+'Nb'#kmG(_QoY:c9tj'-3SALYIg2VrIiB_%+ib4RUe9p'i!X$R_aU1q,$+AEH9h8tKs!;<DI(?1A!W\_51AZL$<FE4b--
%FU0>d"3VZb7r2BoLJb^tpbi-D;J&L[ao]RX5M2fkhZe9XAYNuL0kOmFNUI,7[5q6hF9`:Y"\[?e\K1'1Mm%ADYe^e.G&g='X#TUQ
%9oqr&qVbmFh[dqXS5Lg]FPs[u)Om+amV,&+=p4so'6@!=P3i6\%[gF^1=^e4DbX-BZ7Ko2>ukCudM3T0OI91aTZt9Y%>6s7=4:Ze
%X95f%qGrp`.QiV@_33UbnkZtSKF%Bo"_[[_GqPs"X'Ks^&^J3"W?E^i8<fkqC+1YAL)<EF"_9?H:8mb<;L)M7_`F036U*92)4*ou
%6&$/H.:"bei@OeX8AbK49]BJ:%<-]I"XnH5)sKrPm6$orCofRD<&g#o6\o*"49DZ<kt^&i>O9[,lC%a@gk`'5"rT5=MSOp0AZ,th
%8kXnMEbdsO3iW6lrf"J6J6np(>ZS(-s24Z\,eD(Q@6;8b0%>IHZfj$S#cF6FFgu<N[sf+K/u8A`=`JZ8(=m'DHhV>Qi6<a(>f+'u
%hUX7(B\JBiY(Wm%1r1,3XOopI62>IUFu(B-K4c@ba&m.)/NeUuOKRERXLl\;ZO5bNq2EP6Fs#l&`W]ncljONBG`2'Z$)JXBg.Z6l
%g^<Fd<^0hkAbTbAUo?/N^ss$D][:<!0bZll"#SaZhlURGfsYj)'FRUgkT=^CT!_Hj>cY`H\,"kuCRJ\%`oqkZ3?=]*$SSEgd1;$'
%@XXo3lg*iCqpnr$X!?3JB-Csn/0b^'&k%u^-D)`IMtoJ<"NeMVC;<kthX@P6OG'(cP*ZBG_ZaF:3I_HR]!D,j[[]1aFKh2r3!M;u
%L_Q'9%23%03ngnO"0jN[";[o9i!dVZ-[Z[9>gc1H2<3n30(V6,h<_Hl,A6F[G[)3/P_YUe*QH!"*cfKSS#lC>#+WKlpY*8io")J-
%Q":B>ZZO^$P*$82&#00LfH/[_&KiXa7.@AWAm](W"bqhgo<Dn2SRfnfF?tuB7jeYS>m4E!c@c;*%fbC:O?lK_Y`W<<=WIsociC%)
%a'eK-.6-2<9_lkt'-*k\L-&T\Nkbr*qPF=FV$q060sSPK6KjLih)#[0N65r1N_cV<O]rK""^G/;U\DP-d=1[QjqCX;`+RNI7!920
%,piibo8C^]S0,uM5t7'N;a"or/L96RHk6bF+`lO/"/N$FH(@IM.$[Z"m@?s88ht4:/GWheZB6R9pD"NO^so`g7:bDM-2d\Q5lBB`
%,-h3@-%%fm269HiSc`taFt2QK6#/B'A8.eFoWZ<BAY93`ZM^MuL0K6g3+Ru<\[a."l]h0QD4DB7<_@nYMKhOTQqUcU<eX3Vnpr[k
%-u]:[lQI<<1%@_r;IUCG+]0s`B@/rKJM!LZ-;g9iK7$N]4`LK;.;#BRGarnU3'C2.4HSb,C^:Sc)#_9JZFoG,lPUq"BKAro?pY6C
%HQ!cp_$pN>j"++S4p6]k-:ghE_6Z8h?96$!M%U2C?;+ZbFot3tI$MZAlerg1E$fusd!k&:9h5Don-/\u**9@.#N%ef/]\R02g?TY
%JMV)`N,BCiKeP#UTu74)_CNn\92W\dWSf:M*sRN$/VTKX\ADu^^c%+q2..*^V"5;##YAu*P'#PiN"tI59J7TnXI+&&m)!MB(MWZZ
%M#c[B!JA6adA$6;iATh6Q+n[daB(nEl=BO=4iPW/Ar<_+C?/gB'G)P4@fl`&QL2M8?<3tdadqre`N7S]PV:K.c5-6O6o6[:%'C8b
%@)hXd(OMkE+[Q7UBU?-nWcMft`[Ye1I^][+b6V5Q`SJ_t`tXKV/W1&0,gNqS>s'*_&ng:M;E!u3#$M*q)kbg&'ElKY,iEH7MQJX#
%,bZ\$S\1<5d.3Yh.<*"Por6>Za\n<>QK=WW+UpE"Q"QT-Zof!dcY0.1/mB7u#TZ^,Rr;gT+_BBKMsr,R&4Fp+MWdrERB`W&h\l]1
%lp@T"`AS%!*3g)!F-A.@\7.kQ]XR]#.TM%k-t?SWK)qk[O:fXV$oFqFXQha1VjkWaR=U7*0=ETkPQk_A/Q#QM/@cr*=Lu*EP(ABH
%/!5)XYi(5F'1VjMAH8<?Lg_6a!Vu7O#"[GUlOCtW"E[R^#rnqB4e+Ns("($YPRk^=.7Gtg7FM:>Q5O3G$0%U5dF(`$N=tKf!%K;8
%Qn_1]>ZJM@TYQ.NR>Q>80,^@Uo5`=NR;77WPb$3p>(WA)Zpr"7VZrcr%tPg>YXftSnDQ>Y1Jj+oM?'(.A%RXK66H=lb<AYRE`.Vo
%[]!o_g#R2c9M/'&OP,e+5pIX8Es#Du0tiWY0rKk>d8lW"aHWUhA!V._@It_c*+4_u_nh8=[0"QRf*fr)q^"goOMnqW1,ES.L-p)=
%@E55WO?DhOh-k@<R"H6N1;TgaTV-gm#rTT1(n$+]<TU`>_H&8]OA7CTj@oT["Q0[P,u68#J:'Xo1\8:U7%>eJBs@Z%Tt09YZ9k8>
%X(JFG-BoB@&f[jGS!'UB*S>W!+USnSF`=V:]:)1BbXf"T0GfjaR"7QHZngMJ,!gQ`"H<gJQIn6cjf6D*K4g#L]#,<=H7^ZeGj$3;
%bZ]nU,$uT+;36U(%%[VfX*L<VQn\Wbgc15-L(?\]7`2=U)7$%=Sqr27P(fjIaL<Q1=k&8IM4S7mHt,KDc.`9i@tO2Q[:1eP',<E9
%\LJ,)AQh:Gjh_=YWm:[joF,]bZkF4#7pHrtX38(F+X3:sYoNhl64?Z;d&kXB'Ki'OKe*UH!Tl2)H"Fh&cotR4XC6'389W!`dFSr@
%j78=2R/BrbR%7[CU\K)>88)\J.atH<3Z5a[k2ofcek?U\A=U_2%uK+#Q%A"qAYi/n4il%a/HUN`EcR?==*-KbCBI:)d@!t=2#kii
%+nf&k?r*/@J7+`L-/m-pKP:-++L.`Zars4Z52uc<f9Fl5U3+bcOtS$gi+#4+#a['V0dCtp2?d)*kaIFR*NYG,+lg1r&'rXW!0Zjo
%0P?SfGK;Y$Y9FD8"=.99CS8KJ55P=-M/gCBP:KlZ7Qa0Ok9J5M.(@.udN.7CM/7Elc=%Tki<2f-F@:ra60POi=S%5n:".A5=2=@J
%7JPti(C4g2gL:n32<8dd3J6a-&nt#&.\%MIg2Ykh#qc6<GhpGLW*#WKhM\mUNSo:-M\I)`")$p,o'lioMJU>#R[9:bZiHA/)EEO'
%EYoPt+sI%u"Sh7R$\1q/<>cs<=E4m#ng3.N$<<ZlOIi3,]?rZQZ81)E;p:t,IO@4>,&RD^&U^9p3TENYB\u'n.R>h_?()3?=g,p5
%Og"01gRa[U^_]F`1_;)nWAW.8<mi\W-,klp=QUXAN&(VQR:liK+pZEr+q2#I86>B+OVF)d)*86%RC_lO"3VnqGl_#]@`ucN,mjkR
%WjPE7,dnl>SLN/RF(teS2mT$=mn#5p-tkJt9Yj8m">".N(7$N;\X=)Xh#kli<8rN#Z]6=Z&-:&L$&.:iU'C]R7Vp1CE6,hh!6[XC
%&P;m):4p'V#6/*V$T'EO.o4FmNeBu,U/PT+!%q;Y9`dIPQdg1j[1.^NLte+6M%i<*fHg7r"XfTf,V9\>#a$d9I*s>W?Z)NEOoS!^
%j?Z(s,4Vc4)n9jFI\Uk3PJ@j\#6:/\!a#S"!#nco&Hu6*ck("EcV6D973Tj-bOHK+PLTa,/:Vu?CZW])HS`ULnh+H!XnYrgXf$T#
%80<b]B/T=s5^'W$g(?1?%f;aq2_nfJ4b,H4`"^k2$k'I7S?nVlP/ifke1d/?^.-6ch4DP;D$:$.(Xk[ii54Y5]MXWJ*jKUii[hNo
%5q%eUJ&U#Mc_YI<%0YK3a`Vm$8`ng-E3IDA:tClC_$gl?b;P9@(WM\,!Bc&+0[iLC)-:2pGQIZ<1B8@[!=t.rZU<pQDdL`XC.*jE
%bZI&dI"Ei)IjdSE$#D:%\2Mu_=M=hg&!<0GFHA!T<0D&<O=am[APYd-/rBcIRh(UfaoI&e_npHn16Od%1kol\?mIJrcP+r1,D%dG
%GCUPE7,H'[`X4DX%RonZTah'h/2J[(A+#64`+2t(b$p?RPaKfC#r_rPGKq#R]/&C%K;#*7^on0*0[I%%/!(d.gb>->@+;iW!NN\T
%"[Go*7LCnA!CRf]4b/M,qP,6i5fW;J^4kN',@R-.?3.3<L-oi)SjX*qjX!03n4%")_/M(/#;_#A!&Db3M_I22J7]i&E^9nm09dFq
%Lq.Y7VAaUI8k3-BfZ4c>k@dVE+:-HcI)TBS)%9%3jGO#MTJ'4df;`J.9Ms!N9Z-o>*(rU`noYUB'd5XaM@IKQ5Rk(?d];;6`H39D
%H"(DO3)9Qo*oTOah7"45&RqOVmnQb#'HCNe!rcXF*;#n:r,@B\EWshX&/Q]:)%[(P.=rC%8(L]F('e0[,0l@N#[E7g$3\Sa/C5_N
%`2pfGI%f&Rf>,;o-@%LO>9FB7p-B@G%g\";hgST1Yr4dgK2<16XqQm-nKC65U9In$F,!&]o5t<QZK:[@e$Pll+YERi*.2kEPV%N(
%&O!a[[*r@LH%obAN`:i`]9"<a!g;?4b6V9\4op_la=`P[$]p/Z+d.I?0[Q;`PlRCU=i53RH+FSmbgWq,nV^S$L6[)ja*hsEA%GCa
%RMX17R"j-Q7Ws00]949H!g![DiNG";%*<dEXk4aZ\L<[oBUXeh9\2An]b_b`5WGJLJBS<%i<&i.`.s..?*KfW>sJBN8qX.=i/KpY
%'7&o%P8u-K17k9#IGgT(&McZE,!YEsQB0T2%"XoO=hHdm;cND#4CPtkA0W8H]L&9-^5:22fh<;4aN3OE"r>Tr`hB=Sm_K3qD_3[U
%^`hDD:;`-hH#\Z=U)O=2>$`]+7ktGa/m'Z[U\G[t=)&RifPCe#OMcTnl3,\"+dUn`D#aS\AVbPT$a#+:1;]d>Ya<ai3YhCh,"jJM
%cXP;g1'`CQ-H^G`,Df^I_MM^9Tf,Y:6fp>s`HcnlO<')tc3fNj[qVr^-tWZiR'4fj4Nji)-GGk`0gW9f/J<>Lq$:OR%7CtMq#W$O
%N30mNN.$8>h6?J^S*n?5j?;M''sGK3G5sApH)Q=Y)+0\?`,)`2WF^FHQtnifQip(Q>u>\Vj=p:u&Yc7D\sW\B7RdiA*Sg^M$Imnh
%;]I\[CJoH/&fmW2FTjO1-"&:e%O0&n#tdVRbD`m&a&]^K<>+m(p-UYA;Q6k4]qM5,,?nb?63k()@D@G/M2j@Q$dt,sKNFRhA_RKQ
%LA892>-!;"J51Y\]W;<@!56F8Q+QA`r5!r?'*p7h:*>Ra6CHeU-Q/F!>Vm>85[(HEm+VP=IFoq#!lSgbT7SVJe?FGSe[fe!)Y-VL
%aui8qR">I=.2X7l^euY^#iLi^OT<]/*I.o6)]30C)CF;B1lePT(Au":A\MOn5qXI=oHX#o(a*'1S?7DdP!J7=hINTYfC[N#DobZ3
%2,%SO`If:K'#NRccf@PhT7E.(L>]$nC+7iO,PkI(4a>23C'd)on.I&$#FqTdi%bg[8L-7Id`?N_-WMuY1Mik!kJ)X%8mtj6'1jbZ
%%5Hq*b0#j$&(:';flE\tIRXA73+>T::)`)q]))12H^9aWTuekpL.#2[cN#dcd-ad3VWSLP&7B\Z@u8,T'?+)#29WAJ>#XG*S<LHa
%^_6lm&hoDm'BnM"-pY]A6:?teTmrJ(AUY5FCm0@>JD0Po9aTG0cp3/]-C%j>]!.t:FtF;E1mX<h.N_:L+IQSU97Sk)#>34VfL=--
%85ti;D>oN)Z:9*uLsR:R[CSgl,!!e'K&VcR8$eMEKJY(9B$$,S.mTGc.,0Q+:#r&Mgp:[F0NZ6JJtO#?$7-nP/Ft"^3u6_"rl^Id
%O9KL[QirAl1PiOG/O2tC(sokPMrf]OK`l!V`0P%A&8=:0NXl+DW:D4n]4?Ep""r!?aK[QAE#SQ;+VY&sdXN(/+Y+'Kh(2/V"m[_5
%.&'!YRApntZQ+h^J=du!b_K'C$f&er@?)B1)>5'4W1eB;&I7p7RPFq<lqWe"&ro6NX%8/!aan9?'X^[jhP>FNijhFT.slrBiA_->
%Kt,\FX,#Ad1gV(Yn>6F9-l(c"Y%k[[JKIXmLkH&4_Tj?81L,E?[D_m0Fq%iiI$f/obG/54Ch1b'S8:Mm]/4GNC5R`Kbf_rfb+<CG
%5aEf0Bg]CCVVJlK=k,t7=n+$$,ST8VjR!^E!f,TpBFi^H8OQ#K%.&_'UXRhiF;0QL`>_b&'HEhr%Pp+;nop3`L_Pt<J[.2W`"A<4
%-BTe]@Bc.3i`UpBR:+2^1hH#brDom1?:N%J*,p^)A](fNeo2U?C6A:g*",FOq^ADg5XI-02H%NhpUK4WlfR)OMT\@%!_ua41+F/^
%6R)^Yb>:Xrb4gJ(9q]E"7]ZuRi$'[HKKO%?fHHV!5\[VsUQZ;2jNn1&S9c%YlL"i>P_fH`OmJY>+onBQbDE;HGb$-V$#)P_DEEB'
%Ka#]V;D]K/bM1Za?5u3>)l7#k-?(6;R%55-9o#-s\e.,:IV;9ZK$kPKL;9[_#&[$d)K$<&=>PTr_Er)<"=8Wl;pW:6#[')4mXk/a
%Q()/A7K[GTjG8IUXuZJ%CGVPu-ijN:;fq('6]%(`)rbOA)A2)gP=_<"+TK^j;*)+b,+Lt>&b/p>aClq-R#-c3@&/m\@J`m6&^5H5
%JXK8pUq0LWBk3Za.mT46K_ST$<nPYsi@rgq\HICY,uuRJ4-C.I9SPYT7-pFUL6f$4AqgSh3ZBh&9t+6/!U"9-^a$Ja-kFK9RmZa<
%?olDN9e+NjTXYV<$8,*-*G2-.c4O*"U"=WMU$PS!ZoT_;jCZ\.C0_/9%4#CUi!i=+OWp&>EXYG_+]&cr4&X6a;?\YQ/"YB"<^A18
%Cr4p'Xu_PA_YD6&B1ain,1S9UY2PN6MKO1IqNJ<@diF+Dd2U3\8#CO`l;Wm,+riW`#Q[SdkeLT4'K6B&=Pb\@SL.ia_k'.onfoA>
%Ighf<1X.*Y35F99^NUARbL<c1L->Qmj#+e7M<T?W5$7UH.?Y'Q:`p;X[-X*Bgo,sYWeLZZm`;n,Q<m9bSjmB3)4#^'GS<LP&dZlH
%X6#!Q64^k1_su+CR$'F`&;oE!`Y#j/ZQM:SDcg[3OaZ92P%&o/KI\sb_]6fN#m#<IZ`*<1;k8D9#/G%8h?$!VPeobBCUBDS.]8+J
%;-JU3N_dKFinYjgd:@_c;1`<baH<T\)77UN!7ZbM"+%R.L;QRE9aYN$8>m[eO3i/H>!C`Ub,$l1!&bT73"FW*7i/$7=42$g2R7<D
%='YHn0h1/C/12Cr/4(IsA]PrtZnIg,64i3n-j,KK3jKER;?D\?!9bWI#'g@=<h6pd-t7KCnKkuXD<*g-_=ON,J3ouJW\k:.7@M+T
%Zh38]c17^(+J6HhSq<mfC'amJi5i201:\@DWCALU,G@C/6dDUW#Z(SI&c:ifR0"q`m&PZO4iW*<M;8,aI2nu@%G.DN!_?&m)$/<<
%hHpocSLhXr+Ai`*j1K=nM&l--`=&Xlc+kLFnL5@\81h#T)\OKp)AQn?iBkKrA43b^hGNp16qS$GE7bbS$2Gbk/=LuN,ZZeAW0#?\
%M&XhkVW<P-1$":k"==oD1l9Sh"jfG5$#'BE#Os*[PU&EWa?c&9XUQfh_k]Q^eX/U&?=QRt6+jRfn6MluPM&FJD4kht[XAZhDl)e0
%<M5.aDD7qu9>CUjdG,LYK4,,fkd"ffOW5@Hj>7LpT2\al1S/_iCqij2:OZMUk7,:Y'_.alRpoI'M=V1pk^qMk6$..5!9!c`-.Tj_
%_HI-(2'\/b=4Ir9EnFB'klB?W"f8mU9*#*nfc@DC%go2lKipLcbYnUU\PmScdCZ]3gDE+;6UA)\01;2oT,#=K-aJF_-*W#6SNdG-
%P!NL.gT$p"=A%#q_,Pgp-%U$$-o8Y9P'#B%/V0dU!e4p#jc'gG=,U8_mPGMS9/i-d0<!485bY],TKVOb7#I[A_48&9eA#P:Z^tVs
%=<o(L0+8@l'f!g5Ar/e@'O1O^HOf=.4:g0j&`B,AdTFCb-XVoKL#*a3f(C6_L;F9TZj(snhQ%8=)d9AnEr6=sQ(_n,-c:39'HTu]
%$dr6u8`I3g;5"r,Kq`,EZ`OS:a;N/eS%:^5dXiVc.0rb6#9VIH1f`&L,A<+_2cT=B&RdOq>`"LsO_%5iQ;W5caBp@CY5fMC_M&_Y
%^T^$qQ38=cKRN8WUl+I`mqR]k1U'O=e,t`)6s6?cFE,XNg(gqYP]i7\GbR"aWojJh78"W($UQ>VLjK,:2HL!Za\7C;6mS't'4KmZ
%"9eZQOkW02D%R%:>Q%r'F?r64/V<,nl3Ni40*oL-%HM@QfoaaBBGVSQ:+U0O'h8>G$DDbf'95K&.<PFu^;pm9!;`Pu!0+$.dMYg3
%N_Zb)9sJ@]ZM%2ST.g$H]9`OkD-ejoEfGaVV<A:ZB15@S!u0j%d)$]AFTH.ei`7oT2Q?g"=ZH\J.o6dMG-[*SE1o$_=?8uHLAmZM
%S_,C>7@&L4QG>@hI1Y.N4I,R?3Tes](m6`/mPC-N44,NOi6qful;HVSiL?XP7E#/pjbBtb:j<\;5tt3k'01Xm]*GK>YJ!'R;!nC8
%?BUFji5Aq&C`l<m#dB:M8UdBp"9e=,9IH/cBC[:6>8\ga<)FHU,N,02B-VCm/QuLNE&'9nf:rp[+C,#PiYqsK0\O@J`S_+QQgPTS
%X-aX=!cCZ0Nkt[qG2S*3GE+gr6m^kIa[1e*%0blR0dR@'>eMTUY'N9=kbU$<\>-Imm^P<.0c]ig/Zlr1&=iQ(J;p,AW@\TE:0(jl
%0Sgj05`hFsQaL#`q1]>P,Yb>F@)J,@"Ct2=LNO/9C3^01jV0G:&9OP%6K:'O#M'E/fOTsS&qT/tP.\X%Mhd@QQjRXoib=(=7;6<I
%YGYLXp;f0<#)JA:VOReI%:pS)qTNus.>Chr9Tc[s1ooY/;Y%o?KS6D.En*k$+caX$@$)Nt,faaFH\#0SFsTPrOQs9kUQT,SZ.qg7
%[UH:H[R*Rq]5dROl7*s?H'V__W-T+L!^3nIb%lNXa4`:o?+GUm*)B_M%g$8G:Mt;Z2*Q8.*4]`S#[mnc!laD49qH=>$pl)2po#UN
%<\0Q8W'ZPSB&kq/UoVr4iH`l<7>)"A#(0(@b;')P"f`e9?9,01JG!)hiT&X4-(?'I;"b.!,0'1:6GWgQaop*Bej#7Pi$I=",E*K7
%lF^)B+Bt]LHjsKB[XpcKL2)T\`^r2al+imj/X%tp/Wn+?V1fI7'o+m/S6Uj??qQUP6#Ob1)CWaMQJ^22[LppuX4&d[T[[Me#(h]"
%&]RdO22oI^/:09`[1+*,k[jMX%'l=Ck\#JTcNl-1>saoP.ejlK-kE=e2$Z5H,6MS(/JVf>[QFtLj]R#$XWs%\/&42%5<Etq]U3TN
%q4gdjG,<>mI;n5P'SX9lof\Rn5'(>n.a_Z?`E;VZ(*L4XU9hB/htd;oMaZkijVRrtMaSMBi#HSZPeIoiFqj.H6M,&UBEt-S-8SrM
%2ERQu_te&O;,Mp[$UjVlN.T\&Ga@EP#*i`W(@JT?r&\h4MaY#flP>?&bHR.Zf.@W+#nA_@]2*'A)"O[:Yfr$FD;g;i9MHo;L[Ll]
%8LaIP(88.I]/tB6GO,9HOm%afs0"ucd2.YJ8BB$aG+'W&<5'giel*<?L5Fjg(Ib'rfo]G`g7hUpe?T$AOm(1oiI=RaB\p\L:uji=
%,W]^j)VHU'hFp%h3<fXpYsh@E<(PM))5hGu$4",>.N<2W1N!0sqf*0MYm!5aRm[1^d1<*b&kHN'=#meU,F,WLk>d)6rTgD$)VDjA
%9`e1)&4<TI!k,;u!6`l*j;)''Z7u>t=5CTnZTU\LGdUa$]"9;MLit4(ljT/gl%$T<iCJS(kCV\SLg=-?bZf>lbWG:u//-UFp18e1
%a/B&2(C:5S3f#ToQd#_i=13#YK*74uqVTj)p7Xtan&LJ!]IpgE>A&GsGTafP&USm.-))EV_fM=]EY28!-eH51,[tAYP+64n9u%_\
%U]En[[kO,K&A4euM4o?^"HK@/bRRGr^rpTRYh$VIb=<*7&I0CV@$^O=4DV\%_E_fr)+Y&?:#@M-A<ra""t*)90''b14A(>;bB)-s
%No();qTD<jCuNGiUPrsmEqC!e1^,P:^kif)<$ssf)2t%R4,tQm7.&@<^k&6=]FVpjH.0X@FHf:M&=%8[TM6sY-7N1[!)13F)7>/C
%9U'#'BQf[sH`7p6U0@;O,!3oS;Lio=R`KTWo<9ftHAJ[QMagmFQXnKkLC.'LHr^B2^^3r"\NTp['CpM/A?O\i7\FaYN,KF9EGrt,
%d`'f>jJB5nh0HND"eB(+TM/d:`(_/KQ'_1'"uRYOMC64!Z82cAOd/g2D$)gaGmqb^;C&n"qo+f@];Y!\3i"5arJqR,Rt3:uTM.TT
%W,Q;*:t09)<0,0MdIbbX!+ggEgWm_(\iRash#su2doWNB&0@2f@+*[FJ9MO;!sVM_c;,+q4A>L?@qXA@LQ3Z-[LmX(%R!PKbe@L9
%Y^>RSE1-79!#u2)Ej9iG#'5A64Agj`m?CVXO1*7!N4F/U<X5l>=iR<Y%8k??!I3M)[c#I%@G']"Wm4)-:_ThG"1q/`>a,"+`q2l@
%@2ZJiqY%:MJj,H6+chMeKb2$0,6NHMk6\7W[0M<"d:bQpSeMp'TLee%ZRAqIa<$^F2qZjc+Ki's@Wp^d'?jZYd'/4V*!R=64Dp<s
%kG]"Mc-1,r:BC%9&19n4,CL(A#pJk=Q\$YHGr$YZaXC(U`sV6EM&gPcfp"rk@&skb`68Z3A-'h=el2$$gnI_[fKD4F-QlS\QUk*W
%g!cKX33h`kq\0KL!#!0`+"N"EMP;UdffXM%M!oO0/h9G[2_$Q8KqWgJ,SG7/[-pgq0G873UG1DE;&fX(aI4k7.OQPcR1hZ>4-.p'
%U*r'V^\%WheZ0qgC01pY@i\h?'WmHnGp\e>mD.[!ML9si`$WaPO6"s[!\'qI.=9d"UJ)6fW@nb$/s^fs4gZO6.#eFAAcVeO$,Pi_
%oI,Kf$cDq'Q2Ypa.'c)A#q[^iOg6AZ"^!H4+Nc`eJ2.0mmDH`GLsIV%SIm!PMeHQ)a9-Z\JVZtn@0BP-WXmYNZYfaK?Zmm+fS*7]
%#X+.=#=GRNU;!)erP3fF)F:g;L_c"c4C/enW2*[bOMUUcI@%Oe'J`g4VZ0d%<Ve+['7o!<5fu#='Bjrqk.VG7Z/ge]C^j;iO0,7d
%$EUs+E\^;N;:No9C==?;<5)N2%WJHkF5eaacGLY2LMt-@^uRCi%5L8-L?D7GY--6-=1uPheJ(BCl<k3FOfXu<<uiiD3@M&?q^;dR
%'D?OgCk5ktVZZDJ`%AKa5!(F`0\:JWrLCB'7/,ZOh!VB]fZ/pEDV6))<[%?r;Tr\E]Vu82J$&$SMP2(;XH&uH,h6Mj!!>[gLh>"b
%_dX-#].jSH08QVuG2CeQBKNO%']n5g458R+hJ\XMZ]42k"@58T&]#c5UTY.=nlJlFbK(FTfrfe6YfFK0[:n#a9jk$>pNWHo]-91p
%U5_8MaKXb7>'Rb/</>s4@(64s#bC6E%j6.V%5Up!R:(/fE]>i%$871F0aL:G"O2^&?WX,\2n&in*O3WSoq+%.64=I1gEDif.I8c7
%TnJG"1.F6MU<#u_=p1)^7M6p\l%95\Gpt4.lo?Qp4X(r"'p0fchXKhRPaAZb8ZlhWh@IE#,p%SI$SK/F&VB,"nHeq/*D3da(].?t
%L(eP5)EF308HpYCPprI&F7Xbkf:HXcLt.[jF!RAm8$2'\FKX52EPPP!!5N89nqH[9bCj`61/^G9/K;2]R767"moe`=7;3qQ)Q0EO
%l@G_A0r8q(7^,iE!hJbDnjQ!lm(M@X-n<,.7YsCLqCm[OKX0tJkC.I]Vl^],[2%=nTWTLreUZeXJJGWL;b7ecW*0]aS3otG&t^3k
%)\<Q)Hg-4f'gL_*@2-A'%6]Z+3smKY%Dka_%?$Tu:-_ifiIsNV.`TM_"X(9`&b%8R8p3Yp33FQpJX2d:;5f.HP,4N(:AWpGQEDHS
%^^,gd/Q(2<k0aa-!OQ*ha"=:i1gd/E"SCu6m8SmAUTu9J1.QHma!3_T"#NaCAIV[t0G3*ongp]*;tLrsP,RjuAMqo*Radd0=COco
%(I`,\3CJ_JLdB7/+EfRD9&c$;[u=%\<2Oe/Hul#82&*qp.COh::eMd00VI(XcjI:;.rZUBOfKU/dW$ZcRHrq<Y_8ZSU>-*lfi:;6
%np;)CU8Y`)'-YLq;$)NeCK(aa#T;@]<e&+9"mQDEZh'GU!M6fU0N'$9Z#Fd6W(1>G.]C0qD[HfE[-L2Lp7/Z=Z`!_CG!7&IK(W"K
%WqJP+\s8AkKm[cRMl22b.9#:c$GZ01`9SU[S1+dpC?21CjGmk@$8&D(S<?OX,6<?k'jJtl%I1!n$aL4X_eQF`JOk*W/;hK'(lS>:
%3k8`1FA)5eO"gQ"^Vt%`W+H!r+-n%rr%N.4@hbG1<13n6O@VG!D='`mPX3;j<(gc"RO/A$;DD)gL>m#TA%<X=PP@O\Q"qYEVqOcV
%.LfrKP4TU]W5K(;9gaVR$d`nC\t[[je!`rQAFRJcW:DX?i&U4n;<F]\$k-+8g@$]s=IEq9p#I#7k+5Dr;5fR*XAU!PBhbj%dC2RR
%Y)`t#<FVSo)@)^dob=Mr^d)n:Zs77D-BCFX`pt<5,`7,DWq??/N@hR=95+mg#$\-f':_bk&-o`H/DCVio3d)J@>(e6;%-D%4h#C'
%*K+aV+Vim;#(#)>TS\&\$2`])5u??W=^,iV_&O4#TVVo[g93n%6ij+S<HTCSk&X%O*;bCs8<@+J1)ji@P_&$pK;0^T0UhR;;]]9q
%!t`!El8=,m-48\j;$FI5m89[g!q&ucfKIb-"jBE4R*frt7u!E]hjA_D!X+9fP"?AIM.p\HO<u*(T[Saa<-5iNXL=kU%n1HbW8%pm
%XAeA@NLgIc'@<We2B'^G-$Td9>"Ah-\6P,)FW)XLje-Rh>R-b/l3)RneE'.,6_hdjPRL:8MOZL1TM?48:go>')h:#T+CulgOdZEK
%C9f[tU3oE7]$S`ri=o.#`GWNac1Ae#4u*J,4YF+Nf$t^nI,&`i,OoEW;(=91C4(nM+8\W629KPDLkV&6m8J39U*i\U7;f$,pTbs4
%p53U2QORh#]^\8>fX\'tFU2"^AW%5'StteLQu(6U=R'";TfGrbHkgJ"F;p7j9EcOH==D5H(_NN?mjaHf85Xk"*giZNKu(aH^@&i1
%[bciDYs$5e[\f.980b(<a@+=3^ArB,6t$(TLoWdbjlANtWm28WbZ7&/S&!_iWiVRaDNSBp5[>bM&:3EW[3IZUBRsoSWd'Ub709Po
%0sW[p'Eqd;YW%,KisOT-Z3Wcp!X;\0!=Yq-I1t?I/1#`HSgRZIkBt,5,h`WkM_255UC+_6eRc$pjlu&b(#jt2EYC*b'4*F*Kf,VZ
%9^Ph'4P9[g)(A04l8!rIHkIj\UNpWOc+o7]hQe7tQc^$CXsgB4cIYpa':_f?"#-]H%3Z._*0o1iS;bn.KXaH!C/kU1GZ\HY?DVs;
%,d3s,@asK^@"-R`m"iDh3_=7JEpR'#A/IL2<(5I]9"Vt,P-0hbL0T:uiS9ZNYqe%dMioGU5]7%F8<pY\1KVRq&n-$;8qBPB5RGsL
%ZjdB]e.JL8JGL#R5eUcf,&iE4*hn%[(IZaA\VmVT8u=R"6:E9/\T'1PO<;^TD/U,p%$FGM#Qub\_EeflP<Dsrm&=5V@7HbL9gC9C
%!W9s?C842'jZj5S\u(<Aer'Mq:"1!sI<h"JMn4d.#?0\F\SrGfbI.fuau,36V%nl#Y%OH)cju$L[ZHl2)?eI04&rM5!$/(5M^'TZ
%"qDVsIA_[RT`F[(9?-&P-fcGOCT&jlb;,gO7+Jk7PfJLZ]GUP?]^&^g"Z`6G"RnJe7W3-$>g!D(rK^5:TMe=+fJp---Zlf&%+M/C
%<lqqh\daOS3@tb#U_!PDATfc2Y^Zb#LoJ>K&0l,'Orr-GX/1L")5I:$a+46u,*%stSZbXM$B.jI,HGZ$Qt.KpQrYcs-E$uIemOZ@
%^S_&Vd@q7Z9,^cl^Ppa:=Vk%.lh@-qH#8E[VNB1sp0gZQ<-X))W>C`DI#2aGOd1Bq@&Vfl4;WoB8gorj,TsQan[`D21^=tfKqk;3
%`<aULk'RT\R8tM`;Jd]O0saL%BG?*)Z8<7X.q]/JfgIe_0\2"X;h2H>5Zqk*7/>(g63p"]Na`>?oo&,s;WG/?CiWK^&?3"@3]$j"
%C4aNBOf03!D3/9E/$'Wn4\sL_Q8\/RKIAfsUf%j,I3ADE[QUmGO&]#K1?u*@>PB+@D)AO_5)Q<aU;49PeZN"-aF*);eWte;no2Jk
%"KD5e^dsHc#q0DN]f39W0+aAW6)Hu:4$+2&"Ub>iZ!^$)fei]NBZ]ik\?"9,8KnRRlPT_O)8R&+4i(97,h#-"c%5*heq'\0I4h+N
%]+UgYmM'p(>.kh7E"p*SKhWp5"V_fm5\qm-V2:\&YsX/\\!2]R:.pCl;bDNhA?*mp"K!L<L;[83^,SNB*Mc-8p67bd%i_!qLdoE[
%0q?a\S$a%]C.@\`D&0qm*;dl-#a+lb`#C<qP^udT[ZGVXFdY!)IK:aRJ`F[(&:t206BJKUXTEL9C5re3Y+;Sa$kss41Q4X0"V-0$
%8sjE_RZ2;B.$sr\)m!f16:fR^'S"k&&5D7p303[83-JZ,7HO_&SttWO&]L7a_\KdJiDaiXoQ_oC6F7<>BUB/WmWQ?F7`]eqn.ZR*
%DU@.&AKY/NV(r3E$0@21<de^!_0rg!cLCl;'Sf&;Ug!n(C6R_WT5Q0"Nhb+*#f*$#lcI5$b/&hYJbL;7oh>imVRRb!UCp6mV9"L[
%".LNhcL</_Y4jF8`YNggj^HIK!&0`95j>BRX8Yi)-</;%)p+CM!dZ'h!,AOk_=OsC2abu\+RT#=AUuZgg)D?06W1F,a^^JH&(#uE
%cUTl\Mu"R`9'lI>aXp(`A_']^(a>`bO'I;=Sfjlpql._kAoODd9JfmBFo36t^NA.q5R"2..GDb<6-E8M33[Id:..?7#sSQgb2icU
%QC!,NYf4H`!gG!Na)L3qI\<L&QA:I_]9>bCBKH2ol+TIt%THpE/#K>DfEO)EMS"Pji7Z4EQ"(f1dh^Cq[Pp*Fr*6sM&XR'(Y"S0C
%;Q%U:J;:B*P)u8':-XM#G:_^)//,,k<4e7JNXi?XIda8';N]cY,Z,R<ML8KAaJF%`KT$0noPB,U65VJ.O4?aY_!XIU=e9r))gRa?
%,lg!a0UiN5O36VGJD-]u6c34r`^+X#_:&!pG#>8Glcu6oF;h[Z]Je96$7,r#;fXm[dD22#;_q<,fYu:1Mh'2q-5_WF#(a$dK=k6]
%Jd-(\U8!<_^g>Rr6OQg>q"nW'S=G>dZ;_NWGa\^2.mZtm<R=q5:'W`ZS<od4h3+SW_r<p\%2Vg<JWi$(]@bWPX/b/!.cj/Jn6uC7
%b[^n*eqfZ(fM7L^B</1/eTd)/2/Q>2+f.Lp,HJt#)q1%q#ZDWl'AS]W$FgR^n3tH&2V1h7+kHB&4K`4t-*ORsm0J7r$FP/X,D=/!
%*C/2=!@5,l"1@NTOH_87NX_`qHl]Yd6e$73\rk'RVq;l]6Uh,RTX_6k)1jddE@o$Q$<'ZmG^9@&#+i:T.@pU`EI4uOJ.+<J#YPcc
%NaG6>eMU*t.5PooHX[%U(JeFFJ<!eE&:%$J/>3apB<j$7"B8^$RuX:eM<m%JlQHU<8TbgYSYS@e=a!6I'd7c8^E2L.dVA#AJeqOt
%a'5PM+kYFL7Qel,JoD;:o45=hR(_GdEI>lEHV75hJMgH-N,RgL2mH[fe1#Oa\TA;:k8M$b09gZ#o8A2R`&'g=cAjdAaHC0NUrF@f
%B1R*A!h4/Mf*9Y3-Z]L.RGq+:4DeT$L07"$A8iHnJVYeV7UK#L%Lo9//:0X\4q1'pJP,*lWEG,NOHG/3[%Xp?Knr,tfr7Dj(LgrJ
%[h%hH0=$,+Ubcb?AJA3.5U/uB&\\7u8:[kSZ;@fq@[:[P3Rn<7Kq@.ZB7jYSm"2`u0n[i0?4873;og@3P9U0_+H;Q]j:E_9U^A$?
%%\QKoBQdd*7eL0SnABoaUA7W?XspHf=5sd"*Le2!-Rn<n/a8uC+PQo.,$:QX1n+^8/m)"G.*.(q\)\Q^[c&L4Qn&p#2R7TWp?AP)
%8o%ZtF!3gt8St1aC_[n7;3f<YF[[l6;htJn-MU&"i!*DmL<pV8.lk&.Tb+T;,/p?WNFWNZXWmIqaFi,Ci=M[NCqQMJUI8opl-e*C
%5[Y(Q;H'j5XWcj1"53;N?o4_\F_XE;<4rr52b6CIb*TD5T#aW1,QJX<%?V"(8n9+Qh@jHl-!!%p)9f!E`'Iaq7"Q58jqF4DClj77
%,UI2;[/_[WRQ=.LkV0*cXi_7:KH^Zj:i&"Y$;orKWb@OKQ"%GC0QF=u$`0-q&NVr!<D1gYe&ePFb'a7,U9a/#FOBWgoG_.FZ<J"2
%8kdH+Ys37W'r#pldr'aI,ot?j70X9dELMUkbj81hLXLrk$G,Jp?C$IrflN_e9!a^l%f<)UCcHGrca*"G=)U!7Hc)FH,PAr6ns6lF
%_7ecYTE6N?&<"%STn>;ZTp,u6QHt+O@)k.8jpI2%JZo-)-1VaH/4=;Vkki;3j/CBOfup=MX"A+kggpR7]pRLmCt\!*HS7!Q$5_ZA
%\F:C+b"2(JcT.9>e&BagX=[0'+rgoGVQ=6H:_&0!VPmrq@X<^9M;!Xp<Z2g_Y,F)b!=d`T%<]3?@YGpX/RZ/S6mZdtP<)_)UPc_f
%jOTZ&VD"28>i:\bPQH`RUF8&&p5ZIl'=uJ1nNYCJj@"8gPW$UdP0Tl)9X/#cg:(0b]?lGI&X0<T8=UihUV9PHfF:7$FPKT=Vl6IF
%(4k!md>Ctj.?"P+QMm(Z/@'Y[.%nq0Zt$,3MHf#;r#5Y_Nta1lSP*E&85sTQ;9s=<fd3OfJ>6l3Xsejk'hfq`Qh[@B?^Z08NY"g%
%2R`\3H5V6f4NpoJj2J_i\.-t+6%%:KcqIGebo+888\$/s4:0G_AVtnl_dcM-\RCU8XJ&rH@(M>_]eIX&%NlaFM,4V(\tVfjdk]mF
%RRp<r7(bCCULQQ&;\=^X9GL)4'0od@>D/fWMiB(!"O0g2C=*Z!BM(<Qrta,/5oW^f2%Z&#84hPE8"sXQdSZ/UKNi,TpnSp6,)Ub<
%*L"DZg1Y[/P66Br4Wl_i`3o>^FXC(603&g[/i,5l'L<^=RC'2g#ecX3WW@Zk"@U"AD8iu$@kmR_/W0BI!+$jZU#%2@efm#7R4A'D
%#BnoBY.D8GFJ4GKq,I'OaVtu*o3uu>impOU=jO?P-s5ZU#Tu`Ec<O4l9.LO25ns_8k>@m_?h+gZ5RA%'AH4I2PBt=d$31gQH_Zfh
%,[bFJH3M2e#oLAf9%!1)*3p'4?q[dO@V*ZdJq?mj,c+Fa@OsnTE/Kp4K/55SkYg=XV\:oqKSF6V8K<p!F/teGeoQ^YC23TsjX)6d
%.V^uj!J,T[@g&Tns&P%'<bB?'*=3Q-#M[$8a6_!*:/;7MAA24O&C1H[)BqYD\N@crO\aVs1;ElR<_'Znn6US!5jm;S@*O,,0PQYd
%.0E[+W\JN\Y^T*!0-Y2j<]M=?9/Eh$qBd[]2C1[="B2`lV%W=a97mhrael/80h`2[Pk[El#$XUUU1K.S.%T=1%SEau+bkj6j\TNV
%N)5TiN"+kY2Um&.6:%)eaRDEZ]@'N)2f0meauLAClN/oJ6u5]MZ[0]MMFEVg,O'QR!bVo32%iPqW2iYN-^Cat,"bQJ?,@_9>S\Wf
%4oj(99rP4WKX_k93nI)],_B'/?*7FM;dL9(/8Yq9=u8O>UFj3NX=Y5NJ^hT_7DrDfmYmeuMRCj[Wor9Y#/[2@aW&qf!hh_e_nJeY
%lfMu56B]jtdo4@u>m3,6V(pphC;^2Z244Qjd+qaHMQeWGJ$(P,ogR+f/rQeC"sgP:QC8)X8nA#*X)1EihTL(Lcdgco$CjLQYr<@)
%PNU"ZFI<TP(a68CP*qCBWFMRjY*sbRCN<DO=c6EJI.O;n+'<&=ZdEN]6;,e)keiF!"r/];nnb\`X?^3nU=<8>Ml!<=N\(6;F$`">
%\E(:31cO")Zn\ck'i?YHSjqbNbhPsu=Z"X!R:7*\TU`%ZP734c,V[tc74r5R"8h>!=UMR6U55V>o'CX+4X_^BA8Z.$FmD&]Si[6n
%@%a#l:;_nD&4Bj1n1_9RYZ(#/WqN3,))VpnnVi((n<O98-#Xc=ns4*8Q@Z$f*RL%N#2l<hMc_:-QN/j2HZ[b"R:*&OB,!g.WPH1t
%LY=.$ZYCb8#[Qs=-WJmUC,N67`'A^mE#9Fn9"IF6kb8-B`[0tI[6_=uKUaQ$]Hn70h'-YA7@)S#lLImkM)FZQ2A0?3Z'u^FJ,r8)
%B9Us\&'<0So0]*a25ihJ2`8`Q1QkQJ/M#Vt99^OZfLY7kTSk\RK19N!OTjQ<(0_+!Ut"\VIAkY)46.22jIJEU48"QC?'V/@$,n$L
%V]f9<SM!1nb(H\YQ-^kQdtM`8169kn;qIrf>V'fIl3C\@1)Z[B(Lg\b@4MAU//1Ps'(AI>iQ@.\_1FL18S#%h(5mi&MaY%DW/Bsd
%:g+P6Xm,'$>j.Ql?->Z+f7o_9TmT-H'8#RF9X/Y.L0HN5e;UD_'U;(q)]srHiKT[jBN&%n:4a[6-k]jc@dR$PP41Bq>qn;r:(,F:
%R[HS_9+<:eF;_pH0!$PPb;+SW'i@e2?2,\>B1(dQ7_2NF.__tk0d.24)%^6g)AOQSaW%KCepF(/i.2)&N5gmhVR&`u\.PgVOa@_V
%koQl/OP3kFS4`$%O?<"U2+hC!1pQ'^WfXSb]Wr%*@qg+Z!c'YA`PoM_WPCZt9Fd'b,=#bm.3Nql_h5`:Ct8N@bYl<C'p'YQ!5VPB
%--)c3R8VKWFr-h.=L*(_($J#A.P"e`)9g?m-icuC7_2!ZTQlLW46VRq:LS?^%O%9^qB,f+@a6T;QmoI74EZ[Q4\3@pA$,1uScb!L
%$JLgkj01sE>I1ob^^C^._J0o63*gc\F)EH.PN96Q7[7D7FK>Jhfp8o4OWf]6M7?6%E=E#FL_UW-`M$6:W[bh<J:$O-$.grag#;oj
%Z=>6PiG(bF=p[fB5o#M&*B0H3+r:$5&kKDRB9\&Y<)rQ'W+8dP3L'06AAMGs)k(MA#Wd%h#.n@+bZ!-lNJI>(;5&84,;m*2#\YMN
%H1.T4dKc_&C;ept*=6nH6T,OiLH&i[F5F"9C5tah-,c*4ZBV7TNcetrhK]G.!''6.'BT9.\=*gr09TBu'i,RuQA`_fYZ<$B)Sp0o
%^ddi".EUnLr!@O,.SdRX!=FDLouLG,b/;>XP=:B0ZZd)*rYVY8THp<eQ&7X'B8orVJ\^NML2(WQ8]c$aZmKRcjfT^eG"fJX%ol43
%b)mR-j']N]%@9tPNCg8QRj&"<Y$ESl5oFnEE,^tfB2__;WXUocVDLI#0L9Zs2IS@ZYY>Y%0ZdBR,F.2^r`rXnKFX%')$FU3*"gAZ
%$8.L\Sq)Co!)i_!!IZP'J_4&lD%=.o=ok5&cBbqN')8QBc'hJeY%#+F("g6;fQHtM'n`A-d%qe*?SQ5hr]C-E9ekl&MuV>HTQL6u
%UJOL%R3S(d9$SZp"#=eKIj$eoPK#f])=#P>!Y9lh4&l-j"%4?7EhufdL$))6S-h#l$cdr0;U<(icD^GZF`%r(`G5KUTjRoOSMN,f
%UGa<e6)_E;i9NG>1,g8b_C\n>RNs,Im_V*jfP'oHBo#-#[V3`GDuF%G$>ocL<Tnq*.Q$gHaVsh/<M:R(+j"2nWmE.2#$1H4]dWM0
%)cGOZq&UFhV=CTJZD,\jDo2OCU<qA*id[aPZpl9&9t^hk1!m24R6\IhF\+.B%;%!OPGV%^k"[B?]75Rro7m.'Zp;ctBhEl?$9(ef
%+`_B-^kih*qm6!5#&,*7Rg[f8<T%Wl67RA8\OH[nM!Z,a4i9hjBO=e+AR7L!5jKmXqOm5-gXieoZZg=h42m$P<oR4'(7n5=^?NG<
%5mX=M&-Bmp0"\@%8[n3gBm8JHr2:N>kA@Fh8GAnInI';Y&6f:_)ZkAUJt8qu#hk#Ink4+3f)bRg7LSZTN"3M']7!mrK=^5!^ss%/
%I/%I'H.QF]aC?D537Oh)"cDf%_!P5Q/s4F-;5FC-Ho*j9$B-8\@jRYYqe/R[ll384bNjGQ*B6/4cH<[B[>XZh%"]l^!E0P[bZER!
%O1d3uOXs(er0@22.G0'q_'[u';+h&HaYr;Qf0r,-c(7GdlkFWOV\^2MX!K@AmFeJ:-u0jbVW,YJ+J>MdN9E!&ph@g6G;[Vdc%RX6
%PJrtCd(E=a*;+kabB>"A=s^tNY3"KBA2X[;j,jtN`J*@*S5#;lRcB;<<&QgleqJL:^_r#;;;$S%TE,gp$CN.2#5/e^QS1HO3ST9I
%9YiUBa7AUW4]X[+5kRr\A&+Z,BT/CIWtB1IeI<:R`nss0a#]uGGIM>o3@Vp#d9(mO,:uk(IE1<%g\!(%baj.M5s)E=V1.g`!4?6`
%Da,03%,?7l_B8gQp&Me2j]Mo^`nb4J=As@fD]H%\XAfXMZQ1g%(Wp;`iMU^XUF*+ZH>AK9eEa6c^bc&iID?,ZX7hCJ:QPW9mc6/(
%#M"A9p255klK\&c'RY4`1&+!b\YE7d_JEk.Ld.7&!Aai,`mK!U>J:sHgKK5+_@3H*`_.Uu*o5]2=n$rO`'<.!fJ]5T)"DAW(mV'R
%?4/5:k*+]mBRD/jlLrE&ICsF/@;4L4Z`Le0f+WVWlP%hPTN'djlZn4](G+\B=[a@;e5CX/C'OOt@QhPpeJj5NAF%=34BXVt:pp2M
%WcX6V<;.3D[]E0WfN*'q*)$H%"kG^%VUIY+Mg+Hj9^WieKXfWU]\prapZDXe6q3J2`@j)A0!frC67KaV-c`_^%BFb>leNBY-eoM2
%4Njf/V\`j,Ep(=f7elothCr!V.`Z"=1FWf"YamUZ>f_FTYZUM/l*ZjQVdD@76RWr4*AG5pbil6SgsT]$VPuM$c4X#;)aTC+]eE/d
%71R+^C[7U0#sMD-nc95RKTu51H`lXnB>h%ce]\uP@Us([bOXcA;VDqcYuu<mIqsGG(gK#-]R_!=a)@jB4"=pE]#R&;7.M,',C[>d
%8AXA4=XH(AG)BFd+!AuZ]\MnjZ/N9V8S;"<*K59Tp?UL/$Lup,1C+W]`m'."[NuI.2fS@ie\d@WMtf5M>$Nuj9Nh2qRKIe>@#Ucq
%]-?[_'*73QbEH'Y).-7b#o]K!_.n,BBB*QdSecQTW:^6\r(6I)\8_%:nE1@G^:5&\OVcdifIp\H*.?Y!HYC8m=1G?Pc%jBu`cp^^
%q,Z&$?VQZGC=OMe>ZG>]0+cM8ER52UioJ)cr;o8dRteqo\$3O?S]"t;V8m5J.Cd',Hec=0J7\'I!IjlOhF=jDBRFarc)pp:0RUT!
%LBI'+[Cp?:(Okuh<6FUjBfZU;5U)HCGBi<]XP.E<_5jQg^\:s)!BtUrK0LI=$[2@;r7:hf`jjl3jS4I"A,k8pf7Vlio%+1pQY]0E
%!,9_AI64>@1"klIBl7h+28)/r4,BOA<soLu4"MTcnE1`#<@1X)O'fN61I`.Qe:%tGmMffbY[&/1bhYi4@d,U[WTB\cJaeM@c]6o3
%ot^5mhS45.:lNW'O70"AkMq]l\3m2J'G`q5ou(hmXS1&fB6Wh>5\0fK*[($VohK^;;up]=1e=@GMEd^]R$K0F`QuJA+.qcTa)A]Z
%5Giogfd/HEVa3I!eO9ru3_ms7()jGjI<UjW<7!5gX[hIf3n"IP4J,,h1=G<]h_4Y1lmPOcIU0a:@DJU'?SSS@/AK:L=`fCGA@^W$
%q_p#i%6?Vn(C]21?3@fQEC#`kX@kkOJ"s<'PS*"_+Oi4^1L(W7=b@WL3Wh]V1U4A6obOH&W93(i0(rH_OnkOPdSX9_g>`,LLk'F^
%X#>:.+h?r^HE[OgJe6_'>n>1Pk^f1jh.Z?,KetY%WGWedq8iNm3uU&uW0J;;mG,P`RmUfi$`;]Aa]9Qgl567Z[OicK#C/$.A%X^W
%SB@_^='eZ3@CViH@]Afck_+!FZt[C9C03Epo-eXM=jl!m8s:'?f?!m5lbn"*n$4FrNB[,tR'#AZ.e^h>D`.r`)0L],0WS?g^r"?/
%)&9[uB5>9_;lbBMW\E,bHJRc;gtoE&2E!JAbU2AiC.[>VmVg.[Z"VKRcWqSfb@PL)CeV8?/L[7+2>aY]<"m4X=L^G0&mPb@*"r&`
%<sQt32?YP']u!TC=hj]R#pN9B:@6&9B=U\dqR'TV0nC$L"LWt0dqElMN=;5!@nLKG13,[OPKh]i=bZLn,r=D@:Y1X`CVk23maNi)
%8MNL^8Q("bHO5+,.:G.1\T-mG`1`DC_^hpSJOme_Kkcp@;S[gtGj(9o9q':W*sdK?6E>D+FO2*eZ[X3HT1UQtE`aBdJX)`E*V)em
%;dZ6uE,QrTQ0#JpXLH;'h/**k+A0k!$n2r1iPEID.aAi,*-&1g[TgKGhPT5K/#jPB1E!&%9O:u$!1=3j*H^B$9%Y&`-4+G8gb%R.
%E"NF8`8#1\XeucT!h<j`rU/:_5Ys7LlCSEb28>/7UALQR1U11G]C#+)n^E8U3n^3E()qLd8eaUB,3kBh%QuKOX2C++]E`$8TM0GL
%rRaa;Qup:'2/fPReW/_Z<?/C"&caMQ5).E3leT88j[@5IdOFR$Cs\JZ3P`m-BY@aCA%b]f%rg/H3:2F)P&2WMhS<qFa7cd57t#`G
%[$_2Qi>MqL[;&22oW44(p01Jt!8=l=1$i2r\/Muh9Emp+lk3n5,C74&R2-Q*89RUA#^o)GQECV"G,cAR.H\'I)OChq..5*N/:<qX
%;[NMQX+Oka?NuB=#efAD=b/'OS3"T:9f]B6X`9V/?!LM^HFfO4'?6-5,)$t%D"1>+Z7E_Z)+oM<ioE-;?Vs@r$pdSMU,pJ0>CYuV
%5UC^R@['t'+HO>64:Fm7AZZ*^@ST.=SHZtn'!M0Y)n!qmONB`.DU[T+']n9EA$+T<5S;uG""\E>d'A$3#:nIoN,5bZ/,%T-X>]"^
%Z=a8&e1kIQ:$0@R4bq?7077/I*36^kL(7KaQH_8j.M;uaWVPl.;OV4uPEDELOuZOo)f(?)/8?"(l!CW_/S>]XqnWXQ=7^R+=R?.U
%+Yg<A(Y`TXGt8=IlO[5-Ci@)dUf8!'F_&Nl5:P,BXRRq0lp"SugjkeIXm<'KVH8RkAf<HQ?XF/l-F[1;:Hh%:nd9YcO;A]:kRqGe
%Ad9%LfRhZ8:N'KOQ*OIb<`E<qp>g>V,*sD/IdZ_uQp@MnLkkq1#U3kbZn$%:9`TD*jNOMi#n'V8ZhSQ_[uA/oY8#cHjCqOAVm-d&
%[%P!b>o<WL;m$LK/hoX1Se?$r/Fnci11.GneS]J*mW;T*,jirtL(!-'"LU=m\O<gef#D$TQNPg-6S4qFhc<t$E%>g6"%XR9DdHrS
%1C4Ql[QMk]1sIZ6`4#?PP9uW&oU)(?,o]"Ih6>"\Hdg%D)J=&-IBJ\^BsUTMgA%X.m(bnj+8tc;Uqnf#fZ%q5JQJ]E8hR\-Oo8rJ
%Z+S6M3&51k`C`)`Il(atR%?b<At[9dFqE5[MH.=i0A\SCOk'Q88Nj&kj>WRuCfA9E2r1h+E\1Io+2&$;R#SUI<-eZ/4DJ6F3;q@4
%U)l]r:hE-2$8:gi163W`frOS)C0;#>]$;2b"3k:jTA%lSNagFO[r<f+TWq<^a5,J@fd$ok_#9\bItnnK;c/c'C#Ca.T\Yh1>T-.'
%BJ(F7n-\TrZccJtH3d)McK\/Mo,;/1_)80CJiD!KL4+"MO'Wo$YPoU/%&&XA5K:J?/Ak$+l1/!8;$,C4',Jd,P\Nf(_nR?L`tk^.
%1&^E=pkW3bQ.L*`?FP.F&l@_Z[=akr5/kb7Kq)t9W`jXR,n5'H`+^JAe(O)=6tY?Tgn4,P)#(K'P,NGi`atetE_OAfap]i^omD<G
%p2*Hd(RA)=;*e)4N<4u81`fmcA/9-+!+.N3E%2N%mrbm^(&YP+dCrZJg8#"93)nQMMR,k`b;P@TS16up)oLa16`u4WKODSQe,P4X
%(5p8C0AALZ*[V7gU'F=.[@`ZB@egUn*CGbs[kYfb(X.FdSu<lNLcY]fdnW15g0T:B^Ge];4JVs.-7$rjrRi#K%GWN.2*gV0RmumF
%4nZ3oL"Q^)1gC;K@)M(YdI@]nHsC;V`e]E\=s)cQ2jU73\E.C>q*,)Gdt%Z)!GqY]NaRbfSlb,Wk&S<dXBbn66u@I&VfoGBR^a<A
%h'CE\ebgmt8LjY<`@=[c9VpVr*XV'mLi09fOH!AXk'SFuOXFZ6[2r^7q",$odcIrV;`STsf(P9ZnWCf-bfVt./VRGjR#IKa\6?!@
%"(/@"c;1Q!RX@8`-^[0rSJcY(mo^sJM6hdHn5;ALBUDo>_iarY'*FaP*&oNQ#1hbk3+.RaqRV":8O(g>NLtP-pmpt9&#>.?R''XO
%T6mJuO7,t\/mN]JoLkO<8t[tZ:)?L2+u"P:]jDt"OaA&;ME6=k.06mL'c&L2bK\iq5gtfoRqQnSdi"lb@]'KkZU8/)96Xl'1/,gI
%&!a@s0lFEa?+-H:4Y1`:C*(Z3gnqUW/Jum:/W4@#;ACJ`+dtZ6*Up`u?OAn2c,Tf:]>Ar0'Q0[hd$dJ@,);H0.6oPOo6Tpi/'NH[
%HheSFF&HM583j![+':0G<KBMrc<!])0bF)NIIU]u%G8pm(]r%jHIclHKRj+pS>semCLHogM"C`ZmdLg577M7njaOq[WEd$E#RQC`
%^hUn`#?=6jPFjUR"7:TBA2UB;aRuD&Y2KRqKIZOIAZ6_$g^_k$7QCWF%P2.p'[@)`TLs&V][F7&oO\Er0jg[Y8:*A4'naJ[X]k?H
%_\PLK?6Y4^`m?f"PijK!@%W`tp:2oY&%CufqDPYQBT(U2S*smQQuWm#'&.q7,^CT2-q053<]#f,Se#<rne!"F9k4L7XRN;=\el>9
%bo;s1pT7<mSf(=_j$WuPej*dh^+(opAq<Uoc![1OgDVIM$H_iWC<KC1*m6cl<U-c$fpZ*i@gbPj4#Ji+?uQ`Em9#VW$2ra?IT(Mr
%j?nZUZItklc&sJtEo1L'JPegN?3(Pg9'\P;V)$TkO4;sQ\BU:=&8^$6'!dtb,d><=`[\@W`O_#lB7",dDP:oQmQ2s6$sm=IiJg9?
%BU_'#)dR+W7;2t'Y3c-G#j8Q>(GJ>"cO26iEXs"]@/f,ESOOQ0H[&5W44->kNHp^t)bp`YUp)r#L+UDT!]HY0NI0hS/$eX]31Rbf
%WSau&_$i#FJL>"@=E;@`()u.)Fmca*gQ.b:XAeQ'd>*3j.U1d1pJ4Hm$Z]ETSK1X(#sqJM!.#9k&\fh!3g_hE#qP9C%ZIDu`U1np
%eR/Vr!bYm1*.`2te>Ifkf0W\93bKr_aaF]UbmQPgYo1P,X,2O]9f86-f#kNS#8cd7jsU^4YMhSl^hG8VE)-^QmfqF6GFS3<HK_@A
%o"o0!VE/L#Y5s[IiCr9^7c&7o'gATdn#Nm"Y<'hqH6H25(ATcq(iHY9Qo-mWJ_H/bo9]`CjhM$D&m^k_Y9([p,HDYs3!:tAU*Q"s
%eG\iW$-<;Q_n#Z89*56I>#n]nEkFXq[ua@!rPHP%@j03?cJ%C!gqG\JR`&;$HLct9<Vp0$@Ha;fDjt%.)5t$_.3$\b!*W5Cr>b0U
%JQHa&EK2M4?-o6X&#dE4*FS?qq@o"=`s5ZX$7;au#/1dR>q<`PB)"os4S"pr?=ZTVVpkm:/%jMaqYY57$OY)th;ae:Vm6_3RerS8
%/IsU4@e:9-<-]tWr6>A?_\NVHLp=eBB#Z;[o^p_N_4(<P9F;[We'hFX@bfFB=M`Q>M%D"OH;MEDS4":j#A$\MeiVbO.)t(\Nj=kZ
%.T3#7iaIF5o`.g#brk?KS*SU+U0XIM.)=njV`+e/!DL(`B<!"df^nh&4GA`Jap]K[GtieNL9Sf/h/DoL]k1-qdF585D^q,h,?T=i
%5UB"r#6Ia,:YN1%HJ86k>\fO"o?no0d='%.'"=,s%h1'YjLeT-mf8%LQgS.UC]JiGaAY$>j08`SLVOMB"LMGYI=iM4Mu,>*8o9nT
%X=YpNW"&+).3lkY$qSa)ph81sHVm(6=NSCI<5%K+91f.C4Ug/CV8^d*S;Mr`H46n"5rX`)(\K$.fWgH0E]G=E\mI$Ye_HuVe1o:h
%F,a[J5-(mC>U3-L`UaB4"&>#jXu\lPVb]Z`Hu&h`c8e;8pgUIrkAmqiVT+Pn<g.'>]n+"oW2(om?8jWi5+G&qT]*u6L)>p8;LE5$
%*Y)hQ!bcSK0a<@F!QY65".Z\^N2??cZKa#cnD*_Y"Y;<lWd9-F3/LrVp$7$D=SpI"n<34bk$):g_Q;@lUU"*$#XHLOK!XH^@"8WA
%gT%U,\d?CNm2*bh.;gs']kQf.&Y>HJYKb\:GqfZ$c`IF5orL]aG<j&.$irMGY[CQ`Z7`OV:Ydj:;mXY4:=`T8n$'u[Js%Qn3kHSo
%_I7a`rjF/KrBoL:d/og0B6#F<er*bf+b#D]dkInK:N\gY_Q&lUT!"38c3P[4\78;n<-kiSCVW?_V._QL0n'D%g+m>L57N0\m'*'h
%qjPG2>Xg5B?L9d3E%cd+UBS0FNXLi7e]ih;'.mo_C!`<'c,Z6jSgOUPH@W^&-t$(i"kH9]qL*opc8II8jj<>MN(B"++&!^`5#ZN.
%DXME)%F?iuPnF'*-)Kp2>&miaE5YCY1;<)<ah"a>UqrgE4S!lm^td5Ue/4;BODO9WCSI#g8W[=]f*=Af[Y)LMd<=&6ol00maJ6OB
%Y$J/MZE*(k[Aqt'6bRr:Ka=uhLXmdF!VaPda(=DR/_6ffHjc+%Ye0h,loW^Io;#CC0m[K4?\?mS[udKGpX2m+!X)G-GO$6S3TLd(
%acOW;WGE3`k3@7Al$=#,9"@8(?rR2^74T?uK3(._`a]WjIc*Y%*j];'\\`\jX4)!gYrL)!"L(E;SC:=..Hko-pb3Thb^-p+?9K+-
%J$[rhIXM$60p:.r2#'=?4@T",^d?>PV\Z@#@foInE]<f1]JM[tKp'<*[[/m/]k4RI>I1=q*dX@__Om^`^9/)<(rDkQ.YjAJ@h+Z>
%mloi:1Y;V*4LaE6<e;pb(r>pl[U3F@#(.^t$cBccI>V7t*euFY]:^m(oZZN']Q(%p?;Tb!JmX9+Id=F2df4+)8rQJr\!`_l,5RZ;
%@pkV?eZ-@P1C\,FE6GDs^,sE\4dP;Sa)PK8'&\=#&L3.k.eWp&FsJZ(kqOTgC<Ij[[`BA(A=B-'O!M8Va.TsVN@F%4X)?_sb*J!j
%pDiIaKn<mQWE*q!Ws@&eKl2:oNY04XQTtH)bUsJ?O,'DX)Bhc,mT-Sq?KSQhb2^:a8RfG:@YR^)g>dSOU1Dc?7hSq5<7%l$H2V-*
%8m!IQANm*ReYB6ur$mZDb<Z<E5j0<M$mG#<fmGpg5(lMPU>&W1B<\i+@(Q'CDK>r;b$]a)E]V??QXIeT\"SV>Ne#&MjQqInk1eN_
%#h120C^?r.3Ne0aW$-4kYUk7XXf+urj4D`#Q1=^dibR#@+p`4I(EP`KV?JSMY&LhKKlmN3qRjK.K\.R>]/'4)1CC8Lf>792$SkP@
%#2Mg#O23(60^K2#MF*b11!(-6<7fi/In>Cq@4L'M.)Qt7,Oe"6&A4hpB1uoQiR`qqN%criE&OS.73Eu#cB1#m>J6)tnZ'[$mJ5c"
%gD?Koh80>,Ha&=)?]MTAZ8WCsdK$&2*f+kICX#a;9";[[AZW/p*&@]'V$E\u'#IuS_)4jd*]6>"^tX"i5'1ki5?+*j;1i:_k].CQ
%>Z1B"DjnTq3(e:`J6#c^b-SU/j)"kC7R:"^*Q2On4C`7oRai-i7(!7L2[-^'ARDdF1/P0rR>7Y,-F/JSY):*^&eD_UfNBGp\o*4)
%^'(Kc`fX@[!VfFH:KDje'$m\20.B7SNcg#bM]_>tMET/qosU88@0(l"FhkH`26r)IT0BVW/mZA+FkWW;1N4qdaCJu:/FBBdF$%+l
%NhlPc.!94Ue[bWN?"`fR?buW(knL@2C*#3qU]Y-!h*]:^S*SLlL<":*BV&7'>>Jt$NYU:'E1*ep52bfrDJ&oqd[)*Gc0F4a+B/P2
%_kVV?7)j:k.okY)>OdJ*<B?Wn]p_%9Y/>\dr9dbR]TSau.atKCF<6a![iP*dD(]\f?5Ur[.oo\K'Q3dgk(r//fGl`OTcbURAYNa#
%Y6F@ZklG#!9f8LN'ZXKb*D.CN(T]$.b-Hfr%_W6PhP"/%03nrY)$bQ0=#n#[Z6q:>B'\)C9RfJ)C+e;J9TF]&euLs<EgIdO?%Jm_
%[+B2"gU*eB%bTh>q-jf=?>-LiqC!f1BR3%X(e_^ErFFm@,.Ip0)=Yc(bWn/+4Z!CHU##k0o"IdlP&WaT?bEM+;UdKBBB3nO*3#t7
%_[&_5fQ)JP4L$<_TK6=lIXSS7DnHs#_R?l9Kc0$,nbnN;P>#tI855l41l?7!=lEVNob&lr]/!5qYQYU?8r9kA.1Fb`K=RY>[Bq4.
%9_0;Rn&-u]5?qF:fefpA!<u\d9AKqY8pY5a]crk"PelRWl/t;4T"Kj(ln*aH'EgB5XT3<bR['k,XDa,jjXS'Dd1D:5Y1l1C=hPrt
%`PkPZd6Fp5C]tcFD0RQ/-<6X%PTBCH+Y1AH*L&V7[]JU9.$Uc+$6$Vk$jd(sMA+FB#6p&/%'7DZe/3OGq%+H[Vo.O+jr]4KEL>\h
%"uaLM1)SRG[ZneblFAVS#u%]=IA#]S?H6h)+'"@e%X:]o`4d@HDeO0\bP2guOs]/\7hj@EU,7RrN>C$6\.]_OM82*]7c?F9MW)a\
%q$9#7A=/TRA5q4Yk,Ea(M'a[=_A4;[E?X:qSN_rfHX%:(-QTUpar(CY<[L.FGaD&$j]I;Vd@`C>M.QL=aETj?G#-X>m^-eOb4B/#
%W!#1<oMF+]mjk<HcpUqX)p$5+IDM+?o?%PDmXNbD#tni0_01W3fq%6(\1]6ZSYrGp)'*[P+H$4'-0^h-N].ZH(:H<ec#*:D1rKf&
%.qGKL1fUg]j`%*%Z/_!!DV_A<1Ea]1Jn!7RFBV;4oN3ifY([e:.RXilhRYU[9cheqoi;2*^Cc$\_&kfkC5L2mIOjW(fAsqS$4>GQ
%=Oe6TUN%%BN9N&YPPN+n<E,#@H;;;s'fi5K<PCX8@&+jtiMF$9MY+RaAF-=IXC#aN,g9*:p7;p"/FDVh2b"S-T4]!`pb:-P`l5tP
%\;.d.pu@u>ptUhm=esA&iU`N<^?0p:mWnaa[f=r+HX<"<B_4n-ZKD[g*$^YnE'8+i^'(_!+u8"EC2W)Ua>CAYF^Z.cQToHp\+%](
%<6l@uA-@'#SR4aSSc>.>/?hp!#jaF?oQs'??sI'_M2XV6lV9Zom/h]LloB$(FB[8`hqrAeDCauiEH_OqK"dZ6ci7=KkEcJD5=Eit
%ogI,Fk5A;SB=rJ=RHSp"E6c3^dIU_4&H=m-H=W8i5D/1q[g1l!LZeIdbi(dAkBVcq=plNm4>D>ZCmP;H"oa^(#ro\mTa$Oh*F;&&
%"&1IAoI#I-_k:O%37E#?nF=A(SM4f2o4sX@`JB^6ZiE=^T+^op^*Zn8X?8SLdV&1NYljg3fWE'])*ab_q;h-?fAq<8_]Li%d/>sq
%>q"H7D*0Yg>W=&:(9fDe7Q&f8%6d71nE8.O*&WJPSETWe7S7O6F,sTLnDerK#hN$CbNJ:QSY.MO8YaVX?/T4:*;m?/0)U+lq719u
%mVO*9j#?T-?U4D!On!.*IobO*3&0V12fa+oM$`ViL)r/ED5;@K$_hHk1tOB4OdKToFa'H:\0?(^`^*Md'Zb'Bn&2"fYS+dd&:!5A
%5u_%Mo#($8b4cdmg/(Ac](d*snAJKbGN1;Eb8;45\\:?[+m^6)n6j0C^s)Z[[#289YJokX@/[E8W*80igW%T!:VX7PaVo!5>:.TW
%GS0nVq<IP^JXPlI87p0=$eW)GX)At4*^.MZUHmdLL2tr5<:\'9N*0qj:jY$*Kl"q"F[^+$dNWW%!$>58Ka(P6(LgOt.IXDK!-5q3
%p/`5B7<s<:%uL;"%;d5RdN0>cTMOJ7gtRmeE=2+tDpS^XnXH<G:6E"^GCCF'[ae)OfrPDgbI1[daS@%mT;@,)6Gq(mF2'sl"3NnJ
%YO1-_DIl^HSmDr)&ZC=$cW-J/oEq-bqs+YVTR&TX4cLO*m+m,]"ZJ!-PFT]C#PtC]'6N`aU-J1FLCb\5[69iH)YR[snVqCJ&bp)L
%K>O-sh;7'mpC$^Ms87b4R-4<+,DF5#D+Xu'.HQ??NUJ<RDSOEMa8=^\r8?^qV2Ors)ucA]#OZXe@IAK4*e825N\<2H+N+%<:r#Uh
%IWtVgYDKr3:l]Y4l5'M%[164]'o"]Dlu$,sb_:Lsa<G@XW.?*k\?EB]#V@?f24--Iqck8LB'])O*BZ&an`LjO3qJ:N_Tu4,!l6?]
%VDQrXEa'?YZ,*t6h]#d]@H$K,(X'U)RBcOhSm%*?i/\*uE4g+QnSX`R>+A`^EV=$."67a;m2p1nQe]9'h.f`J&Y-_/4%@]qlQ(cX
%F>hC.G$KAcVj`^I,1?RAqD[h77fTN/9F,A_=s2c+7/VN213mdGHR9Jfdk\;pE_;lX+GiNH[+&ti6\EF!Q++d'_4XB(7'V(OdM32f
%c(ob\"hiig9QT`FXh=P7GMEIqH$$YRYL#7mG2r_,L1HgD$V-/0A]Cid]JAf`@8W#R,h\7'D,.kDCl4;X51*bN@:JX6U:tK#.h@$k
%qLF(#8P9n`gW]7Fb6>lkB&`>ANMd"2"&)iV*SAqh\Nil@jZo0A`YDIN<S\u/4;WhK8J`$NS3\epTc]sm(@l"k`g6.CK2uJ=Gn1]$
%*XZd2b93HWE\=a+nM5U-!KijJhV5p+3ctfdG2gLQ/Y?<P\8Xk5nmOk.6lWF+Xr:[cHj'Ym#[X"2^,9e9W1)$oG_.6T>hGrmk@o;r
%O1&\^,LM^El0EoqI"*(I)/hS*;[[p2dTG))40q-dKoWC(;86cZh,:]I>@T1ana,qgNZ*#tkMps-P"X+sh%+C^lg8\PO16.$cb6o<
%JCj,bFj@^W]?%"Jqp[k0QQ,dVq1J--BrL%,gCscR(79&n*?H;(i"'_eC2,0d#=j@]YGh6,qcdQH!G]KP,)cWUN$J0`caVRr+R[\5
%F9Xfi_%`Ed(Of*24'if^F+3P^DgZ@%If*fL+2#rS.28f+&Ep_W1^?K9SfQsj1GKDb+nu"OrGUi]W-k%r&)#)=e&$LB98'OQj3K[:
%SD3BfI`[BB(mT^qhgaA[JJB)$%*AGP@c"$/`C,A_Q;oT7O=G&3*kb]%X]i<;83rR.@="O`H\pg0$fT!uT?3f85HeX,UXPbrqK!21
%a#=T_E<un/c.(L7`M8ij(;XclH.^<?&MV9BFj=[g^p!.nksQjB^VC.R)?lD'g-Sb*$;",+V6h^t=8>Am9MI,A09UN%N';NQ'?&VL
%b.%]lA0coS(`D_FJXI4'0=+:1(=C`HRTC"F:IXKa;8"I>:3ou:%h0Y_E,HiFE=Ec1(i8+jg?+$Q!7M?1F>os@d]-<%a_^1Ebd4Q.
%>-hqY]^U5X`5XWk#MMH/?VO:>EpK1IG;+U_Z:U5PCI[_+#33Ya)`!]cd!5M&'13MdA.n[Epf.-;eEnS9%oO(=B8l7,h,$d1:L-+?
%bB#,"I$;NU^LU1HS)?s=$I]7>NjBX.i<5TJ)5.%ug4K,/A4d1-I^s!(YcY\!,TC,q1]O1J`]tCiqYPXDZCCB<H&Adgd@".>A[$86
%]@FDS?AH_44,ER)p_Z[3$m>UHk@@L"]WboIR,EiPYck;GrmGWYP&2Qq%poCNiZTGEOUu.L@XD/?2MHFcW(N5DJ/3C9Y6:FCcQF:G
%+q:t1TRV%_I,7G(R%_Mj@,)"A,C=uc-K0ULRT+e;#IhJ4EL&mu/'!9*:"VUe]I`*<=R,J:,$?(K_(R@Zc=gUTQ6e9uoj5Q+JV[E$
%X[K&Ep2.+I"h[U7!TYPgaWVLPOUls<2q4Dj%>f.B+G9X_@:UJ[AemMQ`f's="_-d0UAN+KkJ9Pd"F:kfC)=bQa>])Tmak#/`l=<K
%_7!@0g4aP[N,?J9qt9j[@qQe$MPREHp1-$::1U%,4$kSElURTpH$]NLH?Bc+4@;73:A,f/U:QggH=dF/lGEGNAnHWA1<hu4%/<@f
%Gcs2`d-T[VS@23;30ZKcR[4Ad%dYVKD0i>6$"'<)R'ns?:36Zl"@@^j(E3'Z(*)hKI4\dJG@@t_],iWnTP6>T4AHWjks`KA_`M8A
%+M]>C$"[t4+W'&F3bQ?%M`ubD8S/(L$j4HWX*.E:X'Mr)#NVYTr\9FNYMh)s/bgXH[Pj+,"A-8tA>HYf>hL3KDTHP[!+CdZaM::"
%B,8TVKD8L]6hnAJchC^FT7uPE>ltA$>hbr@E(f_*9PFU-#q/Q=9.39eR@7RSc0'4^&?Ni02j\.aDb^E+--se<eH>VUGWM^_[A<%7
%YEJbgF5=n$i,sttiC2aLl]l2Pe'>1Y.uWW+,56MW).6/C_fPRlMa<BM`(f%G,3Bf!Bj;V1@P9<5doZ#bAN.<S$l<8uijQYM03d4)
%/aL8d*2UnH+4F,BQ@mD$2penT-nQ3?Yh?%6nlfNqcRd5>,"Q@5,q%c&2Y(;o*2im^M5/!j#f?:;rajCp/^3dd.Bf,8(ioC'WiC@&
%;;#IUkc.KT"#TEq2-e#`lIRIXe&"pg%o@,s,k`L*5![4c%L@J?JemnGJ7!o=UnV,+\!:>-S&>T+Gp7!Lp]FQc`;+:?FF`-`hgOs]
%$;eu!5JbtK@i6Ref@ri6X"V]W*%%=0JX]dl=HV;8;o%itC*Z4(PAC[,Js(4i/nkm/\0Vq7emT=\q#Y;d3#YNjSug?ifK[&HR5-DF
%W_M#Y$#r"O#.rjI>mmagAYAI#JG)GFXS_WdZQFii_L)HFD88DH7PN2,A]&ZsEi;isRbA7+W8iN2Lf]RBa?:u)6mlTH]DO[I%.p2?
%+\A`Z,"!T@W[?IR;(iiRgNU35W6EoA@.LHP/pA2!N'XrR'fBfO=j9GPeM?3)I\JE27X07#R;Q5cM-3A0-nR8I=C&8aG=pJq?fUY\
%fc>:Wf?JP&Bh!)'q+i"Xe6db_ZbZ?"ME@ID[9pQI,M&5nY4s](,o\@9.HsHFiCLC8.eF<u(D+3kMSH:lP1E_*%t@k-Z-S<1jgF.H
%N9q"f8%e7j_,?ajJg?n#=h,oNXMK(WR&>Y-ZEF)+F^L2lI7)5?Om4RU_:Y4L]L-P[Ost3%L3>"dDjLDdX5MWZVT]FPY%sYr=l[Q>
%]1_`R],blsO=JSX\T=BSfMn)0'M,Kj<__@MI8p6N\#g3>lpfD_,rh^BH!*n[8`adQ3S@]:=h,IR]^ieC2bsHpo"(`'g*JW+_+9H2
%qXSFI"\kU&F]5>\4cWg&XJR=4BD4?F8U]'jg+@8A5[?Fe+5Xi&%Mq,b^c/"&0.^fDWE7T]$hVnC@qea6U+1a&8Q#fqH!/2>!hVWU
%A+>CB?aI^`6+B\I5(r9".$GBP9F@]`#:4e>&j]0[@;=K8.&X>8Yrt]h&"eP"GMGZ0#HrJ&4Rl*_n>btUJe<NV;8da!\)@NrJ^'pD
%Fr[4YQ7meaLF68b73-p?X4hDfD[03JdcE8jUb@CllF>1F.g7K"*$eUF8oFL-h(H[DYc*i'P.gs#8cV+kYQX-4E*a%9b,B&*Ou^4\
%#fa+#N*CfTF21W&oZ0pdDBI;C8L^XI4q"P1`tbc"RQ;)r^A[>j`WE92A%YL'`h]rlNe+d?NUQU>cOrfLCnnG8*F15oagP,$ISMZo
%*hh$4F<-3I('MOOgJ"B]<TDB!G2Jh4O"7!CG5Uo*SGJ3!"")ITpg?Yi<gKpS3gbACAq9c`:!@8r(u<Kd/T\Z84Q1<O*qkXjAbq.0
%)t4XrkQNRYVR]I&*ia,[CFm@b_5L=YkoaPm`J!B8:m[O1gN5C([J6U'Ntj_t?B/]MA>a\4P\!4kI(62Bc1@/.Y?a&V,)sY^G8Ig2
%'l&l$g^g9mKRXrZ_7[;IqKi`DVBH!=7e&V8]TBhY;QZLS*q3XQ0<?E[!ENYSN*95tUp!F,gPpd6`Z27M83l*-1+Lb;#a-uK[,mmZ
%OK$tZ-#UatK&!NrK__W\@?$[ECftYNq7r:O3K<oA*>fs%&pq''4UhI.=$l./$`[9/=aoqj4(pD=RO)D;O/65L?drpYZBM8:j\(+(
%9`)N.dMHi6psK]5e96dbp:u!g[R)!?lVM:S`b*Ah=rUMMH##Job/p=2?_3hq>k+Ujp5e_D`nS1]:VuFSs3l2lS=Yb;MPpY^2!3XP
%0G4b7]O<cLfsB$49-5!1][F]0L8PJ3FleU+KFDV2Y[fi_^Qa"[?':J'6tU*_JA.PsM`eN^qZ[cc=k3efdCe_[$VjSq,6ZGp_%rF!
%!AN5iR'X&tn0Rr@c?lGFCdl4H:IF:"=:l/F#^e@p?bm@Q[pL@2KP2L]jT(_T^`K5gYi2rH!2k_oSE@J'6%pO6!?*Fjf*m*'Hplpc
%(ek?U7^/KUW0frOqa>aI3Y3g;I("N*66PK,.!jV8FVd]:!>\)CgR1Z;>B(1)h2a*!7a&Ue@mW%NgA]`h0q*)OM_e`]q]%#6\+@=m
%7d1*3^<'mS8M4f:k,CTum20gN?jX/\85sl.TsA3k2'cil49/DdO*dcBi<6EsS1LGOp&5J?];S9mmY);jp`t`D!g=*VD":="`Jh+A
%0g!!l4cbcDfd[J-@uW5L;#pUiQFc\H^=p<Ce,Wr:`eu"d[O&JqL9D-16>S5Wfj6'@URcG,9q9t>n"i;^Uf24L`RON0s'XHdLOsmD
%""r+c1,*i84XG?7n7+!6A$jEDceLQ8RB_"b100U8'+E$^=@nZmfM3e#KJ!)l1)#ql?'irJGZMHHaN"iao@2C1;??hiU19jZl2Zu3
%_&UF8T-!9Rgj2!j$1@:4\*.8OiaBG\QsQI2V0;i%RaU!7?Y]+(I\snP_'2U>ii_L)V!8AiIZZag,B'1mUKEA7NgdZ8MH$,Y`?B4[
%A]d12Zf0MRBhh!0*Ku'+W5<3Y`"5I.7Z_rt,.qg+>ZRp.hB21+XVse9-5AalM9!=i=S(H_>-4>:G0[[=VIH%]>0Z?`!lP"W51k'c
%XW@VO]GbN<Zu27-141l%PZls[j9th]6#IMAj.Q+b]+%ORbC9RUR4-^lWG&e/p.P<2WQX7UQ]9!5[!jD.4%q(g2t*ClIOgn?-([%X
%q)(ns!pltdFLEaH!&Y"[Xnd8Xs5kP)%70LOYY5S:;\LfV:W^FBW>[@P;t8O7P.H0KHp0WU4p9XbUuGKa0o0r'Gr-8:0hcaPW3(I(
%#7R$LK)s&[\KH-/%s(i91q%smUfDZq1bchQ7u*VJ?^)9k>-jt,i>u(I@d8E-D'(IIWXY6S)BQo%Y;Jcek7b8%LCmVWp0X;)q:4;8
%Q8dZi.Tn$(6Wbt0g5DO#f2P/n.+#?KNET!h2M6_cdkFaV'Yu(0\rHYF$)I7>^o[C20YN^,S@$EZqRBs"[KO"*n24,G"K0gGc?M&'
%<J-surFET*hWLSoB,LquBU<T2QZ_J-W6;F[X*TaQ)V,AQFB@1m<P/PT-?/;0#5s>f`;K^aqHCU$6bahe/4OS<k57mg58n`i:"_TV
%jE64l43I9O"WXR<]HLG[qr$gp[Ae0#PdO@UedF,Nn@g/:XqY_UJcT!4+U70)Z+1%umjWarp-EM3=&YETa^E0F<M.Wuqe9/`;8Fck
%NN4,qg`;;:%Y95`LU7X=kBfd+2e8,3_Hno#bq(*A=O*-db4Q4SDEYM+nmOpr-Rt67H<;_[PWIjV3STQd($<,QAF6C?Ka]J"ieK2"
%?R8ti_a\BTpm+.[Jo0Vcg!Y*'lDDf44=o[Y;-Cb1fY*OgJ,_lBZfF3VP*$0-J.c:!DuiWk:R/dK43dO"_b=dnUP6P]BI7SLI-%WY
%&i-lA_I+Wj/20.pY080'?.bOG@=upq*Mu&2D70+bVf9[Ba'+E4Rc#1/d`*VJA/?lj#h!M.))&Y,O:OSlLG]=JjEIPWAfrubD(2B8
%bYl3k8+L"[11L?TN`"s?2K*_@]IiodiYmjinef</N"T6')ReO1\'@FNJ%C-/]Rik:nIlHkVlRR.ld6ri#>1/hfZ<FHhF"6=.k#tE
%!B,2?,GV`n0Gqp9?Aocm.*'698ogi*M"4'T3O5)_/t,5"lg0RQ/3Cib.Jf\ia*)6)!<Ru<'K:W)0R;Bjm2c<WE#(G<DX&7Yg8(1c
%B_'t9KL^X?X[LVU)02C1>CQ7KSGhsp3q<i"iuD;jlj?XN0kh3NUJc6"mH1hT=s&3Y\MXa!f"B<t2#Zmb+@E5H?/0]`^L=&*'.,j%
%E>=#ogi*!?#;([q>ad;pq-EQ]KU<elf@At+(beK1Q5:hQ[[bB3.XlriM(S.Z7YMV8G235,jG0-U#9kb*GVII,R/Z41c:HM.1;(M`
%p\Fq#"N8S,@Bu[s+S:nb-uLZJ)Bd+a_V\JQNp[4W_GF`BcGVuhgLdTCO,*Ff>E!!.k=i0&o(E?BXZI$oM%&o>I$[fW`5H8U?crj&
%MpX#$=Fp6t!1(3-m4A[V#AlU%eY"&r<=3Tpe?<H85,T%eX92%&<e7hC=Q7U.<HT?<(Y:uh2lJJH.b!?rEH&8j8W5V]0`=a,<0Ot"
%7^]egrS>XE7Z<loPCP1GJDl^]YEMuA<`]bB'OhlgPQtd&gDT">m?"3tK<hCf.>VJM>)7MN7$)m0[-jU4q=#Ftp+P_V)Ae^`Ki<5n
%(rKiBL*IZA)2C;>#AgBS!p:S7%VP%W+Ae\f]JZ^$*>^lTn3TX^2`SEPbejc]FPkW67B3KEl9,hFfDmRI(G">W>EP.l_[;LSQ]i%L
%\)JYF=:t'9rPZj#.aeGIom:24VgBB+fnU&+LBJL<4B[CV>AD-?VDL/b[An.P&`7#)a[n4R`J#r]EN5Xrg10k73cI>V*cY@DVs>QC
%CU[Ii7.H,(XE$=\am6$(<O[6Dk.L@<\Ff-s?h/FA2[t8m$tl2K<]d.1-_6_AZ5W[\aLd>2RPa*09+^:diB$R0g^rIn[O\h>]PQ%`
%l%_NbM*^!G**Ol'e9.DM[%afB1ai25fe!PBWJ=d"3*LOLiTa^fbq8l$WM7?0oo%-HN9Y:+U,=<WHhLj`iJU?MK3Jo\F?P+&nA04]
%/0h)n<'0fA8Sr];W%,(qW4ji$Z&?>"-0V#p[WNGk&mb?1>BR%V,E[%!]hP-pP.]o1O]5mQNghSd-k`V#EKu6S=3?_6k99O,L-[1"
%C?20]@NBWT)^!\7-jcj+/C?/r]:i\dVEg?U'fs'u-`SuN%]aH1Ish-7B<dn0s(>dE`a:pHY/jB5/bfAah-]d.IeNj:n:7$8pXtPJ
%0:h4BR&"m^h5.^t1f>_Yi%t<?jc>r!LA)o50jYVjYjU/bl<s"&l+\e%KVn<QiN#LOMWBRFV)B/lEP^49[4oL]Sgtn""f%XJR`<o%
%76Y2N.,GgRTYo3C'[8KR0/lkKdqaSXmH.'S`m?4jlcI^7<_Glmjjm[l?8^ssm56m`Ma'D/2/,Quga^8F5D*bt8B+m5UaY^5/K%rK
%Ha(F=!Bb_!fGlY<,!%M/E-E^UmH\*T]XHL0<RJ2HGfHiqi5gBGG?==(^Oi4ln%09X9#%7*So'W>(L%-`pJb=9I4N8N@!+"hAfXp:
%Pp3*)Ze^tY/e*$$inJZ9O1e97iBL*K6^qiQEophHYF"ZX$?JNG_cUE'/"M4+ZZ;POn@nO1j/`jW:*DIdbKr#meF)i<+'TnL8=PJs
%^bSG;7@=%fAoZ1=AJE33G4eZ;opj2iTei,C0l]4?9>ASI^UA=0_,=M[T'#+lgJ0`3-s49cEe-hnI):e0oc&Hhe*m$B,m.OA:c/kh
%V\ljn<K"Z@f2Qj47)?7g<hSD8QXs_LZ9T^roQ$?@2dOHSMZVZjY;D\'Pf@kt;a*I>q2"Z3d,e>)EE\(QCEr&Pc"(hNH?3EMP*77g
%V20m/:0kh0$JZ'?=l7AbXHIc]QN-mlrt8^?dC"FGKSOW0gZRi-%rMc/a,RS3:jsuHQHlgCbV6[LP[FKQM+`bKSsL1[3DL>"<5!:\
%XF?'S)UiW&^:i%KgkPo<YTgO7<k;-NCCr7'c$PhQk^.),4t>JJE6/VXh"(_"m+B)c?prD0U!W5.ASR&pa."BH(,QI-9q[*0>'-e^
%.M8P([3Wr7P.X`LlsR)FP1jnM<R5oYEE7Wh#XTXP\"5>2G0,cOj;H$*Tk7fg7lQ(ojnlCpGoP#!W2XLA*`&m+a1gP(TK!>.2mN7X
%)Ab%<AD'e$N-mY6+a>gX*cq-l6<X4$rn'fa%CM4\.rCfq-K?soHb+hdo7hp&4n$Rh]:1mSZJsQqh3U(!+mLi<g;E1LB9"Z+pqTlP
%_8p-=(ud@;,>;k<s(3tm4&rgWqXWpWL:c>5OgGBu(dgJ'Ed3'm$YP&(*:^bgaERRDG`13<)N`/CQ^B<X@1ppGUT-W-@5_'UB37P>
%f5K_(8s4Yj6'g"cAsU<`!E*##=HC-+U"@#jqpe"!Gbl-6H]Spu2d2%]_#B]`So$&<3G-j+VkPnqHohcZG8MJ^=SqZ$i#2,3^sXWm
%)`W4$.Zi1G^FMnsf.!-<Y6@rie#s5\Z.D_Lk8ArNVO#N:ej+^/9$c+7\;'nNcXhg5@"eN>'KZ3i8q2O/RdL-O8YJHJLB-hq1-\='
%nIpebHa#iO";Fgf1STCB4[tklaBh./;XC*Z:G?!-Hg[=1Vh'5@`rY3e@:\Eo2(PGr?]1T]aGt?5@^YSXA7W=+S(J43p&=f'2lMkl
%2Ermo)('*Vrr!9Z?8UW;HE&+Z4[!08q")7g'Dcp#ci:lhrI;]kh4ZUT^W$Qh+hdm<roW3nmZqtb0@'t'(FCCeTjKPZ!c[]pLD0N.
%S,?WK'=sA[j^3`UqK8?3P$e)pN5YmbHT`5qW:,H?,`Y,+is0TE2u@Qc=`e:GYR:P5WDiCp3.g8(dg=pAEAQ9tSR8_79['Y!6OWDD
%q'gm$BD[)aU8JYYTI,`8oq+==O,Z:-*oHP[%6r_j^NNE"f3/*_8;A7YKYUm`9tp+nOGUb-;dBlC$NW--Z5\0$4n,qS+$<c0C`@!a
%*%7@>"5`L;+RnE>k6P_HTMmTDrpD%3b:S2@>%#Ycipb_%#l+8[po/UdY&,<Nj#;&WJ'SH"l?15d!EQ'SNlZ?^a:jKdGq,-t?npZ)
%(H@L?3%g:*&Bpa.`I0R4b*d<17CNNO(d>S;`t>X)Jju5d?@<[NV;r`2>3#nWf9X]cIcgL__m%M:SA1"#cA,`_5*0)E@]XQq@k`2r
%q"kGjA.C;P7!ArBk,.#^/,BW*VP_@h=ab<V5#K]T,<U[P#$8njNTkt-DB-<XfA--uVZmAj2.]/Ygm@^<*$G;hn:X+G?ak.u-<d0]
%C(eX\"iceW8I"EL@tpGI=*h1c4\*A^N./9QT>^PlkmmUd[eSOmqnL!=/'.TLHn`\&g4D;m%*?9XX+R%Yj0cGd`c2FTDK!nAnF<!S
%oZ!'gRKTi'EJ$,LlMC/gT,-AW!^SHG15XKp`0%,j+a8`-XTSJ8,Sds1_jbKnH$=Uf2?rhnE+<ipj3oUNe&U2SM!=BSE)4sS?!!Y*
%-:&tiq^5\r\-0bVIF./??`9^:D$Z&YFCu'/E1[MU^<6E2fLgV-om1&uEX1r`rV6V/Q/hb>^q[kPnp;8YSpBBegl9Xu7&OsEp$ocL
%R\e]gl^n%IL-I'XJc!KsqOA\HrE7e.gMA(1DWS@9(,GgEi=0,BH/[\AioqU]o&si*\:sc)j:IdMdV^(`n9TWn@3#.G25/*?HZ+k#
%R,%'H@A.t[JX&?\>3^aXTHDVC_%Y8.$Ju6(3(</eks.sD->N2]e?gA:P/Q<\j">d4it%a7-SmFD+`Kn!^$:/5?Gd#>BoBbVojPT>
%QUf3E'm3>?X)ICnm1^Rifjdh"&1Lo<8V_.PJ%amHTQ'%^4eIpR1<0$UbDfd,!b:@j>AnB=RuJ)mI)47R?g$geVAF.CkI'-O74M7]
%7OuXe<fBZ'5n+5550G<YNR.>C\;hBa"_n;b^R;Itkau52r]1sWKWeGDd"Sq:7sKTFN(HaL*7[?7i;sT@gAP#93&V`)BbF;[a892F
%6aRkP)nY*Q,89q(\>#jn,eD2dPtuAFia]K;.rSYAGVjFL,@cX)r;*N^Z=sPR$nIV:f%B4!N..0],!Ma'IPCa!KGSJfRsIaIqCF1u
%q#j2$_:o'I4B^>S!>p9RjMmP_!ZO-:e\f4Y_H6*9XS2.3T=mEs\+TFbHS&DZfD+C'7-9$Wm&YV_@u*?2kNq+t**D&`CK%,aOad[%
%[55Qu?jr_[hV_Jqja-'3s&OemeJnGY%6`HnCO:"![cdVkg55TPIhbhXe64sLSc^(R"SG<<Lt:+-Eq[gHG:8QWhV/7Vp"ep7+6q.f
%T?m'1G8W5dm<WZraIZ3!q2DqjJ+)4XKj?A'QPoZEen0u3N0"###5ur^.Z$q.85-(bHbFDl?QcN%iOAHqZdo!I>Pc2AC<b<OO.X$J
%oSh$\I?bCSh6WsB2Z!G44eR>ZB1c3@<gDVQ9Xp?O]EdEIKKX=gQ&hQLpJ$Uk_2mKto?YHmS!V4U+BaahrO"dJc3ijEr-[i!%7d@c
%+)f_S0pb?Y<-o1*_L(SM[6>]#rt+Vaq=>Usc[>K5chXf;h^\-U2rFBPdm0C]dcgtCo';uM(e4Q.nt8GgQRl?Lak6%**-dRc@$JFF
%3gK$)<[Hu+]$=K'0iV;_`aH7*mB/eo(Scc)!;$u%M6S4dgr-!FVK*eWW0,Ph'(U4WKuQa/->b`'"J_A.JF;cl`,i+YeajlY"@`Y>
%K+<J"g,,sq(I;Pk<8'l=i^^;7a*-m&.TmM'qGIC5X&G?b`RTnQeR%\SN:,GJo!T'&@Ho/;5??DjRMTt91IVP!>7J58>GmsX;l];.
%7UZD:m)ObhTC=mTQ9psQdJ>JRSi#b!&cKhI@e&\PbsXT?jElkPRfFu\;fQY*Ci!Kj=^lIN:VZ/1Yu\CY_3?&eo]q4P`KS&-\s>m/
%.f,aerCob/f(*4IiHA4?`GL=:Cd$9;lY9?*o#%j47E'L1.=`tEJC]a7'O3MeKgS+c%=*TRK3,f4cDY[>[78n'BGQA*FTt([o/Plu
%b)?n,PG;j/ec@pNUhOs1Qg\C9g6F3Fg<ISsYr4SIqp]LWgk-PCGkpPO-?5f&;XTl^;m!>/K$m1M%^Dg+;-cZgb3a$;VO?c#+c`N(
%5B;9Ql&q!KD4W.@L9GN5T[,,gbU0;faMuXO&O#LDbf7(^V5=Q%a:_H^'2Q/ZXOalM#0qO\=\kCg+*"&e&#qLA<XL.G#gt@@#*Qr+
%>nju=nalRj:/":a$W^HF:\s],oGp7XE!@J<D4?roaWdD"=cV;.mN:sW$Qj7&C?Be>'^cb4'Xd,#kh]oCF/G7_Xl.>+cfF!9FHYFu
%g5=S7'Q)r!=<tS4cegdYYQuVq6Dfl3RC2B#Xa+B=#;5O\2#p2hY1q[iB9e!%F.<HmPnC`$o&,LX*h#ug2Mn2Z3<q$Sgo($@OJAd?
%kD@(D`B+VES;$r:#?P!tWF_.0&/GYV,;5rm/Amf/kKOi_V=P4^%oT?Ac:@C.IGdqpF)K[=jKb>s.N;k96*[O&V!s&Z!MPk(;AcL/
%5W)c04&?<l$;@6=!1EXfj`HU'jYi5liZ0l<JXBPdX9qUa]0*QcGkXn5_;I[pqOUIEW\`YPMW]#^)Km[q0[;db)fJ#)s2"9V(hX@u
%.=rL1HD@!U*6Zf`He-Nr05'a)+Xu'*9[q*"d^j6><UA=F)Ts;WYYmLTh?ZL&'I03b&+?4\Y'B/mNbmd=qq]LI[U4rFBcb*&mHH&j
%[CYad1`I5-?aHB6(8#B4#gl$*ag_+Ce('sN0C]E)JtbiPb?XLM9[30:>$j#IOl<WoLF&d<:M(!+rOeJ@gs:pl4U#[t+4_d6)8Ns>
%P9sQVCn,kUWGH,T[p=@sPCg:2At3K>]65LqoVs?1I?C[,?5ZHJ;!^AHS#MCRTjJ$n3I%rG*YJ88#mKj)c`8X6nu0r6oE*\Bs3!L,
%b`FYVb2jYq#^5SaN_`Y=gL_X<$nX1I"VI[g[38/,gC6j6/>rV!p%@\nQ<;$i"$.XK)2r6P,AusFA7uZ7IsU.\4_f3-b[Uh)qYiij
%^Y-kncOW5-#nt@$#j\#>^-VCqB+O(SgceNu!r"p34VNHNQ$Z=jEPrh"Baih(NB,Jgg[`hAa^ta]C0(p66B9M^/kr6TYO4X,EmbQP
%%*$;sAp1aX.s:C@rfigUb*gK0Z]F$3D'7_cJ;grp%a0:pd'U,NA-^1+<.MN4%g]u4_ck>jC;ZV%70*>hGIqG!qTH;sKakPgL0q7*
%CSR=N@3fg9m9m>ZA<gh5,kG\5d+<*s,qa-WIel")ii+3Ca/JZr^^a9fAPHtF53k1JAWA"&NpLJ.9jr5G)1.E7LfF-"K>rFLjfnad
%pFe/1-10<QDFm_9IBss?:5(sl.ERCcr"ZFkMDr_jfH*oX,j]l[#V=_oFJjH9lu^"mV]HVSEp[D(H4p`e1)14aX.CBTRS%.]A:Ccm
%7@FfB.I?/6`j?u$ER];X8XGM=0&(Z!P#VP5Hc,q?&nPC6of0WHpqT#g\eIA2C&#ldq:lokWh6_#>hm3B9jcqWHO_0D1lYhUqEBhX
%D9]`>7uZ^doHs<q/OaZ)D35RKXpgjN4_W5q=&OQ6d,Mk8.A9-E1qrC3&872MgHA3QhR-^AMsE3H]ccWf0+#h$a!K>@PUED<\&1'\
%-s(qUUpqZBmH=J-7g?P1<MG4nPeom7Y!VXM:Pjar$Z9?F/hJI%qM&1\l4Jtr-l$1u#$@=XWoP(mF_)^/'PqW/*`4=_6pf#I<ORoo
%,FS)),/:UsM+*;FW&h!"D?32Ugcbp:`qD6gVX/b$[]%7X&m*f_qa('sUJl%O=!G@0J>mhT7cu+Q@:4g%+!`P0P>e!uK@)/Jf<*,O
%YX1*0eAE+H$R&o3ALLAN@WKVN?]'PpE3XF%OY&k><`H'^a'ETE9R`A74irXJ8_5T1A`U>7%URK(@]$;nCnj_FbD=0c2OD4V1sVH]
%3_fpN%!tg6="%4H/l+B0Y.@asUg[hg3sR_oR]NI-T$_dtd:F.MO:UeX_4KjVe/_QrVM)L@\WY.a/?43<G.-bn_X(\nSS@pQ9n"3e
%BRm!N?Y8Z,g)phE!?Zcd##k;J0/Y%5Ld=0/pcO]e_EaT=6kq:9`kN#?2+`/kStLaSkCRlRh]<QkZTB6*HBH+;?k"f=C"7A!YdA_g
%Q2%cMB]%L9/N/+"0N(Fko#pRTAZR/=_:iB*B'o"H,YI2#8@gW6f@:iAR)+ek"QDNlBt:3_V=:`:,:cj=l4nl,1M\%`[>^+GH]]:*
%2\c?],8O>u;G[8`Ye+PMDK:G8"QIWXUpAJnHn/bs+b^U?.QFDs(E@+HE_3]M;^J#:-K2fR1W?o4R=>1prh)\/'XjUhghWZ-=YSQL
%q>b+S2BqV;'=A6EiZeM!XZ,X#5fgn@fd].K;:kS`@g&HFUKJH#O>I&NbEgV]-L51CSCD:]Kr`bC]531U'WJYNG6;HN3e_a?[i6A#
%VK!*(nec!J3sV?+-fj9TBpMO4+0hjnTs$B#;NB^93@_]WfM5_2*EJ,I$S8ZCc,?,6IRJc(X367rOu\hOD[BUSM3IV12c_@5S"8#o
%*YEqO[t!AV1,'Kg>X2M<M]X/g,\sS;2@.3p_Z[5d.El9;i^AP)-A&6h:2W'[auei_Cl_>h`?+gX=//lPFU[9Q3,>!U"L<8oPpS"e
%OP)qF]:L2,*.B%k8s1Ln<e?7(VTj_fc!b"Lf:4Y*dr="''=J9E"Lu.?#K;[qAIj,D.e&RN#e6aJ390N:bOXb!WP50_knjMcjVq9L
%ET%Rg#S4J-N6*Ye*h/P8_(62XqeJi^=UBO.8Y*;6Z^aREI,9%JHe"?"F]4gg:%jTE`.huD5p`:0kU6U0<4ku7h2LMA2QqhMH<""B
%r;s(R1HX^t!nb!2MW>P-)>]<$E7rS=MVNHo^q$iN&]1QbJuCFmaT]E;m\I9E\L&7GN-QdX;Q=RUOQe)6`ak2RGQ_Sh5lOemBrD6%
%[``_QR@Oan'H_(?X,rDOU]`irl)lQf<;tk5>;>!('[eh)>L\D2MgfaWX#4NjZifsb+'_s^_-$TFcS,_uX1$uUq:!);/Z74(ZjNSq
%9Kn&%"pBGl.F$7PG9aqrc<Ug,'L'8iZHV!U'95k52EP=p=RWZAU^=nE+5LS"l0/27m&eruIP'D/Xc@dTfZ?MS>P>Ui_0-Z^XFF<W
%phi*NlhQ:2_d`>CiJe3u_o\8#_)`U,lfs$Z-c;pm)&Sq,(r9qsqA0i"Icg"kO>SUj(Kc<$<X:D5A.e1p^Klf&c)6F`?)HpS_s"1V
%^p/d"^tHRVN;*sQ0n?J&Fg:<Ok+OT3GR(!taW*kuU\UHR2KXJV!udLRkOaI.MCZ[\H=AnYEhU+Bm[/OP]dUjQiVFYZH`N[MRk@e>
%2BGP.6W2XPG2oXbdUQ0I\3::JmV8f.@"tq4Og43B2$1k4!tYu>bZH11`%Z2&4b.j(lI][i5m:nT$]^n'*&0UB="gJ^^>5Z;IqQkI
%\`f+VVl@H[A#Hf4*H>2h\LKf]eqdN/iBsp$F;ik&1"s?miGU8-hueV(Xm*:LU\R;Y0;5Xn],+u$oel%IcWX^9p)4^'3p19',=4fM
%bfgc^?Jo56K=t,j_Q-]]dO1471'A)qP1>q+W+o<Jq*R<#/Jc`e@Uq;fQ1`&2XN`Tcd'=.KhINEOI@VEI*It2nW\Nqo)-;'(:`Oo$
%!q`5m"Gu4%GPL[I$o'FC@7;5hER!rp/"ELI1?&Mg39_H0JXI#U^5Vc/9Ob"7@<*sIJXI\rKT_V/!\en18tjO/YpHtV6d=FoTk`]A
%"I$R8(1@taiJhZkR&uL`r`DhXR`2D@&gphsL<p..9=DpbVNr:&0p3V7_n0g06uGqTliH$*i#WAgX+s-Q!]X>YY?)r@[/hLUi3i%Q
%iJhF20eo"a(>F%t;R_"GZ,cT2''r7%;cE3+)8g1++;g)>MB;,E0j1g$UaIf':R.\jKdr!Cj4[T.>#cT\J"tTFo@Z*g/iopiEj8Uu
%;L=Pt6;@_hq!*6=*R$6N%/`3*IT24%e^CZGequ4efkr:TBNNE(6*tM!4N9s((QFnFD*@k^-N%Pg'bimOB:Q41eKTB7&]u;\kNUaH
%K!]a4G$ZUSC/u&a@a&\PVE@?=^uI%N/N>ah]s^Z1/G@U]EituXQR]dB`X\5[)cu7.jE$]]&t]hj_9*4q^b/gN,Kp^u'-$+Y;!?QV
%8UKrA1rc5*86EjMN(S9r$ECS>ZY)q9/As=h:8hOQlChN//J?FK(8&-ko,%*%e?#A.Fbk1(=r['D;3\a>=61>p#?DLepX;L#U]j%Y
%FIr2BQ1_FJRFr124ieoqMUS=Mo:RW;Wq3?AJL#:pN+s%ND7XrFqQ4ce,RX+,X'?spSm.N4YK!>ML^sn)P_;b8NQ=di5SmN!=,a>.
%/o6`H&piea*oEK&]2W:re)h*Zdo(%I*S:+%#U;CJ43&WR,EcS-W4p61+)QA$a5fku`h8F#lYXsm/[K5^$@0M_m\G&<08\fZP7X;k
%5.W@Mj6Z]$VmO&MSE[bq/K_tJRF>qOV0bB7&Oh3MqV7OS/pbQ'-e3T`;Q"8-`<Jr4o=@jn?$bGK#_D%o<VhlPbdn_3$mG70Fc?bX
%GFp"%5ZT*]f2qS[O42i?`!hoa1^\M\7uC!/@O,OU9th)hA]a5b!cU\_%T(SZ6"lRsT"RZe`K>82hFsF*2a;LUnnQ.?2&BTiB^Z!Q
%m$=uZObXuchTcp?=l:%4BVM=j<2(n7Y>6%Dl8g4KS#J<?=r]5q/qMHLi%Ic4*&#[L)<uip//7[_2Vi>e5HR1//6[(&Okm9J$L6Ys
%BuDp)ENMu_f#4^hWa"2ZWoT#&2qOA>\rH!LJR4%-:2p,o%/f<Go#H[9I49Q;e$`>nk1'30;\(k=I5XNlN#XJ>JdTV&X4&ld9Q[Mo
%\Z'=p!2o])H\BYra*M">91b]nlrLpC7.i$Z9jWaZ&X7G(-J<,'#7VB%.22shYC*n]dYEd=PU#OK"^K-t_\P"7E.HDOD<p9;olVd>
%#J?QC*uF)'B:$b6K77KS`DeD!T:=[_X@)[V[CWQ6EJ1n.p!gEuJS7]b5'(*U29'F&a'%=iGJ^``/DE*4GD!#0opsip7r#+fk;@pk
%7aS.gVYL0gMKS5(C)!+e=(#?M4>iJ[.J>==Uj6h+P*PeBXX/=QlRl6L.nX@?l'o=CO%\bl_:b2nQ(+AH#TVa+HYh/:Hkr#W'2AJr
%=`B-#QmLoUB*qiCWHInjR;5[KSRjYQZ4YA'JQbiN,IepBJ^3bdYTQr.Z1JsS$@lAuWN_U9_S%4O"3mqagQb>)oG"f8,-#3cP(A+o
%4^el!G%:bU2;[mb9cee7jflH>lZ@\8I1'tINsQ"a_I8*q<S[db55F""&Klm-"=UbrWDP[$0ugbNfQ%Zr%p"jtcOAqiYXlYop6jHs
%;@eZ2`aE(ce&[I,><tk=6LjGW*KuE*jNn[3:Zi_#4El:aQ5?8NXo9U-^m<G\\F)^#].&)pj/Ti=?`)fK(L1Xqj1Ns2+n3,i`R@gU
%7TQUe?Ian1p<QR:l#8BRHE+CJ'T]sYUUrtZmDmLE+fsG?Ot1QT@N;q@P8kGW@@:"n2iD"=*++Zf:hS=kS$<]`@X6=emcf^hY5aUG
%1>M_hPLlVUn@=53Ob750S.(X@P*b.QUbOa2H`?>d_HRB?O1piij`NE`jbm6'k2e'91ZN_tp:-Xd+3Cpo9R?lG[QIflaFao'F@@$L
%%k7]1:V)MjR=Dc=7J5d$[+W17AU5b/mc@?AbOTH?l@<?^1tSp`\Tun!hW7XE/%Ie$gD.'8$Z*rLj\,=[3/]TZZXLh^%Qq\@Kn)41
%0H--WrL;%GqqXZtWDBs!ZX9uW_o&Rb^W#>Cp2F/iVKdtG;Gu(K+BG)A@'/g57raiB`DP=)>"c-TX-[U[o]fkpaWCkS&t:Kgk4lNZ
%+pPNHNK,&(LI%&S2AOd(7tuP]q4q&PBs"k!4\*H%lH.&>?QM#9cPe07%&P>qPd<cW(7/>Aa_$EWd6&,/Zf4;N#>]BC/VNlV)Zo*$
%*X_XF;a7B6_MV1"1bN9t$H*"DDpZ3XXa$?,O)MKom#o$A[Buaa,A9g6n8.13%)5D<CWaVadS.nNAX<Ms0+eCk/L4DB@Y"P9.oo`m
%9;VFVd\W=2L_3UB)]u6\'h2<?n4%IX^e,Ct5iiG"l,Bo6_\cZVFIL'/8?%gQg0cNl;OV+u!P#Rjj6C$lO,Y`\.gf$/@P`*&6VjO9
%%:G07(pmjb3'*Fh/RFg*\?,UfpRoAb()>FS%62aNDp`4f3,P,[!B0TNj3IAfZaA?;Vjj*,b;.Cl+o"'uWCFJ'XW\+K"^E'-j74Z<
%JsA@hFJ%s,Qm++6pV+s),dLhs:,er!@lh,/(76?RE.gfc=9W*OT.MA\(Xnb$0X<>fAic^>nCD]`LmlJrSqM8Yr>@m]h1HB[Dj%p@
%7K]"A_ncVi)?7gg\1.\:X1Ke5OetsmGTSSMO@9DbH6Q[eMK=@5[;(J`4HBH,#6taFiu!N9F9lfjW+V3h'qO4@rmUTd*MNd01qJ#W
%C6*H:O9SN&LSK_nLcN32"A$a)-+Ku,Y"_ut2jh[Cjq`F(g-*!R[cssJ,ZbDWaq\f0I-["iXN2$/^k1NfeTOY.0uTGaX&9LX9LL5K
%]@"Ll%PUdJ.qAFiR=ps"A9CL-r"4Z$"d)O3RVc8Zb("]<<`KPU1*#(7>/W7Y8:WD<_sBBG\[&f3%DlZ(o$=l&*8>9#X2N3C')0q[
%SRI9(JVTPo2S9-[*A'?+,29qH_G]W1g;k>:UA/'D13eVhcGIUB48>9]"0a9O!Nr[BBgl0*5\1(c[tF?;,B6MTib,?K9j_$=J"Ar*
%mo[$[c*CT7p&Er(r6n30M_dW5roYVZ*pMS&?Qan@s,6:E[7R%_Y]u0MD]I+M=oMk/n\tT8Cp-/q\4DVf."T<kN1aK=obX"?9-N-e
%i25>sf2hnJ)fDLtll%oLB9m]=>`:8M:OWX=X`_I0-Ob2j)im1's5qocd"fW$qtZIFkNq*`n.K08ppk,?%G)#:S`S2t?5Dbp5:k1]
%03FlUKdjb_BE"J+)ATtnn'>?NJR8AKYX$rrr9$6r=J5Q8s#_(\h]@H#*>[kR0SfZJ(?fQL]T$,0`k.s;ZEK0H_qEEjr$QJ$JrQ_Z
%EEqlb?Q8lIaWArVJRF]mSkF*CZgT*1pZEK577L!.4$R@X:5r?B)I%_6cYj-f-ZMdJH$5@Q!pa`bT=[?1)g`&W^?+MsIQm]-gbhOX
%bk&m"5BMBR7W_E!Fau?a>qfljGW(R.ZC8@FJWHKHr&OBW0BV#qT)I8+<o'lIj^TYDr-7*Z_IL$PB`M3^\Q_eKrV3c.I-crI5Bk2&
%TC4s.GKnLJ'*Nd^AsWH)R%Ohm>`@=8>51B4^32H<'PW*JWr>u;bM2#&Zh!8eUk"^A!9TNEd29^EG-LCPDm4rTHJq]V`q3c"==*_D
%cocpn3q-t>K/!]gipES+r*bQ&pD=I7dcT-^Ro-7O)WqRihpd]ek2/D>SNMAi_R&?0FDktW$".AI)1Z<j,t4N*;SR<7e4s6Gif/nj
%TAFRfA>2IHUu_Dq,9(S3ig%&^#*pmG1ID*JNgdNi3Ud(Rr-[D[eUV&N=Yt!K,'j?MBkq<OI;:s)Hj:e[-ZUe:(KdO^[M1E+RmGOp
%4^ia6q7ci\dDTD]N=>4J"Y[t(<3L.P!=r[&pT0">^?`2Cn&B>]mVW.!0mro]4MB5+jc+3sgLmDU]DM,TX"G%#Sk3ONC.R-D;\TOu
%BdmJaD=uS(WT<<=cPs4l`*O!Milh>]dApi;=A6ss!XCsg'/\FTEI?Bom?^C`_m96i-:OP($B8hMK\st%iRh1:k8&I&Bg#Mf)YR[o
%m2PA9CV,i#qWKfPa/\%,LA^Wn?K`1f^QpIjF1s6*^b_\^N4\UC6.,"b=o3I$Gg"/pno\sOHGc?gHgkeXQLW`ocP+*.A@ugo]=)_e
%+,r3!g[2,t!1u(E^g"#mjp`PEf2=*C$m<*i!)?]Bo7du@k6oehU<;PsDiMRTZ1N+[@Ca4rg_m6j_2Y%9qq)Ag\drt#o`.&i;Chhc
%)QRf]purmp\jY[bA+Q`:0!K*6@<r\L@1htqB'TO`?H<L\a>[DiJMe2DRecGV9gW%,=SUA7CoFDP0>$Qo/`p>\$,gZZHH2.eT=L[%
%JMQe)(p)ul_mC/aTF-T[1DZQPgG;,D<k%c9S+J2D:"jYG%h)B`Cp\*(O[b3gMiZ!n*ut1McSA/TUZqSR7)t;d#3tqIIPY?gdR%R\
%852aLg/./&f/o#&LW2+U])(?+B@,iOG,?U%jUVjH!OLs%o8N),gnP./Br-=4ct4NbM7=HOUp!A&X/u0p"P7g`kD^_3D"H(?KI*U5
%;,h^"33"J<#0%KXl1;#3Wlk14[@3tB78ELWeO,NpqU)g,bh"u<k6=!]`hNdZOUIt!LY,S6)`f3QD@fr-SfVn3M!`Wd_)pBFo.#B.
%WOcVah0\YcbkZER>57\i@hFl1+Jd20D2/4kXR0CEX#d2]C4-XF`6T/86`<k-l"Wn$cMQlaap*@e%?/8r[H4m;pBd4V([oscnbN/:
%K"o<7Eh>D>':6"fNUKPbW%/1IcEjb5VaceGq:fX^4rT%q@C<RNDt'\j(]JfN%t8';lfYG&p5JD71rjgqD<$9;?3>Shb[5#MMkl9<
%&bAc:p\tS1It,ZY5bkBA(:^HQkm]uBc`T%Ypn7NPk<$CTOgP(3r7ptIB5A(CZSKIU>=SPTposVRNsR>0)NlAPGp*<V/M\ZMbMd6F
%hI([]+$XmdRi%KE+2=6(#<=Wb$+j+dJD[`R)B9aC]bePsqKp+3M<Jj'RI/15#3E\%lN4IP+27$#CFt%Mj/BDtBa$L]VdVg1-Lg%S
%htV[DLPCnr\iW0d]5&SMXAS*0*6]SH@m=0um%dnJq'=!_,^EVGCV@4H6pHciTWFGqOkcc?bf->sG7HJ?ncj14i;LbMYt2Jco%(sH
%[Zlfk_h8/=)NZ(]j<1C4*Yi56S384/N9*sn[NnCt1GtKt#082IMl2mQN(WaQXqWWFo(kMDYVF)BB']X[AX?A?oaiR!.S^4"A;?Y3
%+V`:m.f[d\VnspGMT<s.+@-a6"(0G8qs<a'V&`Z"QF0[:G*-4X0M3a$2L.'U)&W3N/8tsu;^hSg2d!oR"7n2A+;WU$ZeHmPh$T0o
%$._VN&`m>U-Ut#Okua;hnH/Tr@#\Xf(JO`nJLmul!.7Z$`_(Fm>8-E=lbStGVT,ILiZ$YdSi^]I*B$d9&sKkle2D'sL7h53)#Sg#
%D]6@7#/5j_-a@Z2d'O"paG+@mZnCB3,9[]$A%A430P(;O7[Y:4(#aQ84m5VE7>Gl6)+Qg\l_kPCh1=?rkU7_Ffc\a(qC3u/fE,ue
%5qWu9"r"aYHaPLU?BZ7s[Q$8h3H[CS2HH!OnE>$DBuIk8>^:X%6(`A`(hTa&mUq1FY[9lm7UCr]K#:kOV4AK<gX9tfSd4kM2L`GO
%+L0;$RrdA&MS[:JbM;oUKk5]52J.)MX51M9G$U'Z0]cj@cV;Cn^:p,BXnE@N,J]R"g@?D;BY^?GG5#6YJ;$SmpbJ"%Hnu3QF+YEC
%/C,d#aidJI'nD'UFYQhSZ5q/N`PT=NSXE?C-VKRDWdAHK[cg#hC&rbS@kj!\DiXi2_RX+q8Kg6)E7s)DdnL=(OjtI',g1p.\'FRZ
%1^9g\Mbs4<08Z$I":@%L7KdQj)BRZ:]Jju;8#X@#Tl/Uo(=eGE>@nBOK-"uDUb?]<9ARDNWSK[P=dl[gRZ]sLDdd!BQ20^)H,fre
%Rk]F!A97FSMAQcZ>3>(BnebfBU]NB78UVE`j53N2BBfsBYcMhj-ql8/MD4[o2?^1\8[X+l9l*Q"qKlhYfmM'3D+3N@WU!so:dF;]
%(0:eW4sMq"khBj0pV6OX[+Th/M-6%N9(T?*CiKJZaYCQappsZ7_q/=c?.F[[(pE.20^F.<Q>hiIJ-fth4$!90(1W_a+(:Dn%07nl
%k4gql9`a;YDni];@qD8U<$o*VceH2X0c>0Y6`g-o;B6\B^l'6sUhi8S'jfXEXjYIOhdmq2%=u0EpoiMV0e@?q@cXNa8u1j0V_d/`
%f$^Qhfnh3?g<ZU;mpLj^_]"p9ccb]uY=lf@K&EH1#DiRaf%<Db(,.M&Z*X^uLW#dIF:BDB1CJTs\DS4oA9PiS)gW:WGH'2;HJh)8
%S]P03D,$To^%Y[OkLFaWoSC#b"141rR_.I'\GU2I??e&A1`OQjnC'"aJ\Bt&RpC?Rc5Wg7i$k*5#tg@+V5mDSCdUs7%"mAiV7_gb
%bBd#)fm(ITF#C`te[$Ob%Ha%Pa)L6^hlsLaJXaO62]mG0_MW1)8aNThD54`-Ia*RV_HB/PP0D^+5>tIIo$/bG4\3QY/I'KN'4=nO
%22XY;pW0_O&SF6JR>I;3D>:r[0`*l9U%*:@<le3I=5/]$C(\0+E$'#L;[lPA!eSTbF"lK7n7FYHY(96Zel9;7WXCpFehrs?RmI=f
%$knNf@>p_rR:TbXYXNRa>^j:iT!;")(bd@;pB?Q;10M`R(MC'Zkq\.SCBT>/E6(U!ndlrR?mnn2[<%5@7]L"2cdFeYBk<;L0(>UY
%YDZO*DpY6PN4hWcSmNT^hE`)[*A#ZL`34%Vg0@Sm^[/tpZaQ:!$HLB'4cbNFh09o;m#g9\;9I]RM<Ib9VL#-&[@N?Uia^`M#iNbo
%n1PR;$JsFYp%T0fB[jF?\=]NooZ<#ed/_qp%D=K`(kVl@J2:iUghKNd_!Z+tcJhBjmB=Sj[t`:Jq[DZS4V[p(1!Nn*+V;jQ6MEEZ
%:d9S2RsMq^Y!lYGgjQ0(R"i2UO4Yt3Y.D5`OuUOoD*Bn)N$8#ICF'1anW'8VD2/K+A]5\Z[MOrhCUCo="d[L2/+DfF/pj4kCG3Y*
%[upS6-]t"YT8sB]&&qRPbF3GTJ,-W>6c=bZM,,7-i*6T2/m&\R1:e^qUBk?bW*rXOm/VlH(#.@<8lV1X$c+iGWE)H_"%ZH?Z[e9c
%4l_7ncq'>+[Wf!tI]LsFUB)V[f3gAX>>h1<[nLqgNr_-eV;iLQeKX&[/H;lGLUOWb5/FGj)F5:;X9[CD)brr&$e%AF6N`p=pP02i
%k]e8(Kq_7nF;!N#lCkS*3Z+P3p,9VOA536^TQtbjb\".;<7.Y5@e3#PRVe!D+b2Jb3(P;4m\U[Ah6q"pCEX(,9ai+*)V4udl(Jgs
%4l=J"CH][\[R-a\^9)@7GM?6"ccSp%Y7C'$*]/61@;Bmi15LQlM:e+[Er!g-O"G;te/1^i`&>1d=5NQ^U#jF`WgHB9AD8q`mJ]Dd
%RN3L7O._N,q#tO,3>0CBp@G'-C^-&!Co`ZM\#8fW9(T7rchp.HGY%bI%UQI`K^9X90jE9qO4jBcM.+8U_.uHn;$+rBp?9<f((I1m
%?tP0+^\/Z8(QN1KmWXM`4#ofQ*g#<*0Iege).X8+1!*`I@h044]1\s>fdt=SRK"SLMHh$lke\K01W.H]1W_su12T!;Woq#=R%R;/
%[^I\s\aC:jpInf]3QY=(E(OZabRUtp`9Fh#M^8n>0euM=e7W%O7RNW/I5B"0q`=IB+gM>&#i/nQ0?*=SV3J4A%oEeRh'Z&%:7Dqk
%k^#p^<O+-dZK3(rS1sS[6=&"EU[<0;-4-glQKRjj2!+X`(>feJ"&`PMO6U6\@TWamq*nK.[C?<tm`tG(P3r=sh9@E1LdmEKC^e9X
%et6.bB+-#qEB1@+&4)0l"_Pd6+0iLo>E501=>eY'Z"2?>[$dp&1WCTm"D0;20NP\)7YI.4H77\AOhE<A9nP5?(qr+@;,n/6QKhk"
%YZ_Dcr'?.Bcg&$`\qS/b6Ul%rdb\tK=hVOE?VEM@LJJ!s1Q74D4XG`X#qXdWP9o!3_*SOBO8p1grXfC;1!pQHG*\l.,H4pM)!IN[
%g!27qnaI"<pu%:*,ej$@2h3BQ(qE2i2!h[/2FTG6A`o9"p]>Y3h?2RpBK3lG#+2hui)H]b9N,:\=es-S.!me'9[(Mg]QDS0]i'72
%WpVR0FH;f92*=7,L5?B+WD')l0!Wn!Y#hl%7<=*E=,^$Q,dWCZJ5gJ18K__20Mf*3omssgGRM2e8e#5I\-<Uh%"uQ_b6_SE;.#BU
%)h=3j!D&>f3,#G"AT>#OXD85LL0ir<K7i8]pGdJI4"(1C-XXhC!FOJp48m&9:Hi#>WbS9k`kj$CHX0p)nK(?&QF#rq)n::WN,g-m
%YiZ+iUfA?C]mI%cc/\^bCIHna(E-/+Ol^7*WpbBrkM38/lYL3_2s"ipY'([NWi^3<i6RA8Bfh/H,`^71`j)VR.5:AJmE7ht_p;1d
%=XFT$+'\E/Ss)EA6\]r#o=fNA_6,T#p+OK0RdT#VRk%SdQ/l6MR-/#iiQ6[GW;6OZdFKd'"Xp.JH%5G9"&Fj6P`H:GCOYU^i:aer
%j-`%nlkDUA*^)L!ce.i>1O9<3!-/7adV!c$nsGM.$_-YjnThUl62n;^,bZrdo]@sL&K&n7/K^W1WuaCoRKZu-m0iu7WCo143&tdT
%I0[36'lFrfI<)&si:-h/ieV[oN:2>l>sc_N@CQLnA1RgDG"954'NbW6B4o);o8iLN_p;-ArkO<>/T=Whb#XdjLBf1'i<%glZ>dk+
%\mh=m.Ki4uec98.a-.-K'dS%2hl[YJrDk!mbB;WDo$cTHW`+o%TRJSB3#,XFEJ)M&)7m*8lJf?54:cFj9QDNuR,!>/b3M.hk)F.t
%@[>Cc,-%UX,RD2!KUU^S=XX(BoGR(:8,@93`ff>*@F[f-?\g8cL.bY?KDHq?T_J:'7`R%o"O`:9($?&Z(9sLi[0g[jSg0LbJa\?F
%kq]<%hRc3GD?SOI`WrSm=$.]E#CZVkILYk+F3sc"TGK;Pm=]^diBtB+p[GU@d:Dusm1*$`7a#fNrj?9'#AG1E"(GS_8KLVe=V/R9
%#33P>//@W_d%LKEoWGC_jA3Q:/eSWHq26(Ri2Z,H0*H2[JB9I!XC)NJ1+G?;(9dPmA!lmPg\39!i'^3uY&j/+B"MUogbY*p9IAoX
%s8&oBK2(n5U.D=]4'c;)Rc2<_qs!AKBbgtl^Dpg;1Qae4#KtX"9g?gY@<aW+aB'P%K)>?cZ"^e9N9ZR]Ctj6G-/!Q[2htAC^`aCr
%^PP#U1Ql55-P'!NJ]7ZFhRBjq\g5nP%K6l^U7j48IZ+g2W5'IAL-$$mTofe4,h!CXqYAtu@]d`,HWQnYgiU"kZQeZr\auB^=KqqE
%8k1)4atPRZ&X71nK*t(B03FgYE>Um8r?\*Cj=P:bmE%BO+JdFk;33T7eLk8P]jG&9Mrm9G!q5K@;Yb)a7162>LX+>oi:7jgi9Ea`
%W*YV4Re?Cr_CBW&[l)I^)brS1Zd-2dX(5$#Ao$R/'&%u$/"q)q0ti_^WedS*Vm?T6N/*0_\0G7BkIl!P^_gB5`>_@Rr-=Pokh^Rj
%a+9\0a?J!A`EGk<N+GNgqJ=D2Lgk6nGX0tBB6YB9U1%PP&rP1@4Ujj/k*C>`;#`R"2a+hAd(Y70&dsWZ]!XEna)\$-Naa^!Xbi;q
%a(/amYRTaL*&cRhoElA36Sk&sQ`DgbekZ\&rDJ_1IQF"gc9tB=h8k3A,cF>UB_L)?\b1@\#+RO<9`op&L-%(rWMg(!ZG-Gb211L)
%(j3#c!b^QU,eSDbSfg8[Kcm]61$i7UVE2>V)7ib!,deGSI'#)$-Tr4K`&Yk5Y,Ym](`S#:5_etlj(?gAX.`VdRA;T;#B2`m0tPp6
%h8c(r\T[Im%r*tg*X[0me_`*\$_-S#X,D[0^G?6&nUibYPh`8-'qWkt-V=%VJe44gGC._/@\kc*)p/VipW1R96;i!S\L.[].+0M5
%Q4\%WY&P[LDJ;:h<]#jRh%!lD^"erJR+T<$G[4gpmuK&SUsfQM8::A"!AQG[$-("s\OoU*Hbh5THYU(Z)<gTc^XR:Gr,;54b2kc]
%A+giF/T^<Q3)Vb`qmk/h.taP:/./M`-cfs9#%kHU#$dO%<!tnObW.Fp5C<.73d'&u,).NDk+X/QgJu'b1<VtnKa:h#31^<e]qUEK
%O_NAZE<1]S?-mSob4pI).=+fJC<2t;'uK*.9aKtcL<uu6^frn<;$jdS!kQ-Ji;Zi3/8,0g>LDG:e82WE;7"%m*KX'3gBGk*7a?4U
%M1R*cdktrQF(-&FQY\G@N.C7hZe1i0dXJ/'L!tYjc3ISh@r*ND+UNX]BOr?=PSe(^BI9'oP(ir;R0Yq]SRC-d,%:2@1l7J8qrAeT
%qC`:8`^N6tQ5kJ7*F3pHN"HK=,5ZG"!:RVH53;`Q;.nK';'+O2^sVrBRc)0C#_"M`P)qWI`MPR3]D??d4[S?973V$n>3*f8!e.:c
%NEA3W&4#Y+L<qXX#-Oodl9c>'A%&@BR@RN$)jdgaf%e4JiR;D2?'qG$Gl_*j0`G<nPU^!<_nrj0>$+r!1YU9th)Q1RqkS:@c@s'6
%GX%pV>[sg\ARSdNGO.],``XF<2lt"f*4WYgR]TY>>ho<Fa&3?5ANtQK=5%]NAA]j%\$ep#i[!7c&T)DFJe*B1!\`92ZCI8&hs[H=
%(tjl6M"'dYB>O*0$A=Jk0t:V22m1V>>P@j%.f`#iU(Pp6G&47q!l53.fmD(1[Z#EC#V]AG%c,<Ace[F](rV=k!Z>Bnrf*KT=k(GA
%>Npn#"\3LVG%"Z(4iZ.AR'a)$P7qA)q%8HhRT;FDY0?C"60uQFc,7Zh"0/m_iY??bhL]FU#:sd3aG<TBeKQ0:L^)ZmjmUI1fdFRI
%&&##,nst_j]Fa_)(C(1o3ItcL*nt&=Y]at25+\?/@ANmlnCgRCdeh@]Kj$n!,Ck[XlBaP&]"hl@9/TZ(eR_S.V&udF1_(=7kkk.s
%QM@>!"rkA5X4OYC0&*KU4^Vb*cj0,B-(]-3&BG@?$B&k6D>,g+D>\M[8'>lp9b/0#SR;ee-(h99b;DOCk#cB8q6[8roB\i"maeV[
%*Tgf3qK`T[2drI`;T'"+^d^'7a+TI\^nn?j0qt_\[iN=7,J*S6jZ/Brm?4;nJf\L.9fl&M[VJMoHh6FM7_H+S>$(*_<W`\EL:mB;
%b&NisHNH/l%qic.B)90K)-J'ks4u"Mn#iYC`P815V2KgaW%'l]2a89DT*`e99/esuDSjuTC21'DF4Ogo^?al,S;!^ZH6a84E<43s
%eP8iADV/1*:D_H<FG>pq,LQ1a0)$pL,YWb4(Ma"j0"3b#;L^VlNr6EK,ZCIK<HHkO@Y;Z0Xsn.]bL*T.b(9WpgT`Umis.SY$R$lb
%:.oBX4FCs)q%:IZi;"/Q=`1IR\>10H:mWY18">k-X`-0)E8NmJ-+q'-*bs9M`b^4uX5i_AVOGAG:e(5'BCbr].:41'6So$q$<7=k
%b<>oPOqX'77j&0/[XQ<ab?ij-peH.0]LitrQ3oJh#i.*;e?Prm)s#P?nW;3jK[A,>&G"L/pT$PR/I/p(O&5aZX'7/t?>$3/&>L'P
%/Ve9pmje4hVA>$nnMo6eZ"1QDHlZa4!4dM`7XGPPjJ5kGK:$&;g3Eb9G-ncF/X=L,\6MT_5`i]kA-g8M&Jrrc_Qo.dI,!QEgZ]Og
%mt&2aBjVPEmRAq2EUAJI_#fh@&EqeuCkk^0RafdYWXuPGkg21e\,%_dl?@\aTfeDJ<>J^6clO9'$!;Uq2^9,K$-btT!!lXAMJ8S@
%KW-F4)6<1-ZUnQ9S[3uT5F']SXC.*\Tb.cCj;!rs<>;md>FBs9MH9kP=uhFnmdu@<<7sTM*;/tqLYdSs>H2K5G\cBU_PD@T9Jb\c
%4c.pB7MsV^H?rP=m4/lT[u)2j("$F@K:nFTN($:lpH9SnR02)nGe@*L?U4-3:RNMq/a>`je8T9DUMh`]#5A36NiHXF_dEW^BuI6j
%:;E88)!5OGI8`9?1(l:Y#,k[R\6Y@$OXFYbi:TsqS5I@UauMD:LrNjNi!d%1pHDLX:$1`/$.n9l?-^o:&H3;;fY!GnQNC8I\'UF(
%8pD4cB'aJ\XMDI`\N;/Rg%T4U\?LTMH7RF/"Ln^*#7.s0#JsP:=I+X)3aL:ZV*Qa*b>pSdh@UAXH&6F'pc)HEFIR[P*;mc(U9jWg
%?RVZGqR=3<G`(_a&,uOb2FY"9]Aig8k(p/gOPAM9rk45`BfR,%&0O2ZFd=+-WasF;^P!^99$1$pEeB@&3Tp,io"ZuM?NX*%ISDs5
%fr#>`fR5];dnOQdV:7<D:)d5ao&[nER6'I>LYQ!/n<3hN7?19=2JDj`iAS4a[,7eVo<1durD<7gK-:$::CrNQolq/L'S:#!N:Y*g
%ai+cRrr:o3rY+E=pn8ep4C40mD9tL#5P,K4_;>_eoUdgmIi3]Kj*%X8)t4VeQ*I?f4(O^HM8-URWWKXS`_DLZOlc0KL!XaHmJq.P
%S31hq$a\@PO[Jqdn&kG`'VSjh@UQ*H+oHR+8B@@k'`M62i'33g2_bUR`h0krlC57&nefQZ(\nsDq7/:KmrSDHZObk:6C^4mXat$b
%ZqKg#Q-tc3fO<j-n>YS@rnR*<?7a\is)e8\Gb'WQBAWN9_N3;c6[?oLWqj1;:TVi;^NO-`q]j&*gZ++9T[-D>drXsZ$9rtna+";&
%k_Em^/73QqV2TEr?S?H(\N1iI_IVL)A%10@Gj8^%UX7O@'R.hgpT0Df0K"UF]@daq%j06p,_&K6+QD98';#/W7OF"0\Jte0(44Xr
%ZO!kI`?MEj=@Ga7-dQ'fBu/b5f%7r/Bp%fY?"hkV[W'EF".DsJgh\tWir`_n:)F;n3_p2'3RQi+Db8]h(>-9K&CC=*Nng[R)WS/N
%eP0_U&#0[-)rXq5n]K0k_;tj?lksqbkdl,iVPf;rGq7_SnO(n[YFkNNf]K2NC+UpM4!C#LibI<&Yi0o\)VMOrLlfjR-8/Col+?N6
%%-_s&6?HasQRs`HV`$^4p\f*%KY,oABRT[N_/Xd4bJUHF//F(<<YIXb/J$>7KZu46&2'_F8&`WC'?\96+W"SfX$0lS#2EpYQY);?
%I>G"EjON9G=0p#SQ0WK5,lH.?f\u_fHcXV$gH<QBD#^o5:Dn\gdB4p%6.UEar^lMp4(IufU@Zu?SmFW7HpKshHMJ?OYojQiUUTSn
%p*3Xo^V.ce.B@,GrPq1m457r9\h#1lA%4]cF)s572IR]2gCC<h8HdpoBn!b:TBGi<cJaDD[^>Qe:M*;dVRYb&4IgcK[u\3,kM>DT
%]-d3l;2T:l0S"0'BD'Iu8n%u;+`19B,.T6\BiHk5.bMZJjEQ([]USM]m[lYdG0=hlMT+tK,I;'-/bY=9a7l`*(<\+q^0GfONYu:M
%K^9R126S)@.B?Co)_*(2Qni$gJ6F&Zo=K7*)uG>(JX1ChN0NJq]N13$:[J:fqXs*dS"e0:/bZ7lU3OB>F.:LZ(GVLL5+-q_MgVri
%hHKCuXaCF>282pVd]\_X%,pk2j&MDR3&`J[ds<&iOrTckSVB?``a@o!n87AGd1h%E@!P@3N/qJU5X"K)/7SoK^->u^AVA(:^7-Hg
%iN`9+Pu#fffN?AZN/rl[QVYKdI$gGV,6t905OB?Qo1n4jD,M2tq/&K3^o*`4q>(l0otfJ!4=TA-)HBSg,.DqZh'@+nmr%OTLW<1N
%Ai>=iKk;gdbK'$C[a@&ugW#?L\qFl#%f*YA4uR(-f<K-nE1V_-.9#Dq&)k#l5qo#7I-b:&>IM>NYg+dr%N9^JODQhS^-U(.QB@GK
%PsV(F4Nq)V^@AH+HBc&*j[GPr")XTgE9,PjBoU,Y#.<e)@A^n.@J&J4T)J47QJ+@Fj4;0T=Pgo+r-Mt'Lc/G/Sdc/oB\>%*SqbSC
%V_E74hUG1iqg+B3`^rK`e^R;`Rim:RU9:+p%>\QEiToT8Qttfkfap@%4@fDK*'_QAKq=pKT%MN$kP+`[jSh,nHoHB[Y6XlOhHlIO
%`)-'.\'apr?[/_[CEOtDBf&d1Vg1>g/Z_3RKQH4q;0Ys^b-r@!CF<LQ5Bk+noh@a_.r!$pc7)9[encuQQ<E+r'H!aTGSZSl_W"4;
%:"YY7&*;9dh0UOG-K2uUk4siD)GYsNI<uiQf@Du&q;ZTb*nn)ip0Qf&E?5"@qs8Jic3=AuO`>Y1[.'6"3PW8M0cA_O+6V8.lfYEJ
%q!it[r]=rCAk(q),bGu[X0)mWd7)R%LOOS*2dlFkY(8?0S>X7[2"L<7P:70L[*kbdGi7?)E^EDN9\`+[iEf$,8QFHIX7Dqf-:dtE
%)c!kL68'[6K44I@@;<s%0=82S'Z'E/@.HOYVY2E2S=Hk(_dl43Gb3T=.$A9.ZL_3k!WL2ml.Juqbf?q'nXE8%Q`F"I2e#W+d_.4N
%m.Jd"DR?FbWF08jZ;>bj8e3An,bhr)]Z8',KQ%u@,^/6N/_Hmkflaj:Oe5KJPq,Lp!?;H[/(a-]!VGD!kY>$_/5GSp_#`7CVFig.
%]a7hMIP^SWDM"j^%RsC\>$sdBn"S0"e,J2*NlcRp5h$K*a<7ZhKK>1nDRSK9jiC\Icl%;4<(CRsW*n#gJ@h9';p@>ab^iq([IUVJ
%)!ph+_ekLjIQSXoMm&i1*H%!2aN7DmKF*uCY?K;7R(('!muutU\IKt)*3]gtYPebs[R:UT7g%M+)(&Y5W2@'=G<c0,ggul67(h2(
%7k*[FTsO8A_)"bf>9YkpSZ2l0dP2I?,nmX#:tD/$THIXa;Q$)[!468mCnm?/kOVFU_dmQo/;(2:R*P2o-dmSin\/[@jW#[)cT/;=
%F2Ag46,bB<jP08O_6[:P;6m^9l>i)k#5'5A7nC/P63in^gsqF+6_f]Li5RZDO^f40PO2Z$3q')/(!\Rf:)nq,od^"4b9R?pA'1;D
%A.c0#a(kluj:YpJarXbu$f-[i-bn'<N_*SIegEi]EHa#B4n[_p5BcmS'_BPWCEN)$)#5>9J)pisJ\DnJ+#>!4=9V)EF7/'A)4XT8
%W,ahlKqTKT534J$c8cE>E/JiFRWTPPSJJ3sJ5o'2M^L`Y:_\_\+%ljL]L#+a#I)r_*osU:jgIN7VZrFjq_mbNLpT3)4VBn@KNCC@
%?G2"TS^HSG>%h-q^O&_`cj2I_c/VYXQn>@XC)Y0k:CCcN)8=g=5i$RUg_Fkt\@Xg8D0io7+KZDkCk_=$<bLZR!T$7USR\"*#:@j?
%f\ffCrEHeokrE0!%-G]tC,p]58u_=p3-X*.U;-F9KC.koG#!a]O$^*6XW*A]h;u:G:)Vik>DInMr"@!d;AGaGhXT#YG-QS;6`htR
%EAq%U3s\cLXp2P#R2qKo4InO%=q.WGA"ntf%OGt]7D#h,`iZILGf,ib3?]Bo69_b+mZ9RLfJ!c*LM*b&H`<@5'34e7T;NOWp8g@<
%4?/'sk_m,'4/0qqGT[esEg]SXNl]NrT$6C&GDT"NG'/@cB5&/^rDa^@6`j!>'":c0m5e*+M5n#&?>RI*:"HK9>]%M)&'g_:GCh%f
%DVnAfT_gh4Kla7LS&u/ulqCI&4gibNl5<IW:[C8+A3;adD4R7JA3=1lVX/QK#P[lN?i;@/L6AB05kl.Daq_4+9^^Tp:,n>I(A\p+
%7XHJVM$;a,eWgJMW^rqC0WQ4#q8[b_SG?.F^\@adU<:jGMNQifgZg'<<ekrM43&kPRBWuq"\?R-k](inOmc:7r:Xo1`.NJ:>t4+e
%[TX3aEg&.fm<#N\@7%`o9mC3*g/(SWS-FjLI9>LqeAoO29J"AQbDA?cU+cDR_FL*;+/&Jm"#A5G?J\@5[&?r7-TjGrcSY!i-`F5G
%\5-2bKor[<B"Qo9g!T="UVDguL*H'hDmmAGZ!J:-Ca'e']Bo.i?7f_u7-q5`O0$m$Q\![3FZ5J4ls","_$`0qMI.#!A=@lJhmVPc
%6X*CtTu3QB0snusn="#&4rRWC]X:N%hN:0-6:nujCag'0:A+$0ABmWIN.$3h;G!q"e9ND)EVu-*i#/#i;j#A44V1;W.Uc5,L`5h%
%)c[fQ`R'cSL7G[@\Vomgol>aYZTB<@+hjR7I[b\F#+Dj*&e'\ZBHRcPaY[J%Ork2dU`Qd(K);['bSe=`aplP4WaK5qXMuI)BcAi`
%T$`7*@8nQJ9J%M=bUdrf.h_]a'1/0?QN"qCr/Nl//**jV/f9"V'<iUHf1+.2fN[&*H&(\n\("jh&*li"qTH)@&o':_%r)"`cALYN
%)-M!XOL$-A?GQ`\>!ogp@GBnlM+^pfXYhQScDG-?4'dt?^L3&_>SJse/<_4o(AAjiZr[Dc6C$i%H9oDKB$O#:UE+hOmPT<P"GLMq
%>Rom,m7-#;*,gON[G"Cac&$C7aX6nqV+IVum@i)=]PaMFJP$e-Q_`\-G[sZ'kBV"u?.h2-%C5OVF>f(HB:.eTZ-fCpIJHWk!u;eX
%>\Jg<k]RFmWOSE-Lt0@%C9I#/Ne3pD/g"Bi=l\PAKWd7n:^6N"'CpZd;2S%SqKS*h)TbKK[$Q/28AKb)Ige/`drnfL)K.pJcrW3p
%a9hromr:53]l6$nDGto/;npnR?JgE-=W%`%qD;$<2F>ZI);4@jf5.J:+F+ora+73T&"U&g7+m[RVQg'&8kp>9a_10b,!W4=%c?YX
%],`^=?Um;<jDHlCY]UtGdR3fCo4%8/o(Y*lASLjO+@d71\XMJ!XkX]kZet$8)uHsI\Qt&5$1r=HP38\.XR>ep4X[$-C+Ndqr&G]q
%*-WYdfon>TJf1.#CC3h8ak`/5%==M.&N"fl(/R'D(V(aMFmJ(N6B=4lbt)O(o>FEuJbDU,SHbBm^d+s*LkGq2>*\\(:[ue9ENr)*
%8R[tir\JcR%]A-,cb<K<"&3lP=!4/Xd;EOY;7E=an5u`i2]>nkDV2kog2"n5fUr-@_)h5[EFZ>Wc`V`I8dF`cD4D@sWt=5l-&m,Y
%$A"ANB+h*=!79IIrR>^R07&@:%*\i&?GJ%]Q\:"`Eld"XqfIBhk,d]^ef[qfUuJL0)T3C/P;1+t65HJ47?J31$T7[!<Y;X+6<NI+
%Jf5odY:5t/DoE?79gqkM0:ISa#$_tRR%+b\%`s`%jWR5ACq=E%R=A'-\&R*p3fXitBi6oqe[7_k;E*EOSi)WTa2[e&*#PoMLW4M9
%PP&%jABqN&+8`[[]T&Y<7ah\a;4[#LIMQ4h'pXb"jN9\o\]7;1,.5_akdGI_or9=s5YU%QN6O*nY1aBmSLhiF<eD?bl/$WJ@IQZa
%:PO&<pV_"7(iXYc`Ru_Nf@'fMr%MC5fg[Yn`7\>W$-F"q<OX^Fg%f?=hGL1eGR[:K=B_=Xd8RtkX06Z+^Xk%pf#jjL,&>LIX*bQo
%4eVq$(ETcM<K="M"PoQJLl>7uag6b_/<AEM50se`'W3%<0?*-P"DkPs&k;n7oG>I^oB^:[$+UT__XO[089W8paN9PJrp-^NW6AN_
%jbl.,=gt>SNO5(BmA^KR:'GFM/RGZm\`OP@^VWr]`9!#b:p,N4b^2bjW)Z-O]Nr@[BWAg)`Y]cI+tWfCpi0"_@V1leGO:fh3gp8^
%RUGGq.C;[2N!W^LOgTV'@SI#(]4Z.ff@jiLF1>]B3WC:/?7a1=mB?qY:[pPpS+S7'c;h0'NPoG-YHb5AH;@D7?pl*Jq]Cb8IqY2A
%'n#g7YH%hm*e6A4piu,b_M#Ot8nB>Sf9Yd)M.7WodmB(,CC$Koc@kcA=HV*:F:l&uSP75ij=h:9&?jP>j:P-/a@4RgME<VXBumr*
%)@`cYj^*5?U`SBMA6I(Q375^%*g"b"KS$8k?r:Ja+r@Gc@kmm:LTk[$rfbUQlFjdtei6LDhi<Fof)a*M7?c*SMh8WtOSH"l^nSDX
%Zs-FmVD)c(:"a#k[3'%?GIXF(`U<@STpTI_?6NO!NulJlc$53l".P,FA1X>m>'=uCn3)ai9?Z9MKp]hJ;'1q8#5q4@m?V/N9?aQ.
%Bopfs%&)!u;'S<.mbasYaZYDSF!Cf%92Z`^,9):de<:mJT:2;`jf\J)fP19M]FW"6m!_b]"5EVq=Tr*V%f!5,fjSbg/LE0_A-rX#
%J<7aXn5+sbcB:CM+!>iKJ1k@S%fUlc'QBs!k+DO%P6)L3QY@f-&AfP\GFd8>2n#$c[MuTp_LcrT1NF)8-i?;4$Ub=hGkE56;Mt4[
%`@->a4VrYu9@Qa/a,p^2OE2H\U;YkT-lnqUb2g[8#M-&Wdhh>+7$aVhh74UDia'4B`u\ER>1M/KTH;3QV:jVVMdW,>BUdW+>)6@)
%h=NK"=bt@q",fhbk\l]+meHHRI-GiZ8qH>\R,ud>n+tQ"@[jIL&Cr"5/QW$Ca]tsl5akU@6FGj/[e4G&)u>@P$Ng.DX&Q,kd=Em`
%Q\rtnP-1qUJ6]^/h'\Vl@$YoWQ<FQ>\JcXPLXqEu9%b1:6mb+dIJ8]T7dpD^fj3uKp$M0*QoF[2Vko$)n]mjEWZ,ppm+D"'+Y=RG
%gT`D\Hs8_+mLdJ^Ot<;0c\#aj+m];(cTk%d(i+:e83\d(&:aq#4Ao?%)rK.*EEj6AQ.Ls>=m1pJl%TTokN+E&db&"VXH3_iL'h8N
%RE[<g(t^`LhW8$f=eL<hHXC)PY^3h^+(VJY&6<LS_7k%3PX/]h`t_8KM\.oV1P.pa5/%fI2\aKoMeIX.m!+r(!Ysr^I/*.G,mFeZ
%7!MI('[?f$V=E_ZLu@N<Y6X!9ksB2MH;n2LBL)!BmH;PID^qU!JPYk-jDnD71ShE.ATCgq77&tF%M&>%E<Mk,AZ%Z+O&^?>FIjZW
%.VbX_UL;?4bAM>)#+-]bMc*tE/.=]O->gKmNh5/l<imrT*r,k#lq;D!*EV;k^?-hj3<u&Sf-\.JX_Lq^Lc1ZLgi^YSB=%:Co&-p>
%<t%47q,*XR)06WTR1i9g7I(X/(ATsg%?EoFM>+BF;W6(Q*^)GGl8J8hCFW;Ra(XFW)@j!k?<pkW"j5+l]VR[a3@-uSkDYj:1[0Se
%Xu]lYXVaiJcK[r5!#ufG<saQ6]Vh@1]_(@RQ1''Bb!%'MPR3,69cgYr@;kL7.dae^="n]>`b(?.)LeGB;CEj;dh"="XF(*0MH9V8
%Y]VA8Rp_aSTEUEt=g#FA@bBT%j5IdIX8,iq.Rp/T.1V\3q##32-cgBBRV'D:r/uG`>]0ChLQ%S!d4i.i*UN?=B3Gc=\@+.H/qeuo
%^A&"+,SBP&'MTr`1ksaMAcc(/$94gn3//nc0aJ+fM>9_b]2o\H;$.QC?=F-doe$N(-X_<*ZGLqo0"ViKNI@pDRtL/<)K;_[/U3[A
%L5s3AFHh<MC-mCJFUis.)=ZFm.[=*McK;q;>L+:,nR$K0\'Vo%E/,]V&C.AR=fBJf-6\7!5E'b[Jta@_Qj/i?:j0CVUHMWmnCpuh
%8Dd/HGhiI1U7)>s0]-/0+uMH0S,@Y$fEF;aBh!!Zo1k5E31d7K8r<p0bW%5eM9%cjg1Y0KUuDc9H.uF.^[ph/,9$mY,Xb#VeB*5N
%=;(=0\*eOO&E\d@@S?8$JpP2>TQD:0K'$`)*CrWSC+1hl[&#bgkBj[WJHs<$QqJC3N',E![3\qQB9Ds547Cl]?`/'#K0iV+6EJFn
%pSPh#qg;Y=L>$h.Y!6XC'2S+robrM+6,S>BF^/"kqH0%JBXJR,J%YII9]Q[;(\MhhD.1!+/DC+WS)N]I9-CJti6jjA.c`(q3_Kqn
%`/6%M\AH+^cm#j;n72S'\rq9=nLBq-L4KpYTF/aXSnU65rinHC7L>soq8M;N3EC(uH(PZ:aU]S\KILdKDLEVq\^s+a\X5*J;62_i
%UGD-I,Vc`r_njN(5Y/,3q/Z7=M?HTL1`2[FgbXqt=b+T[12Kjun4S"e9g6G-g%f>WEpr([AQ*-iI6/0Th34UEJi7oS!Z'2J?0MhH
%q9BD=I0/;A-UMV987.(g@]?k'+4:8R</(/Y7c@^M#;Ah`<6ecr,.lU^J4NCMs70qI=%B\dM82B8W^>*q8nLU*<H+5]>8H&j.Wk\5
%;--koGr]e>^l3K^*(0>ajV#gQOmPY'+(QeG)Fd4DQZI::J3s"q,37aN#M6=$_jP@1;?:Suk?17^.=/d=6a""9dV;X=L(#<q*2G/#
%>cl]pUPLRKCjA1,UV4,k)V$WuSq8b)f/Uu>bu`<QAMIo5,?EXpf[0<L2.]*-O4<,(?V(\X60MCmrTK-Nl.'L;(UKrhk]J$W"^g\"
%`cU'lV%R2H5;)lDH1%Br<i>FT4E%(&h4aIQ:?7'Kp(d.m]6k9qJ9D,YZIdU-0,Dc^<d4*G5u(bGe_m@*LP.0^=2>T%o""09?=^Is
%q)1oC=EDL2Nq:0*FnVL&H@DDb33gM&>T8a)8;Pe.)jcE^KXan*%UhYHk`Fb]ABbgH+_lp07us..&D=k@npEF(=^sCuWKG_RcHacE
%>Ba6E5nd.uC;ecP')KsLQ37+egL\`nSfJutV=#,VY4`^Q*du]FB7hIAqH?i*\F2*QRc/'W'.r20Z#t]#a90)f@,o6hQ#$7m_H@Y"
%)Jo:8?3hksD.Y[LS(>a`UOH/Mr!2:(0h,bQU4XLekhNrY&,m%^EJ2etNh_;.271r%MMZ\i.1p<n?b6W^e.2<aVHqWRF])1(3)mbp
%o59/&l6.2SgOUjU*ECSmVH72:XY,UCC)T/)*JPAf4<@ni+b;_ulEE#mL2+\rY_kpHZ*jJZ!gB+.$7iWJBVR;'1uJ]@6Fsj:Y5":d
%gNdTkp%NGG3J`p+<hd4$A(tdD(8>I;?g.#<RH?VuQigYeO9KuuGmI\?[.I@4`5Bn\,.`t.c%p'>;;,0<ruc5Y^nIH$h/G4g:bSl'
%i>/IMMT;cRG9lab2@#A_!cH+`1]">on68M8<KkgXCNPhD,Ga89eG-cK+=oHM=XR%&';8$6[1VnZB:r1*(__0Ze5AB<Ms(>L3i?<s
%M;;L8cN`L9BB-hF:_@ggMN#!HE<!Yio$rXi3g5$2Jplr.f'^?T$YY__)YFkd5X[.(OZt`E%q%K(7@J"P/EOpU-m[YBpqXm:=&;;3
%$fV=`P@>7U$f(A0$"n\uHIO)l$A3kim3r+slH))Y)6p./f?QZd5s+L#,PCmA5NkpIAo["Cq(c&m@OfahR15?AV6;\q<T#I9i0@jN
%@q?7XqR?jD+GL(=NBVG[1c2s:(YWDGnR]$["?LjsL6!94pqp/8o"m,Y:)*iIe0SolI!P"W8='L5lm&?p15jd':k?A<,)+b4/`]&Y
%eq$AESu*SLLqc"HF%cPadN;9ah#>.)s4\lMIU&^s*1k9E+)eBHrL_`7>O.<f\`o(q%ie4LHW#E#!k6O6na^uiE^uKu213@3rG6C>
%^LkbirL1;56>m\i_c+YOX34Wmm+"T%hQNd-Sp@s4%"uHnhnR=G.ZLkF[n*[JoCG/fT7:/CkOp-8kPq3)rdUSj[ZG5%PLuM$]raNe
%:Cd9.H+a.Mfq8:tkm6im*0:4/YJ159o++X5h[K=e9k!i:idPd2$A@>[0oAf=_A[+ac!_O]Dgn`g\dCb6iUdI%Q8n0[f8e&lj[?<h
%@ae+=*V/Sd>\1R>T<]#p'E4SPL%+,:(a8Tr_=1!,m'Mm,*P4H6g*L:UfWaEkODcfCCXDTmp[#Q;nAe6[oK8ic6phg*m&;8t[5IQn
%MTj#p0XpPNlQLcBqN4"R?<lq`5Ng._VOlYVJARA69g^YuU]F.OT%gJGZ]W+1^NP:VgEYc4qr<j3EQ?D]1N[Pg)-f\hRH6X8pN(+>
%1R#pL3*Re8\(m`POL=3"PR(mrj>8">ST^5al;X)#R9r.4#HBsHHAV"_5P4+Q"0^:sJ;d(@=^;jM985PhOZ.a6Z&Yq)_RMgS!=V&$
%e[PO0iZtJtiaXqOUN^%\oG41@QoL2"jlG/N@<J/.fU%4r83mE8pZ8LG[b@--B]/-hWF8:&,?;FR<%b_TmS*'E`$W^2!hr#i3@USS
%"tGQa+#tRcen(mGMX=`0\C@FsC9iUKVTh\P?9Xt6)$m9jjgH)8;j\c\bB.C?osJU$,d;ZCh>u!RgNUT/RnW-B>WiAkZj#jPk3),(
%fr)8?\+\:K49B_r8''Tfpq\t:ji)")):c7`FmaLQDY\C#O(R0,c4CBlQYVM:FB8E267r=]2Eqr.a-1XqT:3HIeq_l`8"O`O5<Ur`
%1p4,kqEX#;7^7TA5<cf:(<sS<KD`jdY>Lg%'8`$OSggE3H.=Q.SG'X1lAT<F/EQ-ge#Ho.`Ao[!Vf51mqU4F:5-=[DX2!QKjXb"k
%rE<5bZ[4T9Fs^-URJQKGRV;8/^-:Cs*J1N@ps'iMlUCe.V+5uo+2tGGHCcN)bI69i'VN6AT0G2n](XS7&O+P*/aqU.qBiaSgU"N7
%I;"\bPHZUMIQTe!iA0kN#h_*1[FC32(g2<ro,l4X&%CE4m&A"kgQA8.dYsYTjBtT#(khkC<3<.d&S:9t?)*RfCWHuC)RK<FUr+d5
%g^B`",a)jXmA@13\,?&5]]I[Rj:HV<F^qTI"PRWW-2c8Qi8QtNI(!$3qmP*_'L`_XEik8KqXlHg_@]_P/[Guro6;$-I4b?E;Ad%6
%ERV+XO(7Be2K<GLT`s+UkO2trchsIba/Efb)`6H_E-"n6dd!/Qeok-"fuD&eA><jR01,?jis52L>o)W.STQ9.[rBB:]uo<Ro:o5X
%Q(ef2N0HtgYni%UDYXp0TYYPG?am*O&#fGDItJ*&\/KI;N20ToDm.Xg,[*VjUJ$O_\EaetU>nZt&EV%IDQiCO@Jmhc*'Se/J6&NO
%T9h&mB&StI`kP"hHB#CPV=7VYD8$<H'LfOm7_CQ)]DFQkgbPAqjUkr:9Bp.&,VMCd:(H:Ri(I55SHb7:;Vj&lUO/@]hepbopM8<C
%31bh@`%cV%4-(LpBmQi$p,"T.IVC)M/VU)-/ACWGEKLm6)n;hEGmIn'jikA$55Vr?"7\I.iUc_Z`$"3VNK:8e3UIM?>4(KjqZ&"a
%._NJ4'4?m$:IYPA5[Cg2PNk__R6O4@r&S3UUQ_9V4&>;/g!f877WEhpUV5DE_Pc#]IELF=>j.i]hj3/dr;'p)p,je*?/W/U#PB_f
%dR1mUQIMqVe8d*`MMl52?GCSOH$Vn^p]:)Pim1YF;t"@G!&SSJE%rqVbuZ'OR<&'=6@R2.X*h9fRD3pk9_;#qNuq'a'C@UTcI'[%
%9T#M4f8CW(A;!6k:!Bp`b5%Ekgh1g)`Uc/26$*LF1`on?b.3VkhSmS=Ok6e9f?Zg\nDaa@r-)hHS!T&=^cWY<j^(3tN*)m<HX\lS
%m*l1gnL[lQ'WYns&*"BXZRBOFZg!m8[fiNu[4M`$Nl&D<\"gI?/eC9jJ@MRk?GZb`IDkE#$.V!P?'9gg9tg%__f@QqV?0sB)2[FJ
%\jI9JaF*$gb@q/'>WKsmE_h:T[iWW-EC2Sp`t=Ee*B7Xeeu!DlBhD=k+q.*(9UUH9"o(haG%o5Ok"@CeGpiNh2(V/Ma6Mr@a!dOK
%7pup:3PlcQ;"fj,L&pT)PcA[je0P[NFE.f].sO3e6QV&YeEhTZjP$U]%gV/PiYJ;*G8qBOSj)B1rA>R"mI:r&b.D.&&R8#LMICd6
%NobuA;j7^64(`T.'@I!$W^jbMl<[4.O*o\V=gE]"_ffp_MR)Y.n!VS[ZFA?s^eNsM!t_?h*6UUu.#HX=K+6uX/YnOT/3R1X3IXS^
%B?[)]*ZKf]os@]$KAHPU$8qe[i;`aE`G9\CcU0-jH))WN-F3nmMclojVrA6NQ)[hIbfWSVEKX6&\iGGc['f.>L4lKX<GB#g&,8uW
%rNn8F=+!9$&9kZ":ka0i*S;ID+5a5pcT=Q(o9A(n_=BmC$;Z!A\%lCqXu8/5TD86`OYSfC2>Lk#4]D6cf]EsWb]1r4`m/NI)Gg4,
%gC)YQs"1/uELT2RPI1\sJFDbjS_C<K<V7NeU-@LaN'93ZfQdUWcA1F;+mdLBrLJ6/#T$>b9e-_,_j#&MaUJ9b>lLu#F>o6I.g*9!
%UW)-Sj&*I8TV;"pgc";)'=P-]?[hG8U_#h/s#!_WZ^.3>.&W)0JU+?P%aAbqfKI!^.[-PnkBRd4E3f'XFn-:`Ke(,8;8!"g:rOkl
%hms$qh[[@,fnh4Q3'?Z`KZtuV,5%ae`<Ef).ZdHfUeNa&Y9B*;4,5ItV_$dJQeC[?*sPE`Xr<as(snhN%/i)t$l'C\<]^btiKYaJ
%VcQ_tI<#^9g?%fYWb"inQtp%<Uqm8Do:ii%5p*<%L:3hU;$*jm7o9M3r4Q<dQ@>U$pEKnrEXkU*Ab562>arGZqRF#/2To9mJU[QH
%[S/RmmiKWn4:O-TRT`T*>0EgtPT"2-[chUtNPALdPH\.I?3k$PfljE5d?]iFUqGXP>\,6=kE$)K[?K_oC4WPkcC,"-n8gaQ6]^aI
%*9Lq.Mu#Y@FXD$LpbEu[0XR8B:<[4N4Y@caU/O*FN-FmOP^:p#X7G5)SfB^b0^9,>QuY-sE9V`CPs%69qU6MYIJG];qll-nH>?>+
%(WLU(ipYKdV[#*FKc->s668UgQ`Qb%d#4h!?"97=o-Wfaa)S272r7_BS+5TDqn-gZh>Q[_)(FropN@<bB\7cSL\9rQ(\J'oo^q-U
%rLjG@VZD,B:qT2[46l@3m*/f.QDpnXX>d)MPE,&>b.BG7]$RKCJ4Sh-"b4q?D>WAA"CoAgopRjnjiQ$0)=JTFn5n-2qc5qDMHV?F
%_sLQ6F47>8a`#s!YRQ!J5t>t9EpDYlq7(S_^?Aei7,!SNNh:T6c[7A$nZuQ^lL^tI6_4*rm\IA/9T<7peeNKc9>==f'uUu;Tcp3i
%Kd#h9@Co^1]Lef'%XgHdj_:3:Rh)TKqXA;(e+D<G$R8%&n!0Hp^(cBlQGi(?m^e!2Md%Xj/1?bE9UF%eYgmQu@Kr^5T.g9_5C"ZU
%b[FMX?Gj4/##J4J;<r@r^X'UZg*Y[Z>5FaqjAiSrSg`i[^b_TS/6U<Hf'S9cCV4"eMm[i`L1c9.ru8U[)tGSp6>fDPFaJ&OO)$j)
%U_aS>W3*P;>eu:-KXG^i*Sp%`E.E)N]K)eFqE1r`TfZ]]p)Rd9-*DW"@>-l\;lXu^r@G6_.pUr3!c6Dg3nsX&"0:j\`$H9)rVW#l
%Nm7/.H1\I5M(/lA`#U3W`u6+kY>o0t580n@+`4N"Cnk!oE1V8@&&ceZ\/%Q*C:;?r/%QFWi#"4pg<pWZB^>Dj07,8=b?d/3m"Ae0
%FYZj2P8WX4$G[t4E$CQ0..1_!o$#U-0t`mH?5#3Zg_eOdqmBe*,Dg\qAdJ%hTOA6Nd]sR"1,kC)F&G,@bsLa5aut3PKcRT)'44Em
%((I;+V%G8#R5U&f3qBpin*VD$:Jt4U2N:Ia1^uY5M^4;567q6m)k,mCH69`V.>'OUq32*Ngg$:;2V)SMR&A.H."#&\@4aRADSjT4
%?'>#H%YRCUW0+Ma&"$4>M^'W9%mlmYegDCj?i+QQSSlM)/hu;6)csnW:3m`=k*fFVH!G.,l\QkR.tVAY]+P74nZ6tTR[ZrN:)FBt
%>Z/0i98cE.NU=U46C9d@"\_816EZb`Osn]2@^Co?*scMQ'l4"ia#'9L3XL]Q\56,1HIj9[YP`EqZbUs8C3Yd61cp=#ph_m?h<BHo
%3ZermIInk%O!_CP7Qj8>KTLD?AT"(!0Y3:iN*u'm,Tqabr$>/%n`*7#Y`6AEk6r`hq`=:),bHY``KK%apAT8r9&]_[np3J0=bqCF
%c='/LVAr?c'L2<Hh)FW^B%9?3$u)BJrfXqd`'`PN?'$pE$#S&[3e_'7$(Z=K5LdL2Vqi6LJ?g^f;[mUQW*1ck[o8s<[eP2Z*2+FC
%l"dYeV<UdQpbX-%3`dsg(+lUcWB/PoRg.M4\gcRt*"'B(fh&g!>F9tBc.^uDM.O]OO\\tc>Q,dW1WqMA>26uV2pjF@WZ2/XA)YdA
%MD-mXb_*O7?,;1dRKmfAmN!BB\@b(YFfR%%0>Z;$0l0p82@*S/,Clf(SlQ$=g<,XSZ:BF%5BKiR[EXWV:=%M#+3VgM>B=LfC/TB;
%J9GtQi,"%-40tlnYZ733:c7ot_G.mFc:X*WjlLLuI0_Wc99<6>l4eE4VseP^0'NGZ7CZCB:?P57K0Ia<ALa+\f9i/^r+jLfp(4AX
%i@\d7HX1G\jdf%m'6-&mb5BPnN[YjUCt1,GdBS.p9uZ6-AZsa;`';Qd[8#ot9+.65.rr__&NOt_:>9f,.O;Rp,0`T<_P"s'EG8o<
%POa0dU3=o&Z;U6_NM1K+rO0GC(0X^]C3'b0)eT[_T!Y"7A19++(ruL_3D95l+1Z14C=7ng%7:DZdcft9!MI2#jXl4bY@GL&1A*b7
%@j+k8`'LIs/7WjPWi?(2b@g]o0d9V$M=<%+(9@SYFU+"i(M"qH]nO1(L^,TY)%>KjRJ?LAoufm(ga&th`55`tH"JA.S1''$H2O`&
%X@M=_ag6G)+<?X>fSnThGT=ZO!Vpi;E(eQJMBae;Y-t@JO8o2Z1!/K&339iKLMkK0<^i19\C$ua.4KV\_>'_?Q)_47l!uLqjPN`\
%D_f^<n1(r,/_>r<i@+HIp#iAFY4jK9S4$6VX)fJ+,-0Y"FggVjfe\C@;$&oCAo1!2[c`(ma)8rUf8A>Y&)ilgcIV;aMV_A3ERB(e
%r+b73m#_u$Ib=QZIJ)s)+ZaRYoNB\!bXa=A7#D&fAa5g?Lg'GEMJ"'>W=cateq@$bUitRH.<H:<%t.'8fS$gBPLlCFi>rW_FgnTL
%Km$Xe.tmd*j/6?%JNTr)pDu^6R:hX`k48Oi#;:^GmAV:Z-=<JmQuq1"X6HJHCAOn4_IDbIZY7@pKQp?bb=taKb:H`B>q!A0N8)bF
%U9TCprjO`FVAAID3U,$sJ8;.<UeStUehB*@#=7n2YD9:+I6J6pq"9SJS-IG&&oDSn\)[$L&&P`>cYrI(1#eaGXEO8r%Ui4VIX=q#
%'C)Y_DSg]<8:hK\\Sp+aJ$FR$?CHPAJuj*m)dqanLW6SYe\Lf:Y#VSuA?n/)QR2??[VC%bJc[+1M(c?tpiLW4Al?K@G8aWM5>,A"
%1E*EB"6&He>fCVp^h'#:*hWVL^SUe]j=?MuOFpf6UlmF^CUcX>]MJ[$*j73O8jc==Wb3fYVYs2G%a:[)U89*9_YMJP]PUce,'ZE2
%iIQ\FQlQCU%4b&K4**CA]*X*D@[;Xel`(t@>SpCA^K#q%R6L7T<QoOk)G!(r(peBkk"EM*m^5X5@DC+s'f`Q8H^&3]1p!R?NHX35
%cA,dBVqdTS1m2V[B5ck[5ULF*+T81ZP,\ZP0shG4FZ?R++BNMr;90/A1h5aLO9F7rd:6aN^N][@'U&N8RdU,/giTjMLSO1HWbS6I
%F_*:cO(]\p4CF-h/`_;43J:s7\?6SgO+EJZQqdb1AJ!KPfNGu/cDf6Nj\N^KSLSrl:+eI^bE>W(YS"Ks<UgU,H$4\&6Iuu+63oG_
%D-[ULGToimY##iZ`"l/aTc0OZ=C8D*Fmgk4%JD#!;$4LIf8*qmLTj]%eUDYWc^g>&+<%Sdg4R(Gm_(5\DNko$<issoY_%_@/DVLk
%kZ-uV\ZLRQnK#`9W7C)=[8$K3hO&G/2\H.u3cbhC3ENm+a*V?#a+[QLJSbdi#_P%6eJqOR2OKPBj$_+cH<CJ25Sl_%B/cs/5admK
%@Mb!e9!5%te#0u2=rRmdrJ:@6Ob4ppm`-Lc$tGeRlc3COYm"5,MLSbu>c$-%/.H6Y<78sl/9aO#\<8=q`BC+YJ$g<?X5l_1&4nq-
%G&%3dam"lk?%BrW'RuY<PhZXOR*_Eo(Xdu>,Y3.<C6u?@LZE6ln8#ufTb)CX;tB3R/X5#T$9V;Te;;!\,H#1Jht>fRoF1-/L9M9i
%%[).P1s..ha)F*V^$0pt5c%4<BGE<ZfQ)/Lm:5#%.mbBs&Rd,n@i^n$$Yt25*V(no/sS7K,B1h-Z*\W6H1sVs\9/q_i_lbXb;N$G
%m*HZZiQF&G,f8GENB67D?3#LVmHiR"m*/Bp`U/!!#LT'j@kr%kX'U?PN<$HC<p0DC\!tRc#ZFNkDR:PoR=&o6m;<"3=4OFcS]PMK
%-:Blg;(J*.?6b)rXNDJAdinBJ$Saq<4^\s)=H(=]6aB0_bd]R2)k`p?]YM>^9aqW<R)T,"-K5LEHhO7DFnSVgrNW\*-uDhi_KQ@;
%!;u/N1)>kDG**%9Yg@Nh+T[635>4@Wf.:>sdBhU7/d=%5-89!Db6J`(/W(:Oiucp`kSUPM]!\Yt3UbSYe<8CdP)+nZCW'6Sf2ptP
%I;XJgo8jK,:pWrBfC`]:#^I-!>r*J7/Qr^KTQe,,.a.8)k'C4PX3olfS?iMhF/i+WRep?+jb)QBZt%3&<N._db(uUr&1@UG]Yn`R
%UhF]h!L^2&.u*F*QaX\0+^UI4[*?CB<V6DDT4a>n#V]M/2dtWPV#?uF\_n;8CH%kgE!N6B(T)B$(@%fae%jFUr4Fq&?,Gt38ZIUP
%5n7aE2=1".SC0C:QA;?HQb(MqEX=^d=-p..[X0j#@].Pr0AAJ[.SbMGh-Kl*@XT,$c'Ye)g-f2pCL2E[R^F1Ge6KNVb%_h_B2fjC
%>eLndC>)f7crPDTa*,oC(?;;^B5pY_S1>;D*rC=3I[ltch7D-<^`:c[KZE-,,``>.(nJ)A)-*ok;.(W0Gi5]8/Z"O73**Qr/OJ+F
%gK$;'`";\P^1Ff\^Q*[rmScS70REJ:TM3p[>REJ?Jju%]49ho8L&1Y-Yh%(\fN2Z!-?2nsk)b1"Rf]s">8>KZU0^sVJK^LaSHF/9
%.RP5JMWQgH*5=;jF12MsBF]e9Cb!D#Ss1&N0&\F%-=us7=*SB_$/:Dm\m-kV83LWm.,<t0NI<p9nI"HYWlAQ@b:4o3k3lu0DbH=7
%p;2n<)mVscfd;)!CQ"&?EFji*bRHE[A=CBInN7+j[m3flHtshmHd#9^X2'5pKLDOAr6i2<n_!gRRX*1F5qlT==PXC?G4mJm'464V
%j6Fa^h#Z/<.$WA,H0KIr,MK+kfDI1g]Z7(m_[=lPCrO$p&(&Vu[X7SV=Y<]$fiDLdQ%1NS8n3GC:lL(_CUo4>Wm,oD7k9+ikid"1
%4l0;;7dM^8?&F6B;>PF&7KBBSeq5+sTk1mjM4(2%5\+B^c4=7D#)eemfS2)cbEGXo-l?X@kB:ZP?6s'e6j($'jpL.]ARRc^,<8`C
%T(F4$L)V:P9<TpgVi%aio+G=$)T/Q2dqM#]_Cg8gW!dNJl/(li='0ePDgq&Y9r/15f8/*jS@K]5'7(`kh&77<=QPpD8f0=:6eXr]
%6ec.).Uf:JZVQt@!k<0scS<8]<5YO5Nhg<epNrNk*9djTfWj++`1CN%k3VROBF*((A/FG-0U+*VGQ]!Bk@)mjInM),)bS#Zr0;D<
%`9I'MS3"FcJ?aTJW5nd-b/J@YO,;_tN?'+e)8[QHp"n<>]"9Y_8Zm@Vg)<>]4V%D]DMX:8=$2fO/qAA7X_BCp/&,*6O%pu?.5aKa
%P6bX&@*Ea'C6uoSB%II;/A&PT*OpBD]A*Ampq:?L4.V+ggD@DRPHBcMB38\Yb$U9l],uTRI@G#=gElTkDs7LXOS9&4`=q1FUKJmM
%6b^o&)a+cD@l4+oSq.@iHQ^d4$X4KJ1N%j48\Ukmh_>LS$#S/_;(t\GTSh0$m*sQ45s>f^[,>a9&FSKQJ\38EKSVmI0FK3a;KQ_d
%2*7O/'jDgEBD*<nke[`[fu>FCWT9q9.W_k\CCBjB#sL'%LlZa?6@E"^?D#EM.0)b9lK.<%>H^)Y4uRL13;:hPH&sS-iX'!LW;Pht
%W^&c4oFo'1_F^[`V@hfffl/)d"^8&!.:m,XTF4uG>a@_m/[Tn[7SJum,nob/'Zq2<h)[WsoR4`@;ppL>0js.[%HnlP_TSoBh?^W&
%'[Pufq7\%&ldmc]]Gr*g;AGVj=uRd<+t/KH'c5.(?K,O4&`bSP9Kh5f"i;'c1(Emq_YP9SFd(YAj0Vc\Dl%DM9s8#b3*_N#-H6g@
%%_:OAXND&jZn(!GiCje\YI%:]\L%;fP:mWc;GB-0:+U$*Q'qM,8*90a&h\M%N9\o:q*d+2rW'4r#T8<+lRo._TE5DdCjJ/pGDk@u
%d2Z/(h;iZ!QCM#0TAuC2B!a2Zib3+]V'.D4b8bob0Z"np)C?7[E-_Gb$[&%C2q3OB9P]UQOL:r-?8Taij#uGcPZR8C(@i@cYNQ(4
%d1=O?T90KWn,E3&s7(=5it&p'?bZgXoKW>uDh%`A:VZk+J,8>XrU%B!mXIJ#l_f71_sdTd?iTp4^\d8&roZNG+%YlknHXR<GQ6d>
%rR_)ITDgKLD(MC~>
%AI9_PrivateDataEnd
