%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Windows_vector.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Teneresa
%%CreationDate: 6/18/2018
%%BoundingBox: 0 0 600 256
%%HiResBoundingBox: 0 0 599.4452 256
%%CropBox: 0 0 599.4452 256
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">KidsIDApp</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-06-18T21:16:51-03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-06-18T21:16:51-03:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-06-18T21:16:50-03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>112</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAcAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXzj5+0Sz8yfnL5ih12+uINE0HT0vphDRpFgjt4GaOEMGV&#xA;S0k/Lpmfjlw4xXMl0GpxjJqJCRPDEX9gYVz/ACU/3z5k/wCRth/1Ty795/R+1w/8G/p/Y7n+Sn++&#xA;fMn/ACNsP+qeP7z+j9q/4N/T+x3P8lP98+ZP+Rth/wBU8f3n9H7V/wAG/p/Y7n+Sn++fMn/I2w/6&#xA;p4/vP6P2r/g39P7Hc/yU/wB8+ZP+Rth/1Tx/ef0ftX/Bv6f2O5/kp/vnzJ/yNsP+qeP7z+j9q/4N&#xA;/T+x3P8AJT/fPmT/AJG2H/VPH95/R+1f8G/p/Y7n+Sn++fMn/I2w/wCqeP7z+j9q/wCDf0/sTLy7&#xA;on5QeYNbtNFsx5ggur5/ShmmksjGrEEgsFj5EbdsjKWSIvZsxY9POQiOOz7mbeTvPGpfl7qNro2v&#xA;3h1XyXqY9TQ9fSrqiE067kKvSSM7oem3WmeMTFjaQ5hzMGoOAiMjxYzyk95ilimiSWJ1kikUPHIh&#xA;DKysKggjYgjMJ3QNrsUuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV89+av/Jof&#xA;md/4Db/8mLLM6H0R/rfrdFm/vsv9T9EXhOZrpXYq7FXYq7FXYq7FXYqy/wDKP/yZXl//AJi1/wCI&#xA;nKs/0FytD/fR97Xk7zja2VrN5e8wwtfeVb5uU8C/3ttL0FzbE/Zde46MNjjkx3uPqXBnAHBPeB+z&#xA;zD1HyP5y1H8vdSs9B1q6Gp+StU+PQNdj3jRHPifsqCf3kZ3Q79OuNkgJixtIcw7LT5zgIjI3jl9J&#xA;e95hO7dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir5781f+TQ/M7/wG3/5MWWZ0&#xA;Poj/AFv1uizf32X+p+iLwnM10rsVbAJIAFSdgBirKrf8q/zFuLP65F5fvDBTkOScXIO9VjYhz9C5&#xA;Uc0O9yRospF8JYzc21zazyW9zE8FxExSWGRSjqw6hlahBywG3HIINFSwobAJNB1xVdLDLDI0UyNH&#xA;Kho6OCrA+BBwJIpk3l7y951stLPnjSITDa6XJzjvD6ZYMpCM6RPy5qhcBjxIH35XKUSeE9XIxYsg&#xA;j4seQVv+Vr+eP+Wq0/7h2n/9k+Pgx/BKfzuTvH+lj+pPNd8yax5g/J0XOqyRzTW3mCOGBo4IYAsb&#xA;WUjlQsCRru252yEYCOTbubsmWU9Pcuk/0Pq/NY9O7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXz35q/wDJofmd/wCA2/8AyYsszofRH+t+t0Wb++y/1P0ReE5mulZv+Xn5S+ZPOrNP&#xA;albLSom4S6hOCVLd1iUbuw77gDucpy5hD3uZpdFPNuNo973v8v8A8jfLnlLURqjzvqmootIJZ0VU&#xA;ibu8aDlRvck0zCyagyFcnd6bs6GI8XMsp83+VbfXtOlieNZ7lV/0aG4muY7bmDWsiW7xk/PqMqhP&#xA;hLk58ImP7a+x8ofmP5Y1LQNbWC/s5rOSRKhHka4hPE0rbztu8dCNm+Jeh8Ts8UxIbPM6vCYSoivx&#xA;0KQaNpd3q2rWmm2kZlubuVYoo1KqSWNKAuQo+k5ORoW0Y4GUhEdX0T5T/I7y/Y3NprrJcQXenu8i&#xA;WjyC8EhjX93KA1vbfGrfEoUOtadcwZ6gnZ32Hs6ESJdR8f0B55+Ynk/z15q8332r6d5fvWsX9OK2&#xA;kkt3gkeOKNUDOsxEhY0+02/y6ZfinGMaJcDVYMuXIZCJpn/5QeXL648p33lTXdN1HT57f1i01zEF&#xA;gMV4pjZIWYhm5LXktCoIDbNlGeQ4uIEOdocRMDCQI/aw7z/+T3lrQLO6NhNqXq2cXqS3s/oXFqX4&#xA;8hHIkAE8HPojuvGu1e+W485lzpxdToIQBri267V9m4Yqn/klJv8AwJIv+oCTLf8AKf5v6XF/5Df5&#xA;/wCh9h5qnq3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+e/NX/AJND8zv/AAG3&#xA;/wCTFlmdD6I/1v1uizf32X+p+iLxzyzok2u+YNO0eJuL39xHBz/lDsAzf7FanMucuEEupw4+OYj3&#xA;l9uaTpVhpGmW2mafEILO0jEUES9lHj4k9Se5zTyJJsvYwgIgAcg3qmoRadYy3kw/cwjlIxZVAXuS&#xA;WI/riBZWcuEWiIZYpokliYPFIoZHU1BUioIOBINvN/zc07SvNv5Y32owryl05WvLOYgcl9E/vKEV&#xA;qrxV6Gh2bcUzIwExnTga6EcuEnu3fLOlpfyanaR6ezpfvNGtm0bFHExcCMqwoVblShzZGq3eagDx&#xA;Cub7N8l+VrXyzpqWct297q91We/vbiVpJZ5uKrI49QluIoo+VK75qck+I+T12DCMYq7l1ZC8sSFF&#xA;d1UyHjGGIBZqVoK9TQZW3W6aJJYnievCRSrUJBowoaEbjFSLfNP5pebPPvlbUdY8q311HqNnqkbt&#xA;aancxK10tncn44o3XiqiqlGHHt8NNs2GGEZASHR5/WZ8uMygTYl160WKJ/5JSb/wJIv+oCTLf8p/&#xA;m/pcX/kN/n/ofYeap6t2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvnvzV/5ND8&#xA;zv8AwG3/AOTFlmdD6I/1v1uizf32X+p+iKV/kR+XWqXOraZ5ymuILbTre4kjt4ZCfVncRsjcBSmx&#xA;PjXY7ZLUZRRi19m6WRkMl7W+mM170KhfWgu7ZoeXBqo8b0B4vGwdGoetGUYQaYyjYQ6PFaafb2mq&#xA;Xscly8SwyzvxgM8nGjuqA7FzvxXph5nZHIASKV6z5e1GXyLq2h29z9bvru0u4IZp+KAm4D8VPABV&#xA;VQ/BaDYAZKMhxAtWTETiMQbJB+18p/lvY3I/MrQbV7d2ng1KH1YQCWQwyhnJA7Jxq3yzZZT6D7nm&#xA;tJE+NEV/E+wZrW7fV4LhSVtoo2DkTSDkWqOJgp6Z/ZIc/EKU6E5qr2eqIPFbV7bXU2o2jIGWCHlI&#xA;0olIUtyUem8NOLgqSysT8LAU64QdlkCSEfkWbw3/AJyZ8tapfxaRq1hZSXENjFdfpG4jXkIowYmQ&#xA;vTcD7ZrmZpJgWC6btbDKVSA5Xby5P/JKTf8AgSRf9QEmZP8AlP8AN/S63/kN/n/ofYeap6t2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvnvzV/5ND8zv8AwG3/AOTFlmdD6I/1v1ui&#xA;zf32X+p+iKUflV+dWm+WfL48vazZSzWyTmW1uoChKB3D/Gr0+w/xAj7snm05kbDVou0BjhwSHV9N&#xA;RyJIiyRsHjcBkdTUEHcEEZrnogWPecPMmp+XLddTj0yXVdKQH6+lqR9ZgUb+qsZ+GRP5hUFeu46W&#xA;QiJbXRaM+U4xxVxDr3sRX/nIz8umQFPrzytTjAtvVyx6KPi41+nLfys3E/lTF5/Jnuh6pe32ljUd&#xA;Qszpay1kjtZ2Hqxw0qGnp8KMepX9nua5RIAGhu52OZMbIp8/fknqum3350atfFVA1Jb+XTxSlHkn&#xA;WX4R2/ch8ztQCMYDouz5g6gnvuvm958weafLWkPHa67drp6XIJgmmLRRuV3IWYbKy+FQfDMKMCeT&#xA;u8uaEdpGksH5oeSnuYNO0q+Gr6jOQttZWAM7t4ln/u0A6szuKDJeDLmdmv8AOY7qJ4j5MtXlxHIA&#xA;NT4gNxXvTplTlMD/ADC/MnyX5ae7ttRumm1j6mwg0tFlYMJQQAxA9Ec9q8jWn43YsUpcuTharV48&#xA;dgn1VyfPKf8AklJv/Aki/wCoCTM//Kf5v6XQ/wDIb/P/AEPsPNU9W7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq8X/OX8zfNXlXX1t9LufStzDEREEhI5N6hZiZI5Gr8IHWmZeDFGQ3dRr9XPFKol5+fz9/M&#xA;gQiczsIWYqsvo2/EsNyA3oUrl/5aDg/ynlq/1fqR2gfnp57vtSSG4vfTtwkkkkjLZxoOKHhzeSON&#xA;ArScV3da1oGBNcjLTxAbMXaOSR3P3PoLyp5gXXdHjvuCJJXhMInWWIsADyjkUkMjKwZT4HffMKce&#xA;E07zDl442nGQbXYq7FXz35q/8mh+Z3/gNv8A8mLLM6H0R/rfrdFm/vsv9T9EXhOZrpXt/wCUH56w&#xA;aTZw+X/NLt9RhAjsNSALmJBsI5QKsUX9lhuOnTph59Pe8Xc6HtERHBPl0L3rSvMfl/V4xJpepW16&#xA;rdPQlSQ9K0IUkg+xzClEjmHdQyxl9JBQd5Z+RtFuG1a8t9M066+01/KkEMp9/UIVj9+EGR23Yyjj&#xA;geI8IPfs8Y/N/wDPWy1HT5/L3lV2kguAY77U6FA0Z2aKFWAajdGY026da5l4NOQbk6jXdoiQ4IfE&#xA;vFtG1e/0bVbXVdPk9K8s5FlhfqOS9iO4PQjuMy5RBFF1GPIYSEhzD6d0L8yvy1/MPRU03zCttb3b&#xA;cTNpt8wRfVApyglJWvU0oQ2a+WKcDYeix6vDnjU6vuP6GY6B5c8l+WbV5dHtbTT4Jf7y5QirAb0a&#xA;ViWIFOnLKZSlLm5ePFjxj0gBjnnf87vJnlyzlW0u4tW1WhEFpauJEDf8WyrVEA7ivL2yzHp5S8g4&#xA;+o7Qx4xseKT5X17XNS13WLrV9Sk9W9vHMkrdh2CqOyqAAo8M2UYiIoPNZchnIyPMsnT/AMkpN/4E&#xA;kX/UBJlf+U/zf0uT/wAhv8/9D7DzVPVuxV2KoS41fSbaUxXN7BBKKExySojUPTZiDhESxM4jmV9r&#xA;qFhecvqlzFccKc/SdXpXpXiTiQQsZA8iiMDJ2KvOPz01HWLHyrDLpE0sV61wiwiGpZmd1QLx35V5&#xA;0ApmRpwDLd1/aMpCHp528p1jSvzz0i10ma9vikusT/Vre25wh45W3RZmZREhcdPj+dDmTGWM35Ot&#xA;nDUxAs/UzryBdeftCvbO28yu8r6hcyQguQAUWVIQOBKMB1kRxHuCAW7ZTkEZcnM0xywIE+p/H63s&#xA;eYjtnYq7FXj3nXyzpvmP84tL0/Uwj2CwpNcQO/AyiOOUrGtN2JfjUfy1zKxzMcZIdVqMIyZwJcv7&#xA;U4/ODy7oF1+WupafZxwQvoca3drawFYxDwNW/dr0DIzbU3rkcEiJg97brsUThIH8O6et5M8uLpDy&#xA;WVjZy6hHpps4neNVhZD+9VZIQUjCNKOZFBv3B3yHGb+Lf4EOHYC+GkB+S6svkmFWChg6ghCCtRBF&#xA;9kiop4Yc/wBTXoP7v8dwZ3lLmuxV2KvnvzV/5ND8zv8AwG3/AOTFlmdD6I/1v1uizf32X+p+iLwn&#xA;M10rsVdirsVdirsVdirsVdirsVZun/klJv8AwJIv+oCTKf8AKf5v6XM/5Df5/wCh9VaV5z8ratev&#xA;Y6bqUN1dx1EkEZJZSK1DCmx2PXNacchuQ9LDPCRoGynOQbnYq8h83+VNK1vzr5guL/X7jTTZ2lub&#xA;eytZjGS7xMPXlWhqgIUVFOnxEDMqEyIig6vPhjPJImRFAbD70V5B0PTdG1XQPqetT6hNqlnLd3Fv&#xA;NcrMVBgh6Djz4+oW7gdKgkAgZJEg7cmWmxiEo1K7Hf5B6pmM7J2KvPPzo1K80vRdO1Cyt1u7y1vY&#xA;JLa2dS4eVZo+C8V+Inl0pvXL8AskFwNfMxiCBZBYR5v/ADvt7xdJmXQ9Qt00zULS+vVuIlj4ALIO&#xA;Cvyfn6nxcCVTp910NPV7jk4eftAGjwnYgpu/n+TzN558v2p0O702G3/ex3eoQG3mkY3EKSLEnJ1C&#xA;AgV+ImtOlN4+FwxO7b+Z8TJEcJHv26h7HmI7Z2KuxV4H+cumazqf5k6bZ6LN6GrOkT2UvIxkSxRz&#xA;SLRh0J4UGZuAgQN8nSa+EpZQI/V/axzzDJ+cnmPTb7TLq/OpadbIpY2sHpLdsl4tssYYQwtIVZ/U&#xA;IPwhRU75ZHw4m2jKdRkBiTY8uu9LYL780NZ8l3MVx5ght7AiS3ktXjCXNw0MUzGF5o4ix/d2bj4n&#xA;36E4kQEuSBLNPGblQ+08/wBT2P8AJD/lArT/AJ5/9Q8WYuo+p2vZ/wDdD8dAz7KHOdirsVfPfmr/&#xA;AMmh+Z3/AIDb/wDJiyzOh9Ef6363RZv77L/U/RF4ro2njUdXsdPL+kLy4it/Vpy4+q4TlSorSvjm&#xA;XI0LdRjjxSA7yz/zD+TdzbfmTa+T9GuJLtLmGO5kuZUA9GFmKyO/HYhePtWoHXKY5/RxFzsugIzD&#xA;HHdvUvyt8r2vn++8tN5pgtLO0sjcm8ugoKzgD/R2+JFLAHmafs7UrXEZpGN0s9HAZTDjoAfgPNpk&#xA;WOaSNJFlVGKrKlQrAGgYcgpofcZeHXkbvRYfy20d/wAl5/O5uJ/0pHMAIar6PD6yttxpTlX4uVa5&#xA;R4p8Th6OeNJH8v4n8X7aeb5kOvdir1XzF+TFlpfmjynosWpyyJ5hWlxM0agxsnEsUAPQhtgenicx&#xA;o5yYk1ydnl0AjOEb+pkV3+S/5UW+vDy7L5puoNck4rFayCMVeQAxivpqpLVFByqcrGedXWzfLs/A&#xA;JcHGeJ5T588m3vk/zLcaLdSCf0wslvcqColicVVuJrQ9iPEHrmTjycQt1mpwHFMxKbJ/5JSb/wAC&#xA;SL/qAkyP+U/zf0tv/Ib/AD/0Pozy7onmu31uGW/VRp8ZBVQYPh4wPH0RQ3de/wA8wJSjWzv8WOYl&#xA;vy+DN8pcx2KvLfOn5f6xq3mq81KPR7DUrWYW3pPeECRTbqagHrwZm+Je9PCoOTjygRq3W6jTSlMn&#xA;hB5c1nkD8utZ0LzNa302l2VjaQJdoXtW5Slbgq0aOxPJ1j4cQTU45MoIq102llCYNADd6rmM7J2K&#xA;sP8AzL8t6zrul2keklRd21zFcIzcTQxOsinizRgjklD8WW4pgHdxdXilOI4eYLB7ryR+a1zp1xYS&#xA;yWvp3Yk+sSLbwq7tMjpI5IuQOTeqx6dcuGSF24R0+cgjbfy/ajtD8i+fD5n03UtZaEwWTMaRRxxi&#xA;sksckjsVmlYkrAqgUp06bnBLJGiAzx6fLxgy6fjv8nrWYrtHYq7FXk/5n/lx5q8weZE1PR5hbqkC&#xA;xpMhQuCVljkUh3jpVJNiCfozJw5YxFF1mr0s5zuKQL+W/wCcilv9zkrcmDtyS2arCQS8vilO5kAY&#xA;+JAr0yzxcfc0fldR/O+79aGg/Kb814LS6tY9XlEN6Xa5BW3ZnaXn6jc2mLhm9Z6kGvxHD40O5iNF&#xA;nAI4ufu/W9W/LXy5qHl7yvDpt+AJ42AABB+FI0jBNCQCeFaAnMXLMSlYdnpMRxwosqytyXYq7FXz&#xA;35q/8mh+Z3/gNv8A8mLLM6H0R/rfrdFm/vsv9T9EXkPk7/lLtE/7aFr/AMnlzKn9JdVg/vI+8PsP&#xA;VbGD6xqraPPBb+brywAgkkId1jj5rCxStRGJWO9KV61pTNUDyv6Xq5xFnh+sh85fk95LsfMf5g6n&#xA;pfmy3kuJbW2uJrmGSR1c3KzxxsZGUhiQZGPXrmfnyGMAYug0OnGTKRkHIH5p/wCRvI3kTS/K2vec&#xA;/NFq+oWVheTW1raVLBUjlES/CGQM7u/H4jQdchkySMhGLfp9PijCWSYsAsj8zT+WLj/nHXUbjyzb&#xA;y2mkyvG8VrMSXic6hH6iVJfbnWnxHbK4A+KL5/scjMYHSEw2j/x5drXkLyF5Y0+1hHkq78x6a9uJ&#xA;LvWrOQyy1p9oIsituPiqvFQDtXfGOSUj9VLk02LGAOAzFcw+crpoWuZmgjMMDOxihZuRRCfhUtQV&#xA;IG1aZnh0EqvZ9L+ev/Jlflp/z0/4jHmvx/RJ6HUf32JgP5o/+T+tf+YrTP1RZfh/uvm4Ws/xoe+L&#xA;X/OTigefrEgUJ0uEn3P1icY6T6fijtf+9H9X9JYyn/klJv8AwJIv+oCTLP8AKf5v6XH/AOQ3+f8A&#xA;ofYeap6t2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvnvzV/wCTQ/M7/wABt/8A&#xA;kxZZnQ+iP9b9bos399l/qfoi8Z8v30Fhr2m309fQtLqCeXiKtwjkVmoPGgzLkLBDqMUhGQJ6F6T5&#xA;5/Ne0X81bPzV5Yna4trS3it5uStGsyBmMsZVwDxIelSOu46DMfHh9HDJ2Oo1o8cThyAZdB+aX5WW&#xA;v5mL5ntp5ol1DSZINTlED8BP6kMkQKgci/CJlYgU+z7nKvBmYcPm5Q1mAZuMdY7/AGJF5H8/+RNQ&#xA;8r695O81zyWOnX93NdWt2qtukkolUfCsnF0dAwqKHp855MchISi06fU4pQljnsCVXzN55/K+2/Kq&#xA;88k+Xry6uAs0KRPJE3OUC5S4lmDMEWnwsAKA1ptTfGGOfHxFObUYRgOOBP4Npz5R82flf5ZmjvtO&#xA;87ai2kxxEf4euUllUMVpxUGP4SG3+Hv3pkJwnLYxF97bgzYce4meH+a8J8y6lbap5i1TUraH6vbX&#xA;t3NcQw/yJLIXVfDoe22ZsBQAdLmmJTJHUvXPNf5p+UL/AM6eR9VtZ5Xs9HXlqL+kwMZk4jjxO7Fe&#xA;Pxca+1cxYYZCMh3u1zazHLJjkDtHmnmuar+Qt/5wTzlfa/PPqELRSJaRpKYC9uoEfwCDn+wDu9K+&#xA;2QjHKI8IDdknpTk8Qy3/AB5PJPzU87x+cvN0+q28bRWUcaW1mkn2/SjqeTUqAWZmanbMrDj4I06r&#xA;WajxcnEOSIT/AMkpN/4EkX/UBJg/yn+b+ll/yG/z/wBD7DzVPVuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV89+aVZvzR/M4KCT/hp9h/xgsszofRH+t+t0Wb++y/1P0ReE5muldir&#xA;sVdirsVdirsVdirsVdirOEVh+ScpIND5lioflYSZT/lP839Lmf8AIb/P/Q+ws1T1bsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVeM+d/wAtvzHH5j3PnDyhc26veRojrKygqFhSF0dJ&#xA;FZHVhGD/ALWZePLDg4ZOp1GkzeMcmMjdKP8AAv52f9W7QP8ApEsP+qOS8TH3n7Wr8vqe6HyH6nf4&#xA;F/Oz/q3aB/0iWH/VHHxMfeftX8vqe6HyH6nf4F/Oz/q3aB/0iWH/AFRx8TH3n7V/L6nuh8h+p3+B&#xA;fzs/6t2gf9Ilh/1Rx8TH3n7V/L6nuh8h+p3+Bfzs/wCrdoH/AEiWH/VHHxMfeftX8vqe6HyH6nf4&#xA;F/Oz/q3aB/0iWH/VHHxMfeftX8vqe6HyH6nf4F/Oz/q3aB/0iWH/AFRx8TH3n7V/L6nuh8h+p3+B&#xA;fzs/6t2gf9Ilh/1Rx8TH3n7V/L6nuh8h+p3+Bfzs/wCrdoH/AEiWH/VHHxMfeftX8vqe6HyH6nf4&#xA;F/Oz/q3aB/0iWH/VHHxMfeftX8vqe6HyH6kPqv5U/nJ5lSx0zWJtPtNItpS6xWwiiijL/bk9KBF5&#xA;vQmlfwqcIzY47i7Yz0eoyVGVCP47n//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:91fb540b-a065-4344-8b84-dd7df833792c</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:91fb540b-a065-4344-8b84-dd7df833792c</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0da2378c-71bc-1641-8b55-54e8fe2696e3</stRef:instanceID>
            <stRef:documentID>xmp.did:0da2378c-71bc-1641-8b55-54e8fe2696e3</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BFFB4AB5E22BE311A018E6D873A2A7EA</stEvt:instanceID>
                  <stEvt:when>2013-10-03T09:26:36+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CE184AC00C5BE31183E791815EAA4C5E</stEvt:instanceID>
                  <stEvt:when>2013-12-02T08:46:47+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F011E2F5510EE4118538A88D102BAB8E</stEvt:instanceID>
                  <stEvt:when>2014-07-18T13:26:13+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B7A671B7FB10E8119239DE749183B6E1</stEvt:instanceID>
                  <stEvt:when>2018-02-13T17:23:13-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B848859C3D13E811B4CCA01193625BB9</stEvt:instanceID>
                  <stEvt:when>2018-02-16T22:52:06-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F58AFD07EB13E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T11:01:41-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E39B45B30814E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T14:35:09-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E69B45B30814E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T14:47:31-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EB9B45B30814E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T14:53:12-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D611007D0B14E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T15:57:50-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D811007D0B14E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T16:00:21-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:822B69834514E811946382ED91CD3737</stEvt:instanceID>
                  <stEvt:when>2018-02-17T21:50:41-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4A06FAA20B17E8119736D27784DB3468</stEvt:instanceID>
                  <stEvt:when>2018-02-21T10:32:18-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74fde70b-e1dc-004c-9a3c-bfc5384f141e</stEvt:instanceID>
                  <stEvt:when>2018-02-22T17:18:25-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d7b2637d-1330-a047-a607-aa541c9acd4e</stEvt:instanceID>
                  <stEvt:when>2018-06-18T16:57:51-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0da2378c-71bc-1641-8b55-54e8fe2696e3</stEvt:instanceID>
                  <stEvt:when>2018-06-18T17:59:37-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:91fb540b-a065-4344-8b84-dd7df833792c</stEvt:instanceID>
                  <stEvt:when>2018-06-18T21:16:51-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>256.000000</stDim:w>
            <stDim:h>256.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -256 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 256 li
599.445 256 li
599.445 0 li
cp
clp
386.481 9.09495e-13 mo
382.595 9.09495e-13 379.445 3.1499 379.445 7.03564 cv
379.445 248.964 li
379.445 252.85 382.595 256 386.481 256 cv
592.41 256 li
596.295 256 599.445 252.85 599.445 248.964 cv
599.445 40.4551 li
599.445 37.2061 598.155 34.0903 595.857 31.793 cv
567.864 3.7998 li
565.431 1.3667 562.131 9.09495e-13 558.691 9.09495e-13 cv
386.481 9.09495e-13 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 .368627 .427451 rgb
f
588.795 242.131 mo
588.795 243.906 587.351 245.35 585.576 245.35 cv
393.314 245.35 li
391.539 245.35 390.095 243.906 390.095 242.131 cv
390.095 13.8691 li
390.095 12.0942 391.539 10.6499 393.314 10.6499 cv
558.476 10.6499 li
558.475 40.4585 li
558.475 41.3696 559.214 42.1084 560.125 42.1084 cv
588.778 42.1089 li
588.784 42.2295 588.795 42.3496 588.795 42.4717 cv
588.795 242.131 li
cp
586.9 37.8965 mo
587.183 38.1797 587.433 38.4863 587.656 38.8091 cv
561.775 38.8086 li
561.776 12.772 li
586.9 37.8965 li
cp
589.233 35.5635 mo
562.667 8.99658 li
561.604 7.93457 560.192 7.3501 558.691 7.3501 cv
393.314 7.3501 li
389.72 7.3501 386.795 10.2744 386.795 13.8691 cv
386.795 242.131 li
386.795 245.726 389.72 248.65 393.314 248.65 cv
585.576 248.65 li
589.171 248.65 592.095 245.726 592.095 242.131 cv
592.095 42.4717 li
592.095 39.8623 591.079 37.4087 589.233 35.5635 cv
cp
1 1 1 rgb
f
410.451 178.671 mo
410.451 176.991 412.371 176.272 414.35 176.272 cv
416.27 176.272 418.249 176.991 418.249 178.671 cv
418.249 195.048 li
431.208 177.411 li
431.808 176.571 432.528 176.272 433.367 176.272 cv
435.347 176.272 437.867 178.312 437.867 180.291 cv
437.867 180.71 437.807 181.25 437.387 181.791 cv
426.648 195.229 li
439.726 215.146 li
440.026 215.565 440.146 216.045 440.146 216.524 cv
440.146 218.444 437.746 220.425 435.467 220.425 cv
434.447 220.425 433.427 220.003 432.767 218.925 cv
421.489 201.827 li
418.249 205.907 li
418.249 217.664 li
418.249 219.285 416.27 220.125 414.35 220.125 cv
412.371 220.125 410.451 219.285 410.451 217.664 cv
410.451 178.671 li
cp
f
450.698 194.029 mo
450.698 217.664 li
450.698 218.864 448.958 220.125 446.798 220.125 cv
444.579 220.125 442.959 218.864 442.959 217.664 cv
442.959 194.029 li
442.959 192.589 444.579 191.629 446.798 191.629 cv
448.958 191.629 450.698 192.589 450.698 194.029 cv
cp
450.997 181.49 mo
450.997 183.47 449.138 185.27 446.798 185.27 cv
444.398 185.27 442.538 183.47 442.538 181.49 cv
442.538 179.451 444.398 177.71 446.798 177.71 cv
449.138 177.71 450.997 179.451 450.997 181.49 cv
cp
f
463.413 208.366 mo
463.413 211.125 465.812 213.884 468.632 213.884 cv
471.692 213.884 474.091 210.706 474.091 209.446 cv
474.091 203.446 li
474.091 200.088 471.272 198.047 468.692 198.047 cv
465.753 198.047 463.413 200.747 463.413 203.446 cv
463.413 208.366 li
cp
481.83 177.411 mo
481.83 217.664 li
481.83 218.864 480.21 220.125 477.991 220.125 cv
476.071 220.125 474.511 218.864 474.511 217.664 cv
474.511 215.925 li
473.311 218.384 470.012 220.664 466.172 220.664 cv
460.593 220.664 455.674 214.785 455.674 208.366 cv
455.674 203.446 li
455.674 196.788 460.473 191.27 466.352 191.27 cv
470.072 191.27 472.771 193.488 474.091 195.828 cv
474.091 177.411 li
474.091 175.972 475.83 175.011 477.991 175.011 cv
480.21 175.011 481.83 175.972 481.83 177.411 cv
cp
f
501.321 212.206 mo
501.321 206.926 487.103 210.226 487.103 200.208 cv
487.103 195.949 489.803 191.27 497.841 191.27 cv
502.701 191.27 507.379 192.949 507.379 195.168 cv
507.379 196.249 506.36 198.887 504.56 198.887 cv
503.121 198.887 501.261 197.148 497.961 197.148 cv
494.962 197.148 493.762 198.648 493.762 199.848 cv
493.762 204.226 508.16 201.228 508.16 211.905 cv
508.16 217.244 504.201 220.664 497.121 220.664 cv
491.002 220.664 486.263 218.145 486.263 215.505 cv
486.263 214.245 487.343 212.086 488.843 212.086 cv
490.582 212.086 491.902 214.785 496.941 214.785 cv
500.48 214.785 501.321 213.405 501.321 212.206 cv
cp
f
525.309 178.671 mo
525.309 176.991 527.229 176.272 529.208 176.272 cv
531.128 176.272 533.107 176.991 533.107 178.671 cv
533.107 217.664 li
533.107 219.285 531.128 220.125 529.208 220.125 cv
527.229 220.125 525.309 219.285 525.309 217.664 cv
525.309 178.671 li
cp
f
548.102 183.11 mo
548.102 213.286 li
554.342 213.286 li
558.302 213.286 560.641 211.065 560.641 206.387 cv
560.641 190.009 li
560.641 185.33 558.302 183.11 554.342 183.11 cv
548.102 183.11 li
cp
554.342 176.272 mo
562.261 176.272 568.439 179.99 568.439 190.009 cv
568.439 206.387 li
568.439 216.405 562.261 220.125 554.342 220.125 cv
543.724 220.125 li
541.684 220.125 540.304 218.985 540.304 217.724 cv
540.304 178.671 li
540.304 177.411 541.684 176.272 543.724 176.272 cv
554.342 176.272 li
cp
f
478.245 120.364 mo
478.011 120.248 477.759 120.146 477.542 119.989 cv
477.265 119.811 477.018 119.585 476.796 119.334 cv
472.2 130.649 454.623 145.048 437.066 119.175 cv
436.192 119.795 434.899 120.4 432.435 120.183 cv
434.939 119.665 436.815 119.502 437.863 115.605 cv
438.073 114.82 438.99 115.039 438.814 115.833 cv
438.572 116.948 438.284 117.563 437.601 118.537 cv
454.76 129.45 470.328 125.071 476.413 118.844 cv
476.41 118.84 476.406 118.835 476.403 118.831 cv
476.124 118.353 475.934 117.815 475.903 117.266 cv
475.879 116.918 475.91 116.565 476.011 116.236 cv
476.067 116.051 476.243 115.936 476.326 116.342 cv
476.94 119.326 478.847 120.376 479.01 120.572 cv
478.75 120.527 478.497 120.45 478.245 120.364 cv
cp
442.813 90.1895 mo
442.853 85.7627 448.982 83.8296 451.856 88.7007 cv
446.616 85.3267 442.813 90.1895 442.813 90.1895 cv
cp
448.604 97.7446 mo
448.678 97.126 449.247 96.7852 449.549 96.7397 cv
450.735 96.5596 452.017 97.5186 452.147 99.7485 cv
452.294 102.251 451.26 103.631 450.078 103.808 cv
448.895 103.983 447.74 102.717 447.481 100.987 cv
447.401 100.416 447.43 99.8672 447.548 99.3774 cv
447.68 99.5454 447.85 99.6797 448.069 99.7314 cv
448.616 99.8765 449.176 99.5503 449.321 99.0005 cv
449.462 98.4531 449.096 97.7817 448.604 97.7446 cv
cp
453.68 98.3794 mo
453.19 95.0093 451.242 92.5054 449.337 92.7856 cv
447.431 93.0684 446.281 96.0337 446.78 99.4053 cv
447.272 102.774 449.224 105.279 451.128 104.994 cv
451.157 104.991 451.183 104.979 451.211 104.972 cv
451.035 105.04 450.863 105.121 450.672 105.15 cv
448.287 105.502 445.855 102.372 445.235 98.1582 cv
444.614 93.9443 446.042 90.2388 448.433 89.8867 cv
450.815 89.5366 453.252 92.6621 453.868 96.8765 cv
454.131 98.6592 454.012 100.32 453.626 101.707 cv
453.823 100.714 453.86 99.5786 453.68 98.3794 cv
cp
466.139 109.818 mo
468.553 108.852 468.466 106.925 468.534 107.39 cv
469.215 112.309 460.999 114.132 457.637 110.025 cv
457.022 109.273 457.029 108.592 457.029 108.592 cv
457.749 110.171 463.015 111.073 466.139 109.818 cv
cp
471.34 89.3145 mo
473.658 89.2183 475.678 92.459 475.857 96.5596 cv
475.933 98.29 475.654 99.8779 475.142 101.168 cv
475.431 100.235 475.58 99.1484 475.533 97.9839 cv
475.392 94.7012 473.772 92.1099 471.919 92.1895 cv
470.063 92.2686 468.671 94.9863 468.808 98.269 cv
468.849 99.1982 469.011 100.068 469.26 100.842 cv
469.161 100.502 469.091 100.14 469.075 99.7539 cv
469.051 99.1626 469.147 98.6064 469.309 98.124 cv
469.426 98.2969 469.588 98.4575 469.803 98.5405 cv
470.345 98.7432 470.955 98.4663 471.157 97.918 cv
471.358 97.3799 470.972 96.7183 470.287 96.7183 cv
470.585 96.2617 471.07 96.127 471.272 96.1196 cv
472.493 96.0718 473.506 96.8877 473.625 99.272 cv
473.715 101.065 472.645 102.849 471.431 102.906 cv
470.56 102.94 469.785 102.232 469.376 101.182 cv
470.031 102.954 471.171 104.12 472.424 104.072 cv
472.279 104.102 472.131 104.16 471.976 104.164 cv
469.655 104.272 467.633 101.021 467.457 96.9233 cv
467.281 92.8203 469.017 89.4209 471.34 89.3145 cv
cp
474.922 89.0796 mo
474.922 89.0796 470.332 84.8765 467.577 90.4805 cv
467.955 84.6089 473.26 84.8223 474.922 89.0796 cv
cp
410.57 121.749 mo
410.236 120.707 409.961 119.806 409.562 118.251 cv
406.878 107.724 402.433 112.049 402.856 115.024 cv
401.529 110.173 409.201 105.57 410.519 118.103 cv
410.618 119.064 410.729 120.597 410.57 121.749 cv
cp
481.57 81.8081 mo
477.901 73.7656 471.055 68.5386 462.187 65.7314 cv
463.918 64.04 466.544 62.8794 469.652 63.6157 cv
474.333 64.7261 476.042 68.9326 476.042 68.9326 cv
474.679 62.9658 466.404 58.7417 458.767 61.2637 cv
457.318 61.7417 455.991 62.4111 454.779 63.2026 cv
459.392 54.6387 471.122 55.6235 473.983 57.5854 cv
459.542 45.7432 443.43 57.9346 440.874 63.9189 cv
440.876 63.9199 440.879 63.9204 440.881 63.9219 cv
433.527 64.646 425.518 66.9741 419.602 72.8101 cv
411.995 80.3105 407.329 89.8442 408.375 104.804 cv
403.504 104.03 400.017 106.177 399.012 110.619 cv
397.899 115.52 400.381 121.944 405.707 123.339 cv
407.173 123.72 409.479 123.917 411.128 123.485 cv
411.102 123.405 411.135 123.512 411.185 123.729 cv
413.894 135.415 425.518 143.859 431.428 146 cv
453.165 153.863 472.116 148.276 481.975 135.931 cv
487.609 128.867 493.393 113.451 483.767 104.453 cv
483.485 104.188 486.059 91.6372 481.57 81.8081 cv
cp
f
437.036 119.132 mo
437.046 119.147 437.056 119.161 437.066 119.175 cv
437.068 119.174 437.071 119.172 437.073 119.171 cv
437.073 119.171 436.985 119.057 437.036 119.132 cv
cp
f
575.984 118.451 mo
576.362 115.794 572.391 111.931 569.993 121.334 cv
569.619 122.798 569.193 124.081 569.153 124.093 cv
569.076 122.906 569.176 121.53 569.272 120.603 cv
570.45 109.407 577.169 114.118 575.984 118.451 cv
cp
559.524 65.5093 mo
553.663 59.4668 552.103 55.7969 551.931 53.6855 cv
552.493 54.0205 553.234 54.5635 554.211 55.4409 cv
555.915 56.9688 558.397 61.624 560.138 65.1709 cv
559.928 65.2773 559.728 65.396 559.524 65.5093 cv
cp
545.409 122.134 mo
533.124 140.471 517.465 137.785 514.928 128.548 cv
513.155 127.609 511.216 125.337 509.877 122.828 cv
509.682 123.054 509.464 123.258 509.218 123.42 cv
509.027 123.563 508.803 123.657 508.595 123.763 cv
508.371 123.844 508.146 123.916 507.914 123.959 cv
508.058 123.782 509.748 122.822 510.256 120.161 cv
510.325 119.798 510.483 119.897 510.537 120.062 cv
510.631 120.353 510.663 120.667 510.647 120.976 cv
510.627 121.465 510.465 121.946 510.222 122.375 cv
510.219 122.379 510.216 122.382 510.213 122.387 cv
516.271 129.788 532.307 130.464 544.922 121.574 cv
544.298 120.717 544.031 120.175 543.799 119.187 cv
543.631 118.482 544.449 118.275 544.647 118.971 cv
545.638 122.421 547.318 122.54 549.564 122.966 cv
547.364 123.193 546.199 122.673 545.409 122.134 cv
cp
515.297 102.213 mo
515.492 102.74 516.078 103.006 516.599 102.812 cv
516.805 102.732 516.961 102.578 517.073 102.412 cv
517.229 102.875 517.321 103.409 517.298 103.978 cv
517.224 105.698 516.212 107.051 515.035 107.005 cv
513.868 106.951 512.973 105.514 513.049 103.791 cv
513.125 102.07 514.137 100.717 515.31 100.763 cv
515.503 100.77 515.692 100.835 515.873 100.919 cv
515.364 101.124 515.104 101.697 515.297 102.213 cv
cp
516.22 95.4863 mo
518.294 95.5815 519.845 98.6182 519.687 102.283 cv
519.531 105.942 517.725 108.847 515.651 108.751 cv
515.513 108.747 515.381 108.695 515.251 108.668 cv
516.91 108.732 518.35 106.419 518.482 103.485 cv
518.604 100.553 517.36 98.125 515.702 98.0542 cv
514.047 97.9834 512.599 100.298 512.474 103.23 cv
512.432 104.271 512.566 105.241 512.824 106.074 cv
512.366 104.922 512.117 103.503 512.185 101.958 cv
512.345 98.2954 514.149 95.4004 516.22 95.4863 cv
cp
519.581 95.1187 mo
517.12 90.1133 513.019 93.8672 513.019 93.8672 cv
514.504 90.0645 519.244 89.874 519.581 95.1187 cv
cp
525.64 59.0654 mo
526.586 58.5205 527.282 58.2075 527.795 58.0327 cv
527.293 59.7178 525.398 62.4302 519.606 66.3262 cv
519.459 66.1987 519.31 66.0732 519.158 65.9502 cv
521.18 63.3687 523.994 60.0132 525.64 59.0654 cv
cp
529.003 112.706 mo
529.003 112.706 529.009 113.314 528.46 113.986 cv
525.457 117.654 518.118 116.026 518.726 111.632 cv
518.786 111.217 518.709 112.938 520.865 113.801 cv
523.656 114.922 528.36 114.117 529.003 112.706 cv
cp
534.855 103.106 mo
534.997 103.644 535.545 103.963 536.081 103.821 cv
536.295 103.771 536.461 103.639 536.59 103.475 cv
536.706 103.954 536.734 104.491 536.656 105.05 cv
536.403 106.743 535.272 107.981 534.115 107.809 cv
532.958 107.636 532.227 106.128 532.48 104.433 cv
532.728 102.735 533.863 101.504 535.021 101.671 cv
535.214 101.702 535.394 101.782 535.557 101.877 cv
535.034 102.026 534.718 102.57 534.855 103.106 cv
cp
531.827 102.241 mo
532.376 98.4766 534.554 95.6846 536.681 95.9976 cv
538.817 96.312 540.092 99.6216 539.538 103.386 cv
538.984 107.15 536.812 109.946 534.681 109.631 cv
534.412 109.59 534.16 109.501 533.92 109.38 cv
534.037 109.416 534.146 109.479 534.274 109.492 cv
535.975 109.747 537.719 107.51 538.158 104.5 cv
538.603 101.488 537.577 98.8398 535.873 98.5869 cv
534.172 98.3364 532.432 100.573 531.995 103.583 cv
531.833 104.655 531.867 105.669 532.042 106.556 cv
531.698 105.317 531.592 103.833 531.827 102.241 cv
cp
541.702 96.2681 mo
541.702 96.2681 538.305 91.9243 533.623 94.938 cv
536.191 90.5874 541.665 92.314 541.702 96.2681 cv
cp
504.453 73.6841 mo
504.876 73.271 505.473 72.7808 506.329 72.2114 cv
507.981 71.1138 512.273 69.8647 515.266 69.0498 cv
515.296 69.104 515.332 69.1577 515.362 69.2124 cv
512.784 71.105 508.099 74.249 504.453 73.6841 cv
cp
564.154 69.9019 mo
567.465 71.6099 572.061 74.0903 573.702 75.7632 cv
574.57 76.6494 575.152 77.377 575.549 77.9707 cv
571.186 77.729 566.532 73.0083 563.937 70.1167 cv
564.008 70.043 564.081 69.9736 564.154 69.9019 cv
cp
579.829 114.622 mo
579.347 112.782 578.391 111.412 577.073 110.554 cv
575.632 109.417 573.655 108.969 571.306 109.292 cv
571.367 107.098 571.291 104.983 571.091 102.953 cv
570.745 97.2949 569.327 92.6289 567.103 88.6274 cv
565.306 84.9971 563.021 81.8726 560.4 79.3164 cv
560.224 77.105 560.843 74.7622 562.007 72.7163 cv
562.163 75.0981 561.999 78.3857 562.946 79.2422 cv
564.321 78.623 566.289 77.5483 565.945 77.2129 cv
563.666 75.0059 563.144 72.9595 562.622 71.7295 cv
562.65 71.6899 562.679 71.6514 562.706 71.6118 cv
571.544 84.5654 574.695 81.5869 575.432 81 cv
577.461 79.3833 578.071 77.5464 578.071 77.5464 cv
578.063 77.5493 578.056 77.5508 578.048 77.5542 cv
578.461 76.7871 578.327 76.249 577.476 75.2119 cv
574.529 71.6162 569.233 69.8955 565.225 68.9614 cv
567.638 67.0938 570.698 66.2983 573.818 67.6064 cv
575.771 68.4243 577.207 69.5981 578.206 70.6621 cv
578.364 70.8291 578.62 70.8555 578.807 70.7231 cv
578.995 70.5908 579.057 70.3403 578.952 70.1362 cv
576.953 66.249 572.767 62.9756 566.738 63.3398 cv
564.646 63.4653 562.683 64.0146 560.9 64.8184 cv
559.827 59.7891 558.454 52.8799 554.743 50.7412 cv
553.876 50.2412 553.358 50.6592 552.577 51.29 cv
552.651 51.2124 552.703 51.1748 552.703 51.1748 cv
552.703 51.1748 549.214 53.7075 548.873 54.666 cv
547.717 57.9053 552.297 62.6919 557.697 66.6592 cv
557.56 66.7573 557.428 66.8584 557.294 66.9585 cv
555.876 66.2158 554.264 65.2715 553.009 64.4287 cv
550.463 62.7188 549.275 61.584 549.275 61.584 cv
548.504 62.6538 549.543 64.9946 549.706 66.7642 cv
550.335 67.3594 553.082 67.9424 555.626 68.3711 cv
553.714 70.1924 552.389 72.2168 551.886 73.9395 cv
551.737 73.8818 551.59 73.8198 551.44 73.7651 cv
551.432 73.7603 551.425 73.7568 551.416 73.7529 cv
551.421 73.7554 551.427 73.7588 551.431 73.7612 cv
540.025 69.5791 526.798 72.7666 524.213 73.5127 cv
523.923 72.2246 523.264 70.7563 522.282 69.3252 cv
524.421 69.4155 526.753 69.416 527.366 69.0405 cv
527.799 67.6333 529.543 65.5874 528.599 64.9087 cv
528.599 64.9087 527.441 65.6245 525.079 66.5747 cv
523.918 67.042 522.449 67.5293 521.171 67.8877 cv
521.08 67.7827 520.982 67.6812 520.888 67.5781 cv
525.956 65.2876 530.496 62.189 530.11 59.3574 cv
529.997 58.5195 527.599 55.8584 527.599 55.8584 cv
527.599 55.8584 527.638 55.9014 527.688 55.9844 cv
527.157 55.3311 526.807 54.8965 526.012 55.1553 cv
522.632 56.251 520.334 61.627 518.601 65.5269 cv
517.291 64.5669 515.791 63.7817 514.113 63.3184 cv
509.943 62.165 506.594 63.4814 504.617 65.9438 cv
504.451 66.1514 504.464 66.4492 504.648 66.6406 cv
504.832 66.8315 505.13 66.8564 505.343 66.6978 cv
505.966 66.2329 506.722 65.8257 507.632 65.563 cv
510.481 64.7388 512.917 66.0039 514.298 67.6431 cv
514.436 67.8062 514.553 67.9746 514.676 68.1421 cv
511.235 68.1865 506.455 68.6274 503.357 71.1094 cv
502.489 71.8057 502.287 72.2192 502.49 72.9136 cv
502.484 72.9097 502.478 72.9067 502.473 72.9028 cv
502.473 72.9028 502.655 74.5034 504.03 76.165 cv
504.527 76.7705 506.583 79.7388 516.001 70.7075 cv
516.014 70.7441 516.028 70.7813 516.04 70.8184 cv
515.411 71.729 514.911 73.3423 512.659 74.7568 cv
512.32 74.9688 513.734 76.1812 514.747 76.9224 cv
515.639 76.4043 515.778 73.7759 516.314 71.8916 cv
516.814 74.3242 516.384 76.4243 516.281 76.8608 cv
511.322 79.7329 507.521 83.7788 505.295 89.1279 cv
504.392 91.2964 503.892 93.6855 503.646 96.064 cv
502.71 102.756 503.895 108.835 503.71 109.009 cv
495.111 117.046 500.278 130.816 505.311 137.126 cv
514.118 148.154 531.045 153.144 550.462 146.121 cv
555.507 144.293 565.213 137.323 568.176 127.599 cv
568.588 127.13 569.001 126.65 569.416 126.156 cv
569.577 126.176 569.737 126.194 569.903 126.205 cv
571.444 126.578 572.9 126.57 574.236 126.173 cv
578.949 124.767 580.967 118.955 579.829 114.622 cv
cp
f
545.409 122.134 mo
545.418 122.121 545.427 122.109 545.435 122.095 cv
545.48 122.028 545.402 122.13 545.402 122.13 cv
545.404 122.131 545.407 122.133 545.409 122.134 cv
cp
f
252.259 136 mo
251.287 136 250.5 136.788 250.5 137.759 cv
250.5 198.241 li
250.5 199.212 251.287 200 252.259 200 cv
303.741 200 li
304.712 200 305.5 199.212 305.5 198.241 cv
305.5 146.114 li
305.5 145.302 305.177 144.522 304.603 143.948 cv
297.605 136.95 li
296.996 136.342 296.172 136 295.311 136 cv
252.259 136 li
cp
0 .368627 .427451 rgb
f
302.837 196.533 mo
302.837 196.977 302.476 197.337 302.033 197.337 cv
253.967 197.337 li
253.523 197.337 253.162 196.977 253.162 196.533 cv
253.162 139.467 li
253.162 139.023 253.523 138.663 253.967 138.663 cv
295.258 138.663 li
295.258 146.115 li
295.258 146.342 295.442 146.527 295.67 146.527 cv
302.833 146.527 li
302.835 146.558 302.837 146.587 302.837 146.618 cv
302.837 196.533 li
cp
302.364 145.474 mo
302.434 145.545 302.497 145.622 302.553 145.702 cv
296.082 145.702 li
296.082 139.193 li
302.364 145.474 li
cp
302.947 144.891 mo
296.306 138.249 li
296.04 137.983 295.687 137.837 295.311 137.837 cv
253.967 137.837 li
253.069 137.837 252.337 138.568 252.337 139.467 cv
252.337 196.533 li
252.337 197.431 253.069 198.163 253.967 198.163 cv
302.033 198.163 li
302.932 198.163 303.662 197.431 303.662 196.533 cv
303.662 146.618 li
303.662 145.965 303.409 145.352 302.947 144.891 cv
cp
1 1 1 rgb
f
258.251 180.668 mo
258.251 180.248 258.731 180.068 259.226 180.068 cv
259.706 180.068 260.201 180.248 260.201 180.668 cv
260.201 184.762 li
263.441 180.353 li
263.591 180.143 263.77 180.068 263.98 180.068 cv
264.475 180.068 265.105 180.578 265.105 181.073 cv
265.105 181.178 265.09 181.313 264.985 181.448 cv
262.301 184.807 li
265.57 189.786 li
265.645 189.891 265.675 190.011 265.675 190.131 cv
265.675 190.611 265.076 191.106 264.505 191.106 cv
264.25 191.106 263.995 191.001 263.83 190.731 cv
261.011 186.457 li
260.201 187.477 li
260.201 190.416 li
260.201 190.821 259.706 191.031 259.226 191.031 cv
258.731 191.031 258.251 190.821 258.251 190.416 cv
258.251 180.668 li
cp
f
268.313 184.507 mo
268.313 190.416 li
268.313 190.716 267.878 191.031 267.338 191.031 cv
266.783 191.031 266.378 190.716 266.378 190.416 cv
266.378 184.507 li
266.378 184.147 266.783 183.907 267.338 183.907 cv
267.878 183.907 268.313 184.147 268.313 184.507 cv
cp
268.388 181.373 mo
268.388 181.868 267.923 182.317 267.338 182.317 cv
266.738 182.317 266.273 181.868 266.273 181.373 cv
266.273 180.863 266.738 180.428 267.338 180.428 cv
267.923 180.428 268.388 180.863 268.388 181.373 cv
cp
f
271.492 188.091 mo
271.492 188.781 272.092 189.471 272.797 189.471 cv
273.561 189.471 274.161 188.676 274.161 188.361 cv
274.161 186.862 li
274.161 186.022 273.457 185.512 272.812 185.512 cv
272.077 185.512 271.492 186.187 271.492 186.862 cv
271.492 188.091 li
cp
276.096 180.353 mo
276.096 190.416 li
276.096 190.716 275.691 191.031 275.137 191.031 cv
274.657 191.031 274.266 190.716 274.266 190.416 cv
274.266 189.981 li
273.967 190.596 273.141 191.166 272.182 191.166 cv
270.787 191.166 269.557 189.696 269.557 188.091 cv
269.557 186.862 li
269.557 185.197 270.757 183.817 272.227 183.817 cv
273.157 183.817 273.831 184.372 274.161 184.957 cv
274.161 180.353 li
274.161 179.993 274.597 179.753 275.137 179.753 cv
275.691 179.753 276.096 179.993 276.096 180.353 cv
cp
f
280.969 189.051 mo
280.969 187.731 277.414 188.557 277.414 186.052 cv
277.414 184.987 278.089 183.817 280.099 183.817 cv
281.314 183.817 282.484 184.237 282.484 184.792 cv
282.484 185.062 282.229 185.722 281.779 185.722 cv
281.419 185.722 280.954 185.287 280.129 185.287 cv
279.379 185.287 279.079 185.662 279.079 185.962 cv
279.079 187.057 282.679 186.307 282.679 188.976 cv
282.679 190.311 281.689 191.166 279.919 191.166 cv
278.389 191.166 277.204 190.536 277.204 189.876 cv
277.204 189.561 277.474 189.021 277.849 189.021 cv
278.285 189.021 278.614 189.696 279.874 189.696 cv
280.759 189.696 280.969 189.351 280.969 189.051 cv
cp
f
286.966 180.668 mo
286.966 180.248 287.446 180.068 287.941 180.068 cv
288.421 180.068 288.915 180.248 288.915 180.668 cv
288.915 190.416 li
288.915 190.821 288.421 191.031 287.941 191.031 cv
287.446 191.031 286.966 190.821 286.966 190.416 cv
286.966 180.668 li
cp
f
292.664 181.777 mo
292.664 189.321 li
294.224 189.321 li
295.214 189.321 295.799 188.767 295.799 187.597 cv
295.799 183.502 li
295.799 182.333 295.214 181.777 294.224 181.777 cv
292.664 181.777 li
cp
294.224 180.068 mo
296.204 180.068 297.748 180.998 297.748 183.502 cv
297.748 187.597 li
297.748 190.101 296.204 191.031 294.224 191.031 cv
291.57 191.031 li
291.059 191.031 290.715 190.746 290.715 190.431 cv
290.715 180.668 li
290.715 180.353 291.059 180.068 291.57 180.068 cv
294.224 180.068 li
cp
f
275.2 166.091 mo
275.141 166.062 275.078 166.037 275.024 165.997 cv
274.955 165.953 274.893 165.896 274.838 165.833 cv
273.689 168.662 269.294 172.262 264.905 165.794 cv
264.687 165.949 264.364 166.1 263.747 166.045 cv
264.373 165.916 264.842 165.875 265.104 164.901 cv
265.157 164.705 265.386 164.76 265.342 164.958 cv
265.282 165.237 265.209 165.391 265.039 165.634 cv
269.328 168.362 273.221 167.268 274.742 165.711 cv
274.741 165.71 274.74 165.709 274.739 165.708 cv
274.67 165.588 274.622 165.454 274.615 165.316 cv
274.608 165.229 274.616 165.141 274.641 165.059 cv
274.656 165.013 274.699 164.984 274.72 165.085 cv
274.873 165.832 275.35 166.094 275.391 166.143 cv
275.326 166.132 275.263 166.112 275.2 166.091 cv
cp
266.342 158.547 mo
266.352 157.44 267.884 156.958 268.603 158.175 cv
267.292 157.332 266.342 158.547 266.342 158.547 cv
cp
267.79 160.436 mo
267.808 160.281 267.951 160.196 268.026 160.185 cv
268.322 160.14 268.643 160.379 268.676 160.937 cv
268.712 161.563 268.454 161.908 268.158 161.952 cv
267.863 161.996 267.574 161.679 267.509 161.247 cv
267.489 161.104 267.496 160.967 267.526 160.844 cv
267.558 160.886 267.601 160.92 267.656 160.933 cv
267.793 160.969 267.932 160.888 267.969 160.75 cv
268.004 160.613 267.912 160.445 267.79 160.436 cv
cp
269.059 160.595 mo
268.936 159.752 268.449 159.126 267.973 159.196 cv
267.496 159.267 267.209 160.008 267.334 160.851 cv
267.456 161.694 267.945 162.32 268.421 162.249 cv
268.428 162.248 268.434 162.245 268.441 162.243 cv
268.397 162.26 268.354 162.28 268.307 162.288 cv
267.71 162.375 267.102 161.593 266.948 160.54 cv
266.792 159.486 267.149 158.56 267.747 158.472 cv
268.342 158.384 268.952 159.166 269.105 160.219 cv
269.171 160.665 269.141 161.08 269.045 161.427 cv
269.094 161.179 269.104 160.895 269.059 160.595 cv
cp
272.174 163.455 mo
272.777 163.213 272.755 162.731 272.772 162.848 cv
272.942 164.077 270.889 164.533 270.048 163.506 cv
269.894 163.318 269.896 163.148 269.896 163.148 cv
270.076 163.543 271.392 163.768 272.174 163.455 cv
cp
273.474 158.329 mo
274.053 158.305 274.558 159.115 274.603 160.14 cv
274.622 160.572 274.552 160.969 274.424 161.292 cv
274.496 161.059 274.534 160.787 274.522 160.496 cv
274.487 159.675 274.082 159.027 273.619 159.047 cv
273.155 159.067 272.807 159.747 272.841 160.567 cv
272.851 160.8 272.891 161.017 272.953 161.21 cv
272.929 161.125 272.911 161.035 272.907 160.938 cv
272.901 160.791 272.925 160.651 272.966 160.531 cv
272.995 160.574 273.036 160.614 273.089 160.635 cv
273.225 160.686 273.377 160.617 273.428 160.479 cv
273.478 160.345 273.382 160.18 273.21 160.18 cv
273.285 160.065 273.406 160.032 273.456 160.03 cv
273.762 160.018 274.015 160.222 274.045 160.818 cv
274.067 161.266 273.8 161.712 273.496 161.727 cv
273.279 161.735 273.085 161.558 272.983 161.295 cv
273.146 161.739 273.432 162.03 273.745 162.018 cv
273.708 162.025 273.671 162.04 273.633 162.041 cv
273.052 162.068 272.547 161.255 272.503 160.231 cv
272.459 159.205 272.893 158.355 273.474 158.329 cv
cp
274.37 158.27 mo
274.37 158.27 273.222 157.219 272.533 158.62 cv
272.627 157.152 273.953 157.206 274.37 158.27 cv
cp
258.281 166.437 mo
258.198 166.177 258.129 165.951 258.029 165.563 cv
257.358 162.931 256.247 164.012 256.352 164.756 cv
256.021 163.543 257.939 162.393 258.268 165.526 cv
258.293 165.766 258.321 166.149 258.281 166.437 cv
cp
276.031 156.452 mo
275.114 154.441 273.402 153.135 271.185 152.433 cv
271.618 152.01 272.275 151.72 273.052 151.904 cv
274.222 152.182 274.649 153.233 274.649 153.233 cv
274.308 151.742 272.24 150.686 270.33 151.316 cv
269.968 151.436 269.636 151.603 269.333 151.801 cv
270.487 149.66 273.419 149.906 274.135 150.396 cv
270.524 147.436 266.496 150.484 265.857 151.979 cv
265.858 151.98 265.858 151.98 265.859 151.98 cv
264.02 152.162 262.018 152.744 260.539 154.203 cv
258.638 156.078 257.471 158.461 257.732 162.201 cv
256.515 162.007 255.643 162.544 255.391 163.655 cv
255.114 164.88 255.734 166.486 257.065 166.835 cv
257.432 166.93 258.008 166.979 258.421 166.871 cv
258.414 166.852 258.422 166.878 258.435 166.932 cv
259.112 169.854 262.018 171.965 263.495 172.5 cv
268.93 174.466 273.668 173.069 276.132 169.983 cv
277.541 168.217 278.987 164.363 276.58 162.113 cv
276.51 162.047 277.154 158.909 276.031 156.452 cv
cp
f
264.898 165.783 mo
264.9 165.787 264.903 165.79 264.905 165.794 cv
264.906 165.793 264.907 165.793 264.907 165.792 cv
264.907 165.792 264.885 165.764 264.898 165.783 cv
cp
f
299.635 165.613 mo
299.729 164.949 298.737 163.982 298.137 166.333 cv
298.043 166.699 297.937 167.02 297.927 167.023 cv
297.908 166.727 297.932 166.382 297.956 166.15 cv
298.251 163.352 299.931 164.529 299.635 165.613 cv
cp
295.52 152.377 mo
294.055 150.867 293.664 149.949 293.621 149.421 cv
293.762 149.505 293.947 149.641 294.192 149.86 cv
294.618 150.242 295.238 151.406 295.673 152.292 cv
295.62 152.319 295.571 152.349 295.52 152.377 cv
cp
291.991 166.534 mo
288.92 171.118 285.005 170.446 284.37 168.137 cv
283.928 167.902 283.443 167.334 283.108 166.707 cv
283.059 166.764 283.005 166.814 282.943 166.855 cv
282.895 166.891 282.839 166.914 282.787 166.941 cv
282.731 166.961 282.675 166.979 282.617 166.99 cv
282.653 166.945 283.076 166.706 283.203 166.04 cv
283.22 165.949 283.26 165.975 283.273 166.016 cv
283.296 166.088 283.305 166.167 283.3 166.244 cv
283.295 166.366 283.255 166.486 283.194 166.594 cv
283.193 166.595 283.193 166.596 283.192 166.597 cv
284.706 168.447 288.715 168.616 291.869 166.394 cv
291.713 166.179 291.646 166.043 291.589 165.797 cv
291.546 165.621 291.751 165.569 291.801 165.743 cv
292.048 166.605 292.468 166.635 293.03 166.742 cv
292.48 166.798 292.188 166.668 291.991 166.534 cv
cp
284.463 161.553 mo
284.512 161.685 284.658 161.751 284.788 161.703 cv
284.84 161.683 284.879 161.645 284.907 161.603 cv
284.946 161.719 284.969 161.853 284.963 161.994 cv
284.945 162.424 284.692 162.763 284.397 162.751 cv
284.105 162.738 283.882 162.378 283.901 161.948 cv
283.92 161.518 284.173 161.179 284.466 161.191 cv
284.515 161.192 284.562 161.209 284.607 161.229 cv
284.479 161.281 284.415 161.424 284.463 161.553 cv
cp
284.694 159.872 mo
285.212 159.896 285.6 160.654 285.56 161.571 cv
285.521 162.486 285.07 163.212 284.552 163.188 cv
284.517 163.187 284.484 163.174 284.452 163.167 cv
284.866 163.183 285.226 162.605 285.259 161.871 cv
285.289 161.138 284.979 160.531 284.564 160.514 cv
284.15 160.496 283.788 161.075 283.757 161.808 cv
283.746 162.068 283.78 162.31 283.845 162.519 cv
283.73 162.23 283.668 161.876 283.685 161.489 cv
283.725 160.574 284.176 159.85 284.694 159.872 cv
cp
285.534 159.78 mo
284.919 158.528 283.893 159.467 283.893 159.467 cv
284.265 158.516 285.45 158.469 285.534 159.78 cv
cp
287.049 150.766 mo
287.285 150.63 287.459 150.552 287.587 150.508 cv
287.462 150.93 286.988 151.607 285.54 152.582 cv
285.504 152.55 285.466 152.518 285.428 152.488 cv
285.933 151.842 286.637 151.003 287.049 150.766 cv
cp
287.89 164.176 mo
287.89 164.176 287.891 164.329 287.754 164.497 cv
287.003 165.414 285.168 165.006 285.32 163.908 cv
285.335 163.804 285.316 164.234 285.855 164.45 cv
286.553 164.73 287.728 164.529 287.89 164.176 cv
cp
289.352 161.776 mo
289.388 161.911 289.525 161.991 289.659 161.955 cv
289.712 161.942 289.754 161.91 289.786 161.869 cv
289.815 161.989 289.822 162.123 289.803 162.262 cv
289.739 162.686 289.457 162.995 289.167 162.952 cv
288.878 162.909 288.696 162.532 288.759 162.108 cv
288.821 161.684 289.104 161.376 289.394 161.418 cv
289.442 161.425 289.487 161.445 289.528 161.469 cv
289.397 161.506 289.318 161.643 289.352 161.776 cv
cp
288.596 161.561 mo
288.733 160.619 289.277 159.921 289.809 160 cv
290.343 160.078 290.661 160.905 290.523 161.847 cv
290.385 162.788 289.842 163.486 289.309 163.408 cv
289.242 163.397 289.179 163.375 289.119 163.345 cv
289.148 163.354 289.175 163.37 289.207 163.373 cv
289.632 163.437 290.068 162.877 290.178 162.125 cv
290.289 161.372 290.033 160.71 289.607 160.646 cv
289.182 160.584 288.747 161.144 288.637 161.896 cv
288.597 162.164 288.605 162.417 288.649 162.639 cv
288.563 162.329 288.536 161.958 288.596 161.561 cv
cp
291.064 160.067 mo
291.064 160.067 290.215 158.981 289.044 159.734 cv
289.686 158.647 291.055 159.079 291.064 160.067 cv
cp
281.752 154.421 mo
281.858 154.318 282.007 154.195 282.221 154.053 cv
282.634 153.778 283.707 153.466 284.455 153.262 cv
284.463 153.276 284.472 153.29 284.479 153.303 cv
283.835 153.776 282.663 154.563 281.752 154.421 cv
cp
296.677 153.476 mo
297.505 153.902 298.654 154.522 299.064 154.941 cv
299.281 155.162 299.427 155.344 299.526 155.493 cv
298.435 155.432 297.272 154.252 296.623 153.529 cv
296.641 153.511 296.659 153.493 296.677 153.476 cv
cp
300.596 164.655 mo
300.475 164.195 300.237 163.853 299.907 163.639 cv
299.547 163.354 299.053 163.242 298.465 163.323 cv
298.48 162.774 298.461 162.246 298.411 161.738 cv
298.325 160.324 297.971 159.157 297.414 158.157 cv
296.965 157.249 296.394 156.468 295.739 155.829 cv
295.695 155.276 295.849 154.69 296.141 154.179 cv
296.18 154.774 296.139 155.597 296.375 155.811 cv
296.719 155.656 297.211 155.387 297.125 155.303 cv
296.555 154.751 296.425 154.24 296.294 153.932 cv
296.301 153.922 296.308 153.913 296.315 153.903 cv
298.525 157.141 299.312 156.396 299.497 156.25 cv
300.004 155.846 300.157 155.387 300.157 155.387 cv
300.155 155.387 300.153 155.388 300.151 155.389 cv
300.254 155.197 300.221 155.063 300.008 154.803 cv
299.271 153.904 297.947 153.474 296.945 153.24 cv
297.548 152.773 298.313 152.575 299.093 152.902 cv
299.581 153.106 299.94 153.399 300.19 153.666 cv
300.229 153.708 300.294 153.714 300.341 153.681 cv
300.388 153.647 300.403 153.585 300.376 153.534 cv
299.877 152.562 298.83 151.744 297.323 151.835 cv
296.8 151.866 296.309 152.004 295.864 152.205 cv
295.596 150.947 295.252 149.22 294.324 148.686 cv
294.108 148.56 293.978 148.665 293.783 148.822 cv
293.802 148.803 293.814 148.793 293.814 148.793 cv
293.814 148.793 292.942 149.427 292.857 149.667 cv
292.568 150.477 293.713 151.673 295.063 152.665 cv
295.029 152.689 294.995 152.714 294.962 152.74 cv
294.608 152.554 294.204 152.318 293.891 152.107 cv
293.255 151.68 292.957 151.396 292.957 151.396 cv
292.765 151.664 293.024 152.249 293.065 152.691 cv
293.223 152.84 293.909 152.985 294.545 153.093 cv
294.067 153.548 293.736 154.054 293.61 154.485 cv
293.573 154.471 293.536 154.455 293.498 154.441 cv
293.496 154.44 293.495 154.439 293.493 154.438 cv
293.494 154.439 293.495 154.44 293.496 154.44 cv
290.645 153.395 287.338 154.191 286.692 154.378 cv
286.62 154.056 286.454 153.689 286.209 153.332 cv
286.744 153.354 287.327 153.354 287.48 153.26 cv
287.588 152.908 288.024 152.397 287.788 152.227 cv
287.788 152.227 287.499 152.406 286.909 152.644 cv
286.618 152.76 286.251 152.882 285.932 152.972 cv
285.909 152.946 285.884 152.92 285.861 152.895 cv
287.128 152.322 288.263 151.547 288.166 150.839 cv
288.138 150.63 287.538 149.964 287.538 149.964 cv
287.538 149.964 287.548 149.976 287.561 149.996 cv
287.428 149.833 287.34 149.724 287.142 149.789 cv
286.297 150.063 285.722 151.407 285.289 152.382 cv
284.961 152.142 284.586 151.945 284.167 151.83 cv
283.124 151.541 282.287 151.87 281.793 152.486 cv
281.751 152.538 281.755 152.612 281.801 152.66 cv
281.847 152.708 281.921 152.714 281.974 152.674 cv
282.13 152.558 282.319 152.457 282.547 152.391 cv
283.259 152.185 283.868 152.501 284.213 152.911 cv
284.247 152.952 284.277 152.994 284.307 153.036 cv
283.447 153.046 282.252 153.157 281.478 153.777 cv
281.261 153.951 281.21 154.055 281.261 154.229 cv
281.26 154.228 281.258 154.227 281.257 154.226 cv
281.257 154.226 281.303 154.626 281.646 155.042 cv
281.77 155.193 282.285 155.935 284.639 153.677 cv
284.642 153.686 284.646 153.695 284.649 153.705 cv
284.492 153.932 284.367 154.335 283.803 154.689 cv
283.719 154.742 284.072 155.045 284.326 155.23 cv
284.548 155.101 284.583 154.444 284.717 153.973 cv
284.842 154.581 284.735 155.106 284.709 155.215 cv
283.469 155.933 282.519 156.945 281.962 158.282 cv
281.737 158.824 281.612 159.421 281.55 160.016 cv
281.316 161.689 281.612 163.209 281.566 163.252 cv
279.416 165.262 280.708 168.704 281.967 170.282 cv
284.168 173.039 288.4 174.286 293.254 172.53 cv
294.516 172.073 296.942 170.331 297.682 167.899 cv
297.786 167.782 297.889 167.663 297.993 167.539 cv
298.033 167.544 298.073 167.548 298.114 167.551 cv
298.5 167.645 298.864 167.643 299.198 167.543 cv
300.376 167.192 300.88 165.739 300.596 164.655 cv
cp
f
291.991 166.534 mo
291.993 166.53 291.995 166.527 291.997 166.524 cv
292.009 166.507 291.989 166.533 291.989 166.533 cv
291.99 166.533 291.991 166.533 291.991 166.534 cv
cp
f
143.811 152 mo
143.087 152 142.5 152.591 142.5 153.319 cv
142.5 198.681 li
142.5 199.409 143.087 200 143.811 200 cv
182.189 200 li
182.913 200 183.5 199.409 183.5 198.681 cv
183.5 159.585 li
183.5 158.976 183.26 158.392 182.831 157.961 cv
177.615 152.712 li
177.161 152.256 176.546 152 175.905 152 cv
143.811 152 li
cp
0 .368627 .427451 rgb
f
181.515 197.399 mo
181.515 197.732 181.246 198.003 180.915 198.003 cv
145.085 198.003 li
144.754 198.003 144.485 197.732 144.485 197.399 cv
144.485 154.601 li
144.485 154.268 144.754 153.997 145.085 153.997 cv
175.865 153.997 li
175.865 159.586 li
175.865 159.757 176.002 159.896 176.172 159.896 cv
181.512 159.896 li
181.513 159.918 181.515 159.94 181.515 159.963 cv
181.515 197.399 li
cp
181.162 159.105 mo
181.215 159.159 181.262 159.216 181.303 159.277 cv
176.48 159.276 li
176.48 154.395 li
181.162 159.105 li
cp
181.597 158.668 mo
176.646 153.687 li
176.448 153.488 176.184 153.378 175.905 153.378 cv
145.085 153.378 li
144.415 153.378 143.87 153.926 143.87 154.601 cv
143.87 197.399 li
143.87 198.074 144.415 198.622 145.085 198.622 cv
180.915 198.622 li
181.585 198.622 182.13 198.074 182.13 197.399 cv
182.13 159.963 li
182.13 159.474 181.941 159.014 181.597 158.668 cv
cp
1 1 1 rgb
f
148.278 185.501 mo
148.278 185.186 148.636 185.051 149.005 185.051 cv
149.363 185.051 149.732 185.186 149.732 185.501 cv
149.732 188.571 li
152.147 185.265 li
152.258 185.107 152.392 185.051 152.549 185.051 cv
152.918 185.051 153.388 185.434 153.388 185.805 cv
153.388 185.883 153.376 185.984 153.298 186.086 cv
151.297 188.605 li
153.734 192.34 li
153.79 192.418 153.812 192.508 153.812 192.598 cv
153.812 192.958 153.365 193.33 152.94 193.33 cv
152.75 193.33 152.56 193.25 152.437 193.048 cv
150.335 189.843 li
149.732 190.607 li
149.732 192.812 li
149.732 193.116 149.363 193.273 149.005 193.273 cv
148.636 193.273 148.278 193.116 148.278 192.812 cv
148.278 185.501 li
cp
f
155.779 188.38 mo
155.779 192.812 li
155.779 193.037 155.454 193.273 155.052 193.273 cv
154.639 193.273 154.337 193.037 154.337 192.812 cv
154.337 188.38 li
154.337 188.11 154.639 187.931 155.052 187.931 cv
155.454 187.931 155.779 188.11 155.779 188.38 cv
cp
155.835 186.029 mo
155.835 186.4 155.488 186.738 155.052 186.738 cv
154.605 186.738 154.258 186.4 154.258 186.029 cv
154.258 185.647 154.605 185.321 155.052 185.321 cv
155.488 185.321 155.835 185.647 155.835 186.029 cv
cp
f
158.149 191.069 mo
158.149 191.586 158.596 192.104 159.121 192.104 cv
159.691 192.104 160.139 191.507 160.139 191.271 cv
160.139 190.146 li
160.139 189.517 159.613 189.134 159.132 189.134 cv
158.584 189.134 158.149 189.64 158.149 190.146 cv
158.149 191.069 li
cp
161.581 185.265 mo
161.581 192.812 li
161.581 193.037 161.279 193.273 160.865 193.273 cv
160.508 193.273 160.217 193.037 160.217 192.812 cv
160.217 192.486 li
159.993 192.947 159.378 193.375 158.663 193.375 cv
157.623 193.375 156.706 192.272 156.706 191.069 cv
156.706 190.146 li
156.706 188.898 157.6 187.863 158.696 187.863 cv
159.39 187.863 159.892 188.279 160.139 188.718 cv
160.139 185.265 li
160.139 184.995 160.463 184.814 160.865 184.814 cv
161.279 184.814 161.581 184.995 161.581 185.265 cv
cp
f
165.213 191.789 mo
165.213 190.799 162.563 191.417 162.563 189.539 cv
162.563 188.74 163.067 187.863 164.565 187.863 cv
165.47 187.863 166.342 188.178 166.342 188.594 cv
166.342 188.797 166.152 189.292 165.817 189.292 cv
165.549 189.292 165.202 188.965 164.587 188.965 cv
164.028 188.965 163.805 189.247 163.805 189.471 cv
163.805 190.292 166.488 189.73 166.488 191.732 cv
166.488 192.733 165.75 193.375 164.431 193.375 cv
163.29 193.375 162.407 192.902 162.407 192.407 cv
162.407 192.171 162.608 191.766 162.888 191.766 cv
163.212 191.766 163.458 192.272 164.397 192.272 cv
165.057 192.272 165.213 192.014 165.213 191.789 cv
cp
f
169.683 185.501 mo
169.683 185.186 170.041 185.051 170.411 185.051 cv
170.768 185.051 171.137 185.186 171.137 185.501 cv
171.137 192.812 li
171.137 193.116 170.768 193.273 170.411 193.273 cv
170.041 193.273 169.683 193.116 169.683 192.812 cv
169.683 185.501 li
cp
f
173.932 186.333 mo
173.932 191.991 li
175.094 191.991 li
175.832 191.991 176.268 191.575 176.268 190.697 cv
176.268 187.626 li
176.268 186.75 175.832 186.333 175.094 186.333 cv
173.932 186.333 li
cp
175.094 185.051 mo
176.57 185.051 177.722 185.748 177.722 187.626 cv
177.722 190.697 li
177.722 192.576 176.57 193.273 175.094 193.273 cv
173.116 193.273 li
172.735 193.273 172.478 193.06 172.478 192.823 cv
172.478 185.501 li
172.478 185.265 172.735 185.051 173.116 185.051 cv
175.094 185.051 li
cp
f
160.912 174.568 mo
160.869 174.546 160.822 174.527 160.782 174.498 cv
160.73 174.464 160.684 174.422 160.642 174.375 cv
159.786 176.497 156.511 179.196 153.238 174.345 cv
153.076 174.461 152.834 174.575 152.375 174.534 cv
152.842 174.437 153.192 174.407 153.387 173.676 cv
153.426 173.529 153.597 173.57 153.564 173.719 cv
153.519 173.928 153.465 174.043 153.338 174.226 cv
156.536 176.272 159.437 175.451 160.571 174.283 cv
160.571 174.282 160.57 174.282 160.569 174.281 cv
160.517 174.191 160.482 174.09 160.476 173.987 cv
160.472 173.922 160.477 173.856 160.496 173.794 cv
160.507 173.759 160.539 173.738 160.555 173.814 cv
160.669 174.374 161.025 174.57 161.055 174.607 cv
161.007 174.599 160.96 174.584 160.912 174.568 cv
cp
154.309 168.911 mo
154.317 168.081 155.459 167.718 155.995 168.631 cv
155.018 167.999 154.309 168.911 154.309 168.911 cv
cp
155.389 170.327 mo
155.403 170.211 155.509 170.147 155.565 170.139 cv
155.786 170.105 156.025 170.285 156.049 170.703 cv
156.077 171.172 155.884 171.431 155.663 171.464 cv
155.443 171.497 155.227 171.259 155.18 170.935 cv
155.164 170.828 155.17 170.725 155.192 170.633 cv
155.217 170.665 155.248 170.69 155.289 170.7 cv
155.391 170.727 155.495 170.666 155.522 170.563 cv
155.549 170.46 155.48 170.334 155.389 170.327 cv
cp
156.335 170.446 mo
156.243 169.814 155.88 169.345 155.525 169.397 cv
155.17 169.45 154.956 170.006 155.049 170.639 cv
155.141 171.27 155.504 171.74 155.859 171.687 cv
155.865 171.686 155.87 171.684 155.874 171.682 cv
155.842 171.695 155.809 171.71 155.774 171.716 cv
155.329 171.782 154.876 171.195 154.761 170.405 cv
154.645 169.615 154.912 168.92 155.357 168.854 cv
155.801 168.788 156.255 169.374 156.37 170.165 cv
156.419 170.499 156.396 170.81 156.325 171.07 cv
156.361 170.884 156.368 170.671 156.335 170.446 cv
cp
158.657 172.591 mo
159.106 172.41 159.09 172.048 159.103 172.136 cv
159.23 173.058 157.699 173.4 157.072 172.63 cv
156.957 172.489 156.959 172.361 156.959 172.361 cv
157.093 172.657 158.074 172.826 158.657 172.591 cv
cp
159.626 168.747 mo
160.058 168.729 160.434 169.336 160.468 170.105 cv
160.482 170.429 160.43 170.727 160.334 170.969 cv
160.388 170.794 160.416 170.59 160.407 170.372 cv
160.381 169.756 160.079 169.271 159.734 169.286 cv
159.388 169.3 159.128 169.81 159.154 170.425 cv
159.162 170.6 159.192 170.763 159.238 170.908 cv
159.22 170.844 159.207 170.776 159.204 170.704 cv
159.199 170.593 159.217 170.489 159.247 170.398 cv
159.269 170.431 159.299 170.461 159.339 170.476 cv
159.44 170.514 159.554 170.462 159.592 170.359 cv
159.629 170.259 159.558 170.135 159.43 170.135 cv
159.485 170.049 159.576 170.024 159.613 170.022 cv
159.841 170.013 160.03 170.167 160.052 170.613 cv
160.068 170.95 159.869 171.284 159.643 171.295 cv
159.48 171.301 159.336 171.168 159.26 170.972 cv
159.382 171.304 159.594 171.522 159.828 171.514 cv
159.801 171.519 159.773 171.53 159.745 171.531 cv
159.312 171.551 158.935 170.941 158.902 170.173 cv
158.87 169.404 159.193 168.767 159.626 168.747 cv
cp
160.293 168.703 mo
160.293 168.703 159.438 167.915 158.925 168.965 cv
158.995 167.864 159.984 167.904 160.293 168.703 cv
cp
148.301 174.828 mo
148.238 174.633 148.187 174.463 148.113 174.172 cv
147.613 172.198 146.784 173.009 146.863 173.567 cv
146.616 172.657 148.045 171.794 148.291 174.145 cv
148.309 174.325 148.33 174.612 148.301 174.828 cv
cp
161.533 167.339 mo
160.849 165.831 159.573 164.851 157.92 164.325 cv
158.243 164.007 158.732 163.79 159.311 163.928 cv
160.183 164.136 160.502 164.925 160.502 164.925 cv
160.248 163.806 158.706 163.014 157.283 163.487 cv
157.013 163.577 156.766 163.702 156.539 163.851 cv
157.399 162.245 159.585 162.429 160.119 162.797 cv
157.427 160.577 154.425 162.863 153.948 163.985 cv
153.949 163.985 153.949 163.985 153.949 163.985 cv
152.579 164.121 151.086 164.558 149.984 165.652 cv
148.566 167.058 147.697 168.846 147.891 171.651 cv
146.984 171.505 146.334 171.908 146.146 172.741 cv
145.939 173.66 146.402 174.864 147.394 175.126 cv
147.667 175.198 148.097 175.234 148.405 175.153 cv
148.4 175.139 148.406 175.159 148.415 175.199 cv
148.92 177.39 151.086 178.974 152.188 179.375 cv
156.239 180.849 159.77 179.802 161.608 177.487 cv
162.658 176.163 163.736 173.272 161.942 171.585 cv
161.889 171.535 162.369 169.182 161.533 167.339 cv
cp
f
153.233 174.337 mo
153.235 174.34 153.237 174.343 153.238 174.345 cv
153.239 174.345 153.239 174.345 153.24 174.345 cv
153.24 174.345 153.224 174.323 153.233 174.337 cv
cp
f
179.128 174.209 mo
179.198 173.711 178.458 172.987 178.011 174.75 cv
177.941 175.024 177.862 175.265 177.854 175.268 cv
177.84 175.045 177.859 174.787 177.877 174.613 cv
178.096 172.514 179.349 173.397 179.128 174.209 cv
cp
176.06 164.283 mo
174.968 163.15 174.677 162.462 174.645 162.066 cv
174.75 162.129 174.888 162.23 175.07 162.395 cv
175.388 162.682 175.85 163.555 176.175 164.22 cv
176.135 164.239 176.098 164.262 176.06 164.283 cv
cp
173.43 174.9 mo
171.14 178.338 168.222 177.834 167.749 176.103 cv
167.419 175.927 167.057 175.5 166.808 175.03 cv
166.771 175.073 166.731 175.111 166.685 175.141 cv
166.649 175.168 166.607 175.186 166.569 175.206 cv
166.527 175.221 166.485 175.234 166.442 175.242 cv
166.469 175.209 166.784 175.029 166.878 174.53 cv
166.891 174.462 166.921 174.481 166.931 174.512 cv
166.948 174.566 166.954 174.625 166.951 174.683 cv
166.948 174.775 166.917 174.865 166.872 174.945 cv
166.871 174.946 166.871 174.947 166.87 174.947 cv
167.999 176.335 170.988 176.462 173.339 174.795 cv
173.223 174.634 173.173 174.533 173.13 174.348 cv
173.098 174.215 173.25 174.177 173.287 174.307 cv
173.473 174.954 173.786 174.976 174.204 175.056 cv
173.794 175.099 173.577 175.001 173.43 174.9 cv
cp
167.818 171.165 mo
167.854 171.264 167.963 171.313 168.06 171.277 cv
168.099 171.262 168.128 171.233 168.149 171.202 cv
168.178 171.289 168.195 171.389 168.191 171.496 cv
168.177 171.818 167.988 172.072 167.769 172.063 cv
167.552 172.053 167.385 171.784 167.399 171.461 cv
167.413 171.138 167.601 170.884 167.82 170.893 cv
167.856 170.895 167.891 170.907 167.925 170.922 cv
167.83 170.96 167.782 171.068 167.818 171.165 cv
cp
167.99 169.904 mo
168.376 169.921 168.665 170.491 168.636 171.178 cv
168.607 171.864 168.27 172.409 167.884 172.391 cv
167.858 172.39 167.833 172.38 167.809 172.375 cv
168.119 172.387 168.387 171.954 168.412 171.403 cv
168.434 170.854 168.203 170.398 167.893 170.385 cv
167.585 170.372 167.315 170.806 167.292 171.355 cv
167.284 171.551 167.309 171.732 167.357 171.889 cv
167.271 171.673 167.225 171.407 167.238 171.117 cv
167.267 170.43 167.604 169.888 167.99 169.904 cv
cp
168.616 169.835 mo
168.158 168.896 167.393 169.6 167.393 169.6 cv
167.67 168.887 168.553 168.852 168.616 169.835 cv
cp
169.745 163.075 mo
169.922 162.973 170.051 162.914 170.147 162.881 cv
170.054 163.197 169.7 163.706 168.621 164.436 cv
168.594 164.412 168.566 164.389 168.537 164.366 cv
168.914 163.882 169.439 163.252 169.745 163.075 cv
cp
170.372 173.132 mo
170.372 173.132 170.373 173.247 170.271 173.373 cv
169.711 174.06 168.344 173.755 168.457 172.931 cv
168.468 172.853 168.454 173.176 168.855 173.338 cv
169.376 173.548 170.252 173.397 170.372 173.132 cv
cp
171.463 171.333 mo
171.489 171.433 171.591 171.493 171.691 171.466 cv
171.731 171.457 171.762 171.432 171.786 171.401 cv
171.808 171.491 171.813 171.592 171.798 171.697 cv
171.751 172.014 171.54 172.247 171.325 172.214 cv
171.109 172.182 170.973 171.899 171.02 171.581 cv
171.066 171.263 171.278 171.032 171.494 171.063 cv
171.53 171.069 171.563 171.084 171.594 171.102 cv
171.496 171.13 171.437 171.232 171.463 171.333 cv
cp
170.898 171.17 mo
171.001 170.464 171.407 169.941 171.803 170 cv
172.201 170.059 172.439 170.679 172.335 171.385 cv
172.232 172.091 171.828 172.615 171.43 172.556 cv
171.38 172.548 171.333 172.532 171.288 172.509 cv
171.31 172.516 171.33 172.527 171.354 172.53 cv
171.671 172.578 171.996 172.158 172.079 171.594 cv
172.162 171.029 171.97 170.532 171.653 170.485 cv
171.335 170.438 171.011 170.857 170.93 171.422 cv
170.9 171.623 170.906 171.813 170.938 171.979 cv
170.874 171.747 170.854 171.469 170.898 171.17 cv
cp
172.739 170.05 mo
172.739 170.05 172.106 169.236 171.233 169.801 cv
171.712 168.985 172.732 169.309 172.739 170.05 cv
cp
165.797 165.816 mo
165.876 165.738 165.987 165.646 166.146 165.54 cv
166.454 165.334 167.254 165.1 167.812 164.947 cv
167.818 164.957 167.825 164.967 167.83 164.978 cv
167.35 165.332 166.476 165.922 165.797 165.816 cv
cp
176.923 165.106 mo
177.54 165.427 178.396 165.892 178.703 166.206 cv
178.864 166.372 178.973 166.508 179.046 166.62 cv
178.233 166.574 177.366 165.689 176.883 165.147 cv
176.896 165.133 176.91 165.12 176.923 165.106 cv
cp
179.844 173.492 mo
179.754 173.146 179.576 172.89 179.33 172.729 cv
179.062 172.516 178.694 172.432 178.256 172.492 cv
178.267 172.081 178.253 171.685 178.216 171.304 cv
178.151 170.243 177.887 169.368 177.473 168.618 cv
177.138 167.937 176.712 167.351 176.224 166.872 cv
176.19 166.457 176.306 166.018 176.523 165.634 cv
176.552 166.081 176.521 166.697 176.698 166.858 cv
176.954 166.742 177.321 166.541 177.257 166.478 cv
176.832 166.063 176.735 165.68 176.638 165.449 cv
176.643 165.442 176.648 165.435 176.653 165.427 cv
178.3 167.856 178.888 167.297 179.025 167.188 cv
179.403 166.884 179.516 166.54 179.516 166.54 cv
179.515 166.541 179.514 166.541 179.512 166.542 cv
179.589 166.397 179.564 166.297 179.406 166.102 cv
178.856 165.428 177.87 165.105 177.122 164.93 cv
177.572 164.58 178.142 164.431 178.724 164.676 cv
179.088 164.83 179.355 165.05 179.542 165.249 cv
179.571 165.28 179.619 165.286 179.654 165.261 cv
179.689 165.236 179.7 165.189 179.681 165.15 cv
179.308 164.422 178.528 163.808 177.405 163.876 cv
177.015 163.9 176.649 164.003 176.317 164.153 cv
176.117 163.21 175.861 161.915 175.169 161.514 cv
175.008 161.42 174.911 161.499 174.766 161.617 cv
174.779 161.603 174.789 161.595 174.789 161.595 cv
174.789 161.595 174.139 162.07 174.075 162.25 cv
173.86 162.857 174.713 163.755 175.72 164.499 cv
175.694 164.517 175.669 164.536 175.644 164.555 cv
175.38 164.416 175.08 164.238 174.846 164.081 cv
174.371 163.76 174.15 163.547 174.15 163.547 cv
174.006 163.748 174.2 164.187 174.23 164.518 cv
174.348 164.63 174.86 164.739 175.334 164.82 cv
174.977 165.161 174.73 165.541 174.637 165.864 cv
174.609 165.853 174.581 165.841 174.554 165.831 cv
174.552 165.83 174.551 165.83 174.549 165.829 cv
174.55 165.829 174.551 165.83 174.552 165.83 cv
172.426 165.046 169.961 165.644 169.479 165.784 cv
169.426 165.542 169.303 165.267 169.12 164.999 cv
169.518 165.016 169.953 165.016 170.067 164.945 cv
170.148 164.681 170.473 164.298 170.297 164.17 cv
170.297 164.17 170.081 164.305 169.641 164.483 cv
169.425 164.57 169.151 164.662 168.912 164.729 cv
168.895 164.709 168.877 164.69 168.86 164.671 cv
169.804 164.241 170.65 163.66 170.579 163.129 cv
170.558 162.973 170.11 162.474 170.11 162.474 cv
170.11 162.474 170.118 162.481 170.127 162.497 cv
170.028 162.375 169.963 162.293 169.815 162.342 cv
169.185 162.547 168.757 163.555 168.433 164.286 cv
168.189 164.106 167.91 163.959 167.597 163.872 cv
166.82 163.656 166.196 163.903 165.828 164.364 cv
165.797 164.403 165.799 164.459 165.833 164.495 cv
165.868 164.531 165.923 164.536 165.963 164.506 cv
166.079 164.419 166.22 164.342 166.39 164.293 cv
166.92 164.139 167.374 164.376 167.632 164.683 cv
167.657 164.714 167.679 164.745 167.702 164.777 cv
167.061 164.785 166.17 164.868 165.593 165.333 cv
165.431 165.463 165.393 165.541 165.431 165.671 cv
165.43 165.67 165.429 165.67 165.428 165.669 cv
165.428 165.669 165.462 165.969 165.718 166.281 cv
165.811 166.395 166.194 166.951 167.949 165.258 cv
167.952 165.265 167.954 165.271 167.956 165.278 cv
167.839 165.449 167.746 165.751 167.326 166.017 cv
167.263 166.057 167.527 166.284 167.715 166.423 cv
167.882 166.326 167.908 165.833 168.007 165.479 cv
168.1 165.936 168.02 166.33 168.001 166.412 cv
167.077 166.95 166.369 167.708 165.954 168.711 cv
165.786 169.118 165.692 169.566 165.646 170.012 cv
165.472 171.267 165.693 172.407 165.659 172.439 cv
164.056 173.946 165.019 176.528 165.957 177.711 cv
167.598 179.779 170.753 180.714 174.371 179.397 cv
175.311 179.055 177.12 177.748 177.672 175.925 cv
177.749 175.837 177.827 175.747 177.904 175.654 cv
177.933 175.658 177.963 175.661 177.995 175.664 cv
178.282 175.733 178.553 175.732 178.802 175.657 cv
179.68 175.394 180.057 174.304 179.844 173.492 cv
cp
f
173.43 174.9 mo
173.431 174.897 173.433 174.896 173.434 174.893 cv
173.443 174.88 173.429 174.899 173.429 174.899 cv
173.429 174.9 173.429 174.9 173.43 174.9 cv
cp
f
62.1967 168 mo
61.7201 168 61.3334 168.394 61.3334 168.879 cv
61.3334 199.121 li
61.3334 199.606 61.7201 200 62.1967 200 cv
87.4696 200 li
87.9467 200 88.3334 199.606 88.3334 199.121 cv
88.3334 173.057 li
88.3334 172.651 88.1747 172.261 87.893 171.974 cv
84.4574 168.475 li
84.1591 168.171 83.7538 168 83.3314 168 cv
62.1967 168 li
cp
0 .368627 .427451 rgb
f
87.0263 198.266 mo
87.0263 198.488 86.849 198.669 86.6312 198.669 cv
63.0355 198.669 li
62.8178 198.669 62.6405 198.488 62.6405 198.266 cv
62.6405 169.733 li
62.6405 169.512 62.8178 169.331 63.0355 169.331 cv
83.3051 169.331 li
83.3051 173.057 li
83.3051 173.171 83.3959 173.264 83.5077 173.264 cv
87.0243 173.264 li
87.0248 173.279 87.0263 173.294 87.0263 173.309 cv
87.0263 198.266 li
cp
86.7938 172.737 mo
86.8285 172.772 86.8593 172.811 86.8866 172.851 cv
83.7104 172.851 li
83.7104 169.597 li
86.7938 172.737 li
cp
87.08 172.445 mo
83.8197 169.125 li
83.6894 168.992 83.516 168.919 83.3314 168.919 cv
63.0355 168.919 li
62.5941 168.919 62.2352 169.284 62.2352 169.733 cv
62.2352 198.266 li
62.2352 198.716 62.5941 199.081 63.0355 199.081 cv
86.6312 199.081 li
87.0722 199.081 87.4311 198.716 87.4311 198.266 cv
87.4311 173.309 li
87.4311 172.983 87.3065 172.676 87.08 172.445 cv
cp
1 1 1 rgb
f
65.1386 190.334 mo
65.1386 190.124 65.3744 190.034 65.6171 190.034 cv
65.8529 190.034 66.0956 190.124 66.0956 190.334 cv
66.0956 192.381 li
67.6859 190.176 li
67.7597 190.071 67.848 190.034 67.9511 190.034 cv
68.1937 190.034 68.5033 190.289 68.5033 190.536 cv
68.5033 190.589 68.496 190.656 68.4442 190.724 cv
67.1264 192.403 li
68.7313 194.893 li
68.7684 194.946 68.7831 195.005 68.7831 195.065 cv
68.7831 195.306 68.4887 195.553 68.2089 195.553 cv
68.0834 195.553 67.9584 195.5 67.8773 195.366 cv
66.4931 193.229 li
66.0956 193.738 li
66.0956 195.208 li
66.0956 195.411 65.8529 195.516 65.6171 195.516 cv
65.3744 195.516 65.1386 195.411 65.1386 195.208 cv
65.1386 190.334 li
cp
f
70.078 192.253 mo
70.078 195.208 li
70.078 195.358 69.8646 195.516 69.5995 195.516 cv
69.327 195.516 69.1283 195.358 69.1283 195.208 cv
69.1283 192.253 li
69.1283 192.074 69.327 191.954 69.5995 191.954 cv
69.8646 191.954 70.078 192.074 70.078 192.253 cv
cp
70.1146 190.687 mo
70.1146 190.934 69.8866 191.159 69.5995 191.159 cv
69.3051 191.159 69.0766 190.934 69.0766 190.687 cv
69.0766 190.431 69.3051 190.214 69.5995 190.214 cv
69.8866 190.214 70.1146 190.431 70.1146 190.687 cv
cp
f
71.6386 194.046 mo
71.6386 194.391 71.933 194.735 72.2792 194.735 cv
72.6547 194.735 72.9491 194.338 72.9491 194.181 cv
72.9491 193.431 li
72.9491 193.011 72.6029 192.756 72.2865 192.756 cv
71.9257 192.756 71.6386 193.093 71.6386 193.431 cv
71.6386 194.046 li
cp
73.8988 190.176 mo
73.8988 195.208 li
73.8988 195.358 73.7001 195.516 73.4276 195.516 cv
73.1918 195.516 73.0004 195.358 73.0004 195.208 cv
73.0004 194.991 li
72.8534 195.298 72.4481 195.583 71.9769 195.583 cv
71.2924 195.583 70.6889 194.848 70.6889 194.046 cv
70.6889 193.431 li
70.6889 192.599 71.2777 191.909 71.9994 191.909 cv
72.4555 191.909 72.787 192.186 72.9491 192.479 cv
72.9491 190.176 li
72.9491 189.997 73.1625 189.876 73.4276 189.876 cv
73.7001 189.876 73.8988 189.997 73.8988 190.176 cv
cp
f
76.2909 194.526 mo
76.2909 193.866 74.5458 194.278 74.5458 193.026 cv
74.5458 192.494 74.8773 191.909 75.8637 191.909 cv
76.4599 191.909 77.0341 192.119 77.0341 192.396 cv
77.0341 192.531 76.9091 192.861 76.6884 192.861 cv
76.5116 192.861 76.2836 192.644 75.8783 192.644 cv
75.5101 192.644 75.3632 192.831 75.3632 192.981 cv
75.3632 193.528 77.1303 193.153 77.1303 194.488 cv
77.1303 195.156 76.6439 195.583 75.7753 195.583 cv
75.0243 195.583 74.4428 195.268 74.4428 194.938 cv
74.4428 194.781 74.5751 194.511 74.7592 194.511 cv
74.973 194.511 75.1347 194.848 75.7533 194.848 cv
76.1874 194.848 76.2909 194.676 76.2909 194.526 cv
cp
f
79.2348 190.334 mo
79.2348 190.124 79.4706 190.034 79.7133 190.034 cv
79.9491 190.034 80.1918 190.124 80.1918 190.334 cv
80.1918 195.208 li
80.1918 195.411 79.9491 195.516 79.7133 195.516 cv
79.4706 195.516 79.2348 195.411 79.2348 195.208 cv
79.2348 190.334 li
cp
f
82.0321 190.889 mo
82.0321 194.661 li
82.7978 194.661 li
83.2841 194.661 83.5712 194.383 83.5712 193.798 cv
83.5712 191.751 li
83.5712 191.166 83.2841 190.889 82.7978 190.889 cv
82.0321 190.889 li
cp
82.7978 190.034 mo
83.7699 190.034 84.5282 190.499 84.5282 191.751 cv
84.5282 193.798 li
84.5282 195.051 83.7699 195.516 82.7978 195.516 cv
81.495 195.516 li
81.2445 195.516 81.0751 195.373 81.0751 195.215 cv
81.0751 190.334 li
81.0751 190.176 81.2445 190.034 81.495 190.034 cv
82.7978 190.034 li
cp
f
73.4589 183.045 mo
73.4301 183.031 73.3993 183.018 73.3725 182.999 cv
73.3383 182.977 73.308 182.948 73.2807 182.917 cv
72.7167 184.331 70.5595 186.131 68.4052 182.897 cv
68.2977 182.975 68.1391 183.05 67.8368 183.023 cv
68.1439 182.958 68.3739 182.938 68.5028 182.451 cv
68.5287 182.353 68.641 182.38 68.6195 182.479 cv
68.5897 182.619 68.5546 182.695 68.4706 182.817 cv
70.5766 184.181 72.4872 183.634 73.2338 182.855 cv
73.2333 182.855 73.2328 182.854 73.2328 182.854 cv
73.1986 182.794 73.1752 182.727 73.1713 182.658 cv
73.1684 182.615 73.1723 182.571 73.1845 182.53 cv
73.1913 182.506 73.2128 182.492 73.223 182.543 cv
73.2987 182.916 73.5326 183.047 73.5526 183.071 cv
73.5209 183.066 73.4896 183.056 73.4589 183.045 cv
cp
69.1102 179.274 mo
69.1151 178.72 69.8676 178.479 70.2201 179.087 cv
69.577 178.666 69.1102 179.274 69.1102 179.274 cv
cp
69.8212 180.218 mo
69.83 180.141 69.8998 180.098 69.9369 180.092 cv
70.0824 180.07 70.2396 180.19 70.2558 180.469 cv
70.2738 180.781 70.1469 180.954 70.0018 180.976 cv
69.8568 180.998 69.7147 180.84 69.683 180.624 cv
69.6732 180.552 69.6767 180.483 69.6913 180.422 cv
69.7074 180.443 69.7284 180.46 69.7553 180.466 cv
69.8226 180.484 69.891 180.444 69.9091 180.375 cv
69.9262 180.307 69.8812 180.223 69.8212 180.218 cv
cp
70.4437 180.297 mo
70.3837 179.876 70.1449 179.563 69.911 179.598 cv
69.6771 179.634 69.536 180.004 69.5971 180.426 cv
69.6576 180.847 69.8969 181.16 70.1308 181.124 cv
70.1342 181.124 70.1376 181.123 70.141 181.122 cv
70.119 181.13 70.098 181.14 70.0746 181.144 cv
69.7821 181.188 69.4838 180.796 69.4076 180.27 cv
69.3314 179.743 69.5067 179.28 69.8002 179.236 cv
70.0922 179.192 70.3915 179.583 70.4672 180.109 cv
70.4994 180.333 70.4848 180.54 70.4374 180.713 cv
70.4613 180.589 70.4662 180.447 70.4437 180.297 cv
cp
71.973 181.727 mo
72.2694 181.606 72.2587 181.366 72.267 181.424 cv
72.3505 182.039 71.3422 182.267 70.9296 181.753 cv
70.8544 181.659 70.8549 181.574 70.8549 181.574 cv
70.9433 181.771 71.5897 181.884 71.973 181.727 cv
cp
72.6112 179.164 mo
72.8959 179.152 73.1439 179.558 73.1654 180.07 cv
73.1752 180.286 73.1405 180.485 73.078 180.646 cv
73.1132 180.529 73.1317 180.394 73.1259 180.248 cv
73.1088 179.837 72.9096 179.514 72.6825 179.523 cv
72.4545 179.534 72.2836 179.874 72.3007 180.284 cv
72.3056 180.4 72.3256 180.509 72.3559 180.605 cv
72.3436 180.563 72.3353 180.518 72.3334 180.469 cv
72.3305 180.396 72.3422 180.326 72.3622 180.266 cv
72.3764 180.287 72.3964 180.307 72.4227 180.317 cv
72.4892 180.343 72.5639 180.308 72.5888 180.24 cv
72.6137 180.172 72.5663 180.09 72.4818 180.09 cv
72.5184 180.033 72.578 180.016 72.6029 180.015 cv
72.7528 180.009 72.8768 180.111 72.8915 180.409 cv
72.9027 180.633 72.7714 180.856 72.6225 180.863 cv
72.5155 180.868 72.4203 180.779 72.37 180.648 cv
72.4506 180.869 72.5907 181.015 72.7445 181.009 cv
72.7265 181.013 72.7084 181.02 72.6893 181.021 cv
72.4042 181.034 72.1561 180.627 72.1347 180.115 cv
72.1132 179.603 72.3261 179.178 72.6112 179.164 cv
cp
73.0512 179.135 mo
73.0512 179.135 72.4877 178.609 72.1493 179.31 cv
72.1957 178.576 72.8471 178.603 73.0512 179.135 cv
cp
65.1532 183.219 mo
65.1122 183.088 65.0785 182.976 65.0297 182.781 cv
64.7001 181.465 64.1547 182.006 64.2064 182.378 cv
64.0438 181.771 64.9852 181.196 65.1469 182.763 cv
65.1591 182.883 65.1727 183.075 65.1532 183.219 cv
cp
73.8666 178.226 mo
73.4164 177.221 72.5761 176.567 71.4882 176.216 cv
71.7006 176.005 72.0228 175.86 72.4042 175.952 cv
72.9784 176.091 73.1884 176.617 73.1884 176.617 cv
73.0209 175.871 72.0058 175.343 71.0683 175.658 cv
70.8905 175.718 70.7274 175.801 70.579 175.9 cv
71.1449 174.83 72.5849 174.953 72.9354 175.198 cv
71.1635 173.718 69.1859 175.242 68.8725 175.99 cv
68.8729 175.99 li
67.9706 176.081 66.9877 176.372 66.2616 177.101 cv
65.328 178.039 64.7553 179.23 64.8837 181.101 cv
64.286 181.004 63.8578 181.272 63.7348 181.827 cv
63.598 182.44 63.9027 183.243 64.5565 183.417 cv
64.7362 183.465 65.0194 183.49 65.2216 183.436 cv
65.2186 183.426 65.2225 183.439 65.2289 183.466 cv
65.5609 184.927 66.9877 185.982 67.7128 186.25 cv
70.3808 187.233 72.7064 186.535 73.9164 184.991 cv
74.6078 184.108 75.3178 182.181 74.1366 181.057 cv
74.1019 181.023 74.4179 179.455 73.8666 178.226 cv
cp
f
68.4013 182.892 mo
68.4022 182.894 68.4037 182.895 68.4052 182.897 cv
68.4057 182.896 li
68.4057 182.896 68.3949 182.882 68.4013 182.892 cv
cp
f
85.454 182.807 mo
85.5004 182.474 85.0131 181.991 84.7187 183.167 cv
84.6728 183.35 84.6205 183.51 84.6156 183.512 cv
84.6063 183.363 84.6186 183.191 84.6303 183.075 cv
84.7748 181.676 85.5995 182.265 85.454 182.807 cv
cp
83.434 176.188 mo
82.7147 175.434 82.5233 174.975 82.5019 174.711 cv
82.5707 174.752 82.662 174.82 82.7821 174.93 cv
82.9911 175.121 83.2958 175.703 83.5092 176.146 cv
83.4833 176.16 83.4589 176.174 83.434 176.188 cv
cp
81.7016 183.267 mo
80.1937 185.559 78.2719 185.223 77.9608 184.068 cv
77.7431 183.951 77.5053 183.667 77.3407 183.354 cv
77.3168 183.382 77.2899 183.407 77.2601 183.428 cv
77.2367 183.445 77.2089 183.457 77.1835 183.47 cv
77.1561 183.48 77.1283 183.489 77.1 183.495 cv
77.1176 183.473 77.3251 183.353 77.3871 183.02 cv
77.3959 182.975 77.4154 182.987 77.4218 183.008 cv
77.4335 183.044 77.4374 183.083 77.4354 183.122 cv
77.433 183.183 77.413 183.243 77.3832 183.297 cv
77.3827 183.297 77.3822 183.298 77.3822 183.298 cv
78.1254 184.224 80.0937 184.308 81.642 183.197 cv
81.5653 183.09 81.5326 183.022 81.5038 182.898 cv
81.4833 182.81 81.5839 182.784 81.6083 182.872 cv
81.7299 183.303 81.9359 183.317 82.2113 183.371 cv
81.9413 183.399 81.7987 183.334 81.7016 183.267 cv
cp
78.0062 180.777 mo
78.0297 180.842 78.102 180.876 78.1659 180.852 cv
78.1913 180.841 78.2104 180.822 78.224 180.801 cv
78.2431 180.859 78.2543 180.926 78.2519 180.997 cv
78.2426 181.212 78.1186 181.381 77.974 181.375 cv
77.8305 181.369 77.7206 181.189 77.7304 180.974 cv
77.7396 180.759 77.8637 180.59 78.0077 180.595 cv
78.0312 180.596 78.0546 180.604 78.0766 180.615 cv
78.0141 180.641 77.9823 180.712 78.0062 180.777 cv
cp
78.119 179.936 mo
78.3739 179.948 78.5644 180.327 78.5448 180.785 cv
78.5258 181.243 78.3041 181.606 78.0492 181.594 cv
78.0326 181.593 78.0165 181.587 78.0004 181.583 cv
78.204 181.591 78.3808 181.302 78.3969 180.936 cv
78.412 180.569 78.2592 180.266 78.0556 180.257 cv
77.8524 180.248 77.6752 180.537 77.6596 180.904 cv
77.6542 181.034 77.6708 181.155 77.7025 181.259 cv
77.6464 181.115 77.6156 180.938 77.6239 180.745 cv
77.6435 180.287 77.8651 179.925 78.119 179.936 cv
cp
78.5316 179.89 mo
78.2299 179.264 77.7265 179.733 77.7265 179.733 cv
77.9086 179.258 78.4901 179.234 78.5316 179.89 cv
cp
79.2753 175.383 mo
79.3915 175.315 79.477 175.276 79.5399 175.254 cv
79.4784 175.465 79.2455 175.804 78.5351 176.291 cv
78.517 176.275 78.4984 176.259 78.4799 176.244 cv
78.7279 175.921 79.0731 175.501 79.2753 175.383 cv
cp
79.6879 182.088 mo
79.6879 182.088 79.6889 182.165 79.6215 182.249 cv
79.2528 182.707 78.3524 182.503 78.4267 181.954 cv
78.4345 181.902 78.4247 182.117 78.6894 182.225 cv
79.0321 182.365 79.6093 182.265 79.6879 182.088 cv
cp
80.4062 180.888 mo
80.4237 180.956 80.4911 180.996 80.5565 180.978 cv
80.5829 180.971 80.6034 180.955 80.6195 180.935 cv
80.6337 180.994 80.6371 181.062 80.6273 181.131 cv
80.5961 181.343 80.4574 181.498 80.3153 181.476 cv
80.1737 181.455 80.0839 181.266 80.1146 181.054 cv
80.1454 180.842 80.2846 180.688 80.4267 180.709 cv
80.4506 180.713 80.4726 180.723 80.4926 180.735 cv
80.4281 180.753 80.3895 180.821 80.4062 180.888 cv
cp
80.0346 180.78 mo
80.102 180.31 80.3695 179.96 80.6303 180 cv
80.8925 180.039 81.0492 180.453 80.9809 180.923 cv
80.913 181.394 80.6464 181.743 80.3852 181.704 cv
80.352 181.699 80.3212 181.688 80.2914 181.672 cv
80.3061 181.677 80.3192 181.685 80.3349 181.687 cv
80.5438 181.718 80.7577 181.438 80.8119 181.063 cv
80.8661 180.686 80.7401 180.355 80.5312 180.323 cv
80.3227 180.292 80.1088 180.572 80.0551 180.948 cv
80.0355 181.082 80.0395 181.208 80.0609 181.319 cv
80.0189 181.165 80.0058 180.979 80.0346 180.78 cv
cp
81.2465 180.034 mo
81.2465 180.034 80.8295 179.491 80.2553 179.867 cv
80.5702 179.323 81.2421 179.539 81.2465 180.034 cv
cp
76.6752 177.21 mo
76.7269 177.159 76.8002 177.098 76.9052 177.026 cv
77.1083 176.889 77.6347 176.733 78.0023 176.631 cv
78.0058 176.638 78.0102 176.645 78.0141 176.651 cv
77.6977 176.888 77.1225 177.281 76.6752 177.21 cv
cp
84.0019 176.738 mo
84.4086 176.951 84.9726 177.261 85.1737 177.47 cv
85.2807 177.581 85.352 177.672 85.4003 177.746 cv
84.8651 177.716 84.2938 177.126 83.9755 176.765 cv
83.9843 176.755 83.9931 176.747 84.0019 176.738 cv
cp
85.9262 182.328 mo
85.8666 182.098 85.7494 181.927 85.5878 181.819 cv
85.411 181.677 85.1684 181.621 84.8798 181.662 cv
84.8871 181.387 84.8778 181.123 84.8534 180.869 cv
84.8109 180.162 84.6371 179.579 84.3642 179.079 cv
84.1435 178.625 83.8632 178.234 83.5414 177.915 cv
83.5199 177.638 83.5956 177.345 83.7387 177.089 cv
83.7577 177.387 83.7377 177.798 83.8539 177.905 cv
84.0224 177.828 84.2641 177.693 84.2221 177.651 cv
83.9423 177.376 83.8783 177.12 83.8144 176.966 cv
83.8178 176.961 83.8212 176.957 83.8246 176.952 cv
84.9091 178.571 85.2958 178.198 85.3861 178.125 cv
85.6352 177.923 85.7099 177.693 85.7099 177.693 cv
85.7094 177.694 85.7084 177.694 85.7074 177.694 cv
85.7582 177.599 85.7416 177.531 85.6371 177.401 cv
85.2753 176.952 84.6254 176.737 84.1337 176.62 cv
84.4296 176.387 84.8051 176.287 85.1884 176.451 cv
85.4276 176.553 85.6039 176.7 85.727 176.833 cv
85.746 176.854 85.7772 176.857 85.8007 176.84 cv
85.8236 176.824 85.831 176.792 85.8183 176.767 cv
85.5727 176.281 85.059 175.872 84.3192 175.917 cv
84.0624 175.933 83.8217 176.002 83.6029 176.102 cv
83.4711 175.474 83.3026 174.61 82.8471 174.343 cv
82.7406 174.28 82.6771 174.333 82.5814 174.411 cv
82.5902 174.401 82.5966 174.397 82.5966 174.397 cv
82.5966 174.397 82.1688 174.713 82.1269 174.833 cv
81.9848 175.238 82.5468 175.836 83.2094 176.333 cv
83.1928 176.345 83.1767 176.357 83.1601 176.37 cv
82.9862 176.277 82.7885 176.159 82.6342 176.054 cv
82.3217 175.84 82.1762 175.698 82.1762 175.698 cv
82.0814 175.832 82.2089 176.125 82.2289 176.346 cv
82.3061 176.42 82.6435 176.493 82.9555 176.546 cv
82.7206 176.774 82.558 177.027 82.4965 177.242 cv
82.4784 177.235 82.4604 177.228 82.4418 177.221 cv
82.4408 177.22 82.4398 177.22 82.4389 177.219 cv
82.4394 177.219 82.4403 177.22 82.4408 177.22 cv
81.0409 176.697 79.4174 177.096 79.1005 177.189 cv
79.0648 177.028 78.9838 176.845 78.8632 176.666 cv
79.1259 176.677 79.412 176.677 79.4872 176.63 cv
79.5404 176.454 79.7543 176.198 79.6386 176.114 cv
79.6386 176.114 79.4965 176.203 79.2064 176.322 cv
79.0639 176.38 78.8837 176.441 78.727 176.486 cv
78.7157 176.473 78.704 176.46 78.6923 176.447 cv
79.3144 176.161 79.8715 175.773 79.8241 175.419 cv
79.81 175.315 79.516 174.982 79.516 174.982 cv
79.516 174.982 79.5204 174.988 79.5268 174.998 cv
79.4613 174.917 79.4184 174.862 79.3212 174.895 cv
78.9062 175.031 78.6244 175.703 78.4115 176.191 cv
78.2509 176.071 78.0668 175.973 77.8607 175.915 cv
77.349 175.771 76.9379 175.935 76.6952 176.243 cv
76.6747 176.269 76.6767 176.306 76.6991 176.33 cv
76.7216 176.354 76.7582 176.357 76.7846 176.337 cv
76.8607 176.279 76.9535 176.228 77.0653 176.195 cv
77.4149 176.092 77.7138 176.25 77.8832 176.456 cv
77.9003 176.476 77.9149 176.497 77.9296 176.518 cv
77.5072 176.523 76.9208 176.579 76.5409 176.889 cv
76.434 176.976 76.4091 177.027 76.4345 177.114 cv
76.4335 177.114 76.433 177.113 76.432 177.113 cv
76.432 177.113 76.4545 177.313 76.6234 177.521 cv
76.6845 177.596 76.9364 177.967 78.0922 176.838 cv
78.0941 176.843 78.0956 176.848 78.0971 176.852 cv
78.0199 176.966 77.9584 177.168 77.682 177.345 cv
77.6405 177.371 77.8144 177.522 77.9384 177.615 cv
78.0482 177.55 78.0648 177.222 78.1308 176.986 cv
78.1923 177.291 78.1395 177.553 78.1269 177.607 cv
77.518 177.967 77.0517 178.472 76.7787 179.141 cv
76.6679 179.412 76.6063 179.711 76.5761 180.008 cv
76.4613 180.845 76.6068 181.604 76.5839 181.626 cv
75.5287 182.631 76.163 184.352 76.7807 185.141 cv
77.8612 186.519 79.9389 187.143 82.3217 186.265 cv
82.9408 186.037 84.1322 185.166 84.4955 183.95 cv
84.5463 183.891 84.5971 183.832 84.6479 183.77 cv
84.6674 183.772 84.6874 183.774 84.7074 183.775 cv
84.8969 183.822 85.0756 183.821 85.2396 183.771 cv
85.8178 183.596 86.0653 182.87 85.9262 182.328 cv
cp
f
81.7016 183.267 mo
81.7025 183.265 81.7035 183.264 81.705 183.262 cv
81.7104 183.253 81.7006 183.266 81.7006 183.266 cv
81.7011 183.267 81.7016 183.267 81.7016 183.267 cv
cp
f
.431539 184 mo
.193258 184 -.000101563 184.197 -.000101563 184.44 cv
-.000101563 199.56 li
-.000101563 199.803 .193258 200 .431539 200 cv
13.0683 200 li
13.3065 200 13.4999 199.803 13.4999 199.56 cv
13.4999 186.528 li
13.4999 186.325 13.4208 186.131 13.2797 185.987 cv
11.5619 184.237 li
11.413 184.085 11.2103 184 10.9989 184 cv
.431539 184 li
cp
0 .368627 .427451 rgb
f
12.8466 199.133 mo
12.8466 199.244 12.7577 199.334 12.6488 199.334 cv
.850973 199.334 li
.742086 199.334 .653707 199.244 .653707 199.133 cv
.653707 184.867 li
.653707 184.756 .742086 184.666 .850973 184.666 cv
10.9857 184.666 li
10.9857 186.529 li
10.9857 186.585 11.0311 186.632 11.0873 186.632 cv
12.8456 186.632 li
12.8456 186.639 12.8466 186.647 12.8466 186.654 cv
12.8466 199.133 li
cp
12.7304 186.369 mo
12.7475 186.386 12.7631 186.405 12.7768 186.426 cv
11.1884 186.425 li
11.1884 184.798 li
12.7304 186.369 li
cp
12.8734 186.223 mo
11.2431 184.563 li
11.1781 184.496 11.0912 184.459 10.9989 184.459 cv
.850973 184.459 li
.63027 184.459 .45107 184.642 .45107 184.867 cv
.45107 199.133 li
.45107 199.358 .63027 199.541 .850973 199.541 cv
12.6488 199.541 li
12.8695 199.541 13.0492 199.358 13.0492 199.133 cv
13.0492 186.654 li
13.0492 186.491 12.9867 186.338 12.8734 186.223 cv
cp
1 1 1 rgb
f
1.90273 195.167 mo
1.90273 195.062 2.02041 195.017 2.14199 195.017 cv
2.25966 195.017 2.38125 195.062 2.38125 195.167 cv
2.38125 196.19 li
3.17617 195.088 li
3.21328 195.036 3.25722 195.017 3.30898 195.017 cv
3.43007 195.017 3.58486 195.145 3.58486 195.268 cv
3.58486 195.294 3.58144 195.328 3.55556 195.362 cv
2.89638 196.202 li
3.69912 197.447 li
3.71767 197.473 3.725 197.503 3.725 197.533 cv
3.725 197.653 3.57754 197.776 3.43789 197.776 cv
3.3749 197.776 3.3124 197.75 3.27187 197.683 cv
2.57998 196.614 li
2.38125 196.869 li
2.38125 197.604 li
2.38125 197.705 2.25966 197.758 2.14199 197.758 cv
2.02041 197.758 1.90273 197.705 1.90273 197.604 cv
1.90273 195.167 li
cp
f
4.37246 196.127 mo
4.37246 197.604 li
4.37246 197.679 4.26552 197.758 4.1332 197.758 cv
3.99697 197.758 3.89736 197.679 3.89736 197.604 cv
3.89736 196.127 li
3.89736 196.037 3.99697 195.977 4.1332 195.977 cv
4.26552 195.977 4.37246 196.037 4.37246 196.127 cv
cp
4.39052 195.343 mo
4.39052 195.467 4.27675 195.58 4.1332 195.58 cv
3.98574 195.58 3.87148 195.467 3.87148 195.343 cv
3.87148 195.216 3.98574 195.107 4.1332 195.107 cv
4.27675 195.107 4.39052 195.216 4.39052 195.343 cv
cp
f
5.15273 197.023 mo
5.15273 197.195 5.2997 197.368 5.47304 197.368 cv
5.66054 197.368 5.808 197.169 5.808 197.09 cv
5.808 196.715 li
5.808 196.505 5.63466 196.378 5.47646 196.378 cv
5.29629 196.378 5.15273 196.547 5.15273 196.715 cv
5.15273 197.023 li
cp
6.28261 195.088 mo
6.28261 197.604 li
6.28261 197.679 6.18349 197.758 6.04726 197.758 cv
5.9291 197.758 5.83339 197.679 5.83339 197.604 cv
5.83339 197.495 li
5.76015 197.649 5.55752 197.792 5.32168 197.792 cv
4.97939 197.792 4.67763 197.424 4.67763 197.023 cv
4.67763 196.715 li
4.67763 196.299 4.97207 195.954 5.33291 195.954 cv
5.56093 195.954 5.72695 196.093 5.808 196.239 cv
5.808 195.088 li
5.808 194.998 5.91445 194.938 6.04726 194.938 cv
6.18349 194.938 6.28261 194.998 6.28261 195.088 cv
cp
f
7.4789 197.263 mo
7.4789 196.933 6.60634 197.139 6.60634 196.513 cv
6.60634 196.247 6.77187 195.954 7.26504 195.954 cv
7.56337 195.954 7.85048 196.059 7.85048 196.198 cv
7.85048 196.266 7.78798 196.431 7.67763 196.431 cv
7.58925 196.431 7.475 196.322 7.27236 196.322 cv
7.08877 196.322 7.01504 196.416 7.01504 196.49 cv
7.01504 196.764 7.89834 196.577 7.89834 197.244 cv
7.89834 197.578 7.65566 197.792 7.22109 197.792 cv
6.8456 197.792 6.55459 197.634 6.55459 197.469 cv
6.55459 197.39 6.62099 197.255 6.71328 197.255 cv
6.81972 197.255 6.90078 197.424 7.20986 197.424 cv
7.42714 197.424 7.4789 197.338 7.4789 197.263 cv
cp
f
8.95058 195.167 mo
8.95058 195.062 9.06875 195.017 9.18984 195.017 cv
9.308 195.017 9.4291 195.062 9.4291 195.167 cv
9.4291 197.604 li
9.4291 197.705 9.308 197.758 9.18984 197.758 cv
9.06875 197.758 8.95058 197.705 8.95058 197.604 cv
8.95058 195.167 li
cp
f
10.3495 195.444 mo
10.3495 197.331 li
10.7323 197.331 li
10.9755 197.331 11.119 197.191 11.119 196.899 cv
11.119 195.875 li
11.119 195.583 10.9755 195.444 10.7323 195.444 cv
10.3495 195.444 li
cp
10.7323 195.017 mo
11.2182 195.017 11.5976 195.25 11.5976 195.875 cv
11.5976 196.899 li
11.5976 197.525 11.2182 197.758 10.7323 197.758 cv
10.081 197.758 li
9.95547 197.758 9.87099 197.687 9.87099 197.608 cv
9.87099 195.167 li
9.87099 195.088 9.95547 195.017 10.081 195.017 cv
10.7323 195.017 li
cp
f
6.06289 191.523 mo
6.04824 191.516 6.0331 191.509 6.01943 191.5 cv
6.00234 191.488 5.9872 191.474 5.97402 191.458 cv
5.69179 192.166 4.61318 193.065 3.53603 191.448 cv
3.48232 191.487 3.40273 191.525 3.25185 191.511 cv
3.40517 191.479 3.52041 191.469 3.58486 191.226 cv
3.59755 191.176 3.65371 191.19 3.64296 191.24 cv
3.62832 191.309 3.61074 191.348 3.56875 191.409 cv
4.62148 192.091 5.57705 191.817 5.95009 191.428 cv
5.95009 191.427 5.95009 191.427 5.94961 191.427 cv
5.93252 191.397 5.9208 191.363 5.91884 191.329 cv
5.91738 191.308 5.91933 191.285 5.92568 191.265 cv
5.9291 191.253 5.93984 191.246 5.94521 191.271 cv
5.98281 191.458 6.09951 191.523 6.10976 191.536 cv
6.09365 191.533 6.07802 191.528 6.06289 191.523 cv
cp
3.88857 189.637 mo
3.89101 189.36 4.26699 189.239 4.44326 189.544 cv
4.12197 189.333 3.88857 189.637 3.88857 189.637 cv
cp
4.24404 190.109 mo
4.24843 190.07 4.2831 190.049 4.30166 190.046 cv
4.37441 190.035 4.45302 190.095 4.46132 190.234 cv
4.47011 190.391 4.40664 190.477 4.33437 190.488 cv
4.26162 190.499 4.19082 190.42 4.1747 190.312 cv
4.16982 190.276 4.17177 190.242 4.1791 190.211 cv
4.18691 190.222 4.19765 190.23 4.21084 190.233 cv
4.24453 190.242 4.27871 190.222 4.28798 190.188 cv
4.29629 190.153 4.27382 190.111 4.24404 190.109 cv
cp
4.55556 190.149 mo
4.52529 189.938 4.40566 189.782 4.28896 189.799 cv
4.17177 189.817 4.10146 190.002 4.13173 190.213 cv
4.16201 190.423 4.28164 190.58 4.39882 190.562 cv
4.40029 190.562 4.40224 190.561 4.40371 190.561 cv
4.39296 190.565 4.38222 190.57 4.37099 190.572 cv
4.22451 190.594 4.07509 190.398 4.03701 190.135 cv
3.99892 189.872 4.08681 189.64 4.2333 189.618 cv
4.37929 189.596 4.5292 189.792 4.56679 190.055 cv
4.58291 190.166 4.57558 190.27 4.55214 190.356 cv
4.56386 190.294 4.5663 190.224 4.55556 190.149 cv
cp
5.31972 190.864 mo
5.46816 190.803 5.46279 190.683 5.4667 190.712 cv
5.50869 191.019 5.00429 191.133 4.79824 190.876 cv
4.76064 190.83 4.76064 190.787 4.76064 190.787 cv
4.80507 190.886 5.12832 190.942 5.31972 190.864 cv
cp
5.63906 189.582 mo
5.78115 189.576 5.90517 189.779 5.91591 190.035 cv
5.9208 190.143 5.90371 190.242 5.87246 190.323 cv
5.89004 190.265 5.89931 190.197 5.89638 190.124 cv
5.88759 189.919 5.78847 189.757 5.6747 189.762 cv
5.56045 189.767 5.475 189.937 5.48379 190.142 cv
5.48623 190.2 5.49599 190.254 5.51113 190.303 cv
5.50527 190.281 5.50087 190.259 5.4999 190.235 cv
5.49843 190.198 5.50429 190.163 5.51455 190.133 cv
5.52138 190.144 5.53164 190.154 5.54482 190.159 cv
5.57802 190.171 5.61513 190.154 5.62783 190.12 cv
5.64004 190.086 5.6166 190.045 5.57461 190.045 cv
5.59267 190.016 5.62246 190.008 5.63466 190.007 cv
5.70986 190.004 5.77187 190.056 5.7792 190.205 cv
5.78457 190.316 5.71914 190.428 5.64443 190.432 cv
5.59121 190.434 5.54336 190.39 5.51845 190.324 cv
5.55849 190.435 5.6288 190.507 5.70546 190.504 cv
5.69668 190.506 5.6874 190.51 5.67812 190.51 cv
5.53554 190.517 5.41152 190.314 5.40078 190.058 cv
5.39004 189.801 5.49648 189.589 5.63906 189.582 cv
cp
5.85879 189.567 mo
5.85879 189.567 5.57705 189.305 5.4081 189.655 cv
5.43105 189.288 5.75673 189.301 5.85879 189.567 cv
cp
1.91005 191.609 mo
1.88955 191.544 1.87246 191.488 1.84804 191.391 cv
1.68349 190.733 1.41054 191.003 1.43642 191.189 cv
1.35537 190.886 1.82607 190.598 1.90664 191.381 cv
1.91298 191.441 1.91982 191.537 1.91005 191.609 cv
cp
6.26699 189.113 mo
6.0414 188.61 5.62148 188.284 5.07754 188.108 cv
5.18349 188.002 5.34462 187.93 5.53554 187.976 cv
5.82265 188.045 5.92763 188.308 5.92763 188.308 cv
5.84414 187.936 5.33632 187.671 4.86757 187.829 cv
4.77871 187.859 4.69716 187.901 4.62295 187.95 cv
4.90566 187.415 5.62587 187.477 5.80117 187.599 cv
4.91494 186.859 3.92617 187.621 3.76943 187.995 cv
3.76992 187.995 li
3.31875 188.041 2.82705 188.186 2.46425 188.551 cv
1.99746 189.02 1.71084 189.615 1.77529 190.55 cv
1.47646 190.502 1.26211 190.636 1.20058 190.914 cv
1.13222 191.22 1.28457 191.622 1.61171 191.708 cv
1.70156 191.732 1.84316 191.745 1.94423 191.718 cv
1.94277 191.713 1.94472 191.72 1.94765 191.733 cv
2.11367 192.463 2.82705 192.991 3.18984 193.125 cv
4.52382 193.616 5.68642 193.267 6.2914 192.496 cv
6.63711 192.054 6.99209 191.091 6.40175 190.528 cv
6.38418 190.512 6.54238 189.728 6.26699 189.113 cv
cp
f
3.53408 191.446 mo
3.53457 191.447 3.53505 191.448 3.53603 191.448 cv
3.53603 191.448 li
3.53603 191.448 3.53066 191.441 3.53408 191.446 cv
cp
f
12.0604 191.403 mo
12.0834 191.237 11.8397 190.996 11.6928 191.583 cv
11.6698 191.675 11.6435 191.755 11.641 191.756 cv
11.6366 191.682 11.6425 191.596 11.6483 191.538 cv
11.7206 190.838 12.1332 191.132 12.0604 191.403 cv
cp
11.0502 188.094 mo
10.6908 187.717 10.5951 187.487 10.5844 187.355 cv
10.619 187.376 10.6644 187.41 10.7245 187.465 cv
10.829 187.561 10.9813 187.852 11.0878 188.073 cv
11.0751 188.08 11.0629 188.087 11.0502 188.094 cv
cp
10.184 191.633 mo
9.43007 192.779 8.46963 192.611 8.31386 192.034 cv
8.20498 191.976 8.08584 191.833 8.00381 191.677 cv
7.9916 191.691 7.97841 191.704 7.96328 191.714 cv
7.95156 191.723 7.93789 191.729 7.92519 191.735 cv
7.91152 191.74 7.89736 191.745 7.8832 191.748 cv
7.89199 191.736 7.99599 191.676 8.02724 191.51 cv
8.03115 191.487 8.04091 191.494 8.04433 191.504 cv
8.05019 191.522 8.05215 191.542 8.05117 191.561 cv
8.0497 191.592 8.03994 191.622 8.0248 191.648 cv
8.0248 191.648 8.0248 191.649 8.02431 191.649 cv
8.3959 192.112 9.38027 192.154 10.1542 191.598 cv
10.1161 191.545 10.0995 191.511 10.0853 191.449 cv
10.0751 191.405 10.1254 191.392 10.1376 191.436 cv
10.1981 191.651 10.3012 191.659 10.4394 191.686 cv
10.3041 191.7 10.2328 191.667 10.184 191.633 cv
cp
8.33632 190.388 mo
8.34853 190.421 8.38418 190.438 8.4164 190.426 cv
8.4291 190.421 8.43838 190.411 8.44521 190.401 cv
8.45498 190.43 8.46035 190.463 8.45937 190.499 cv
8.45449 190.606 8.39248 190.691 8.32021 190.688 cv
8.24843 190.685 8.19375 190.595 8.19863 190.487 cv
8.20302 190.379 8.26504 190.295 8.3373 190.298 cv
8.34902 190.298 8.36074 190.302 8.37148 190.308 cv
8.34023 190.32 8.32461 190.356 8.33632 190.388 cv
cp
8.39297 189.968 mo
8.52041 189.974 8.61562 190.164 8.60586 190.393 cv
8.59609 190.622 8.48525 190.803 8.3583 190.797 cv
8.34951 190.797 8.3417 190.793 8.3334 190.792 cv
8.43545 190.796 8.52382 190.651 8.53164 190.468 cv
8.53945 190.285 8.46279 190.133 8.36123 190.128 cv
8.25966 190.124 8.1708 190.269 8.16298 190.452 cv
8.16054 190.517 8.16884 190.578 8.18447 190.63 cv
8.15664 190.558 8.14101 190.469 8.14541 190.373 cv
8.15517 190.144 8.26601 189.962 8.39297 189.968 cv
cp
8.59902 189.945 mo
8.44814 189.632 8.19668 189.867 8.19668 189.867 cv
8.2875 189.629 8.57851 189.617 8.59902 189.945 cv
cp
8.97109 187.691 mo
9.0292 187.658 9.07168 187.638 9.10341 187.627 cv
9.07265 187.732 8.95595 187.902 8.60097 188.146 cv
8.5917 188.137 8.58242 188.129 8.57314 188.122 cv
8.69716 187.96 8.87002 187.751 8.97109 187.691 cv
cp
9.17763 191.044 mo
9.17763 191.044 9.17763 191.082 9.14394 191.124 cv
8.95986 191.354 8.50966 191.251 8.54677 190.977 cv
8.55068 190.951 8.5458 191.059 8.67812 191.113 cv
8.84951 191.183 9.13808 191.132 9.17763 191.044 cv
cp
9.53652 190.444 mo
9.54531 190.478 9.579 190.498 9.61172 190.489 cv
9.6249 190.486 9.63515 190.478 9.64297 190.467 cv
9.65029 190.497 9.65175 190.531 9.64687 190.565 cv
9.63125 190.671 9.56191 190.749 9.49111 190.738 cv
9.42031 190.727 9.37539 190.633 9.39052 190.527 cv
9.40615 190.421 9.47548 190.344 9.54677 190.354 cv
9.55849 190.356 9.56972 190.361 9.57949 190.367 cv
9.54726 190.376 9.52822 190.411 9.53652 190.444 cv
cp
9.35048 190.39 mo
9.38418 190.155 9.51797 189.98 9.64834 190 cv
9.77968 190.02 9.85781 190.227 9.82363 190.461 cv
9.78994 190.697 9.65664 190.872 9.52578 190.852 cv
9.50918 190.85 9.49404 190.844 9.47939 190.836 cv
9.48623 190.838 9.49306 190.842 9.50088 190.843 cv
9.60537 190.859 9.7123 190.719 9.73916 190.531 cv
9.7665 190.343 9.70351 190.177 9.59902 190.162 cv
9.49453 190.146 9.38808 190.286 9.36074 190.474 cv
9.35097 190.541 9.35293 190.604 9.36416 190.66 cv
9.34267 190.583 9.33632 190.49 9.35048 190.39 cv
cp
9.95644 190.017 mo
9.95644 190.017 9.74843 189.745 9.46084 189.934 cv
9.61855 189.662 9.95449 189.77 9.95644 190.017 cv
cp
7.6708 188.605 mo
7.69668 188.58 7.7333 188.549 7.78603 188.513 cv
7.88759 188.445 8.15078 188.367 8.33437 188.315 cv
8.33632 188.319 8.33877 188.322 8.34023 188.326 cv
8.18203 188.444 7.89443 188.641 7.6708 188.605 cv
cp
11.3344 188.369 mo
11.5375 188.476 11.8197 188.631 11.9203 188.735 cv
11.9735 188.791 12.0092 188.836 12.0336 188.873 cv
11.766 188.858 11.4804 188.563 11.3212 188.382 cv
11.3256 188.378 11.33 188.374 11.3344 188.369 cv
cp
12.2963 191.164 mo
12.2665 191.049 12.2079 190.963 12.1273 190.91 cv
12.039 190.838 11.9174 190.811 11.7733 190.831 cv
11.7772 190.693 11.7724 190.562 11.7602 190.435 cv
11.7387 190.081 11.6518 189.79 11.5155 189.539 cv
11.4052 189.313 11.265 189.117 11.1039 188.957 cv
11.0932 188.819 11.1312 188.673 11.2025 188.545 cv
11.2123 188.694 11.202 188.899 11.2602 188.953 cv
11.3446 188.914 11.4652 188.847 11.4442 188.826 cv
11.3046 188.688 11.2724 188.56 11.2406 188.483 cv
11.2421 188.48 11.244 188.478 11.2455 188.476 cv
11.788 189.285 11.9813 189.099 12.0263 189.063 cv
12.1508 188.961 12.1884 188.847 12.1884 188.847 cv
12.1879 188.847 12.1874 188.847 12.1869 188.847 cv
12.2123 188.799 12.204 188.766 12.1518 188.701 cv
11.9711 188.476 11.6459 188.369 11.4003 188.31 cv
11.5482 188.193 11.7357 188.144 11.9276 188.226 cv
12.0473 188.276 12.1352 188.35 12.1967 188.417 cv
12.2064 188.427 12.2221 188.429 12.2338 188.42 cv
12.245 188.412 12.2489 188.396 12.2426 188.383 cv
12.12 188.141 11.8632 187.936 11.4931 187.958 cv
11.3646 187.967 11.244 188.001 11.1347 188.051 cv
11.0687 187.737 10.9848 187.305 10.7567 187.171 cv
10.7035 187.14 10.6718 187.166 10.6239 187.206 cv
10.6283 187.201 10.6317 187.198 10.6317 187.198 cv
10.6317 187.198 10.4179 187.357 10.3969 187.417 cv
10.3256 187.619 10.6068 187.918 10.9384 188.166 cv
10.9296 188.172 10.9218 188.179 10.9135 188.185 cv
10.8266 188.139 10.7274 188.08 10.6503 188.027 cv
10.4945 187.92 10.4213 187.849 10.4213 187.849 cv
10.3739 187.916 10.4379 188.062 10.4477 188.173 cv
10.4862 188.21 10.6552 188.247 10.8109 188.273 cv
10.6937 188.387 10.6127 188.514 10.5814 188.621 cv
10.5727 188.618 10.5634 188.614 10.5541 188.61 cv
10.5536 188.61 10.5531 188.61 10.5526 188.609 cv
10.5531 188.61 10.5536 188.61 10.5536 188.61 cv
9.8539 188.349 9.04189 188.548 8.88369 188.595 cv
8.86562 188.514 8.82509 188.422 8.76504 188.333 cv
8.89638 188.338 9.03945 188.338 9.07705 188.315 cv
9.10341 188.227 9.21035 188.099 9.15273 188.057 cv
9.15273 188.057 9.08144 188.102 8.93642 188.161 cv
8.86562 188.19 8.77529 188.221 8.69668 188.243 cv
8.69131 188.236 8.68545 188.23 8.67959 188.224 cv
8.99062 188.081 9.26894 187.887 9.2455 187.71 cv
9.23818 187.658 9.09121 187.491 9.09121 187.491 cv
9.09121 187.491 9.09365 187.494 9.09658 187.499 cv
9.06435 187.458 9.04287 187.431 8.99404 187.447 cv
8.78652 187.516 8.64541 187.852 8.53896 188.095 cv
8.45888 188.036 8.3666 187.986 8.26357 187.958 cv
8.00771 187.885 7.80214 187.968 7.68105 188.122 cv
7.6708 188.134 7.67177 188.153 7.683 188.165 cv
7.69423 188.177 7.7123 188.179 7.72548 188.168 cv
7.76357 188.14 7.80996 188.114 7.86611 188.098 cv
8.04091 188.046 8.19033 188.125 8.27529 188.228 cv
8.28359 188.238 8.29091 188.249 8.29824 188.259 cv
8.0873 188.262 7.79384 188.289 7.6039 188.444 cv
7.55019 188.488 7.53798 188.514 7.55068 188.557 cv
7.55019 188.557 7.5497 188.557 7.54921 188.557 cv
7.54921 188.557 7.56045 188.656 7.64492 188.76 cv
7.67568 188.798 7.80166 188.984 8.37978 188.419 cv
8.38027 188.421 8.38125 188.424 8.38173 188.426 cv
8.34316 188.483 8.31289 188.584 8.17422 188.672 cv
8.15371 188.686 8.24062 188.761 8.30263 188.808 cv
8.35732 188.775 8.36611 188.611 8.39882 188.493 cv
8.42959 188.645 8.40322 188.776 8.39687 188.804 cv
8.09267 188.983 7.85927 189.236 7.72255 189.57 cv
7.66738 189.706 7.63662 189.855 7.62148 190.004 cv
7.56386 190.422 7.63662 190.802 7.62539 190.813 cv
7.09755 191.315 7.41494 192.176 7.72353 192.57 cv
8.26406 193.26 9.30263 193.571 10.494 193.132 cv
10.8036 193.019 11.3993 192.583 11.581 191.975 cv
11.6063 191.946 11.6317 191.916 11.6571 191.885 cv
11.6674 191.886 11.6771 191.887 11.6874 191.888 cv
11.7816 191.911 11.871 191.911 11.953 191.886 cv
12.2421 191.798 12.3661 191.435 12.2963 191.164 cv
cp
f
10.184 191.633 mo
10.1845 191.632 10.1854 191.632 10.1859 191.631 cv
10.1884 191.627 10.1835 191.633 10.1835 191.633 cv
10.184 191.633 10.184 191.633 10.184 191.633 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Teneresa) ()
%%Title: (Windows_vector.eps)
%%CreationDate: 6/18/2018 9:16 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBm8i%dd[-ZcFNt+-1%,Sf+@YH5_+qZ`..jnK8FHVqq_k0Dgs(&`ATW1,Wu0_\Yh66-'bK0W_HL!_2tDSdloc4VW`LR)M]\j
%q)&Y#fE4<HQqua]Hi:_Y@k\V<#/P16of9\dNsE+;3s3<<;!?sK]7YK$r\rIk6hf^V@`m4=\jru@R\jbQNG-bTnYrCC&&Aoao0?+d
%rO4+BiOpu0P:ZPl3KbS,1c)s.NSEL3pg;jK:23O%rTj9T9/$s;`u!lfpNH=/Dcnb6(`@ebIh-^['C\qai&EE3!#,oQB]N+O\U\&_
%J**X50dKn^_)[[M^0$[G1\>L81Lh20mI>H)"P62V_kFjMd]d5>R*6tK,C"gNI9rPpmg4=uN\I7KjpN[;[d4???dRJ]H(A7I-fFSW
%I0.?K-fFWB_#WnRe*XuaMdC0c'7Z._h[rS6_#"8@TP'GHRcGOl:;qus_V`>-`ge6?gF:5F*!?+W@=b(O\kc.qa*NO]L%BEIs1-a2
%(G/fM1F+rq/Mo>?</bKW.k"fQ.emo`Y.];cUc'Hp/\92&(9gaD&3#CG$j!@jKfg84`&R,XCYU'S=>0lf_7bHh?N4:rJO@9TQ_8s"
%IrNs(J.ZN)3@(L78&u/'l#AA$,gVSN22_T#RZR#o#NH5LrX1CZ>Ke0cKB%dPP!X[^do@!d@ErU$K$I-gBmKiIL4ru5JBasA""AQ+
%Ge3mk56F9sB+'+^+$/"1kWho%^q]ki/NaD`lI6e9bVSm=<h'Z`?iMi.qfJ1O<6-M^&KY]^V\Y8[rs`VN^M.9g^)$SK^><9nS=E`*
%%,)[7>]1l0G4Fm"#&Y);Nb/9,p,08G488kIJ_O5S@dkGS(jo\u5oC68$F@Ymo]<h?ru\(eL)>H_Y6PVfbte9_.!d3Y=D3IF@\(B6
%33sg_Eg?V*:N3P<lQK\(K"FMk'<q3>OG+cF\gTWZL`R^j_RU8?c,@!8Y!s5AY%J6L&Um(b0o]*G3FqX4M!ShRba]\f=u8sU7TXiK
%Jg>fb5Cu%\3;E6D92d)t=b.1b;?o<Xp*c[2S)jp_<J?p7RF\5:I5\?41lrp^`2M$qYM&r"TriVi5lqRX#thPE;aq(Jo[+#kio^Ds
%Z<ZI,T*,3mA`I]Ge,1-i'"^JRGAL5LjoIIG#)&j6-TPYL2sJEmg4GdU#bM_,c<7SlY(uXnJ6ioT/Vdi67WW(V_e(t@<!W_'(Y@rY
%-3Cp;="Dn<-K.1%a<!/mE9?nT7o>9AT*[@Y%ip0U%,%1m";#*ecnNQq\@bOS">!6$R.;gk)HRLVkg`&qL\hP."qSs8YHL?[Ysm\f
%!XR8K[)ZN52.(GCnAt+=Q:g0d4qZM#3D!E/IgA\+L)G.Zp,C[f7L1Cog)W(,,D$nq3!=&`%=\_UA?h>oAg=tKhMi6&7mI><qC,rO
%<ou=B%_iMn"Z7_P7cBuiLL'L61ms.[1&l,0FE*Vf0uV,&R.a@B<7_&HQC"'sh;-.,"?WMXUrTe":SIr=s(RPHNKhe*-VCGUIfuGo
%h;h+7hX!^ejkIU:$]6!k[/MN84M.kec6p"@L]<']PdiHBYYgn"HeZJ_gI+GF(F+h"]q,'+//H=+g'UFd0PpD\/-c'9?"hS@K#*"J
%JUkqTkt`JPUutF4a:$AsPU/Y"Tc`/F]FW$Q?5^V'q3P^0q^/p&i5uT5:%[epSR&e4.u33.q9H.ufp+W%R><j8U'bO/mLVLk!J:JQ
%T":djp?]sCJM2d$j3PHp!=OXg06d-OcG&(bqJpK2.=!pEa;gD1P9TuMW9+BSdsn".Z'E4J!o=D*&uY-cFK)g>$p7"O!5ZZc\UK;.
%MrZ[#O\BD-o:NDmpfPZ&=93\pcE\]Z9r[aB@GB$4gt"uXJc-Z)K(NHd'&8d!3)MEW8!3-9Isqk41s(+rHbIG*fhq0XK[^KTc4'1`
%dHog+8ruWur21A?VF/ttC27jKgRa"?50UY*nO5'[O46<dM*^VMD:O;_V]u_$`j\<;&AXZS$>7fZPi_B`$Kl8Lq(_e$F9JrMbigL\
%(P:s*8*Y'/ME))r7Xku*o&g7+7lM>)L[G6@Og+Ue+8Fa!1$USUjXOq0+oB#5NTO]N<YjEQ.#jf]*R9:%))schkN'oLOI,05I%L:3
%3=\ab+K1"!R\)0<#h\?kNQn^E"UFL)j+&>&a$1u#;0YYA:C.O!UC^3+Y72qDj/]C[80-[uac.VMLN6(;<,1rn!q:?T+.@*'-g6"1
%$X+jD+TX$;Ph$>U6p/`epfD*JcLNtsD!Y[%]$Io\C=jLk/lS49W>%]2Ih9n+%R6'^BmC1PMMm#&C$.4]SHu(/%,NAp-t7/KnAh&e
%;f^)W5YCZ?GcTdp3gM.Z;c]`_fa-FcL`iu6cj_ue0m61>Agdg<B/+S&qW09@r]@R\$09!I&^FU@7qeG[XU.m>ic/f(,L1n[:b7eT
%/WB.m(gY1fk>/<5*bBa0?AtFsD*L@Ir)[Y1%p+#tM;gPd$OVsu^u;1sW21DhpHE<uaj8OuF:h>0)NBT*be^?Hn!7!=F1R$D'U'Ts
%dj[R?$&X3u#0P'37[KaaYCUXdZTio.?%,o1A4Ul5iB77VrhYLuN`5$^">c'-_G+u'*($sHEHhS`E*4<Hc8fudNG4^Y1`IOmP)m5;
%jZfKL#0V`c/E;DMKl,RG#;4mF>dgDiD^\&Na*?tVas%k?W'c^!hs<iTg2?M_8N-+d#g+_I6E?_^aoPu*f79YFZtr+pkE)CY.=i]h
%?is3:#N#lFJC(ml:EbE70K9ui`1miHRL^6]K#1oCZ_,*E8l$&m$Jt*n-hAnpo4!BkNIM9eSGF3)N?HPt;8D-!UA5q=r$djAN!&U-
%/V.:#3:'s.C&=MhOs,(J*!*g'T7l[T6pY\?oZ)=j"A\:r6R2bDdI'Lf$[bQAOCWq@hjV@f>g2=9SNnMon!#S):lm\b:Zca/"HPSW
%jb2O"f/on)*-CZfAUP%pNh(8A$H`Ng8!f-cUcsi-oc/60$BbNOr*0p=$i*>6;0o.)Mh6Q)_<[HVQ<*0RP^`_KF"YW*W17o]b+ZBK
%ViZggUiR#O>jk3K3Tm+VZ@"asU)\V7$HaP5^8Up[>a/_XV)cPc)C1&"P-mF?bO^hDeBTRa^'rtJJ)T6?32uc_PJp:O^Or?Rc!dbb
%e6aV4b@A*Ik9Ou33RO=_pUk)"/D'TXCOrfs6Qj3JY+=\.=frd!>g"n\Qa=5G>36_((\K?0c;O%Z>H46R[?EAsc;O$\ec)JCReT:L
%o?E[0a!f^S8FY0)fV:J-4E%"n[o)Y-N=\X"hF?[F,iP0kNAjl50o[7uT1kVf""C'?eFofE![=jDr^0M)$NJrXk.8fIP^dS8)Y52`
%]nIUVZt`V@Z/+9RcJ\XQ]9,+RgKVr^L)eBr+hL/=nR!)!:A_t[S>s>t=0cd$!p;=0,#He_k60c>-C!oMXD^H$)3(\:7m36Zm0A+q
%%JVR`5(ilrJd7`CbMV4?`g9%KNOhZaYWeN2rVqJIHbdgHnCd[dq8U:H^MIWQ,Dq,WNUP8Y)9i6+V`%%i+oK_Y2q8pgXG:;A@dQ\h
%6$gXq7k"TQ_I-l]o,.!a^d^P#Fs>k;Q3JVN_0afoTEsKG&'A5n?;e[>JqNr6CmCdDM5PGM+jQ2)BL6YdVTVgca8Lsas#DBNN!BrA
%m_NC9drV@XrI"Tk55uAXFZAR!hgF>C0oFfYq6(^7T&8CE56"'VZ-VUJkO[U(d[e^6s.-+1l(%eEFqm+?p0^`c)s_n6HWX/>UBppk
%c[=&O^?7<0I0DIEVO94BTOaOjQ\\;'rtMpc7+M.p?nc5M1d)!hkS-J&D=mTPlkU6p+lSE>dD=#:hZQBqJ+#j[,)7BQ1iW*FV6:.q
%aZCL3ee5J!<FSL&+1RX8B"`;"lG.fln$bGMaNbC'F+inlfFL8FS\o"$0\JH[p,/<o3b/M*)?lE4&I$r\%dE1a,Y\kUPTfm#R_bo%
%kM#+ofhWGX+bXe]reI#f3OLg<8TrUhj\Kl)!!+*l!oFR,B;2h!*2^i>]Ye',Rd<Oc;_iro>?RoSj(/$cN>\uWU'Jn4k-U!LJF5DU
%@)VfOm6?i'K!;-gm(#X%EjNrM+c%=!(:29b1BYq]?3m^GS-(G-^rnb-EXoaP"#&iQb;o'4%_V/h4W%cC!\]H[$m0sZ#@7nn"$Hlq
%p'A>/SF67B<ud`X!3*MJG`Fh:FD<,0V\qHT\Q^ES>,GfO5WiC3!C?bHAJ6IO*;X4[-o`4CAJ6I.AfUYY'Bj.lLT_FAP,mW=C)H[^
%<T;-W0l`q+-TN]tT2q!8S!X[Q3M+)^9RGL^8#%3Q[kJhRL.&L_ro]O+0qPlCZ1j8i4jUSjfmfQ2?TQ3]Q]f<_F+j;P^X"R43Ou/;
%KPRKGZ7>lZc@1R%1W#%oqZq*ijW".4B@2>495nhV(o!)4?q2FO:_lSra[m93T:a$[Zu.Ctna,takQ?3EUE.OXmcOuug<,q!3;W!8
%SNX@?o[)AWbci%k^WAZ;_VLsBO!3OP6"WNX-$ua4rk/"'buaiB#W<1%+(9.cD"o)/iR*`PZ#fq*a"\(AE=&/q(rp-"*ISnPFH0iN
%[Q$NTTQ;+5*61%gNHQkRHB)JTrM#hB)!<luTu8[YYKYrrfh&)jcAXaqY2ng+/<OFuO#\r^U"Gj?p-5t/4bQAId?p@)#4HOkF\S&J
%K`ONTSOfl;5M5Whpdir"DK7#S;[[hB!X#Z4MklHW_^2F7$9==YM5Kl9%<1H:86C]frtsMh5doRDM>d$/6Rp*tq4=;K[P&1uaMQ=Q
%\r-JY/.enY!CKXZR#GtWF6`%<n'c:3qh/F#T<EZ@?bY"(p?Cal5Pn\)oPXn^>'$Q&VnhFSk+LYsgjX9apOjZ7VahB"h64oc*%9Xf
%*WI(0;E&bk$"$6E*)j`+=p9*!WooElP_QJ+#G1L?K#24LHsoe:FAET1Yi/@@9S(r066Fs=_FY!m&X&-f&rZc]qt06uD<Trb0DAh?
%gLkHmm*2*7\[+6hoA1I="b$+,%KhD`pZ<#Zp!:q=+ZONjQlpS#mMs*`3kKHGGOFhCI9(B\h79jRGLGoLs-2;!,\2qWS\(Z]rfFrn
%K^ZbSEXqgMG]ROhS@1Y+@b3=Wf[*-6*<TbFp7[D('.nSpqKjO6pL>8Z>W__--0T2)0cZAk4("(h+CY`K"kZ>Ob7X8)p^K!OJ?'p-
%SikGtnD6.)&UpHeG`Up78!$IX=RJ,%&s?S.qr)CVK*WO[0)F?d0aAf]4DB.mj_o<9T8:->\Tfs2+?pJPiOId3LQFU6cC"^i,FUb8
%:#ed5rtLY?gfgq,DePT2o'\"tE=h1oIL80t=.UImbXR)=l_2Mf^ILiV\^]VMoT!eJ:lLUN_ZB3WJXK=<L8=MBQJ6_!g;*)Ecj0=f
%E\^-G-!ReTWDsBMgrMiZi#?.<>L`AE:u]I02dZa]PNGeujE5/?mASJ4Dbbu;5a@%j4^2t4ABjN7(>GUhGu!0npjSc[W!:S25POXn
%2S8l(IL&Pd3SWmb1O;[[L#BPcfdJm#7K9)ZFLI%?I3QqT*^4>6kgU60:X^.A\M3babB+5;s&\KlFt^d9mHdic&?sPXYn[TUC=h32
%E:=o,%Obe2r.@la_(-A'[?9D*r](tFKC4Mu'e,<Hj.r\fEf;I[B1Qns+ctQnE)`k-6o/,pb42Bp,Do;]FQJ=1_kASN'OEhBjg_5e
%ITDPC"o/79ofo>nO"l66IbEYQ)Ek"-d>mTWK87GYVgKZRcC7:`d0M_hjE"Qbq4-MMdSB@mn4.p^;',@A\"l#)UTg6G?oWfI>)kqn
%mA#[O5>+P"/cI2I>5b`G;uS#!gfl]7ER0Z>RHc]E4DZ`lU.'%!HJ->1C>,Gt,K#)j1`cK?)7<BqMKPH+/K(H(69F1"-9ebINo6uA
%7]R\1XjalRpuHJ^p2KP^72R"g&qP;f+;Cdqc-C=(][HX)mHOR;h6H=@UGo.1ZJ5rr-:]hh'YjK1JUM2^m*QpY_E#8%&T-$ROJMPF
%/MTJHmuL<EUbp3<VnL)IM@jJtK5&VIG!'T,5>F+XT7trQEEVQsP='R2#F5M%(jsI9:u8!eJ3:Sj')PNo4Tqi]bj%=$\As'T_6Gt:
%`uY$7;r3ZOp$_7:A+Xa6PpaVhVoP*4q(L!#c^,alP!q=\a\M`6QQbn6q;G,?CO0.hU[YbD3#99,L`nbn5PauElP]^R,Wr,+F7?ZY
%^V0tI.+tN1KI4[^fo`.h:[oUEBPL3_b]26%NUSca;\V5+'`+P<Ml%p>pcIr('HXk;)WtQr!"%n3rWUeNjp*V;S"XDURH!aNg_e'2
%#QK(&FHl6dITUi\A@Nu!Ga\fjYrnl_T(:dsShrY4G//Z.HNBXX%Ch)KZ;#?pUPMnp9N-RnQ:Wq&h`VI!Bn/Fn5WIi@J7%UN"F\"7
%%t=#&!gk'W#^XBP07;jS#!IG1Mqd:c#K$BD^Fu\!:VpP+GrbW6iO9HpoF??I)j!QgeNCNQRf4u0YQ8qRJD:ACjHIM*(Q6s,$je1G
%FZ7S13(7d++WskT6>V7fE7!Y-YmJ%[4>oJ6r!#?<0t5IN>g1are,U_t*5fgT!VIQRpO=;SV%8%RVqqOUV:P6@6/?JL.UZ)pJo)\`
%2#/E#!,955D#U#JBaP@Cs27f%p8]*b`M>;3Da"1S70_oTV\hItjU[HFi)bc\"$_SUU;CD_o`?&8'[2&BQu@SNV?[O#Xa8dL0cR$,
%k:`?6UH=`#BFH!LFRWA<@AR=lSlB!9$=BR;44+SG"XIptgbhk@"EK?ggCFA=.<+<E&>eUIR+Q][&jMRke*gh)Y7kBGWFY4cXYgE;
%8OtoFAT`KMnb3h,Oh]8^!c33#9FgUZbup'u*.[h]='7Asim80f3YVi<FADdQm$m/*%&s:#HqnH-Z\-"'JA7.1P-YkU3up'D%u6]>
%T-(FT&3.'$D5:7nne50@*;AXDoCrDL0gg:`/jBZiRrX!"2hs?YL2LL?-\a]=YPD?!4qtXl!R0a!#!BMcEbE7p0T?0#%*5"S9lIqI
%967noW"9'6`fS*o!E";$S"1&/Uu5g\&-M'%0Rais"]0=H0olXWiI,*MID]U4?_34j^PJ7"nXQPc5RcOZ!m.1kX]Yg7J<_s`Be&n"
%36-f-VG>J"ZUGC@\[bWQ61eCRX=]m#J,(cod9W8W&@4C90(U@MI2c!0MgK@l=nrS?bj"f14eXPFnG"_XmQsuC'$M5:]A6dha=V0a
%A;Cu^5q<K.%4n!*=tsJNepDgnSI>_f2kH\_)np)m#93YgErA*\S^JK"_IM=pO!:07LPsQu(*l[3oIS)qGS8s0(SS(N2ph<ph**4K
%pBEK@T?#t#"W-g6e)ZbRq8M-V;Zn>--VJCrP+>JFmjcVAQR#*W>aNHu5)_;lkS[>Y[o9R;\7S;?;:NIr7&lhp/1&"l*!u[T#;n9-
%`_WO!:bB7%bXIn(*?GjqK_WS\@Q?OlT19a:mIfp.Lg)L+MsM(U-:&5,DRGc;/J\rHlV6,PKCI`:a;Mc[ISJ2X%t-\$2;Z#<n*u&I
%b1>P-RquloHN?1E.%]A2/*L:aqQCOh"*mN^IaIgB&Dsr]nU9i`2\=j_n1TV?$6C\eh/;.a\3kfA@I.>D^41XlqqYSV+"2]D&`<'K
%01Wjk#>0BQhsCP.'QAL$$iCCN%t'!(Ts-?2r[R(90`Q/-GPE;:%s@]B%BkBF5^3BFBg$0$QDSV]cu^^g5<"\WQH<T<K.i(pI[uDF
%&heQ]7Z8>J"D>bq9\:6-akPbg\TACq/%9eYpQoF[@S<<VcUatTFt%0hF,ng.E0_^co$<IC!PdOX=2dSfeuUGK(%R<]FDjk!3R*YZ
%`KoPiD-/U3B*=u<aiU&V=4.'N'%d7/FjM0AkabGef&"]l,5Z@-qVm'M2AQbg&[gY,%cn+3i6>/-5dCo6nV<402G_ja6a-^b(SPOT
%s)=ECTB,Jo8Whek7GRu_aL`@:Bu?k=l!HF)>Rr;A8lNCoWFV:rR%@%dYaKGt"Pm-<c_]JHfR*jm"7X,\"B3OKidIWR[R0_-$LUAT
%CN57J%,4+q.rJ[M-%^]WI7!6[%k-(%',2`Zf]rhJJd\C89mPV@04kdG;0`CPGfTQaD($BEWsfD@V`'C3#X>00F,FfRCVEl@.Gmr_
%<DUE:Eq,Bk.OK^:IH1G=_ui.SLr3o\a9u>pcA9j=q7"X0L\HVcF@be:%d1LP3i"h*2G*fUUpKQ"QJSo7a;oG>6GTPQd&-C59u46t
%>:auflJ*NZV<RdiR6^'qp%^s@[:S?eMUtENEs%j3OImLI"i:tGEhip'!h<7%,FGDQ&BkhK,r@0nd,S,BafeH/IZ^r9E9k$MQH!m#
%,]0e,e)5aY>?WGjX2UUg6hkZ,R%%%(;Q@,*0X)\Xl&p'2R@4eDLAc#P30]Mn$LnoumG'Z`M5;/(8)$Js^I50H>IMH^6j-h#]rOq7
%C]I\!'1n-7)nVf:U4KI[n\7V@c?-?jTgD)Z7>$thdsc.+XjkRP,iWD92G()?drI02%>oQV]a8F"g>,B:DHT<_:2s03Hq^@*hKWU1
%QlYtuZ"!cWM26Ao4b[4eq-ZJeZaUd%"KbVtPRt4!=<%Hr5XY,fTa]AhV^+>*PESNOQ2T+*a;HZVi6gsW_!W)W(t0,_g>n?;@<bGj
%nJ;05N/oSdM56^]R+]p#T`64')9gN<GAuMu*,Uib"]GO2b$E67n!m2Gj/()QIL\SsmA)u9.WG0:T8)>lKR@+1Q<ncCpK4IF6(oro
%G!%D\_['MT*i)6N,kF95bk2O:S/DY:&NOnELfL*=0^M<*aGM?'#bno3CX9CJm1]LVM&nhIn(B-[1@5")?VOQjGbq13<JD]BjFT$R
%AGG/i,RY:d>:,Zqb5>3bqW*$uBb8';S1g$gf:keZ]Ui>E6/KKA1h,'`XfS1-WtOc4jehPpM$T-ob?K1ic++^2^ijgW_Ce!?knAIK
%&nkP%1ad^cs+,`F\X!saQ)0CEb\VOJ@(:$dWN""9&.2uWa)0n%RS;)sKsjklg.H/DI5`8Zm(.>m6u_q@BdgmJ$Q7f_aDeW@*M1\p
%nZ*h2]\$T@eB#bMO1R]S%EPr2Fk)]nGuDs$P&8ANZ&QcH6!J,g9rs5*7KUcDg4Br08X.RSp0.$ECOPj>l:mdA*CY#o@VPY?=%:u4
%kqfD>8GeR4:,_0DmFZ:o$&?P_(A56.N<\ug:ED:GCp[Rh<j#^e=q\JbejnamEUSBhcDcK[2oZ(SkZNDLX$r*+eUj&BVQ9s.?+,dp
%]bOe`!S,2aVh!M^_->SVkb>&tUKGRNA5*q2/dpKN!@m%CVXNU7^2T+@b`h-:B4$HHo)!IHVNT(.V,cj/'F\/sH!G8p]H5$O=$iWS
%!J>P%,#&/TW3==nnr9G(XEc]?Rl-2['CZ/GSqmWhI*WQci,EV^"-VBP(Edn-=Wd&L9#P1C)@JBh8jq]?U<Vc!?efTYA#,St*O=%.
%4e+b'GC#M)'oj_<GuC(RCpTMeb!pJ7"!P)B,^DkP-0A-A8PXf-FE7"oQ\:oIeQE5r.:BM6-\5^O^lG+Bm#mXG*cPSgZPGSUU8aU_
%cN6,af5uLX1(5k+(`!%$h5)ks@0:@C7_P476+.1kMuE)rUWM8-mO?eIO2Z!NoM0T2(U2t>.LoI*<*BX`F-/>dF\KO2m`c!+mZ?b8
%d;ZNeEYEhim"JnZ.8jgNL9i7G.ajN<9n7>])%tSPOtaUBbLtkpB?,N)TKPb$o4R@jo72VA^JGiNp@p6Ps4<:!Z+V%*qn8a:#@,c\
%8kg/%2eBJ)0Ut7--46A*\*jW#_ef\'L6Jm+K`tkr)G*X7Q)tQ9$IVtn_Q#tHiMj`_!<FQh,e"i?l1$9]/_Ch0An[1HA;2l7)%^fK
%FKj#o&J/F8D4?<!_h\ZoG)ce<;7\a)DHjn6JUkNK$[RKWCD@IYD*5Y&0t[J4@Z>mlpn#a^'3Em3K.6!M;`fXCCrFW2lo#/'$oDGu
%[)?,$>V4O[-)"\O1`Ve8:niKGihEd).5Ab0)-n_oJ-b<419Bl&-IDEo'tnut>BY\o$&7(Zcf+fXE(kWu`Sai$#Q5C"[h;XQl+i87
%LbUC)9f<h1h,##,\7q1GG6iPZhb,J%8KWSNcjh?\Jl-RM.;6s8kQmYG@V6jg]qi=c,>*]_ZUBQ9nOL$^RZ,4r0FS^BQT[4#1XaUZ
%foQWh(Vr%^%a((A[;?kuAdm<A$qnrp\c+2`#Kg[eL(/?r6H^$cEGMtMZ=@nZ4Jh9Z&YnI?b+pZ;h',Z=@R?!J++2^P>OZ,YpnAb(
%_:2pSU9KP4U'8S8$>G>>2Y"P<.e$rh)+?*OE,:]3A19=;'Y3:nA2@LBLAVnjV?cWe[9@Ej*j1i-*UQ3Vm`i7VKlAl()jnfJF&:Cg
%][:MsQFXo?7UMjOLt!&BR*8R&s+G+to23f#YK["Dq4lJDhD/9:eYLZ/bp=AI2WV&PCOaq8"(8L-"ERL`K+Ab,r7XaI?\T9i@(65e
%FJ4(360*_;)+Uo^5LFrUY^d62'E9reegm'Ef-pYVjUFY^i7FFE\FnL4^oop#CGL"lSUh;`*?72-%+X5?i0378IVf*>H':$u#@FR:
%Q*-6.N3BqQPPlDCc_a:Bjapk8WVSErL4]XO*,bai/kn#AnEV\(lH$]Y5KrU!%fV.[.F4s9n6Z?8_I.6^s('q.QQEeErWt[kAts1O
%L$<W_bWP.^<j&O\Pflp"[Q[e\/t9.m!56W1g$V;i.5NXm%%6\AqoVisVl(=>c`_jNWRm.mRA.1Ua]pqsYd_'Qn`PsQG/5F*JJ'sO
%ZlBU;SugM*EfDDcgN$"RGPH[c6Gk+^*A!N'3dqcl'Ks-;!-Rop88DFbrt0DZ^R"r#VXc84I7u74lQU;)C)uf>fN:p/a>6QUVKipI
%5$pD-q:*;l,MD9f),j\)hT*s`ll:Jeg+r3gA_'E0>P"iW^ftOnl.Zjn%qJ;N;<qY+OPf!;+qjO-j,`8S*mSi3>d5%MP^DdSH!,sU
%ZIOgonT!(eg9R"!Fhi>Yn,<(B)OJTM>F]2T$S"kDO^uq4R&7u6+!*BE-dQdFL1%3:fuHB2Q&&\[O'Ujubnlm4\Sl'NWCDe^TpG(T
%p3EtATHA^WI(,pliL?`=Z!T>=iDNX,ntmhMTc4EOfRZ!'oSRP@3;`h:MXI>E?ruQ&F06P:;H_<gT6)k!>9[qL-:89@/i.H/HS_X9
%2(i7g`JXZRRJDnEDfIkGHD!"#\piUDX3KGq!:qs[XnJd5_3sR($YHZXkd6ZAq[]ed'"7AT0!$[=ZIlkQ(\g^s1XdN6:Z0Mafb1At
%(kRegONFn"Xj6\SdH^+eC[Hhrf$t[j?l'b8COWc$9G&hZ2.'3V>"c:qCTZ]s;es"mV6osiCKp+LcG"(b?&(l7)NpFjCf8$q]%J4"
%p$0'qX`o45d/&a,Ou?_"^M8Dh%\jIZWa9O%k::3j\(Xo#[)_'gU:iD?"h!lFWM[@D?OjK#WS=:E7B@ADqFTSlArY#g2HToLBFBRJ
%ZaNu*l*Y*C4K5I@L5u!(b%B&PNIdhtVOJj=c!o5$]uBDX[I*e%:4#dkZeEIFjTpH`^:t+l?Z2lUm9@bPf65o.VRCt=]?h&anVVKX
%j.(:/`!Y3ijP`I!f:7-R8+5k5bLo#^S[O@#Fo#7@W\^OE7\+gHJ#foPY:uN"28&1X.N[,ch:2f3U[u5j9"NBWafLCiVU)i`$'4<`
%beo2g4_cfr\_",_=*uGp]#o)fVQ9Bj5$`fPRHe\#G"_R[JUsDVPYThEC-0#p"FqO]M]Nma$O3!^B.pi!4]I)B37D_0YA5m0HDBqD
%UplHA42%C,.-TLDLQLA2o\/r2$-qgGDpa,"d<L/jB<FlbIA)MZoTd&YV7uqVj3tKo0-0lo]u?ds$.!^>]T+do@b@47h`^(F!(K1i
%Udoa^QlKGrC0-#qP<D(AYeB0h(Ke'BIc8o8:+jE0SWA\RH)A8GBABABJiDr(W7p\;(C`HQH#`#+j=d*1mJ6u-d6CnFWo_XIpl1hO
%bdb=7TT.5M!>pIZrjlRCbtZLgpGG,l"Lt8P&A'j?%4Q,?1uq.c,=AkdBe_Gsc@k.Ba5%\@WUYb;s%Wb,n"$r!@5d=DN7pJ`1Rc>^
%)l(kAR2LE=?.9^j]:Y#g12-r#N;5`NColKSVoG%MIVF2Ba`i_(7f&'2_Z+/:B'u2/\\iH#19u*6PCmi1RsaT>V^Zp*I5[qE[*M^Q
%2>a9IF8X1&8"+(ffD2@[)?_*tVFdW:0lc6l'pOHMpncR.*/*e*JT)`@^3gH2k%lYrDls-ZBl6Y77e?4-hD=n!Z\k/C@0&0N.dJX_
%'[a7sd^H_5=K04j=0J^SP5iV-QF_.m\(m=uGEt0k>IKX`('J.CTL++.+nK-K3fQp]CZ$N1@D+/c`n#b9K!=)KC#&PM'<bGEGWf9O
%jNEaPUH;70Me2Zmo7Z=f/R$MDD4*>!@(Wj[.,/&#T!@68emNj.L7C.sf*DF3G&p0GZ?pW2CO=8k5M<AZNjRDaXPWsG;YSmlDr.RD
%dN.4*FOSgni@r2eNaTefF<n%SmMoeQ5Wd^!B<U@_q6'!"3u]EbI/&LXD5jG51LTQIcGXB#_)TVTo:<3nM-W+2nnl37Q)9d==7X@9
%N^ff0$MF(@=*e1tFk%\+fCaAmH?B73oXd<PY?f@g:<#!VXaZ47q=,G*ip(ik4j;\ih&EO>Rf^BC6d]->@,10cMp$P%[#Ed/*36Yh
%l(H)QFf/sJZqt[f$m0$.j1.#"4E3DTH-5C'#LC*6RJ6?1B$g-Hd@7e79QTJ.pag@?[/]OE>7[T'hO!_#_Y[XWL4$SE)@""P>[6"F
%]8QoQ^=%X.kI\30E'E:?K(ZD*$eB58><.3./u\C)dqOI7elB'OH]B93s0,^[!NS)#'aVA-$@uI)eI8f'btap)RAmtlpq[fS55PDt
%YbdtE)D;%n^(7[4SoM!\d+0>oLWZJt]*lRbKit@E:AI5;n`Y+O/19;lqHC`Lp(6>33+ZpP_Dg.F/GqtBJ=Rd>fcsPgi?f2Zl*N^'
%?0*:A`+To0>F-3--@/Odkbp/*cUBW-',te"?7OA%?-*fBE9o33RJ$P],5k9VlD%Z?L52?PZ&c`]gSNrq+ak6;p+;W_po&DiBj[)X
%B-k;ODU4Z;pgp?"'#-&'Mt,)&'s^)P7a?ro%S(hm'u+?eY%k:8r<gm(1KVd/%jtVi]IT*QH;06nfq;(3-f\?-qt`'CHLW@<RI*3I
%PBXpV61WibO&Dk-pcTA+R86`B)9/IY;gEe+`q4'I9\Oc/oqmqE8j(qj\5IY"c*oJFp[`h\=M&0$V4,l$H+=k?1UFQ*1[?g9a_WG;
%[:F3J[E0t6SNPt,GOK?#l5G@tf>RGBf<'%/?5p.Sk5C=eCVFJmL1'R*L0cb;@C%Wk/6kpd13I26\0#;BKo)'5(@A5E]U6'.hM\j=
%]l`d-S7bH[\`^O<-hOiFZSd%XNS6e5Cp#q+jib]rFr<9H@3@[(Y$qkq&!b=u#Mr<XBpt49b,G:2?F@;Nm:r.bV5p_&dSkQi7CCaU
%i,Ee/$tQ!5n,3%JlUgG';fbu\d9>ZIo@0@RF*m:!4#YVP,@"S/?9QX#*U]3)dCp%O2k_4n];^M/"p!dt?jg'TAlg!g>^>4ZNHWBc
%eX0V!QC9GCGh^HS)VsOkbqa'KFjIKsW-&hjeKa3[CWHsr\(4kiJ"(a67rBE<M47_H'cjd^YF"[#FVM$f#KH--SL)hY!AJ`>iSaFt
%0kAYe0nX`E5#?KL^TZ>7dJMn4g3^';>m)6)0=TbmQR>Sm;2^Wja2k3"p"6Q?kf69G;L*9n=R/o=4+)JA^NSY`QHPln3Gfl\T:`a%
%pl"jbB`qgMU=YOqbO&$1nj9gai2[A!k[/,Za2'8D[,,tr\$t$cdHh?dHM8Z=S&JI!^SRjrn_<@Cf>B8!h.QX8dD!L?'D3\90@k'Q
%d71h+D>2fX/n=9,HD,,W%D_V)XS\teQ]$)Q?m!,WDgE8LT<t4AKWg()M>H=DMP/DF`kYgRkRD9Np[c4GORNan*cH%#CDo:P0hZ:P
%hOA5$<-M'j,APFVV!ltL-#[ZG:ZV/Z!Y*WQ5eU6HDa)o&n$?HmEZ?u8rGao_%$'$8),A/V2^.HpmNs9lqal0uLc$QD=&5tU24;@Z
%C"D?oT(ZFA-#F/R3P&2ZhU/*94>ue=2>sW5m(CSVS$iI8I"^A9rf=Z8Y%+hF-c%'u05[Rr%H^fO@1`FQptAO<XRf<S_P*hR_jBTp
%OYaJm-[+'"g,9ZYnAiK9VGO$Q^bjR%Ce!@,*r-6,V]nRSq-Yr%BLF5aZDsCb#Js)q$`(.9`K1cB5h%U#Nf_;MA*?LIiVo^BEGAQs
%$Bbnm>S+"sm/ckS'PWHkrSHDY/T_[NGKCmnGB'd;s!Cd_EK<U=b.-f[f-=hi^Seqk2aqt+RI&A&5c\frh^UdcHR"%gIp;:aUfo*H
%q.AA)_q/73!GpW,SkG4Q)-L["g?6etMLE9fjFCJ=`t4P]91il*(ZgknhiBo=i\TSBYQe#.fIiP'2d7fXHBH[i4YLFEN;.DEC#VG\
%QTXXFOUX3hl1Q?5COQ,c'r[)W2kY'CU^IOHZeiCh-q%%"n1#dskW+FQ+KtP()Wab9CLqqJjkEC;#^+>i(+!J50h+aY<'/!&6>nU>
%"BK6n&YIlb/"*[h,/9GYHtEik-n.thkFrC$Eo_=>#UA=O`$pSTMfp"JkJ\I@^\8<XMO_#4,g-ADG'(/:+5i-Qj;_<N@@&o`+OIX?
%iR:!9oT=p2lo<+P1e,mX_A6=PQYg[,j4AEn/;6?r*7uBX6l/m6/XO40!hrbK1PCK%&Xl.KPm6S^GXj<cq0PM'26_6+0Es_kLlEh>
%<l8)8ZZ*Z7J?Z%9F_YesIRrs03nS@sY*i.['A0#^gauoE#[/'_Lm(c)G:N`*f)T3ZY#BkML83]=4[MO,8\2Ed_LKHQ=*un.qa/s7
%/A0@J9WpG#n0p`j@0C7BYYoNr4*n+8:U6GbF:9g-Fs?CS*^e3aL$DR#"0o@aYrom@!9f53W)^kQ(m/'oY3f1uW?$6qP(=S#KJD#>
%JVXkUhJKku`>4S,28t494j%T*'2H%$\%NL:dX2fbC0'9T1d2T<K#t,T!5"*m<Vl&1gtThF?q9c[V^5)r;G+,(o./HeOs9(ki^K5;
%92nfK@cTdZJ7$nHbpV<r:/WSq`4sQ_L:.]0KTLM<Lc2$\j4F]mh_&q'></`Emm?>qSoP8gL_.3#R?].g)fV]@"2R#nYIm_s'4Tj!
%c1kh-h-HJDpq=B%2:`bH"I#I:,/^CgPge@2VDO,kfo*X_+WJcu'"@[]eTVb-4I`>WB&3pXZCYgP!*jY0L9[0@bg;AU,bhJ;CEdA_
%YmIl*E<.bMBLU)q>Eu_JY]*N4`-as/9jYhd)5kq?gjiDh56-5M9[41U53BE"qb,*+kccE^FG3F)S(u(#&*W2eN:5aYohLqC!1:t1
%.s2Rs]*O,r_=l.&F0_'S[ah(/gI5E]Z#T1X&Rh4D>K1QJkKNc$!.a%mQ$WVm.5Q4Z$c3"\qoBm;imOU[UK^'I2e/`JY'_L(=/J&f
%+>@LfrAo>&_'e7J4>bQb*23+bACI6E$Br!?qf;`ar,/t9Z9A5I3BcqUU9UN1CUBq@m;ML$n2?U[k14dhU`W$P4a[Z&OgaVL1(lja
%0c(mAaG[M5q-*'].)V=l_:Y@Ba\(%W!>2O]U88GaAI_,_08\bsB:@I*X&2r;npF#$:+ddZeW@I<M/<@;"\hDScAV??AD2`i7<V`c
%bmlgtU4W&pJAXanO@U0tqR`glm"Yh+RGq.1*tP75='Mc^Iu8K^qA4V9ps]:?M?g5/\1CF,]>2Z*Ot*%A>69fgK=:Xlbl+9>AmBT)
%R+'b1)$hPh+2%0>n4`m"XK*lJpb0(#0"1Nh]??Lop1\mI9c2.Hi$e^;^;k'[Gh2<)>R`>&"5R8&UAaiP=+3#.1Bumi;Z7sZcmi%!
%:#TYH"h4<5!F$."r\qSMQ0If!L'Pr:^gl<9QY^6iD4,sUr/ns<dmYb5]tFa(%JR?R=uo[0%%?6Iio;=?KP/E@LK6nfk[U:cR-hD#
%m?I''=j(C5mlG1R4lD2--AGq]4g;Ku%HDBC@&$N$!J[$bPB*s0Z'KGK9><#SB1ZlI$U>KcB$M@M<?(rL:l5KEGTtl$FNIR?Rr9Ju
%,Hch8bJgu([*,/3?jG61n,t]IfJa4%Dm?>OQ?uAOGs7%t`Guj3,?DE.7>G73lQmj[G]B(.+gB;CLn4-ZK%PlN<N>,DSW]K*S!\%.
%IES#`AS2X6[2qJsMq==M'.H?Oo1#+gR>j!qH5(%OZaP`I\)pbr%j#CjfJKp_aJ]EL]-^!tSDKDMNj<ITg:M2IK9)Tcq)["5<*M,f
%/t[:=]4%OI$'0p`)LtDfWdPft2Xt`5<I#E3c'N>uC6sDU%`%5KH8&.O=5@C/Y+DuLWG!pEJ+VCQq)A)'LG`fHYMLCgc1lpjJ>:]X
%AWP;GB\Rg2);!WeRX4/nP8#lke&g2)rW8$U[]Kb$AaT,t-YIN(T9>2Ma99)f(fLH>A[E#>(7=P'!;!$WJk4+omgDdF%Nq!C>2ELn
%G^0h]rEH/b)r2fY%6[bGcBrFTSuC!tjbWHTD64TsQurMBKZ-i!o8Lo4nntd)e3>jm\<ng4[tmG])sbeUk0&gt[H<T7Ka_h\JjV4X
%U:JYooOa!sf`@2l4hX)ASl8G,k$':JGT'>k-";S8'/XuM"*m]tVVI7(:9lluq:8@;`_`O`?R?)V(GQ7i-Jk](LY,TY4UhV=\/m/?
%:C4+=Sn,[0IL7U;qaoaFl/=B+52F8qDg4VHRsUO^HU':EVYHluffVq]HbP,.Q>g-n[-55W+:KNS2TpYp<t4Z`4X2dd1nH;7X<n3W
%M$N%V9JZ/n7+5N9.#n+l`H6bn_:e@RJ4]6<"AJV7iNt/8VXW>L1`e:k%.#UEdV@3NW0Q"e3ab&NS#7c6pC^PcJQB6]i6P>"9MHSB
%q),E&AF)cR"G*A0VX*=lYK8YA+W0HY.Bi3SM]l;]2&MB4^SD[5lD"5UHq>do7>,jMY6*2BliTOl:-oC/P\&fn&3_\$>We:!KtP7*
%N=(#KiJg?E7?#ie?T./f5N'@+d7Z`k-cV;n,-53_7Cr$u,/SXl__oj&LkAG1J?(E#dh1tJ!TBrd"=bBeJ9i:Rp<@p*Ue<5"%h:%q
%#K0Hm15h\0]>8n<AlTo'qdODMK71kTPA,9Ah[@M^3,Q)"lV><G*2Ys>N;Tt4&/L)AmqE'`&u[BHnL-[k"C,BhP1V+g-<om.1m]m.
%/`6jB4C\7$:/6B6**.)ueV?[jCNVtOL(W64BP@K,/q?*K)(4kE\&1&ug.>h%it%oXgI*rST<#$)4(;F4G/q3Vcs)][4T&/76\jbq
%YR0VabO\p%8c1;:T4j_<iUgg?Gg)Dq+"8p:W=G&,9Ja(Eo9JS>iY*UcDCHDAmoi,^0rbn.]]Ei&;jYf#"<>tc/DIM?>cE80it/be
%mSnCt+fsA6g>q6&W7!f@VTlt=HOeRohOW<)!<+KjJAY?H*XHB4`W5`sd*4kgWf?0eS/=)UJ1^5>r/1)ti48=]e/+Yl"OCXn%^$Z!
%!Ke$8CPdiE3aR.e+j.n@(@,pT(ba+1qbi<\E7^mh%s;oQ#OcRa4g)YCVOS!\!!GqRFd%'UVJZeq*,d<:V7\mg5Us%>_K12h:j-H.
%mm2=q3Tt]Qi[pH=3@tBg<2Gk]h3J)rK5E+-k^"Rj5)2DOGT^C"m=TeD$4NPOhZ/10]*Fg(-#/kGfKat8Fq]MeNun(,kOLE72]T7p
%IFlne.k3_Vbd7p>q.,[]fKf2iLV)0JWd,5dg@2tMD-701YH`"9E5;')eu)$ag'F'cVmBob(FMK#$)Kn%>dXT&V*=CN2G+,K%Blb9
%k>Jp@Yi9pZd[s>Q>cNt*P7FC/Z0\f<2+fRsqI8"<ZI:hhSfU7D&eau_Ic5S["acM4lDC/OHRo\klbuid%u0/iFgDN_o&YM9GOL.-
%Zk3\+kM81"R5q6/>9at&kiMN&62tiL0K3jjRCNI<N,F'+lJ30c+c9Pohk1(=`WkCD;)EN7Q7A\Xo+^>qhm-G-3]t)&_pPc"oq:FD
%E0<f/>Kb_6N36.$=Y4e=&7'Lq!ODHt5[?6f\W0*?K"-+?Z0pp7EHbnK7Rjg5$++.9SS*//XPO5*'HEMR@sqR#g*Y]jZZ2]'C*uYD
%6efVP5gm`S6p>4hCF=J\EQ[\'=>U]$NIeQ0&(2^r#5I\?is?P;foNLV8;(Z,B\XOY;!,r<luhL?AVtC=EJLpQ:^U;Gl<LXmi9gtg
%H!.lLBDRgrIE@(Q*H:2FYY;X$(R1,9f#F7I^d*^ah-Kk%`1)lkOK)-$V'ouo%0gZEH!:E%&R\r&L0h0V=2P]=r_T*Z8A1Hn.VuKO
%4s5I[(C!-`E"VB.@CGKJ,c-e90>F-((Or-q.mmu8"n/ItVGs/q9nP0=QH6ek\fG1`7%rrb=L((/p71cC_`'gphLu+0?if/c:W0DR
%NLAdZHqO4hpWhiZ[6@8B=uMadRlBD8JuQ#ec\N#I6,?g;1<$/K'j;^h^'TnOZ)5tA6S7=e1Y:"n+#3p`Z4n%bY\-R?MjZMLel%#W
%08>39i/Flm3k/j`'VP;Q>&CKHRl)l2lT;U_ZVKdCdD"PK($H!,k+O]K<H?G89_hmfLZFjpM\VlTZ,IP1Q-73jX7([,KJ_LaJZWQ\
%jt[GNWtKH9G(,ea)h"EPT!u+B>D(P@BMI&'9"\?II,$;o4cGP,48n@I@aa^?2Z:1Qr.MDF@(Z/uYh@q\4UZ@)FX3>5=+U6rqE!HH
%Otk&;m"<\L!L*AT!EM8O+YjuQ6X`_TiB-hk<W;na@3(kGUQu"5bM5T2QD#f-[=PtmaB-&51MFMMBi906#Q3ti-)^8WXi*d.g-FMq
%dCi\m3cMWn[7I`rLo+cnZ[=L:QoVuB_K.-!'?T0*s#MqA^U^Y2"D<s]2#PXd>/1nuI7Ve]RM?H0atbItMZ<OcSj&Om<Dg[an]QGa
%M+b_GA@@a3L)[cgfuXY?=K&#!WNhh/6(^dt?\Z+5@b<)6>e5j8Y\Tb.DN_B@-eb[HSr7/>d<'nDf'<s24(=Q_c'St_b#AA)oiS<n
%H3%?PO&0g2lp'__Yrl$Wf]'_p!U?/8a6:EU[Ceb>Am#u1^B$IfDG7DBXgr-7Gb?n>3#d8N?[jE.gqfU`5aRt;(IpEbIJ]0!^nZ_8
%"R&4p&st*!Lj4>PP+1rt.8m+h1PJnrc.KY=Cs6p.\-3lJn<'0hir2ZL\^:G#2La]rW2SGZKV$KiCq,c]1MAMY+2e?sd8hg(05l,'
%:0UIIqH#:*TGaX/hhH\'*EqC[d![N0\FQf3dF,d\(./XfD["T?GB*XX@NPPoPf^rT"L'u)!?lL<CHo,*EMGO8Z%!!!ct=aYmP@8t
%'fltKgY,/&*><_#AkU4k7.5Z2P^cK[gaOoG`imC==F?t^Dp"o!"?uKa,!ob?r@nkuojs>98,3@H%(?9T^(il_f:8b8W2+OGau%lE
%:B>-ae"T)\;_m",k.j#?e<=up?rd:1W*^%6NF<#\'fM"MD-il>>=L3mQBcFh@VsUQ^aa5_EF:l;VFf!QQ+I'uonI%)%u``:.*Ol@
%NU8PZoE#(QjW>*LJ,Hf53Gb%Ya-)6D5RkE&W*nV:pG<WjU&fKo&[]iWk\*@(K,Cr3<?/'<(+`RFU1S=!5@;?C,$!LEG-RE+Cu6n#
%$j[B,'McG"%6Zi?_3,8=_I`)AO8dRX)UDL6QKT8/N%s)9"^Z_WULeK!:no/B5X#O7$L^_[#8<jEGk^ZX[>C\e'i]b^c8tb)LL@P-
%)UZ0uX_+j>)SS8@[>S,&IOnh+coJ!:BE2WJr@S\WEYbp2/g%3p^&d2!r^^C/_f*2>Z,PD:n6/XTd0[(h1uDCVTEfQ*,5%)N_U`#$
%b&o+6!!pdKPmH4WZcQ%8jkrG9,A/Vhg1g<KKT-TViricGY_YTc5:4$ga\1iu*[)8ho44d])i?HT07G!]n,b9FBe2<4'9$0-e(0IN
%e73X@b]=8QEdYC79jio=F1K4#0RIltlL/?F!:LfsP^m(,(%BS@#8enplEY`h3gG6SGr49FlT.?Y0ea=E1+!,"BhG1Kj*j5>^3s^N
%Jlh2'HM#_=5o34]Lu!;_1Z`XN[lS`!GCt'B%Q@u5d?e'FOTo`?R)f3R"%*$-%+OcSQ>BCs4,HMJmh;ea?C*+-]R]nPWL8ok>p]U%
%++p]@*54iE1eh=hLAl]UAtM;OJbY!X$f!#n7kU+n/XUQ)X&`\E.@q;1NEu<!Fee=Z&_(CeA-=TMQZTIbVdn(QT3])jee-;#^Y`fq
%4LhejU)`T%rr2G:$J'r)XlFmtPO$ig4SSP)+7Wq"]^t3Og06ai0uOH[EU]iU7;]NWE<fPEesr7RL[7XY8VVWc9R*Zfb1i#:gBMig
%lQ":@_#QmYc$]J3_.e,8enqY!-=;"fGcq,.-[1_--`$Ch*RIqFN(mcdl^9/_b0qkPMR>3?daa9/+3LQnaBjP[)+fVn^M?noOrF"[
%$a_VdZG=IPooc_'!M6n5+!;jlOu_@^J?C#dUA,`<X,8^9m(4F-%F\k]omUujA<5b:U&A3R[eB@-&2og/Zg-I/$Q#YG]n"(oW`gra
%E*BoZnIE/nN-teEJSNI5\GG2>lZ`[E;nb>s6c9&eX*p@OAQWa+UPrPc!Y<un]W[],$?.k['c&Gm]92Vpk(S30MqDl(&F]T#*AgV4
%_g@Rg-2NWqO\4NQbQ,k.o;p9+bGc%XS,/nN(6Lip5nC&-":9KUJ%"+SqU]1S!r<KI'88Ull!=Qm*lEC#L%hCV=C2u=M.H.cGC+@V
%V6/q;bV($I.@r=Am/U?dE&i1+2-R'r)M-!.D&6SIj;,0K@(:pG-t+ep%.-7eJFG+Mo*6K9(Sn,YJ%0"3<c)9LqeUG[QWe46(GC<4
%DN1u\n87m`,!<MjShug=!QOc&YK>@oa2(nN$e7jk=&\/NG?JpFg?M_*NL'a+ke@Md`ar9CB#:SOq5^W/\V[Om6$?K(%('3pi=cVl
%DmBu$:R$J+R<sY/l'Pp?B2A/3N9.H.`T^K'+^%QfUCO`mar5PZh?KgRX4n00lhk]FQP&(,7giG@06S*UXE&<f?W8dOr^0K^npoqD
%nd3,=gl5_,Ae1dRY2WSIYL5,<]edR:d0<YB7P$9IJ/)r-nmG\"AbJbN<?u9GHBXM."rRXF>D.b+@WLFNU-+)&i<>;]I+hpA`,*,V
%>j,1=)8oniHnYKD7[n\M&m3#18UCOQ\fj=s.e#7dm_R35A>fCV4n,tSJAK<t'JUl2E4"`E?iT)kCW/LekK2H;rjSQfWnhf+/mHk7
%],GZqprVQSh*eoV#</\Zr.CsBWl:fbSXpo>oSlK`HJ7o>;ig=O&K#46hSQ,?iA/5GS(8>sa0_/ua0=,Y,/LUpJQ$?R8"*V.off-n
%?r[a"\pQ4'nGV(Jji5>e=C<'D1Lo<Bm4Ia#KtJQOr?mYRgmOMWl_djY6bo3IL5B8\PP3[P.8^S]nPCBPkKM>7^35ffI`+"&\VF5R
%13qPo"$:sh\SB'b/cP8!_+OAi)CrJr?(NulU#reQ7W$\D!&+\B@@/S44S;aG=-J>'Y8/if8Sd2/<>/aQm:O5S@CaHP/OP<NRZ8ZW
%>FJrJj$RD^'o(EXMfJRN'<%@ofk]Qq@PK>`_tYu4k.2W>j\=YG0[KNXcfqQbk-fM@CKr+DFKqOPBE%DO'j)SS/YK;fNO&<&M^;<@
%>e[)>/8O<3BA91WkD<;,2tn$3[jH_'EXVd].9$>l!jM^E4(d!8^+h8_goUq5F>qR^*?IYJD!9.R@pgeM(49OXEi][,VDGNT$[SZQ
%Q'oBI0?i71`q()u!4)lgjfkeQ$IjV*+qu&NQ(e$qT!;NNFeabn/iSD9IPB9mC-r;5/?bs%W_cEdMQa$LiEPHTk:&]q(*;`o5$NJ1
%ADNg.i9*e,ViT\:g;l^1!OZf#aV`1P$K`cY.bJ+aX;!/.^L1C%h8UA;"DXam^[2P;MGRY#X_Uq86._cD>!qEGNG*%6(5@h$=CnH(
%i2c<q<3[r>APM\"[gH)!N3g=sC@]O2qAp]^>St(RKW<3)K,9N(VksS3bItRLekk>Z8=.m]SlX<T:iS%)IqpQ%c!s<Y@1GIL6%s*l
%l0VO[^^gp]D"Cn;q_"KEW7g?R:'1)CL/ig82hYr%J6F)Zjd$?BR3kG5o(7a=5Rlq0j*pDr%;H*J>$o-=:]VD6=8[k"hO3[6%p0=L
%))Z\>TpCP4(K5n]jM73)MiNS(PgEl]b6?o%l-Ws@K\A=YLT41?URS`q&l`2>q4@.Z]0)!#'=m*[gu]6S94b'.P"la,]9Cid4B);M
%!SnZ;G?)p:6`nA7S_'?t(Ib8U[;f%M.[89knG@jQT2Qp(EsR,$.>K\.lhB).((PU)Tlu<R.1_]q2k0"dL8I\G!qkLfbEA'P,1OuI
%6`3Yk33iO!jC8Xa&*cIf2=CZ0$Zs!eMeque*\4acL[$V5bloQ!($s0`8OBBL%F*@Is"M#W*I.*!!.;n)W'&dY\U_h.fjqU-Jb$8U
%:f@nmU/WPp)>5tkKi"=UW"@0>65:M6FOQ`g._IVh+@*V\QQ7ilBV5+'hfu*VMb(E1KmLQhGSeB8+CIm'/s@RE,o`2XEbXliO/*Of
%,<&@8Klo6Bee7TqJTh09PJ^b;287KN=bHCrLE#u`XnHi>$q%p;odSZTemue!dK$A$d?\+k=N!95PW]J/gn!QNfl9R^F?7k+0=RiW
%K4)A0Guj;RnlQiLl;'qFX%E"a7'qJ.kqPBq<4c4JdjpLUdr'"6<IG4ie9&BA6)?lG?nB66=lJV\oF[C3^U93OpVg(?/g>f!/N'FV
%U+%p4B5C6<;rQu3U$L.,5CLgF/nIg)7!g`&"trrf^N9'N61sKPm7H-44p>=@j';L^XT=g-:"6BC[,gbrmo?"RVVPiq$djo:A+A6P
%f%l]f<kF%MdurldkMAP4Ut0TqM5YOj(U38&Fbt7Z*0i[p[;OWt`RD1M-@6*8[,1B)UfrD5p#9_#.P!ZqH;)i,:OVrV_C>+`gt:$b
%CDuN.T$hBnqTV:qrnG;8bB<_eS2Ut&!BoJMeklc=!71GR"ogR@D`Op_dn%A@G<kMK0DKFtkd4=n@C#ri2c<9lb31sbbIV2W*8Cb'
%_MINk-Jm&_S0?h'M0>/b)Od+FVg1MiSKYh/)T5ZO^YVCcFtGu)l*AYXE_&U-(of1M);_;W%I!Jo1[7P@$]"i\*Ze=T!gWEG<eZFm
%#1lRLVuR7UU-3(0I1L`\<+#5`">t:lC5S\XNCNjb.]XX'N>5DGcd3:Ka$21'.s1BI"KLQL'e5mGV+27MA-(mtX9$MkKs&Cq$IjhI
%F^0&LegIj/Uk!aB65:tl/OmlZ@p5c[<8LU#<D9FVnofm?<+r)7,jS'UQgjfHMj8hL>5GKg6"k"YSPQ+EgBI3kYM&fAXPGY!,&-<a
%/\#^B3`5tJkG1fd/m@`%2tI.bW$.&1`H-*4+_QbY`)8q*Hbq"<qta*9B(!,D+TX!b+C4"`95M$Td`daa%i6kTq+8NBq54W4@X&Z?
%p9%uV6J1)/<.)UCO1e.=+RmDD'#JrU!4g:@cpSL$j98r62'Of1eXqT?nQ:IYC9.%G#UV2?G&O4XjeQh\i2[GnXE3]j5_;M1&C)I<
%erB/Q6pa?tos'\;@,V&McFafP#YK.VLPr0R&o?dB$#jk6mP/!U`H?Dq(/<irms1>!atghP:`]O<b[#2DDtphm*(c>0!CQk4c8BG'
%pa2_CMW-DV<u>+@0n_ITmIiDB&.N%cBdH7)7PF:.@Vg_Fgt'u%DV&PM4<J^I8\_WK50[I1kE"F\#c]`rl2ut/nLH\7/Hl-f4K6A?
%l'(b&8g0*d$3;hg7^#tZqKbB<,2)-',GsF?`^7hGLl=eh&1Nh327oTeb&luQ]C9H!4s<\%\31oR>+$Af[6=>aUEX^ho'NtkOaW>_
%?F="f?*qnDN=4.e:mk"sL4U4=G8_8KYefp6!2^4/*`-%G]hj=;ik9"<.o@].2K'?UR,EB^=jB.^B5[Xa<'[+9.U`IfQGHO7iu6=R
%b9[Cq(n-L,.?iGe1_bu[g1\nDB\bKIn=8e3j(6q.)\CWWcaU'ShJL#MgYnbPgZkG@),ca*#8!*]CjGoX0)gAI>t;Xg)$F=Qjl+W_
%gDm>=Z^R1nD?(V.Y;ie3^<<OMRG_R5goYA03npqk[`rCJkI2s)*ZGh[[)(JV&?BOkCc<YOiGR!`fJl[^<_]F#a9mUE6^e^"`iVp5
%+WFG[]MrWaW[Y`td.^f0i[rX=Y"C1tZdr5PBA8rB[X^%`F^&dlHq8#i^6#Ij`$8A$)V[@UaVmn`W,!eC/68KH^-;?J7kBl]*3D7"
%0)bnZ7Q/c]'_aDY4`#=_p*A?%K5XP[FdR(lRT-lc:UHOWh;3b-L3Lh[($3h@XmKUY(\[A7)eq,[F[+:u=Ps%:=5KP(Q1"OXBBoKV
%!nEiJEn]M\=Fi_=mW)kl!c:WoJWC:iO[*o0V5_uc#sk[Z6UTO?/F4,_-o9i.Dc",4opP0.#7qi-a[iPZ:X"J>g+ECKF5:[_H?<8>
%1%-J9IM'4M-3$h%*F4H@)s\Y105T5hMM$OW7EG8WmD0JsKLH#3:-N&0U4ba!@Uul>UhL.P[$Kh[Rb+W)-iM?#!4""ti=#u2Dol^Q
%XeMJuO!miCE"s/h8=D_6p^O6A=q;SK7`N)UQMu4C*\6*@@OQoA<L5GX\[*r**^0(fik!$pbmQW(IN,tbGPXdn",U?!RpD:((AgR@
%Z[4@BA!_;DQfOWAd>cn>74A@<!;#Ki)K[CL!kA@?88!VBF%f2(j'F$>YY]*sUkZKtqD**(AJ;VRmdusW"[]BIV7BQ(bOJcV"h)B:
%!&K"I^4OdbTh?>^p(K`d8I:tC5:@+5VUfq=Alj(N-5;b`s/+<Q#o#WIO@Ucj65!0P4#,pCCh^Bu0EXrFEOV?AQC6DuqZ_V!OW243
%l,`Lk@+cs/7dnlEd'T8o&G0G"-^n!lIL8*YG2sdnG&H=1L-j[^h$&P)Q0#UH;^c@V3`%t#\5a5Jh&?3`'EqrMTY-urP\IJYbQZLY
%C-GXP7Pf,EH'a@`$5)5#IZnikVGi;\!F_gVP=B*kECa)epjH(iPkf%dGMhJtHrH7F9MB:2mN\Fak!;/iOR]AnD;aDj=+^d;c]9:C
%1qg0saaF@kgPSUuX:6S3J\HHU_2lGha<Ig/5@(3IRcK]1h;gg^kC@[`G-f[2:%R&FgQ*^i>Q??NQKGMa5H0)iHqu_ja1:A)TdhqW
%#qJeGKXDC4RW"I/m+ATeh:Su,j@4R>]LW.Y,X/Y8F5c+r2=p6S^F\2/_0[li[n4&5R<8=r!<iSZHV$.r.0(.P)l+DiKpQZ_S@3d;
%h9o"O#Bp[M%B$`65[.!Jlm_Pk+NUChK;=F&jCaB19md#ACqD7haHjAs^a%QhWl*^.NcI@Ld05T\OlXp4@T,J09nOHngFagM:F>!r
%D(SZ"!.rIf?7/]#%CHa*#SO'6'p!^T2K81s3E)O^%rdb-X'`eZHOR8CX$S_%;?@7kOG`57kB*"M9r`uf>O?S/BKP6\o),k3q@R+K
%PNta.Rfd((8^=-^ocpVTW9,(m4,*EQhe2oF.4IbU:.*EiGC)@.dNG?1BqIURC&Q4UD@,IK"3IYEc`&dNTREnk27:F7oO[>1NhWNn
%Kd47Do],P`[f*/+*+^b*>X*Bi:S$H_HRB`3),NR:+_H#%;`dtKn%_?Q/^#?8VM]dEhFmUCRsaTpU[RgOrJf_eiJ2cUI?#MiH(lI!
%p>$3,=A>]n3NSGLV]<<A"-U)uBP`52+QfSUa;2pf9Wk8@:'^64a>?oNWBTR[gc/*p^-CM<V4'Y?NK[+2r<.\LVICI6.a)qeDbTPP
%UEL]Ylo=ln6[:>ZjiY%8;ZP3sBQ7^nK*CLkG#8):@467oqI(Tb99h)jjs4CDBjTt/BsDFW(\_"/MN5_d&Jc,W*d4K)9Q)sqHi#\$
%FX4Z(Y_XsE=#o13>!>-ds#\C![b()lK[&]'q6noG/WAGfQh,'tjng>U?2T(1htC6f?aA,!:RCZiYN5jo^8IK>HS+,.=m=qDbPATu
%o"fbG/`hB7C\\)^n."K,S*e/%Hje!TlfENK'<jFA4[3)p-VJuUWGpsd9a548jL..j;M.cY&rCg9`+f`m>0:p?St#s8`c^_-Nk2?_
%4MQ$BJ<]go1*a8fGEPSC!Ii2\(4`c*l'%p+"f)i'[AMEVeX\/3-#Q`ih^[]l?$=Hu'kr%dopocG%p,`BH&;J=.iL33*W'?V%R8%W
%m\GE:Xb>Rm-^Xa=jjSn?($OAVDmn9d+VjGtR<FjoXMVGLGp`85ie.hc:6]LIP[^AU?c%SfOTNH,iTBJSo1NUli5),E.k%Spk0<f:
%jb1f_ATrLaQRKCAYjCeYOY'Z`kM#&1lp2T`r"?Q,Z=7J^7jYd\:i*Ve1R"X]]X]s3ICc#2?0mRq..H"F;.]9HcLJo;G.m0dR]@DV
%e@J^d=&l>Qg`C--%1iVfD94V"#dd/)NB@T-6Shk5"a%NX[W3?qMocf^hg2Y@j*lH(6F1,T7D5R;^.WJ6;cD?)?@S`:`44<4jE,Dk
%J6qNN3N&!GD,,q17!atNZ>1>%ADZd=QI*rNURhf>2=_Y@ZC2b%X)j?LG.A`RTgVM!b@nL[FEUDqIConWgQB^p#F_rUSM(UmBAr,^
%7,)ig_q'[H;FX^K4/r)^LGY'lYe>Dhe]`aDAecoS^$SfLdrs:/#o@4?(h9Z%0o7j8WuM%`;r-Mm>kPtCq1HS:bTBg,j]M>2WakB.
%'ZpN6K[$a*lRJ7oEpm5<-a$S)^![o0ePT81!jL<pQPA(@;H5)?anJc4aKBPheMA56YQ60>h!pQ+_3P^c#eMuJJ#t671>G&7Z?iX8
%''[p`H:J:kc<-10/5,(=fCQk"W]GS^40?SBI!%MfYJ'sB<8.4i3t70Kqo"(s7^s]c)HO)Q^5!50INtItZcBGKF7Q!LBb?$R<XQ<;
%oO`HTTC87?[C[2ugU*d()s:i*Al@>(]i!]EQ0:s,/('ioY]6!_^*e6e]nep<+!JdX&A9N@96(X^_u'u:Mp(=Dnd.C(4WIr'L>STW
%lJ]Gs]n(<F^7A[o1tq;r%f5i?_u_)a0IYb(q]r3>>$[`-.ZM,VEL>7;0(19Lh.]F[>$RHR]t1W9[j/VN,A(N;n;jOC!mRbH8dD>_
%<>tj6;:5HTM##68XY&Lc'_i*3?JQOL@o5!6jV*p09Dm;'+coR\'6L&ta!XOXFsdF\9MpJMq+<BB`/Q6bNL]F<o98>=f&[.B!]JtL
%`1r6mRSUUP:[Hs]A<MGN1/IEs$C9.hDe7d,3=W5K&#%#'4"Bjs"3JgI]MBfjDQV-HjUU]"k]=;F^G\\#5?Xhc1oIa2\Qs<+>@jB_
%?XW=`&_+t9?RU,qI(_:2[Pl=g]^N#IPCZjPkC)l*#Stp<6fC8ZGC,l5$"29"S8biR8\Ggk9q.IFgRkQTo;WF.HK_c]L.uUK>^W\R
%Sfc&Q<KfJWR382,_nLJjmjTYhV+2qZf6c>Wb3os,%]pX7gHW[2oO6RsY;Ug]GPX7Sqm!ijci1>`4DSRqeQ5LmAO/jHg39A[5Kq]J
%naiV=Uq,q59_J%e>]n8OiqN]oQQKn]2HgEVSHGQ2rU7=g-b]Jm@oU?q23_=R[8hkh>!UhOh[FeH'"CZF>BJkUIY7kLLAT@p9r<@,
%iae=J3kA\U<[<Uh]'=j#?cY[AGMc@Fqu#t)7C$lsD^gj'F_fl4,RXkRHBB`uAYVdsm@rq&ARp!W=2E&MQhU^`SLI75rTI)1O7rog
%0XT?d0,N`leQRb(=,QP_fB2sgo%(7b/dMDL7<t@jqcA[G&:Dgm.*>bNcE5RlE`&DRab$_>gV5-I_."+=M.$"A]$\%FmJ#k)S."#d
%b5N]9l@+r``+QbA.Yg3,1o,K<[cSS_UZug*YD4qN7!m:SSOW!1RG_lF:i;*<0@)d]e4#_[Fp>=GY':L?l"AO.I#uf_f@q.V8'e?$
%RBfp"rXGUlg*fb)nP2R2T4`6(Mo9D6'sD6`0$]^,[B>)lr%$\]O'*fl/-K.QFNW90Vc0`RI-j7A[T$!+C*Rc2#Z40O_R:/o`O&G+
%0=)&B7-\61Po'>NU:j`1*4H\LooH2/R$Lc'J@j_4$GF/HQ>e9']5+7mMuDS'aDj)9Dqg3KnrBp[Wr*$=&KA?6.PJDdDs(H?n535A
%VLoWZgWJs>:0"7$=EL9<lke%756CFhojY[kVelTVPAS9fFK;5F'nA#>Lf%N]fT4ZcfQ_J@%Q/V3P[?fV[IKj*MlAYh;1j2$_,+Os
%0&Z>n(@3)>@KGSf;5>@`cP;+V^\G9J>O"Q(70KJ#:p<ia4#f0sj9g(bD/]f$C+nRn%W'URjSZTO7`Y]-L%J+nV#0FG!LBkVo_Lh?
%(<W-]DQ_lcdIk'%lR<^k@S^/kX\ZZ;DaQnC9j2hdk0p-[Sr&;qB9PW+gPWrAh#8q=YIn"62Un0]=-h+/c;QM)03[<h'WoWgC$g/W
%_Tk.nCk9gE8XirHU_IeIjM&_L4'ooPbH"q:Rr9kE;jsH5\G`;A4s`jLAZC5e@@pGFlkf]5pMVYMP9@?5l4]_jI90jL;HCp)gf%?V
%IAX5EWN$IAm@+L\4rs(JYHUgEQ]j/rG80a&<LpY"D_2.,XftUcS4>2J^7hc,ah-]cg@lBVWLi*uDdf89<M/3OI;<8`P0"reCqd<]
%:MGM_irYi+m$">[_lCFX45LqLM8DIPOmaJNo\G4L8o+2pIW=u2$iALj\<3N\SV;Ja6iC3>H[]=1+2VIVG80a"<V:bFd<6FdHP$^p
%YRc_,?S:\DWp17u[;RP];l]-;Lin0[YYSs5BuS6('_WtUodNnBI'KnOaf\ZgEBda][iSq*Nk-Rk[h\TcXcc;"pK%_!PcFS'qjsf%
%6*C5b4imY$@@mt)N>qfi.dWAEBpXnU9=[Sol6@dKh7a^"\oVVE)cb\d)GfFOYRc$Q_i?$.HAeC.>OH!A+MPf*l!4l_hr9D`.aBAe
%IF>tWp`-7ggeMWPIL4Aef@t/TZZlF0n_4`9"b*ECVCM'"'drc$P7$83eZq1a$_-/,oSbrr"='e"_FE'e\oO/:5BCbS>t*&7$ib_.
%iZ<&)JW7K@.?teg%5qfR6SZoNTr9Fp1[jT-o3M6k-O-Dfn*TN0U!>^"];nY.<_B&^bRs\+@PY>]e(<!cVCB*l'Xubu+9.gh[*eXJ
%p7?jZO8ma$gN1s+cB&"MjQ3ncn&PG6Bfj'/2e,S>p8r[Sc\LB/j*t&uf9H%0AhTG'k4-1uB?G&D/\?N1&(5O^p]'OOmeHS7be<DX
%hUm=CkCj0'pCV\Wk;:3uZPGJ?qTmG*q:?S_:B*P3:?2r2/aU6LDeaUYN7m#de$kCLVF,c7l0gDU;,8]cS=C?m9@);V*AtBI=%R-?
%&h\a.R>Prq/8;]lqT/28b)"ONc;42TcPA4GEbB13^=d"ig("XVlmC74cSe_io5(C,H+$k=aJ\4.',Ncu6HhSU_)Y'Odu!d(kY&83
%12o#7S8k:j1UM?"L?&BK_oZgf*b_tM^%"4D$p/QMm1&Z'gK(p+)V08\;Xfk$3t#Q!I7p>rT@=.[59i(%@rj`>K&t7oM/g]\Fb0F+
%?;O7u%]1pl[&rpZZe[($B/nYcoR`%X4RSSdG@uY\o1gqX%[HoYHS37l<=-Y<l(aVZhf3+O)Xd[[)"9pTCA:-B4&.WFO#oQq[(YEa
%(M0KoMVXLn/G>F8rli7^\rRN]rB%BaHI#m3qo8h&jlsO4.;>N`KP=6^c$1=SGkZ,G<IMXNrq3__2GaA?p)6YSpTL<uh+Y1[MgL&U
%5(*3FZGUamn,<cac)tXtXnJ=ZmbbBnSf+SW+3fm.2%*3,rb^Q8:ISuC[Y(URIK"*%p)]';c<BUNIbW]Unrpb>W->n"!(HL)QDF])
%kb<oG0s^;:*@KRUIDm8+S"h:@gX]9i<;M5K"K,ium_8Pso_ch9qfmF9@`@t1mbge5naZ#TWQ*_:_of?QgT$[R/#:%"nkQ[g\aCqi
%#?+@hr!\ZFCCbX52Ttc`ip.R.mILbJbqn"DXEEs*Q>.?cp?MPI6E8c/R&s8.:PDb*:E*.L-a\>u1:"T,N;ArNg"c\*nr^4O=ZG.?
%<d%Viqdb#kk7GE!4)<[>P<F*>RcmblC^9SLk1^uB&Mc^1C8M4=Q_t(=H8!=g]%aL>N[]+[4*OH:Z4>eI9Q:m-,W5^PE)L;*l@c+L
%]6`oEg./JqC&.V#[3P.Dhcm^sGjkXB0<Z1?roqQGXttJ'I/TU!If?f6(.@Wtf+-tMX:7c'DdBkWIs"SUpZ'?4-[0=Of'mCbe#Ufd
%9WH;u`3iIsQNVd;p%l&Kp8cGaF(2a27"=92\@_6>@,_[^`h#sV7/YbVs4&ViSj&P6ebg;6RdSnaV%;<D9t)gQ7da$\I:_8rj5JYb
%3kN!E.CrcO^[UU=2DoL_;kN#q1U.9!87Nq&385PBBM%.Nmag+Xm4.^6:&4(>UOIH+7c47Cj2f\d^)F0b8j,\ZH?[e=3LtrHpr:3g
%Oka3Ur*XqtZq'Z@PN=/@$2o#+h"%7\LU_GG0XP,&AsflLIH'n<)9+8"rpoZdE+ggd553!Tk!>5VcNI[f3lSf_P&K&!%RWZCj0`).
%L6L23Q(<26qQk)&VUnn/3E*Ae5Ea@Z,&qDq26Cbg3-V<Cm@C5jlGjt;f>fb<0gG.['":>,eVj8A&h\Ane\.OE>%]LLRl,2$><4an
%QcJKT$p$1E:!*Lk>Lj?#!:D0=N4jku/o,JGf^@?J(6.$<XlP]dY[-+T02i3jAN=7G\7<cWnl!f+(p^<f#NM<9Zaht]gi8+)l_aQr
%8qR'oZ+q`bG"Amkejc7HC_"64rUTMMo:8&?drsX@DR)Lonj14/?XE.`dYG9sS2=GAiiLsY&!ckUPB!o^X(IThf4Hk1B1YO[&?2Lm
%r=5XNp%gsXdVm_2kX1pU,=(YR'`DfK%YH_+'4M*Vm?]YO^US2l)$qDFpJD1cId68@D]`AWWKY;o/o`7eDYk(g9n7M5AVPf:frD#L
%`Fm`pS/P>Z^<UV"]@U1botdrB0,!K0Du(?O9/U5Pj3[t//Y2CrcU\=[(NkQr56+_Y,p'"!ZV>oRHFAMJU*<aa[`qIlHe@IOgiK)Y
%gTd2\=%M'h!kM%#mJ&%#0"/=LSo9[sYq"mQ/`,;J1aqp,Y9f%[C$s_%_sXcTENk6JonZ%:hci\3XS%A_rQqm;,]5sSA+bYA[*DsA
%,jo1aX2B36eS9:SM6kbXN[MX/W[)RbP`AA^?'Za2Ull&WLc\_e4-_)Z`ff1W8`C(1B7+&"+"J=/g;!>`iDbEcTm1AiNti_)dP0\]
%+"O/C*7.'L;][G/KSf]A`sTj=l$qg"_HG]<qg>KLFq+D.NtiG8p?t1G32SscMCLhZYGUF*d+)kA%j'$QeS8G%*gX+HM6@q[A>\_l
%_8GO:f0e;ZA+/j%_sK?@IfMK*f4Re(fVtq%ljk.40*"+V!*u_j_8?ASpY9[)7WglgpYb"d2F$cdiM$6R[fc+%Du88ITj8Fum4fu/
%Jd6%/%j#Vp3I1"r=#otR8N9W^p)SOO]6`scqJ1kAApKPKQ3Rqu'Bm``YVSIf3(psJ!BbV*#b##'1If`<IIM4PCPU[/BtJi`E;/I6
%#?6Xh^NR+SN*u>a&,/_21Hp%CgH1,dY/m77g0mbY1JY;9)*#"!p[R2#a=JR+I+t=GDBD!2Sk"!<nll^<J+.E'Fc;&![]PR(Apj)e
%HBs.:)pGb*#7kTdNk]bImFbI4Ss^W^X?SN?g>Ol\c.!Hrd0C3V?64;uoqiut&$4i$b%ldEiW@RM4P]$[KmS7;E&c$SiPmh`m.%p0
%]nF,onDN8KZRen1'^kt:_s+?F*o^4.qg\*S8,MFV*^&4HH/*u,a0F5+BAmP\4a=J\<IIpZ*_q4PY_meqCSDiPd7bnT/.WfIr_DFd
%*]u![9Pdci?5U#h#7m`e&7]&>]fp[#h<^_t')uPs%j"L$Fa<@nMM\sW#7m^_5DT4oF*7!E#7kHb2mpC*&,YA-8Ys6J0%IX"GW:,;
%8U34@HLPnE/F't+:I`so_8C7WGb(d3He%l`i8O<+rK0pphB+kMmKP2cB"nitNg-f.(h4e"D=7uV::KZWZe<r_LXWC&qKhSq_8?k\
%c'iU^gBS7%YWWNV_8D\`9)&ADiUk_3kq`S7i8OL2Y8qWbbQ0hN3124/N.rbJ+<EY8*q9i<mJk#?ZET2bbWTYuP9)iV*grtOW:9uG
%J!$nHFuW]4kA625:+=U;\(rYu].?a>'i1aLMVAXO%Gm)5iXu0*X?.]D[Z?+Po)4>MNeqnC"0,h;oId?=kJ#NnS['^mhjPW!CTj)=
%oXJV$Dnl#MX1&9;lc,"ShsHK>k-CAb5.C=Rf$S+*n]/F4:t7FIo]Gsb9?mCt\`M(K?X<R-YNtN;5J9V7C`]+65IIn<r6i&Ic.*?6
%/fsi^l]RleroRLUIsSeK1nOMcq:NsHhsP[F5!F6-\g=g'Dlu<2]!:mUY1pJG?=1;@n\Kp'pMTgtJ),U(X8DU0rr&HZ+'i,jC]F<U
%s6bl-Va$_@EVYsq(Zmr3HPO9nrdEn7^GYcLeqN-Sg\EB!pHP9U]=.4pY9VBKQfmg5e+ln@l1kSYmld1F>(!k9B0Ucj\9PGF^=')i
%\oF]Ps)[dXF2]65qu-EX2#mMEI!"brOdH&arlgGkmB\mN0(Jr#\`HbNQJ.>jRhjr\Zi'dBo.P?>0--J):'UBoB:a"R8f'Gdpkl*r
%%qK^hh>:3bYk\*PM^oau-fKt;OuN=1f_=k%dCH6'rG2DWnb76f4FDJTr6`jJQe.:$pAs7',G3i;]gI)2FY-[cqfVJ1]7kpJS"HZH
%Ephr`rVO>g8)M))YWH3HgAKQbCQpc%B=05G'0e<HcftPXbi0rmj1PD?p".pHp%OO3IF6R]=7/9G[oVDb[^,i&m.HY*+7ILVV^!;P
%>^j'.^<DuAI/_9dLQA'7]^"\:1:)9$:$:Uc7d&%Ua+2md-SJQHCs7=*I9kY)ZLQu7NCT%9/REo$paUa8)ntoX$)PQffb\kHHh*_$
%X(M1j4H^Xir@F9,Ejp.\3V7?)k/leVd1SY+IteV9NgtC@[BKCuk>'GiZWMSJ4o]SG8cNUTH2Y%^)=tLBS&Me!^].K0^O#:93I1P+
%=0t`Zc&IGRGNn90h8>5kqA1*/S)kHal<h14n&mAMlX,$FrD8!`<56%cko2)kDOm_7&*Dd77(5qB^\HaDQ!Z)iduWYVd?OnKii'D6
%C;%S>%"79nQ]L:oKtDm5;,@2b_]nUIa%7>XGr2$,:6t]"M!U;X4E\qWa>,6C[`mlfCV\^I7fMD.#;iDB]Qs2VE5%..B9H4amD::W
%gYdO7)nU&tjU==o#3#0cQTd!L3-"K6k+<T.2m1E]lcHF8'NTS4rm8U6X)Q05>[9S+a!iC\#??32O,\3lb"LR:4%J18H1<_?\9RJo
%dD%>!I<VU*^._>Bp;O5%/$"07=Z4OqPF&BafmQq=II0?Lo^_41SrI%Q@hho3dB[)/7sX[70CW6&,9t?MpP=L?(];dKT,^XGq95/N
%s*T-Ms7pDn:B0R!?g6*(D02MM(!Rm*pMX?be$f7pg;ftT2a;aac18o)3o/%ZH%!&&3#Wb5l/(lq:Srhn^RL!K8'2QQcV&AG\((FJ
%S;#tZ45[_RlG)$o>IY-T^<$>"nn9(/RIZQ<EVVCGo]?A`Ya_kk5Ls1+I'U>l(`1cT0Ah-o7EYVblC.Hc:O>q&;LA'&g"5Pn(7m[[
%,ghPASqXbS!LL+/[s2$i'BQm4@="aF69'GjfGEj+5J$LS@:l&XeeV3Ic70M+H6N=Jk4Q,hDslE+^Gq"eZ1W52m^q!cf8j0"s6]%$
%`b9Q"3OJ*V_S>Z!q22r_mJ6li2]_JY)sDVTBEl2Bs1iQ>M*UZF5blX],^^uj8Yt$<,!B>)pDcm;A*BDPI^a?TlJRd,TCoRT%u!$Y
%^D"nu,5p\We'CK%Ae^<qT.a9;O-0Kl!IhXCJ^5r(Mq)&)6J2,0ePfT0]RB>1/aSs"T76[M530#;AAZ6bX04`oI$\^#YF"<"?9,]L
%"1h&2>XhOHN5!M<@m8i^\!aK643Kao'6]iE#q'9GW68u.c[KU!7(4*d@A,i1k/0WYr.,"[kZ]#UF'l%d^FU!JD6K@73n%kkL!j^i
%n#)d^\Fh]'/T*2Ci'3Rj:>5AFr6L)'[nb8?I/*9dgo9DqGNTbAq!AoIHZ/?%`V)Fno5=!Wc,WoK(;>8_3HoN3ol4Z(%r6gr)#G6/
%h`8.Oq(1u;?[f`gXXKOSp/Wf\H%#MKb3*]dY?)bd^\d*OrA4JtY?cM;Y@fIIs4b]L$gUGSL%qO*0%),5s8)];ae<u8o2f#n?9e-H
%J+3!;PqQ4R5?WJYo'2?q[m-D=\9NMJ*F8R6NurRG:\um@iqQ^Kme>%ChnPe1HA$AK]=*"^_VRKTa4d0+^)f;jY-,I_>Mjg^HaE=8
%Fi0idk:,l1;*tr&KP9ssDT*as-uOLR'g,LU2oNJ"+)@K%h7g5d@XYBE?LRU:cdVM^+6m4RY.lTjF7[q=Pr$bdHF:2'p\":25L4b,
%3skH3@_KJMI;Z15;Z4@#C$-SN3cTG`F;<APji/LL:?h>SrbA^iK\K/)NW.#`NOp^=0>IPad`;1Z5;$<Vo=%luG&d?;g9n&tJ#oi%
%17'u/L.gd^rlu/DmS@*6j%Jh*`N;9EpEYFTcchF@$`F#4_rps$@ro99])&+5h>O^_:E_Y,YKjlZ4`()6RIeIFK0@E@B)0]\;kkk3
%Q)C35IcTkNa_tNF^f*1"Cu<=K3;";^'YV-A:+iVYc?nR!agk@?eB>CV^HZ:1qtZ<9q""^M047pQ#Mt!akb-^VkQ6+Ap:DTdE]rOM
%&)XQQ]Q*AnqQ$7_k:XOC\,Vomg@(Tc*#tTOoX%cK4o9t"DKkZ^7VJ@ZD)q.Fa&jD$Y"sAu?)nGeN:#TO[9[(M=moVpbeCXc$nRuP
%kADUCm_q4I+o_]H1SVqV8Z_<._hZUkCes9OeV<[.L3oLWDO6CP>Cj\)VJa&]@b(G25Ga>hEr06!?cfYn]MLN.J[Tl=WNk-fHZJH3
%afit3`Q^VbXfl#4m&j\Xq;q8=[AW=T?X18/?f,&_oD[>tQbU:[Hb91Ip>o.,"]q#)s#bVlodtN/4WWe4%ue@]^HS/PH"kBKIqXmM
%3,rNJa/4:4QDr3^&ij[UJpa*uG(8Snji,!,rcRc1_aiV1]MIELk5EX)'u!te]9,=!q9>Dh9:)9bqs?&RIWZ.8IsJ:+[D?I5f3B9]
%HIbk64dpMODpS#fE";[L<aS%_9um$K9,b)&iiC9al,/SKg="F&8"%3.0Ipe=J%WCOYDQqsX]!-1fq1ksK2Qi*;"FL%a>W$;P\jLd
%<P-3FX9^2uB(+I7JLXLn(TW=iT^2ZCMWl#_B0u%7N0l6F-[hEiH@MZ$(Bus+A9W?K9.mDrSplZFn?eaj5Pk=k]AGI\`p?UG:bU;`
%HJQm&*Q:'e7b#7_4I9R9@Jg[3^US>@ARXS"npeqkb(AZp/c+Y`Z_r8DbnB-\7M\Dd2HH,n?FY"FCA2*bMk>e!nirW:e&T2(SR+DK
%c8Yc`]U?VDTQSPqIWoYXNppAR*4oarHhfLjc1(%+='%&'4T>0Pg/9p0@mo$G(Ua:0jis0k4&d"Jc&V3tCcF5?Y=CH%iEpc`N6%L4
%j\L:g'gGE5+mearB5S\pK4_H5jiY,pRDlPjG'2TPd]<^g]+qlgVfY[,3%28h[\'GQm,s8P7WW=Kc[*q2\D\<Ng--pE2N3I4DXQ1!
%0A.VB2X<s'if`\\dcd:inWK#334NT,mldXkeqVk]oTprWmTMRNDp9jtSR7dhr8cGl:;2$u*WJ5cGOhqe?GPZH$XoAXn--Z227N)O
%c\R\,AING=:0gXk%bb&f@KZr!W1TmV&CM'>UN'*bJj%cYK,DEgc.Td6dX1S!9\R'[dPL-Vq_3'?,1q\"G*_Ucg2jkb_C'ie"EjTl
%N>r4UaT7=uJ%?hOU9sl&)ZQ\tG%^]4rFu(Bc!T;%5OJ'on*B^$\Ar-`XJas)L#/,`AB8`PrU+Njj7B=$cTPL"<TntdP]Xj_Z[_jB
%OtuV'c-JNi[c[A^T<!Hq([lS=h"L0ZDi9c?fPNctG5p2Xj?/ruUt+;d*VhMj_VGmO0A_3Jcc__54SidjeQi+<bXlt)(!l-Q1jA.J
%gQMNSoiE5"SQNZ%l-2FKgiN<@ca(([A+&+[c)Z9aD/#dis5,m9U>5a[V`tqDqKG],Nh3NurmfIN%rD0UVdH9+s-opi>i8sQIFY%k
%jjU-&LV3G,:Of[_3QTYcXoIR<`C!hq[nV<PW?X[nGkFU![>0He^bT9_5PpgC:aSN$Q=)Y_;'Vj^clV=fPL*MrGOP)a<LPk-e__S(
%HM5@R?FE2%XknQnqP=i"a>a.bVU"`.pX)!M]tO$>dS>id[F_HB&8^diPHA<15%(YH5BfL#s.jf_+7$YBO3Z-ZHe-M_O!g"jWJhM5
%[c>$foiK3$_UbPK,]NYZ]XdV(6N^e"+>AiGKYTeN[YXjrY%.dO)mc3ACO5cT4Do7MjjAoD6lYq<9:V<ph>&i*n<'RQ1]KYFFa*<X
%P)AogT,ue)3e,%#SdaM-RNJ'Ej1-hdQT;PTqkY[db4Y[JrpA+Fccqs:g_Ed+/.Dl"l&-bQf,VLca4PJuSfQ;W7;lM/,DFfY75Ygo
%[9jUY.rBuqhp9T]<]mnR*XProa/VK]]c=s]=Sm*AIVe=qNJCleDAPEo]Y\fsa2>>VBNP2#T,/cc\Sump85n8A@P%H-\b]FJnM#iR
%$g.9r\H8*5DA4@$IBiG!57^lQ#X)us%,BTsBfXuJ.)]MCR2QC$[r6.S%*+9mK3)qTr%XV4VTht:j>IY_#u$h@+'I=<,3Z"i?F/>.
%bs6%6Q,OUV+^AF7*&V<qBd;D\]*RXaD$18\C">_o]c!B94dnPemt\8>BTmj&]:3<EVG4bedkCNq+LjF=PNQb'N(d'sjrTr84MSfj
%^5*fNU@pjsfAsL0*;(LFZ.[UgaH6sl_@*8+Ib$MSN+0+@ce[&/B;saXh\CE3g.5#/P;#kD^f3&@P@nrZmG?Ug]\_i1\:pLWS+ZZF
%b$q!U(o+HlR4)pp^(r&86(tYgEO2kiV<pOJ25MnsPd\'5^T]:+*)bM_3@[YUmCa6,>NdMQNuQc4d[lLrg6B4a0S>IY421Fd&"164
%GWD;P`/'N3$PPVLe)n)s5`B+93[QSu>qKMR8FP[.T9t<j_8.TE4j(]<lr?T?7J?_QpJ=PeSua>7l^psY:JVQtH&<`ee[^mQ(J^-M
%NIq.-#^LPaMm,/<R+_:V-'BTWC/A7I$HgS^UKc&A%sB2diCV)_MjGL"U,p_$>+)9g<Dmm\[1m:[SYmB"<8XI,oBHXj8H(H\SYRhX
%P%$YWG=e)MJ%8emRcehTdWmcYQMR>$2a;dqIrY<QrsNoDjls,JM\UW:s.)<%@H5$"DLJM\79-C5I\Z.W0iC##"]+fhYH0;'i'UaG
%p9O\oQ1\'=C,6>AI*]$VAZ8nGEk;@70BR&bos:fkHLir7"F!l_1$#-4L3Kekl7E&o.:KR^cGgKVUA(>O5OUL<74/&t*WGl%kKTM?
%)]Dt6H?<jelA;-<UXRGZ=Z'j!<qH%5TISsFqj.\?Y5[P7DdW>TO2T1_Vt5VoJ7fg<4/$L`ns"?b-d@Dpm[g>(crC"4#Nnjc?@6_Y
%bj3fo_Mt`8mpH"j#W/1?V.V16ZXGUqfR-q=47BY,V.tG"D`:FW6[P"Wfi#94hqmI8D"R*ui1Jm(p5fXNJG"7g/P,hV/j4'TP'\Jg
%eCeX0PFV*r%isIFEOgLFYQXB'o#\l2oSYj-`HhIIc-b'_ZCHtoCg#'<4T,@]8F#Y-\5J(8qZ,K](ETYb<O^f5;esQpc5o(GiUcRE
%lXql_J&_C<=!%Ab%@?iSdRpG2fpo1$o&m>j.Mp>[^Nb?[]);L&,6(WEr9&j$?s4^W0?6<5])$..cej6-BBT5'GO`]5"u4LA?"PX;
%bS-\Ya8Z):(_p=sl1O0$mk<4/]3Q,&EphlH>0m@&"Qdl)agIcH=9pD#An!@U!>^9mCM7`?kT1's^\iTE&,jP(c7c$@KYtXGY[gY`
%*aZSXldPb"\%htAiU>*Jo//RMkWd6,Y8Qrio=H[Ahqu2`s8ILsY'o"$[IsOjcblXk042B$HL4o&f%t=oH2%=-8P+"6KsFJ\M\)a`
%pGWub*k@G^mE]n9j4,Aucb3KYZ[$S?2#UjV]m>_(8tiOAT)X&$CSjl+p%Mh7E`ec7r,qiWWhS),:,Os^r4!E0=]N]2WS`#Jp=/F$
%0B#d_]NZ@&1m/>trnQ7d-bnNL^2bIs3$5>qIC-B\jf*TOq>9c]c.^Y>-hl6=>s,SF@c@$-oWEUNS*P:dU.9F:CgYLo]a[#K32&:T
%V(+QS2c\W#mII*sp?Du"Cp3d4i;P<#hl!LAd?<lp'OG@Z4<ioG?P.E,.W<*%/=5Yla&D]^eTWC?HB%%:M][E\JMZD!p@]H1j5\kk
%lc=([h?I7=**Z:.=fd"ms#e!9>q_51]DIS*/H>=\O8%E>UD1E!^kM\_mS(=>PKi:BFc2-gA&QL>hb-%g)g+6"P7L@7_JUpT^\Dd9
%cg#9=^GpB.g0`BCDCrrCg\@oCg:1/Wg:6]oWUrrq<VP4Wo(=hc#2C\#fr^!u<F#29/Z]AEEB*]NeB'd&^$>6Ig6H:&3oT3hcZ$__
%,5=RM/E_3=PBUmtZd*RTn[G:hT+;>\)(b+A4DU:%hYRRkl[@'P.\/7qTK_&m25Ae"R9dq8de.I?]LmI7T3(bMANsND$)?>OL$S8i
%'X+UA*.NHfmFo0nF/kHe2PnZPXZLoXH?DX>qoKdYknfUiI=%Fu$G+c02K'ZgMjjA5EF[jC>[,964Yn;MhS-A[dl!W@lg:0BIsU9k
%%Q`LK+P]-!3X6S0jaTHph=K[5VXGZ!nYN3aN(QJ:po^`JnT(d\`G3ogS)8\H:)I2a#"=Z92H9&>s,8FN59KWGq52N^c^0X%@TMX_
%:N)3koWHf)2X,\>DLVTF``CUfI(4W7iV],5nC2A8f3dG5SJ@%UfW-*f\UJ*%Ep\PsAH7%te=K!^8ip>^'Xs2V,!A]6=T='p\]9jA
%GOs3laH(U;Pj8l$G9BhiosShur\,oVM>Q;rW7f0<R&(3aCXj>!k[hO'<JI1C='>j>q7^uJC%cTfO1Q"PZC)$dip$TM$+0Q)J*-bn
%q6D:DF(OcnYfYFlP@W1+MS&f\j.B!")YNQ_V\c=>8Cdkq?QW/$%nY+FXFT*;0gYs:`</uQcA.+rP[a`<rnO5#qM$CCRCcoe2jSg@
%AjeZ)<a=+e]n$<Td@N\=[(/.nFpO)rq*cIC/#t$8L*!\sT@\;n]L;d]IYEU"ePkdiWnj[&ms>DddMT*(V)C%Z.^#WH7n0D377lT#
%LrefPYUC3a",Vt3%uW2=4+PE9oW[QYi]gFRFF%']&2eo#JB6sHYc(T&loQu6bD=8H,GW`*U4"k6T97Oc`1T0`^*BE%_kOj-GFt#F
%*Q,2g',d?i/Mof/n&X_bYiu'K^W5Yj^pNu%2*ALscr1Yp"m\:4aQW7&-AQ7.&/h#[(@B#Gqi$L%2E\UlaQW9#kbOm)Sg'rY_kMeQ
%m!^.Re&.od#L.FJN)#^j)P5c/A9<-"FB_AlD.I`LElZ)(H]3nY%uV's*COF[p-aFZ77O217<]?8SK8Z>/NgZ6aQR^u3)b'FQH89M
%iRrj?N(taYST:Z@Nf6^DMsa;1:Pas)%uZ<\B`F4Bl![HZFm_IL3^##DcN!i57]2#129)lhaQW9#.$^NC*uY$3F1B19RsFo%pYlMX
%A!(&cDnd4Sk'rmNB6]XjB`MA#(;50^4]'rV%:4qlDDn]T[eQcE]D;)ed<OmO@e!^o3S4Lb\e*-bV7QS>d-Xihh35IaNl?K?\(CN#
%e#/]mhkB"UD.?L&FlrVmOWS3P+.W/pcTcBX/qt22k+tN9dsH0$PC1rndU)YhELb:jYBM']KAMf7kME9&5b=%&UgrlBCE,N)=":`p
%CS)YMq<?M;Qe]pGo"pktnrs"P^Y>MY'*7I#V^n/*kn4l3p=6&MDVf2:rOOMC^Ku0_=6\"7HWXXIH1t,1Kr]g!KAF1h1q1'^[`HM3
%In&0:\%hsS<l/Z+QF0@WHd"Zm'#?^%XHT:-hNZ[aMj>S*`u],(**pkWeb_#Nf09/AH1C>$kJo6j4gdV=m'H>m]j-Yk?ThlPj:c$a
%ebZ=a:f+EEN.W_!3c9D4^V'OE"=(3?XbdciL]r"*OV#^2bAS)/G`-6,\/)`0R;8?5EiiobG3[a)[2:RB`Db8AS,/*(`Ic,VaJhsk
%G3d>HO/eL9>e4^q=Bq;DOnft2P,/a+7siK3k1qgs1qJd$.GQm/cGC+T3)iJ\^``(JR`-WaR?m=Ma'N_;3:)$(j0p>f@HM9PaAbK"
%R@QXaBdCW]fbcmtY/ab+6qdJJ5C(T#Zp!G<KLX?W"_#_YQTr6c6_51nHNr;Qs7=iD)Uc=1o_ubcT/YX)n,)R/raQH0s"sP$b[G_J
%G2;,=kl3Mq4$Ya]*r=3qmJR"Fs'%IqJ`+DGjbr#GY5Q'0oC"?)hgGI]_l!h7pu]SKCMS]$+.duT5HT@1IrXW?HsTnG.fW*>o`@Qe
%?X^@G%fN:cHkHC(r-o4Tk84)8F80qXcVh'W1O0-s?/qAeo+/!Ff&pTsfu?*W>dMrVk\\*gD/c%+r:g^Ji4\2Crtk^HSq$Sa_u@tj
%di?)Ipt:Sfn@M'`QZiu=kENA$/B);V_l$2_/btLFi@TXcZP7ec^jrtlA-`s;U)eeF]+drj*o>sB(N:>LP'>1kr\O\:9:a?N?YYcR
%?Ri*+5ao,9AgqlR=)aV;C#W#H1.TfPJ#e1CZ?TOVS)BW,l]TOs^c!jD9/M:Ip^_WR`i#ZKPNM\1%ZmpU6=([.gA3+^o#YHbV$p-p
%B$JCiXYG?]V8i<@F(FXj[YY*62\&%j<rk7h3O:j>T83DeiYSP=%>WdG3TGTS'Yn"`A8FrlN`iZj[=$D^b:#^n5sE/EPi1<6)[t$t
%g''%L[7`^`LR."eo#;=F)k5i+SI/W`FdftX:_2Dj3092"X<tc\3q$d%QOc*Kbn-8.3Z#u`$?&;OKk\3F>i=!\\H][G5)3'TD=WJJ
%[2%UL@js$aR'0X'h^I,MfOHd1A+HV\SI[nc!Hi67ZbfFm9;]mRD2c?D]LPV9ZqE<cTUh0!'Vd`PnGlYTfGbejI\4a.S&Bg+"g80$
%i?egi;_]rRB+>T3[W/%o0EFQ$%0JDlK<.1665Sl#(g^'1L=<]RbaqMEe_!2HBVE(oOb;C,L$+)K*F4Ob:VQ@bdAt2d*KZ[[C]uF:
%OmfH\EA.\i6I2TXXp3G^f>@t.DN)G"Ad*$4>^t$Y5>H"u.#@9]7J=0ADcH5COJ3bNK6?Z\At\,)1GE@Z+SXAtiD9PV$_F-b"^[=8
%(Nbhi,UGF\I@4P#lGeBC`iIja/0F_F#D`;Bs#1si?T@uY&W&L:WDhBD2R?I=_DYo0c-gBC'PoR4C%0Z#op/K"JNtEp6io9>O&Q.:
%5FTgcRq0c_E6O\+2@QLcJ@pP8StLVgAgq9<b#e^*S'H-nT!)^?N5G0Tk^Z[WD7^"-N_:9p*o*qCABCFSYn^nSOqBZ/ejFt0Nk^m(
%56C/4#3L#Z*hFf02-'p*>o+BG/A=cm'KTDJ`)Y:/Sj<kk1lOSq-L0H8k+40\\$!iKh,WsQKhT^(bM:18_[OchBc.bhlUHCB48k=h
%E+VDE%C/%@M!4CI1la9SZarF8WW3FX1.tB[_8($h&:dn7`O;&<k`Ul%/YDL+*d#,u!IV?#Z8eJG>j[CKZ?5GPj[S37]@=ENXtb1P
%)8)`XoOO=j'(_A.d]<Lq00Om<K?I8nVQGBSL=ODtWP<q'i@s,4L6(2IVH6,`js3VHGnF1^"(H)dV^$W.FHEYBXFRtW/t[d:q:1+G
%-@\)+HJ/]s/!+i=Tp_70)H9M$WBX=g)m2GWZ@]C;H>pX(C>'7>Cl2c?0>+2ECpRU&`3)Uk^kYEd_-N?6XeO&tDWDN/71YGAmk@/`
%@5Z\)O_E!Yg'Tf!nfFrLhACse/>Jq$4SYEU95R&5UHVQV(50h"lG5W@WbKNC[Q7$)2RCGiq6[BNXV(=>[2$?p5rKaB?>Duqc+GY;
%/e,!*b=a&r0<[!OUqkNEp:p]</%>Vpd$;"AOEY_)N@0RTm=frB)W=G:%\is(jI;NG"ltq[KfAcDLP)r,jIoQcMfhFY2)*5E/EE(-
%p$ccuA.493:r@.A,S7BHcc&GBaJd6?e&pC5-A;fJCWd[%WUV3c_)[L:=LN0nGM*62UmU,m9i)_U_h[ffJnK0<@d0!F.?blhZ3A[P
%iJB$\:/k$(*nulY2<u*]0f^.QP)U[r<FL#c"RIq`FFpC8d1J_4o8_5G/VUV7$0G3^(^r!cL2n*B;'<7A/rj@XGcDLkK:0pt7lqr'
%$hZnhQIeq8ASmhf)H&Sq_.C54;QUHsR&j\<1;\cT7>qc+j>As/0b2cKdH2p'7T.]tN6\NVP3N$GD\UbhaUNQ]HZ2/Y)entJ^3(H5
%W?Ti.R!4i[1o0C`s.))W0Xs^Ma%/ZcVSYHt)ZhhHUPlF2)K&q?O_p8#M(Dpk#K<$GPEa`i@q#TmCTrhTZ6'M!(`<aOJWD_X_DQ_t
%!gFR#L,X98(jDZf3hA5cl7`:`)S$="d49I-XJDS"B/])K9F%P*G=E+e-^fsJfV:aj=cH(?DHkS#SmY%?=d+oj2.;I<5r<e"A?^WJ
%PZm4bdBXZn!DV^OSXsC'chAtDTbYFY9X;=fi5q9@YXT%^'OY'2+RdH\E+YKCYb(mW>r^$>&E'DuF>g&6aP`Z4ZR-bs;&d7_Rj4*$
%ajt+ROoALQ5W-((.f"1l'%7>-KI1fF88;(Y%kCj6[WQIuE$iJ_mW(I-&$/Ht$9XEp28#l`e^o+u>:j\7S?%(fK?K;@BmX5>S]@un
%Wp)G;BH#XTk2M\Q/EG)VBZ]uo=X%ZL4Oadj(1os61Ui/&\JehfAN`05N_BK=eW\<Z>OC%>5b?Zl$eiT=c80g;<?1:g9fAT30$#bX
%rMpk<[SQtSc-X@THk!n9.L0=]0[qaMJZIOuH(u.`RBqNkP7A,,9bO#.JnM23q+gl-rHptW(8,p^olpH[c;_L^2[5N,&Pl&NlZ$g$
%_@<jr6>lf`?1r6@!aOPnO$!/#ZAK8sAn;_kK;p%s4?7?D&2LS9SJ+lX6GLC;ZFNZ7#Hi4`Lf7p%if*+J[DO:NA[39_L-/c20h4T;
%kUa!Ee23o*P2@aMZ`.oq(-?%S2k6:%PdH_gS*fdjo:Mt-m+FOi-dBT-?V9Z<:+ikJ_hpqG_[-D$5`3Ek.=*]G="OjkrSRtCYN'=Q
%6*aYq#@6X4(o&[/$2?o_)4IC\qc;'TgI.Yi)0'KjkC'akE1"]^e5Kt8KI$`hX_lb-!qu`k/e`NDfdLWU:nBD--&#:p$h,bu4S^bB
%m223ZDHhY2/'t4Q+0qckFrWumQtB$H]MUR`RX?&9(6gPG=dS>s@\,*L'-u7Id'?]==cdlW1/d`+anlMnJ=PjNjkiRu]*5$!AInQV
%lq$iZYi+/FR1HrA)KaXncT2F74.&&3bZ'Y]"pZEH[<SDZaQpc.eh$euUbg4aVRLA\JR1C#\fG$^;>$Eki;=,+n>tmDK(B#jd0&#I
%=p(=(99R&B5uLrJFLLgcQoVHW#*;hk$r5e?b_fIE*K7^41rTTC:,a^3\VAm.H58b-4N205ZNs\7i\a,]2lUsd];K40G`"*-&N6[W
%jC"#d,G!VjHtnd[[/;LoMOahcHj<s+H<@/\'pUEILhZHlaQ1Rr:Eqe+VjTcD\n6[e4j;!9AnF^gheX/$`p3td>\LGR-3-VgS6%[5
%#K9o[ZgcMmDP4pF<.KL%CW0K82\8n8"%+8>:mOQWm[%tDNYHA$6Af%:%2<Rr$akq[g;()fFS\]Yb;LcZAd+Pm)rC(EEL]T^l_,=t
%CW988F3[9gGQAs'$t3pnYI!F$I(".Mq8.ZS#HtoT*3?0L.!*3%QUL"Y0@ek"S@*'f$?86MT3kX%!u#5-nHMDXO9\/+%upnLaL%4L
%%+A</1Ghe2j.@hPJMChTbJ-[F$>h4J&*1M,3$pO#@-g:AX@:&B'\KZ"#"i`2j[=+L7BuY%RFQU$*#c-"?sRk?>q=hB!+tQM"hg(b
%,+Y;1-f`>XUd+$HS/$J[<ra'h3LO'\P?QkI6,!aS*nc76J*^VWEXkt-S;$HB=Je\hq_VbmG[e6/;jh*?R+69IbKt_%c==I]0-n>f
%L^;05;9*94R!<,W'js3b_#g%!AHp>E,K$jd8MZ\#HH_IZ6%O'#o/19@iIoMpU2I%ufh*<%Ld>O3`#Sj$MQu>-`,]F>L"+ON_VP>M
%;CDQn&+WM!H<UDnUs78fQ"R&C,BFRT,.bt9CZWn<Ca"8L5DJXfC%N6.UQ#q3e"remn1j(3CZQ9%LB;CO@B98!+V:cl!dC^ti+%VJ
%R=VX5SH-"Ucn[;N_O3-sP9L6VB2gV,P-*cJFWs4nEE_1"64QK4Nj>mOisd!]^g)Vufi!i]&>Bec6tk!A3/A"s2r?s>rc"MlO;NNA
%A?;@gMI*J"!ib8qg6QG"Jm53-.*FKkr'#$Yagr,LlNBU`G#eK?q=5k`8&6Ef]b,hC-J_'/R3s8GIq8q[;<a7+PE`b#TG'PHlm@L>
%'<^=<I:S)6RIE?DhpKX.BV`TV@]aR-WtdjIhRhnBB)_6s;4hih)AXJ+/jR,7O]KKI-bZFGmBeEp)W-_a`DIZ!TZf2o,t5=o<0/YW
%UZ#?aDqIgN&/n8hJPt72r&KiKdfTVTL083!X?nuO\k)UY(h8u*KidS2gNTFun>.&XE$)F-1`;!Ho<hI6%5fD5j_p9XI$T=d2mC0r
%,<K)7\8JC3dr<%f"?e)&$O/^L31_9Dji$G?m"rt`r#kR.3gdT1@l(dV0MIDS!;=oa#fB&-=]/>\#F<6&!;`?l.D_JTAu`Wf=D7f?
%9+'uYJXP$fIER)F$kK4'0HA&=!K9a@e[#qjd.Um"%q\3D"YUQ_iXXD"P\@SS42Wki@iC$8`AXag6-.$monLFrq8VP7=uOYWUnV5t
%mK;I,QK%*sUWe+M\W6&&>fu6a,WW9`aVqJYR`KCKB%HbjASQ1t>:,M6'\Eh13D;$F#c?dQ%CNJ9IP\KLok([)edo0AXsQP5a22bR
%&pkPaO@Bp$2\&-b/VS6K#nB]"!J<Xr1(DNfas&Iq4"FdWRA-hDe813Q12<4F/Z]^"i[.(t>*ba#[((])3!acR!W$N(-K3B%+&eq-
%aF>Q'eFgOi.(_YKlc`N?@j58rCPD=`$(PTk*a)k>:cM?qbrhUmVDS^#bMBM1hJ<6=S\[;5(U@ma:<3P+H5PX*c+n]O+p6RPl*OU2
%P+1`_MZ`/&I*q/jeUrYb[&hUeZZ)WF("Y@(-`OtEj[P>oQG)'5F5GjY67=mr2[HfnVXc:9Pstal&ncf-p!2hb=VISQ'7ScZ)2f,s
%j[K0VqF!(\b.H](_Q8B7%B#56mRbgl&]c>h`PY"#Hf%Li%%lr:EG3-M/H]lNb62Xp.WZ_N?Q94bm#[#<1m=<.@#U3Y`"KcuQ>aNL
%=C[lg-+>&%8"pRdN%C)X9A#)cV8A7IOH5eWa=#FOB8;O=glme10upGS[)=:<Z+?`F/'3)TQt\fqHPfBc:;C)S/qs52baucB1Z[JU
%>SK47A;9^p:kiVpR#hDV`FS6)A1XdsK+)f7&&P4do*hFDb7'elBE]/q?^##h5V`KE_f8d&"+rOa"KYKa54H5s'mW4)7-fTL7Mj*(
%:mR'16XhhadGfP=qh%RYT*$]DKn,+P!4s;>S-#20)b#%`No<^Uau%dT%"s:C!ues-b'oO)0atj#MZ_N(VO_4F%.)8"%C*>^gZA61
%5sSFtSA[V>FBTj.9Hbb)@*b\RJ.2ehE(aCD!Xj@BGSJ5`o:7#6%.RY#'0CI>CcbO1a\QZ9Rc&lW49<;km&-N2.'S([)A!rra?I4d
%l*%L$O;q!:C%:9I:q5:4!#n(ukaLc1"`U#_D(::.101]f!_i?a^rH$\Zm!NBZ>_Bg(p<VJ_ouDrr1Lcel3Ac/H%7m!/JnP)SPbe)
%J;IQXi%T9PNQ$cGnaTGX`(ph2::qoJ,,*GHO!'6rl<WDb#:q\m%k+\Kj$>A7=?n#_Qo@KE6R+Wm(4Z`;4]fiA>9YHaVg8s9R2M1:
%'@MiF[7HQs+pVWio8Uo:i?==$&GP_]0LDWl-V6[<2WDg#kJuhJn5up)JGE%4/KpjUH0.gh(M.DqfG+Gm\kJ2#$$OiVOQ'gQ$a##u
%\%k>YZ(?)\A;,-:/8&'PFbgGT*]'P]mppCld%;I-4Iac8!G<k,.@a5):#K6?AZV0_Nu>7N,&?\QI*OM=Ck2.'Ye\s3@[Tq?97Zla
%gW\a"mM3kGO6gqB_."*Jq1F4NUeY^P6KF3DDoJt/.(E_P#7,gJ'^co7406p+&W(Eo.mP-b72RQi'J\>t'(U7=k[9nTHiRe/Kg9Oo
%Nr]D1.*tNU78<SK111H_bSV4dl&MORM!7D1`lR#0C^;<Zi*^K.D4T[;$NXFo+LH1Mc?=SInBVGIjr7mSm=E7?Gi_I2mc:*e0DXK#
%6BE[S45"V0%k6GZZ%5K,h;ihjqt4pS:"RJo=<(cX7ZIm3p@@AP%FC)$RRE?mFThCa!S.mu#>i'@P_l&F45_]k\gW(79dbS"m#]&C
%'bKVq[&05@0E$6l5UUniG?%#@7Gn8J=9+]FgK%c5ND]9eW"#O(!H'aL8+(SXW[,TR,F)1o.SbC_%=&,UbTT8hO'5tS)DD:>CNc7R
%K`qDa@PnbN0j5h(V1jOb&PA^4&m?TA"(PR/VudfH,S^0PpBGS'%cI.P>8cchrE;U40p@#UmKf7,+]cC`A%:-SPG"8cPk\Sp6@(s)
%I+DR;U4@gD8`ZtL!Y($(B'YUu-Pft6K=iQ^0dkRn5)Y%B,540/:Y8r<XUX/3%L^Gg:eR/p)<C+L@(-[g9R[a\H-?"/*!8p1@AF)F
%+N.Q"_2/hBTO:S9"+^Q4N6m0KN8mqC[j7XdP,]M*KnSB\,=4$$78@<'k0UlqJjcJ*Is*_hV#^uuQDb;!PHVZp"MbZLp?W_!Ym7$;
%Uqi-I_"lL%;.MOe@_5rp'Fj<3SU`e?]Sm;Nj[)j6\tP?-&nht!G+kNOEFp`;)a3u7/kc8!+0c<T,@P!R1U'+g3/<c5#!PZ[A!qm2
%$1ogg![WF'iBjWL,0,>b8h!ladB=m$.7S%f&<*rA%N3PhQj0AlbRdXPOZ4r9@g`FGl8iaSFQs&s_?L.3(n:?uSFe-n:+,R."b\l@
%pqgPCO2WmGaT@-,?Q_u#=rEQMd&I.fn46;5Ld@9$&Bl[6!F]VI9jX0GXmg^rMuDP=>utP;HR>uS`*NrCrJ%QoiPT'Nf"sYRT8O6i
%P.Ql[):M1^[VWfh(V\97ZE7bM=sSI9K(Gs\C^nuoGF,KT1+)4^7<ZrV&!f%XYg#X)&cfD4\Z%s7[hAlLnq&"\:@-tsU*l%hOl5SL
%#1*V#<^;D2PFrbQc8Ie+V?)f*TI7=fi-Sa;SHce].Rcu9U6e!MBLpOIN;?T%J=A/B7+?r<i[c$W<u+%eDGZn4JTA[&(XbT)'2m5k
%'7QP^F.ea$\0fA//-DYp/im$T'@P.(i!SI:NX'hJN[YasNGZcs6t(][bol<M:>h/L`e7A@dA']ZSk&MgFAacW))o10!R.QfX5)J<
%N0EF<Je6'3=R2de,k`Nm$f3`b_`Oi@9-+;5!3IbT.Y=iDrJ)(FbWulS31XkE1=JKSKP3[@fTu*ML^ZL$gtAq<M9)lZb+(Pb.O#bL
%b:SRZ0NWr'D3/NRq9Td7N#+t?Eqg!pR8"oP:l$E>#h0+0LpLV:FZ!Z#!`[+o`>$*YniWQZ1c%l]!=>o$H,k1u"H5C-f?LN6'kfs!
%JU"mblXX=RPfoB;_lUDg_GriAbe,BoOTbcA/r7OaLZ!iO>G5FmnC<dpE#2OIZbjC!>EoX*)b3M^Q+qOBn<=>W*M5<U4^hb*D@+UU
%c$,7<AAYcYZ!]>.Dj=oiEnUFI,[!4&&$Pf392UuT+f_%)9soTrBflqAAHs5;D]uO":3"Xb@m7(Rhe^bKrlt\`Ggilrb.n_0b6$d0
%Z&gu*R$&K<>mo1SogqV4lVe*UEBZjn5d!G*(.A`5/8:OaWiPSK\;`g,01YF5QG@Z$oepbO!9'<>ePNt9B19UdA?CPui7Jg8;,2\6
%]gFLR;%"e*T2<EPY,#IE+E@bVL^2A)_E<&c$D\VJQj4HQ)%dJ>&@k/iXgEb;@)(o@fhU^\@71N*lZo.B`K"gUUjEZh89I=N+e6c>
%PsXbXM*0Q'V9TZmH$44S/<)4lGf)PZc9q?f4+_.H,6\*Z8?Klq!"Z?M4#-T%.Vt]d6RtDll0&8/cLtjj@Pc\A(;?]fk/e7j.^2dF
%cZ&:gIET4Yl>k,54d605L)(M!SbS:7D]/9e%C19;1Oq5G.#.rV6qd`NP=U0_NL3pR9Hc>AKX+#7)dthRWCn#8EKIg_80G>l1BAA:
%YE:VtJb_ir'ZXaq/!m]@Cb-IjR]&\`(4.Vh7*i,?Ca.%=fgL@&?!Jj2<F6B/dh?E8;%:pSWO.F.U-V-XFROlVE6$Jm#&t_HiQR_'
%YolFY@M0aM3!_bQ!H#%7CO?;p^L]k8nWJ,"31]2s_VPg?e^QA[rA57306&<h_dfa+[?7<jR=DS[`W4Yq0Qq8?$<,+<3iFqWU+=@c
%ij)4r"YtgeJfl<CZe@`+(dT[]iILAV64'KX73f[+1c/-*5$_%Q&;/o:(\i)SA7O?S2*iUHX;Un9=U%K83>@+E*L(G5R5[cTB-Ic7
%Z'b$V/kF\eh@.T/]ZR0oqk3To%E0;Hjag#Yfi`oo4n0ohNlGc#FgRYuK9POt5=<UrG#nKMi,`2U8G#+;NZ\`$X9LaYm3ug9;?]F)
%@'U+^=X%QM&Ji?hUO!RDk'"_a&L`E6^e$Y4%3cqc/^m.Z22a>[+J4KcOA@9?"QCbOQMq:?lo@i&>%D?U!jjKcOa\-(*>M*NC]rnl
%0qPcp:C2!'C*ZXiI*6NT)cDYfa;\nNS;^3W8%]%`8gT=eAgY;/(8\`;Yh"+p/g_LARV1!U;INrjYX0C@-?m\LnN(F#dA\cDJ,ien
%Ciah7Ye\spr`WsW&k9r^ZWn>8-T*n4+Ict9i@Pj*+N2Jq!C0-8`(YiISQ2?E'?:n.c(G3PnQtqV3_A+^C+HRQ<qL5>rD03AVCPsT
%g]>,6pf]1@JE&5I'5dBM"Ps9e-u:At9$sc$&a(^WZ;ANc)-uGC+uTqpO*1oGSEB_.4<:J(aKT)C3KRrWLIKKCV\rrSj9u\QX'?C8
%c*gB1TcD,.k[#Oo?6DF/!.f(?#Xu0m'e,KoE'bZn4ii=I_P&;eWM,*bBf[-bFTm[_4rG7upe3W9<?J%(FGD6l5p;@UiHa,r/tQ)g
%17U0He2npf>QMQ2/#c&\!o^n/b9o3fORghWs278.,9W4fd<[m=nfO`:;<BpY?mbn2_+>Y$3gKl=-nI5AI12.([=_^8"Gunp_a-+Y
%R7XfK7tmJ72_t`q`5mscc49641[c>1fPRTP+9_E8AiA$B=/7CQQMm@/#5'Bde/SR9];EN;0NKan%LF$<4@n=cDcDm6)G7:/@N[Uh
%(2!]?0s@1n^a_qZk;?_m##=jnd#*#g#(9+Wa2ULtl2Q_V6]Ck#M+?8ISm`$8KikRjaN5VDh+8"(@@g$F)]jFtYCXZT5%p(7Y!,e:
%c^]SQc@;`>D+p1AUo\[=a(47@jd`XQDE&@5WQJQ#>4a,3"qEH'3>(UaP::?XY;(>V"fFqQ^:4Rq'H+fth[<*!ZVhG:Z<Jk17kjOn
%Og(ZtMpVO:K)LUXpOa-W)eWR%-3<UDfWt^RMnSfH3\+^2KZLANN^0A6-mcPu0fHn:W<f2&V(DQjFjmeYR1$M1KEU@dMR&RePpGXL
%[PF@V.W^n4BKaPs2'46AcjMP5!(T+"dlW$"l.$f?"ANk<+;IqFGiGecdKqoE!V*t.\9"V]KblK%)t==]VkB4^-khLOCI4*cWdIF4
%1?4?@qP:pC#hXg-(%Q%f1*7-,:[6<-PX6R9k,i[@*.&m,TCddgX0d[AX0N4Z>H@RTWA+:l$sY,5H9P6?5WkO(8L/XRj@b+3$B9#t
%,,P$WEgT-B4\6lWl8;r[.n"1iWWco`-o0L4cBK.ST+utD'$WhsLMKtQ]Gb)-'8]@WP?Ps"L'oXpN2T#k0L7];OS'A\^7TMF+L`>s
%4rb(P[Zp%>opR_.B!aX$Jq5n9N]76Z;^#h_'p8JJ!]a/XOsIP[_FETeMRnhX'*j%4r!k3'gYdu]1F.Z@,onNlXu\n3Rkq`,?sDVY
%kao`c8e"5E8@&cpR<+0?;T+3(Ht9k0b$L7$'R1?\j+T^[Z_]c(e)F2G>49=bTuot?4=XV6K\2Es3an7m=q`A1fJeZ8'dkk69e*D7
%aJtPZEe[dGnXrVahZ7ORUE@;0K+p_9AR8t>*)B)tP[tiPk[Ue.PuP"pODp(SJA*V5"OiXh<C^Ba.%B_U-\uuj9G0VkWR^5m[ALIN
%ZRmh%EfO)naYb%`OfXa?'#<-ZU3o@-\WI!7S<3d"Z;<fk:5Y2Ke;@InKRP<%6PT!iB'>UQ%'+"42-'jY1lZ!tfRkCZ#83T>;O:&G
%egapN"ZRe4!80gb=A0(nQ!:Pfeiq/9EtUOY\o,EU-lYZG,$]5?=u)Gp\RLkeO5.p5776[+Q30r3<9f()X92VM7d>s_Upd\"\g00K
%3p^hT!,addVB]Z?Z]$;Kg*fl))0;5foHf@2JaLjWAYA/?0go#/U0HDMD.losRlI.oJW$kCK?9KT,:crF4(HmRW#hniA>L=RfpX6[
%EEE\Ri@^C7-O1k.#BHLK_btk3Orq(_NJ^(c_tgJF>4&^;>I%L%L<g]WE+;LM$Yg7JG$IgYiO3@u9*YX,`12)&-ioEWRAS+ACIjM+
%&hHW60S<<4Q,&:<ToUFkTEaXZ61PYf6r9&d,g"A(SD3]#@bqe(BM2^NEM=^eZhQbq7mfHOV[6_/ZV+1l)13lu[uGF)X:V<B:$#&p
%7li7MTc'T[4NmC9PQ\udYt,(X-0#'lK400:8H;HXaEh8@0.ETSDgo)d&eoq<@r_Wi+lAs3!!MB(G=N,5S-#h06J#S$CmiH'LP?O"
%qAADK@a_&,:kAq+)q1!3Rr/5[IYP[ZGrKk#q1J'<cq7Bm12u9:FM,<bq&T.?4`tM[(:YsMhbNBcleVSc2gbR/s,+ks5MZ2Q]c%;\
%M$Ht%^IA0UL,0N2BdcU`9%\8..$)T4!*`u+L``^RU[:h-\Kc<JXl3#rJGRU"IJ;?BD$A!:,A^kh,?*.k'o!c7%r""[Kr]OlF#?eF
%[`L<R*7:.(39I,9GQV`=-V7K1'Zies$8?S?+%"tkSZE^j9Vh-mZ\DpD`Wd_3dVXV!Zr3)*i;iL;j>RcgMA:)ORhM<c(N)lo'0=fD
%(UOW#4tXm[Tk0kkL;I.Il3P?_"42*?(i<$ebcTGF^f=]R-J,'@.t[B:a>Z^:KW@Zmfp^#99+4kGC*9@-l,3ouB-9%RdYW<q<a;UY
%@.cAWUD)qAV%k-!9IU/!3Ju`6"aQ>r:f#N$$m,4L"dHEs((t5_C:%pfGb)C#)s@d69ThFLH:SD&WjE';\69-Mn9`P@nfJbIq,W&f
%USJ=E-gG9KaGkSAdEi[1=fMK>$W82>_h*J773RuGDicsnD!7!=Z4QDWMdLVEPM7"2X.P\U"?JhpUVp3*:c![T$@G5"OUCUC8[r?L
%aQEcClJr:WM/Zr=N!`Fr+6@8<[\LcAJ:cC+d!Ad02_)==T&eUF3)q:B\WM`^!h_'Pi96Ubj&=lNO(L#:+aE9JXQ-ZQ^tYOGk;+9S
%T*.j(f/&Ioa_<>8d)!^=mPk<,-AZTDL/[%CLJZpKV>Fn5/$YuUE?&l:W^,^-cm$$TCGckS!-\dPB'k/TKN4R.i0L*4H<84R`9mHC
%12D5]#Y)NFV%V(I=bR`!#"n_d(gAafN[a"p*fLA#a$9cX\.Eue$mfdTKZB*p<rrTo$j]db.0dU$lLmL15co2bjR,=h9b(mPg).8P
%$_Ma)+Z/Y9"f9WOJ3,1_Kek2L_]eGM3.OGmEjl)pe\*F/AL(@bSg=EWD?/HkS/\4dmW:/0lb*:HjD%I17&qP*IX6np$mk(K.>J?*
%:(OZqI$E<12\,SP?TA/D8J"ZH&8PdZCIP?4P`6C*Xp::d:eb-2BE>0g>bod(?nHY$\Q<TtInQ;i6[7eT'KtWV!gYfE!j.%n3rmDX
%#-%,5$q?gb9I$mp5[$Jt"GM3i+&bsn0#r?DX#1/ZAgluI`qC@PAf\d@qUI8ij-&2BK,-+EU[Z*n&)]#egX8E_)]iP)ki&KcWYT%^
%)k<^0D)H)<XH'uGbE=eRi$P--9P9[;Tn"uBOn8no@#n.<7m4:s\=RgOCTF4p7pU2J<3aZL&blpB"1Y'*4^<RVieeYYFE%_oe<.3J
%,D^1^2dh0g)H\5mLSLNm-sdkg94D$i.^"c<JH7GcR5jdOMNegJi"[mI:e0,`YiFlHpfJL5&;2)Il@uLXaM'G[I!RKX+E9LaTp1:Y
%a!.-^NY$$0EtqN;"j\jFbA&_uAg>eO2?*[1L058&j(\L3"Wtn+$4c[OH9&Ln3rqCAqX.-XJX]7AI.Hs_StrAha67?IDTbO%7(H=!
%,'@Z8mNgPN1`1+IMs_R$fhg:-8jb/F:#0;q\:\`X\477E%sg#9Cg;Im4a_LY4WO"YEWiA8B(6Z5-\lZF[]ZT\S%:UQ8\B\lrJh?!
%98>c8_s0-nS(J(WV$&q:gsN4&21!GmE!t&didlF(L;7;9lUQNIAM78di7,4ab$[lMK/LVW19seJaP4-9I3&foTXN3pdLse+KE;i]
%@4=&rE"Wd6%B\RD2-g%cjAGZ[!gFR!E&)t8_H[aChb'JY/tmspHn%s)5_GSMA8EXD(78*J@LRhEon_tnLpq@>Xjrq`r03pLgB1T<
%.9KD#2;O1r@3=3leaZfl-8WgEW,U@cOhn![$c7TLP@t,prX@m:CUfW4(TLjOEihZ,BT1\3'OW)^L@Uc<K1Y0""!2:CeJH]P$8M@R
%Fi0n9OeZ/L<],1H2Ff''ej3K^&/ha&.X5m25^bQu<;XI-WErX,H'.k`2emVgJPr"G0Pq=?(dL63.%LT^;+pei<<BX:g/'j)qksad
%*ETSuYY$m9@r4om7H$L9Ro75OANJrU4]WJ98L+T2m.%91M7]+VW^fkC(5^YWf]>7YcRap=rTEI:lI$@nS"dWM27<YDk_)!I1XK'6
%K?P4fN<@9@=Oe8l?D2-KhR&H.:d.t09j*qe=!qL'cj#ije#+>R^4UjD2$1g0BoHe.4_=oVL(`'2"_Z>.?LO1Zg=8GKSDq3HMHHOh
%g_b`X$cIiWV0l$>4kQaL<k$c@:*'q!CacB>/<X$Q2j!IF-'\csnOAcIM5_WhJ>;3XkD]]N)PctaOODS,0d>(*W>=2UnejjNRA?:'
%FSJ.&88N^X`>GbRN2V@B^509I"YGkKJ=iDI"dqHZ`mVqoZqL+?TISSe7m*^+92l(m,"iJs9=eM@b2C&M!L/C<Cpo)i[.19N'ZC1U
%F`Kl?A.;'O7J,uFn/q5uUmW1O.'=7S=q`A`q\coV(R]"X7YaPL\]GVY[ukJFAA'fpdG&Au]"hU&LGHB!"djUD/&5&r6iIGD-\-AX
%kl<r,oZ0<J#q%IC>7nC\%2.BhFsV_6JEmUq17lGO6TL.edcCIY'VOUlD3X8'_BR@*SO95%G)MNo(:AWoU/l)%J16RU,p=#@W<r$L
%JAM7^,-%aZUSQJX@r"'^JT"[`VJN5$:\/p:._;KHe#9J4e3nULJt1a%PQYbld\`3G]&Lp7=QaPs$3<UZ(3sT`)(*K[U.L?a>lhD[
%H<O8q8@B2("Km!%3^Ca$7^Qc:nU4AkqH*4q>e!It4,[QujCE4K;9`6:M;@rmpV!il;9MIF6a?o/;N[P:n#nQ]UELrqij=r>JoWfp
%:^/n"k8AfP.*DlWdt]_6#StH?dH2R7J7da$k_tRfB@cZd9^*`m%9J@H,5kG;O2_0qkm]*fEW/jEL@,;D;+`RuHA=O"./c$QPo72W
%D=?eJgA(l:SU;UM[<t]%=I[*$GO-K8:o7FJXs,a'L88dGkb*Gd,C>5XdNK)Wm/UrWETV#1Y,N=16Um[mhO:Os8HKa>AHl%Xd3e^`
%%Lt)J>P.VHlDBYXTL>u%.Mj0%>ZhALccG-&UICHo<cM+rqA7T!%1PHK/W=ui412X%[n9<COk!Ms'UAsESRRJN#n2H^D[nA$<FE8:
%oTV%o9RKL0ZI8:RIO"\$\Q<Of-1+<hJL:#d63;M#Q*nJuWOtg3+FR@SWllh1!8:9H1kL=M\>tS$%>RNGAJ5>72ES-E=&%&H]o(?p
%UgkF36N@G7lNu`AP6k]5.^t;q3mpFbl]`8JSKSh&M'*q_(JJV=X_.&se2;45/PYO7fLhJtLiqhrPjDFq44O<7UBfI%)Hq"h"^mK7
%[HIX"AIYb]Z!W.Ua\AAuLIBF.-R"qp(ZEQ*pc-DKfj;(BHL-VZ+)(d?b"gjWUebu_.0Z#31p!)imE]pgIRJc+5d'hKSKe8RHIgkb
%;gQSI&%[L]IFF%AjV4?o6BBiF<+mrLN`4V!k=KS[\l2LI'`A%a^DgMl6c3cs!LJ7rKQEEkQEtl#F?$3kGH,F/MWRrL1deVRkDdW8
%-E2pEEt]i*oFrdiVDQl%_$,mk__2"Y1.0tp?mJ72l;Fu`P22BOPsNk<3T/Du_Y1Kb&!.0YZcnLjop$HOQbgu=@-EM@@O%tVpXR0p
%aoW$SLRdc-DoWSo8DZm<EQfF6&g]amX`ktA3a93^*VUtYN"3DRBI:PV#a2a#qIcYf&g`5'LC=]&OI>o5!/?Vo$]E/NM<`G_'?+(8
%W>CTPG6#uMc?15dDN>)<kd>`#Om$/h3f\!CP:@j]/39Im`fTp7<B.tUWrRZJ0e.k\'l^nVd</Wbarpn!IU-/PTGJ2Sc([ZPqF5Z>
%/IA4bWE&Bf!D>I/_1eA3ii\pZB0oFf.o@=fG9ERn[\(At+k@nj>nO>TJdsCU/s.MX+56;@>*lXSY1*@?b9qCCK@L6e@oc@[\#<dB
%\o8*?p$1u[NL#PR-j4Bbe9F_1LVho9.^[_39pWio>4,rOE\KOW)"^nPcN`u71%e_L8Ld)2=&=VV/49hf6E)BVPb"5>fZtBb7.$iJ
%OF/VeiH;scE.f.qn63l3[#b`)@jSc7eMgkL@WiBT(u7e4PffS,^qB7RK"-lQC,!;^_"@[=3@\;qD4*[VelN.J6E%>M'64P!Jrq&F
%Lhrhe;X^6T(XJ?hI->[[6'rJ2mke&\jnbWkNpj![`^TP[MqI:tOaH_a[O"+`O'6s#\okuRV/cWkqm$8UqZeYe8e9\cP#,Pe-$7oj
%T"ZP//!T<uAsI`FC5K#q&\>*/);7iB6m":Z3XHrb,D?onK[;6UG]1,i:"^;C&`B1f9AN=2_FoJocX-0BE9phBLKsT!'h3_R'OD&#
%J;i4S,@>dql1]p2"]=@cIBWConEXb<4/:1S)qE0jAo.ZeagFAl;=LR:M]F[IA6[0U?CX$W%.8_mg0(hj3n(O&#cGoGQJSVraq)!B
%)6?eGVCbfib-G::0Fff"n'MJE*N-sJ;Udj#nf]KVLoD!5G&9H2ME87?_UMC&bbd;_fN*N-gHoe/BSpb"Yf@a$>:F&K8JcLW@tQFK
%q?k35)L@=Bs7:sIT#d(Y!b/2&V>'C,F1fnK[8p#Nf'$=QKWnL^fLV/@=`9NNdTEZekB$,\EAU$t.Kd_LV+sHMrSRa8'eCi=37ofc
%]!>XHCnYZf)29$sm`*$b^(i+qlV4ah<B*3DbC_5LMHkL4!p,!o,CfgNn#AX`(DGQ$6B'c*)=2cSKBK-P0gk2m:R"NLA1BIJ#'oR'
%LoJqg/-Xn_^=FoM1m[%P#$dbsYZ):3f.Rm!F6$*!<pB$?mJJ)F6bPt]aqEJZfXl/[;Q%<pVI(-p$m:8Y1:E)J[%R`Y!d)s$6*EC8
%<AnR%@kD]Z!X`6e6sJM>,hJ.!0sZqpDiGQj3WXD%U"q\2'"R=%/08e4'R&E,o8b',=cPshh9&"IP_+H\EAmtPhC!X55R43a.CpB)
%63+Wp(bMG=Ubp&jCddATCF3r"P,Q'L^uR,"VtV&68>>6CDF0[TNjq?&@m@Pi5*DEBamX2Bpp5f'',%^OCa;mRM2^i3p&[[^g^Sds
%>e,V'<>*msE-X5DbA.VNQq/:[FFg7hf#<\>Te%Q+(H2('fd8O8@4-[:pZ"^n3:W.gA0/1bfP!p83Q`puAhZqX50%ehBICfj+XtO&
%C](/m<0c.kn2"A"-/@c^aZW,(S1T6:?5*B4[k8j.rYRauKkqY[O@3)"f/+,fH.Hrrh5a6r`g2l^S<&gBWnt?iOC6%@+unogJ;5m<
%q#]jraR"S12<c&tL6F#g7L*SO*uPp*^B-"1$$j%Z*SP1FCdepWg*f@hM:iG-6HqpfKNm4[mEUd/gtr1YI9$X<3]Mu&==#9Wh#co:
%p4-hU*DRh&+RZb^2r0YbNm^dE<af2u$+G%_21sj;D/QX/@iKl6%5?)P-QmcUW-#,nn9F#S$UqR1Qd<.kf'b#$Q0M@q%^2(YGR(-R
%Ji&h3L..(F^H6oT;'f@4cn;/N=.,fWUP5,&E)kL[!#mP%V^PZJKb[@'d1Q%j<ELsEm6\@sjKg^C,>Vt'5Oj9,B^D4Fe,WAkfaWta
%0pmZm+a$6YMQ(0KWh0FH2'qu9E-=oC+G2[4J8Fl\#da>`L)QoZ)iY6$Z%a\:#n[2jR/=&sc6'F+1MI4b:Pa(a!!EE"PoX\mZ5HDc
%n6Fr@8Xmn$h`O>%b8m_d91#BrQ6\l`9F6ZOLR-j&ScAL6&J\aI2H$QR!aRLcXq:8_%;`oN9rIZiPmfKgD([]Ilp?c)Cm/Y1dn.MA
%G\W=">S9c_(l:K)/j^X,LVfn8ekUH:f%+R1e+3sKfNL+X01.-C&`f%,kt8IJONq0Ee6$b7)$%31!.qo@<IZ+/("6i)4Fg<,3/Bj^
%V8pY/co>:c:CoP/"u&+J(oW&(E6!/,ZCM,+&]t6;"Wk92=@J250r+_r/>:BI#[C_&>Y+'cF%f/QnkfMQ=hLIBB%O3d?:>eI@EdMg
%=PTi;CHYn"#2'`n8?SiNFCSd'N<627#9M=$"fSsfOl[>1F*VqgP3RZ(?b7_)5P[W=#VaC!K.5P)4ZC@$_p$omSbaXu9fNHIUT>s&
%m/Qc@<b^J;o`ak>,82bt"3e04>X)S%2^:9u:',<9LG2]?We;maNjI$0X)$[GkZcq*RC3\L3&3h1].N%3_A\P@SMW%WR4=iLnse]r
%qQh.g$uiZZFOWTLSgO[tL9sD7[*pIA,<$JB&8AN_Fg/S=MFTR@:JF:[r/S\]ZjCm``/\1\h,N/d*3b6qm5oii+++/$M6*3actb/M
%5W'+)*dX/Q(f$;n4bJ>n9iI/!Lm7q`S[KZ&b5820R^9-e0rl'-2,lFg\0MQ)kS'@)<RMn>e;[:rAZn8u\b$Y&%Qr)@W`QQEn]V!Y
%b'p-MB3kd`,95_)X_..3r"(*';!Q4,<`1p@'c5\V'CfpC?SX**Vkb$66OdUuEoTd7/<R^mp%-PtZ9CW8<%Y%Ar<2%?:2&6P^^E`U
%*$;!u*%^D);d$([(k("h;C7A:,R0,&+b,[X-:k@T]cneDa%pI0>3D!97b'[3E`77>M9;rj-?U5%;hF`!'Rr$WX_QtgRMl3t_BdtK
%=BC$DlR-Aao8MmN+e)k=5_RA,r`]jq)&XBGeI=Im8I*M<-)1aaCg5RpgD0UCi/LU2b@,EYcOhQQAm-H^X0C"XPc=jG=%!H,L8C\T
%UQME<oO_nR!Rpo)\44'5;_dI:,i'XIS<E;ABrU'?mkBbq0s@e_DSCt46=Y+_<LSc)BrHNLLa_06$4!-LO',g:O=/[o<oNI<gMI#L
%WU&e$9&q$1[jB/KC$p\ASr1%**&'^thO@>IIqIueh.Xsu$_7JtL"M3%N<X%lF@f)Rp)9\?iJ@l2)Z(.Y,@Js((d3O#9@."MjCiRS
%rMUI=\05A.5e'"P+^]\HJ*F,"c7OT?,`U5^2,L67dMH"SjFM!fWOb96"?:*D/-RJaKo*UZ6%hcgSCPu=/"Z?F\kiILGj?T!JNGMc
%WY^F#J?AHSJd[00,64k1NIAH)<oCERIG?H3JPi>QNh)d685$#mAa3qtT<i!<iaK2rJ6!+D6Z(P%g>:J;1$'^&.0cPZQQoQ?<sS=o
%Nk:=+kriuJ7(KV#lTIm?2^lnRMcQ/]MT%+mmpqo.;]k:(h-5VI=jb<MM8bWQSA5/(g_ON&GOe>tChMKIM0httClE[_Ueq?k@;F@9
%'%f\_FW9/7MG#60PL]/p&WgMJ!4&+:a$H?S6R#TSAe\Wh'rEJ6Ic+^)'XsXuQ;K]U6*rUMo_q%h$]al3WcX)t3VY@^EK\U?1.&o`
%EkRWsIeZKF@Hn3oM>ZdTUo0uI!i)bP.@-n\fWA.jg2R<#V=nuE'"*0cKjk/o"[dNKLu4VrKFG'@<WbiaO=7!hbSAq*Q91ib(6,Qo
%6QPMrNQQl"+,)M4K1':&?tfIZrCYEAb%it;Moeg3<'j[W'K1IN5=c7ofgm_QSpi:Hm@\ms!H068fY?>MqhCU&,9dmb?!QFq#n\\p
%qKNV1.Bm;5QGsg;*4MZ;#8+VS_FB1`+rdB.^iUL^!aJXP!G'e12'VKG"5et\0l[;K<Lpsl4G@8>?j<0P>lk.m"Jit"PZ:.>YaUV\
%[.??LfJJAedi<)2A2IafmJ_DoZ@b95ifYrJ*Wb:<+n^[-RfV^.8\gMGMsIVZ($X;YHBu:@S7GPcYn4"Vql.-hAksYBS5<`Y&[:ki
%(F",\J4X8mcdbMBUG;7J>`#a!AZWOo8`AT0<_u`TAjrSVpaBPUHJ;eo`(uY+a\i:ZaS@DQ0<P7JBe_m1l[&JT=/+"b5QKk7Z4t"g
%h[*WFf#4B0`NDF7DWli^I+/J6EgC93Gq'0XrUN2fI>b^u")$uYV/8)YLa*sDS0L8KS*5R=rbu*n`$DIIEP,Tg`u7n%S=a@de>0%8
%TQ<Rim1QW)iHLaP+YC`J<F4)$V#HrGG0cc>`.q*+C?FZ1/e).9aZ)9`Qmr8n8Q,oe"^.A*e!!eR5#);FKg6T^EmnJd+b1MgPr=Vl
%%pi\('"Oc,o#7$40AfY=PhW?>eO,K+I.Sm.)YU`hWphUl($rhRr_Y5T0u&uH0=3]]7s%Iectr5HRiq)c.#)NULP9WCXT7IJT*a9>
%=ZZEO[SfWR8kKaJJ$r+ck+IipTFp(6D2\!0LiXK\,_X;jUTZ9MHYbP!>C?ILiZRIA=SIB[gP8B021SZ$gEuU#7(-c:a!Pq'-2#=r
%?b.a)HL=bf7@i'eE<!.>Lirse)]S4[Vidp=\3lFr-b<<j'OiL7(;_O,*l!Mo6Xu3CnjLI34N^<8(j0E/SD)!Mr-C1.^=FA<K#CO7
%/3EK#-jqa:Q,'2HS)%iUBNqD_2Oa5K]41",mPJ(m-o6F<g1g[p12:r$G)K1hVU>eOE,M@:E*ifjO*Uf<<lmB?r>(e;]uu18_/]c/
%eZcQ+"#2(C=9+F')rRZcWU:>L,XXJXT__n4959^=9?<0s+VR>6I.@RMbN"Op0?5NU7S;<RC,u/\H'F5\R_]r.9n=$7RNZFOC18-N
%J<H$bjP0B#,'u!u<pm5h8qpBU>Lk)hF5VJ\GC*bMT_ZZ7X+QD-4EgR#df`k.XN2rr;jN@FNLn?<5NGQjh\F&C;22-F:g!5Rbf.Xe
%M?gZA3f2ElS\[`0Yq<^q8O/-+;b^0O)fVkh;=8@2Q!EoP-u*UMaVjp4.OoH91(<j8Fui[b4`j/+$__k]S??]Ys+i$"7@f>U[kojW
%,KY8M$]OGggX,UL32]k4d^t,A.ER:';D(9`U$67?NOZQ;+Xl.2/n.\AUZB8LGhC/)p03_1%r7,M>7s0/6<c&W8Z$5!2%6FW-PS]'
%A]-@4VJUZA^cAj6nI.u;LX^<1#1CrB#J!hFZ7Cm;N$[mh8Ibn1Dj*+7M:(1!>?LIfG#"@M7UQ'HaI$kAN5S;$$:*n=6U45Y[hRlO
%$78hKi4N.$,W8eYb,n]&V6Yb,BFPXnj^eY\0*=1XHf\`):eIc&(7_JKqf5*SHls;t\'lq]aGDY(Dl;.HVFt6:iDNZ?cV:T'kq)(J
%%5jM#?rrH:`2)X3WA%>f]r'QfH)q!2$7JgGO=M(5NE:m+ZE:<Cn?QPAU;]b2;KZT!nRM/(*^i\qXjCIsJ&ZHjb2CbuYX\fi9H^"3
%*0OY!L6/RuMluC@Hsp*!>'$/b1Kd'I0@d'83g\]B!EPAg_%bC$O`'gNDTQPVXXVF(e8dSgQUK3%`],R$ME4,fNQtpK2+)0?goZ58
%narfEe[AB)6K(ur"0"bs6s@-P.)@3)MPfZBkU-N:j*/)5*t8@]'dlONPnq7jXu^%T]Z0"qpY\Pdad*3G?pu;t#IQrbIA;oM,Lm)+
%!um(@[C.NhD"2D\robAfJ_r>Zf5aU-.Bog^2Ok4Bfgdb'0_O+.<$\D&&0+h#=OP8cA"udQJqG+-<!T8?M>WnrKmTf@K@;HQ-dS-t
%1%1#:eCmZ:hj@lS_$b"Pn=hh:i^YSQ]i7/A"/_XEXO,VBO6Sdf0s:&Tb`IKW)K-"FS'peIODV`:l*NuF%AOe'/FqK68EtF>_8C#Y
%1<9ULNXH:YYbUQF3Bi"Y#M[7r!d$_Z]h*,'*>;m3dSb]]Ap";f25,lcY/#H]qQU%LiJG``rP.)1f4oZfr;Z$l\M!lBMmIWKFg$&f
%s2,jt*?'fNGd_OPRrp-`G[&!%W-r-M5%$5NVG`B#_l8:p)-*:uiUBan`TfZhosQGF)tq<pQ8kg)4OP>'6$mQbA.F9h`kGIS?'Xd,
%_kE^?9D`E;9J9,<_u)A-ku=btpmFRL-)DI/44R[Y3a+MfWG'\J:hE2-Z4SX/-5p9S_jhJ(/Q*ZW>6-Z1TAC"$EIkp`[/d*n%b?rK
%7UDUDOoVn`n74?m@-!_IMgB@8XZ,TsWg>/"@YG:f*"3'j-sW"oC(`X_a;N]rW6%i)otWt\Yp*Y(3-@>Plc+p(G[UEEru@Rk>NPh;
%$BSmia!+Pb'Y[GK7lfkb*0`BiLEER*['3R/F'G1(LlH;2JIPZe!Tl?P"*DS_$PO"g[>oH>fp7%NM&s0Col0H4KfVS1/'likrn[nm
%a!?o*C)mlni]?OMj[%Xp1VE+s6QY_`U`7J9`\o?pcFDLpeCMTlS#nD!(V\?*kr)A-2bkBpO%+XEA6.WBbWNELlUa-^8qJ"0D#gUH
%XhY>;D2c8?U#c2g7),6W27rqm'Vlpa;eI6J7Kr5f.ghKuN[pn*Cca3Wj4:2O5>r(A`"tM;%48R77ZVd7SUqJXF:ua=(03L$.kd$D
%+6O-Y@3"/#Lti"9mi6"fmM\i'GI/#G(da(1e<,\3cN18Hph^$e6gU=B>7Lj))_>h.FkRlbCKT+)'M_H!.us,WK^!$1P\oe/DAlf%
%?l^YR@K\(Wa>/i7e=,nb6Z>%I1:TW[7$krt&Is@E3ib'dE-WOYJD=#UdKAjA"A6?N6e?+fNC/2Acb8oi=ZRK_/_A$FPbk2`g]_Hl
%!B<S"#tT=W!#j-/*!36+TKWMU2O*;Mm]hZON25c^PQP!;"_HO!i.><RhZp?,UTd.;1&usWpOdJ.m/<ibCKA&,eu+RfLG/a(mnJL-
%nA)FH2%e8@%q^K("XmU>ah&JH?\E1J)G"XGh<$VT[L%"-8gM&o34;<8<aOQ+@-%#b(="ht"qFWj'o:J%-T]np<"6f&.LgTQmH:R$
%Z@G7K4hTm$9Kau!DC>Hf^B+FQl3:e$e]<'CA^3"=W(W,!'t)"]K1A_G7cAtU+2@spjT1_s:U*+'ZKAu[43Bnu,:B'oVsV(SU]Y"Q
%i]UOI]J0c>M?lE_>(<^*7q)7Z$)h612c1%O[p)QfL9oDbR^;S'?t#F,U[TF1CNr-\$efJgcq;V`VK'OP.I?793,)2GR'm3"L`O9*
%06Wo!TgK73Q8qiZQ!n[&_P+fR>^ZXqda/qf]*DDiK:!>9>9n.=<\P@")Q'Il'TPu#Z6#%)2[b+*("#>QSWbE3&SYj&+M^_->GAca
%_-jWj8-2K_VS/bfNO2i#$alg=:#Q3%3.Q@!,LR`4>)srK[Nd.L^iH/qr70_oYfa=_e@&QTkQ=F.4bcu+\hsg*XCs>g!k5k;k#8Ct
%aL.k;Jik-bDf%_Ehfb+ZP8`So9Q1D__dfh--F"0Dd,%9Q3qCI#Zn0D+<.M9Y%VCS?);K-GR7dCKhuH;@=PX0k'AMJ,PTr75@Y^b3
%XV!7PY;9ceXqLspNP&4j!Kk85b78hX9"ni79q<AhC.n"`q(]Hu.>4-Z#*UAY^rRf_2%]5-C\@?3me@B@!%D9=J?f?c]Q:);Q#=7A
%!i,KYLVe^^A12)Hdgi0T2T#XuoXM:H$q5[G:)gtq.s0/@40GM5'D1c^.U2mSJAd]4G)\WIg]LErV[9Uc*.^%;J2aoKEP."TEb!TB
%ha<+/*FX:a?H'dW?0$4T#=,Y8.t=b\TTN'k&":XM>o*\,L_UV3R=HfH#(ocBmb.^%D(.Eqp977;j-G,"K;""YI;7"TN,HJoW'"n4
%.Um76ClQ;YlNGK:X"DHD-GXClSV\(XesP]kK+c)<in1E3m=>A7Vh,Finc5h=B_AoBbZ8KuaQ.(\e_ko"e[.3<P0)a/)cL\&R)4Us
%0tg(-fb)0\[1()Mb[Fe]ohbaPQDnl*)Xd-cX,==mN\]0\?$H.UI]q;U"=W"kr5mR5b(ddH==+d"&4pWeN8\U2+Y_Ail=X.BO0Bd4
%7-*iY(%(X/'B&.6GTJ]YFm/)A10+r[Yu+**LJsXKnRhFb%H1.7;l\aaCf2cKb6?'H:sQ!6<>7(K\M4GHG:agVISEj+>abXo\(Tb9
%c45V=nK_9.%J53'eSR@5YLHFDM(7M[VNl:E*0+@gPoTOqEG[A&V+M=#/PbPNr5=HqN?%\E!O1f,8V3^`WhR3EId\8eBh#TWT!779
%Gsm^cPbD@/7eq'['X_f3n]N;*aW'J[SGGaD^]/e)hm.%NE[*M%i.&8#*k%0S2oc0sVuV0P#cLTf-jXYlWg;$FjSjOFOqGoCqj]0N
%@(:PaLfu0MY$Cd1P/1Q*QmJi>]6-g$]0drlej=)e^g0O"H]:?T0<F-g#YhDG+^5V5,q2He^P8nmH@k)*5Z3et;.<TMNO1R<AO`??
%DGj@$fgCJ;>Rd'bj;Co3J2P06@-*3jOcBZ$1D)5-.(!agQRK/u0tgCJ0J>b6.[S2Z;h`=6#!*@'>P+L\q[nn9)=JIrXpGD)Q]Pl,
%h*!8m2?S*?c[!;@i7M_o32t<,;>Q<rb/J\?&!fF#6&K*>'J:Ng\_XO*=BX:Te7>s3nlW@"L5;tj$ZA-jlJe2N>dLn>kG8!-/[s%\
%U9o=+![lJ'LG^,:?tTSC=D2@ZJrIAQQ^`I.gBW]%)`2\]mtGQ%\a+[7X0O\c_/j*r,I&0\b(<]CbM^>b_SE>sOuY25A;(J%1kFR3
%R:.jd:e`jn;fA@"h%eDYR&:<].Yp?jl)Y>_;&Yid-:/='M9e91O%7F0*([nqYRbBY6b6b2202G@ZLT53(oo:fg\@%LO0H&)f&Z\O
%.r&+RI)j+"o(kI>P&`E.a1<a@UhZOf9\%ZB5hpr@DQU>qa(;5IX/F,L,RP2lmAC14Pi17",q!7qq;N=GK3sSS7s]tr1'4MW))phn
%?Cbk%<`I^>^*iUi<#mdL4-Ft#DfbI-:rdRr_I?O[1cE)C\[s5i9k:#E4?.]98gdq'r?PQ6RVQ"8@d`Y&H9<P4hrj)`M*aBq45`$n
%C&uNoj!`.<*h%3X[G5"m.g+,#7fSJAfW7aoO3dl(c&:uMn*B\q@`9Q2]^__XLS\%2_Ya#E:=[6o^Dn-*U(#q5?c*#Ud-T'<YXUn!
%ht=?a\0(.qgMeZI/[JIHE6%c^@(6:iiGPi=>*,Q=NJ`d5[kb[<+#C0]T5+8;[n"[Kmm28;U_!BjKPZ3lET8IGoC9X$$M[S,*J"`f
%=n+2!RiSR:Nlrcrn@9L>4C^;aU@%D"ce,Wb@nP4n-aH'qb]GH2BqSrc6K6mPWRZ9FknJF1'po?/V?^]"aa"g\9#i19=M8=`Ll*1l
%q9a9e[T8Ns\Kau$5q2Rc<SQ%jeV6AW2+O>j^.g!eHNuftS.UCq^Y_ocd.#*iMui+^h*(^/;RjYWb$g$OOjd&a*&uakJ_]fhjWYSE
%o/P?&cS1@s1`F8Q(e9g`.p8P"=-QN]Y=c?;EuB8ocl+dX<K]sebrouAjaE3$:BOl_k%2#,4&^,gp%'?`2R_Y<[r35X.&WX*G]F]!
%JK3C:;?dt<+?_r0djD4g(,:!OB\-_2p1DpVFIn4(SCdW!-=C<^Ti\]T-Y"-c[[3#gjjGuiU"No9]C1-WcKL!'Ai&7]4$KY"iWa&<
%gFM1/M@tIKkO]6Id0]n_bm$<lZHWg:!C2"b,lk.oQBh?Njj&PES;dk,iu[0r171iNOb8DGD^jU]Gg1(mHh`l;-^*D\NiS%m%SE*:
%7S%0O$Lb':&jh".5h\1L$8]_<SL<`;@+<iB4kF99f-$Am[.s"=f]ZAb1EDEc=4(oXB+XPB`r#047a3.4qKD>*KdE,S<BEQ"h="Zf
%ROc+2Ke8]mmNi^uX;p300.sKQfTdQ]Bi)"W-Bi1^T"W=8OkTVZKT=Z<`,e.o[^+Qf6Nq(*NajM#g*S^!q_c$))hfH=\!_J:;@SYP
%NDEt_"ilC=&(\%-Ou0mEBWr>`F>]X!]3bZI3%*>'O504O/qhGohB_7:]FlCsYNLPd`jT+2`_InEJ]((oG-JI!p/g3r+tKjZdQ0ir
%6R(@&?$VC)dX3USL$p`_hZPG`NNLK.kcm=?jON/ZVpW:qoB2p,.lq_JfkS?CC`\a\9"RbCc'gE``Z+8?CNc3W6NJ,&k)-k7:*<:,
%.5nUS'.[`9h7)X1#-ES1_`mhF;&DJN4C%0CiLcf77>?AY*6Zm[k/(#2,%lR4ms$`1LgU,7pRJNY.T0M"lX@bXBWCU*:abYiJSSjL
%/"t5BY:LHI2LMs%pEf/4hBb!."YT:6>=)TM7B^df-b"0;-Ppkuh8nH3?<NQ]g2O#Dp%CDq0V,iai&Z-$Ck-[#jK36)f5%D-`l!N/
%PrQ=/J/I]=(YMPL72`VV[5$*>@-[\(f<ZBQdfp#E/T-!*?sH_aSVRVC#)AM#iA3m-*/qD$n^2.69,-%@\#N,HPpUD(3eS96HHL$e
%U*7<[JSnm(kmS&H'!@DD*d&"X#M]I*2&UT+_"T>VmMhI`"bMUW3:LN_)DQ,JV/m@31sjXRd0AJOFR9P(X'Z;E%XI4qjTUtd5Zuc*
%=Vug0:=F#f`k2%'D1(<n(72rfCple2)$BW_1C>`%6\])bg,^a+kg\9Adf3R:*uD+D-G8>>Mm/@ai/9*WFQMd)oE8-<1Oabod(Nq6
%cNt[0V?"X;c]e$:Tkutu^rcH&iD3pmh;\480LoYF1,pl9IDO^p#lW;6HJhZ\/M&G+bp[P"GeFkP`D-,n7dOogl$.Hu9a`k46nQ%p
%KmkF)JprGAOS$2%;a/Ms&qQr/$Gep2j6LSa4JbC=AiRgO%sO7dZ;gD60[5>"h!SY;U7p/lOhWec1@d1j_.cc@8r-Cg)mbodZ0=&&
%+AothGVO:E!Qq'_1<QIR[C%_XX3&V>Q%EXM,k<tJ$Z[NHMF55V2*3Q27a"08JqR\[Oefm=B//qJBg<Dp6j6i]C2.i.4rWOh<tDXI
%0$#nqDaV@V@oAT_bE=S(kB^&D>,pYiYTJgFf\,Nsld[f4Y)+jsbA+k^Y^#_JQAD[L8(a>IbWFQ^EPa'*i_!h9=-tjOirNMa>(qUt
%I!B<#8LW6s[X3TN6"TIU9k1u)8`lg6?c57,EkR3NDtJr;fP>+Fgh;:nfjp31oSJLlXUA\0S(GXk:>TlI6a7@D8N#/3Yo6a?/*bj/
%JnuCRSi4U=K,PK\/Mn.kke>PFfGo$MHk^=s#"p5`PRN%M1orKg1$28^KAU+R5A$$E-7&C&"?XmkoRgZQ]#<RPG2tSD\-7Mh>;FF&
%443T8+baT37RZ6Bk9Hb<cEIT$2$b]^HNq3+jLh=hbhP'#K7,G\FTMd`Y72SDkLdgh>>m?+`C[o`1*(OLd^s1]s&SY4V"\,!,Hd9.
%%mQG+b\NQ12@'UiojWH^r*=@NE@gl5Won:FU"U![mu03Vb$msNf4qK!7bO$Xolu3>L>aA1pFMQZp_L2S"JU5.bhe`#EoO33R2J1K
%pKfY>J_-<r]F&-(7]'C'TsjUL=jS'2?!^\uA)Kli0I_TJE!WKGAOOrs^p3<:Dt/CJf-:X()Z;;/VP2"t_C+H<+Bul9Zc+Y5@$AS(
%8nY,'pQU]IJ>B)e/1_C"p=T;WV/Cmbm<m'b45Ld2%R0$7M7Jo4H*^<P[bT9be\W6+gb9XYY<p7T_9gWs?InPo+=Pi`3p4m=aoM.\
%9\0;p^4Z?_ZJ42#bm*mlJ7Ja,_86s?/qZ(5@R+3tj)+G*PG?):2K3TcM!1$?a+c+7;?B)2$ae01gS75L(^"R:Cn-EXPMS([=-cCT
%Afjn_L@cK^5/p&QCYu%D.NP-@PWk)XZGX"^1H0>;m(n8n*1(<"X+ANC:"1BR?KkIoQ\pJJs)Qt``@bo>RSX!^7JtiS-nXHmmhg,#
%:[\-()t$g'`\s+?J:lP+bMiAdbRkVOL/*N;mXcR:?(XcAd,?`7'2<5+>nB&+ln^+=qA9XW__,0k4iaFDCqC;m%1]h.X"p/\1/qk]
%U"4d]OTX:$L"\?tFo3OH[3\GA4HI1_/E.BaE6AV?"+*\#jQl4[[7Gj.>BD[a=[f-9m9h>FoS2,QCp?[Hq@F15EAQcI`(@Ujlla\P
%+qql%Lh[/S+M:N;8-pl85u05X814h(VmZ#pS)8:*DW^nl06ZI><^Sgo_+#ZB7NF)`RrXq<B)PQh3c=q%$0;\IM9bK#+c*R'm66iX
%iF!SeNq6rm?G^R_$S/Un0[kt'>r\D<Bu0'oFZeFn]*K+(Hq@<:^"4/4lt!63HI*#N<"pO5=&9NE0RjL9P9t:3Rn'K<)^tmGc.*&?
%KAXH)K9c.SmKs/2XW585*R&Oe+]'(bmg3;0'^iL[8*VYL8/a8DeHB+VP-\c)AoLndk.KG&[O4XQ'=8M3>oUbP!\_]%(G/<KPoUib
%5]6H[1:a9-k`^2u9N!N3L3MqmHeZ,Hi_3(D:g8-HS5@Pu?4r3"ni@^s@WiMiI[u&Ao'O'I-;dC\Ys):PBg`/OpMsR\-]_da:;cB3
%r7mNQTk32Y!ZTo[no9QLS\p?Bm/_UcYUs[bBNWX+$7BgKoYQ.PCN7p@#Cr,@?WB'Wk#C-/.gW9%25&o0T,2_"9jIJ/o*"_%&;Hq:
%c<;V*9HOcj_:rIC&cHmZ7X3'HYs#`EV?`2'lX$@&Pq=f0a7i)rW()Z$6@*fsbU@aQEq9R$K^#E)UgMQu,V1!WE+Qfhj4mT=_ZAK8
%p>^QN.`-PKqJqPC#t\SZT-0>(LCm"6eQP49LY_1,O!3e.2%Y@O.(-j'>7f9n9YX(*g7VrBgS;]/o^Wc*L(6:>)aWHMDo=gT^EhF]
%/,\[APj67m<\*h4.G,l;rC9YlO80ic<aJsBqNjl^ZL[^MJ:J6P-PtT@fuJq_Y>InJITBb6(COXW)[P-?OGEnkf!5ej0D'RRUFhKo
%WLeu4QX'bDZia<@Itsj[)g@j^?Np,FN>5LciK:TkeHDM>O<KH?Gd2a@j/W%$o5s.2-Cj^FYnU5+FJ'Z*S6Rp,IIY4-B.$B#6Rt$_
%(!@/*p/7$c^ea"/SW1&K7%YV*mU-rrYo*VEC]TtRfNEo#6rCS?_7_:u1N=rF4:5_ON&/\.h(n7H#,m,Qkl_ttb'>O$kMNr'^i0&8
%"LXmMBsP9s;_iU%=+'kPdh.eR-;25s5<k"6am^k&-<>&.$oBajX<DWn.Qic5*RhI67ePXAOg)C;&gQ99k$M[DWJNQHYtf3<&]+^J
%N)nESZVh!u4`CGm!8G$_?HJ>1+K8RkF]J3TWurG#k_lukn""O=deMM"nEON?;'E+ce6O%FMu>,o/XXOPC6XKW[Xi9NUqb[D+Ojeb
%)c+C77/7H1=$SS%El8lP#3PnO<_>ePkFag-/%))#8K8VFp3B5b)K##hH=NIP9!W#VMH%*e>H+-VI8#$[nDFJ+H"PpoX_/dR?6h8`
%S?Nuh64/>:4Or;c@g9kYn$c_6q[,G9Ag`:r+4LE?$DYnZkIeOJ')p[N1Vg=/k'g\Q1C?G,<u\(tBu3O]7eZZ8)>7CRD_X;jgD,(L
%JWl_9XZ<O*#TB;.cK9%F"bX]<-(fLA*1R[;Z4rM=+kT^QOpuI':);+#%N;tlC#j"oLXO2AbY`@`7a+!:G6n4Z&0BO_MApWW1Yk%M
%TnMc?LbUssAu>BFO.B9J_q)Rbr(+8L/*Em$Q/Bn$iQ&?oBi9nu,g"R*NHLbDfhn3_3D+Jf:8br3f>Q1kQ);$SIfD,hI\"1W%;X3Z
%\8lVHN0f+2%k,e-,1nu3>Sm,a9X:H>j,<'NfYhQ29^Rt`R<)!Nj<o8#hm9L*+)Sm$i754j<N:8#7a=l[09H%/""HA"b8EiE(pdI2
%SlRb_^MD8S0WFmVI6W(ne^JAfik<,Tdj%2-b;#Qt@ht0AC`k6V0r8LsgAO#NNe%4oOc:8o.IsqBeL6ruio9HI4:UmbrQI>rl(g8>
%_9]:ro<S_>bP_1]LF4^j7MJN4aY'&nV1oH<rR]>MR]5O/N4tf(C/B8ocIF*YVAZoEc:f^X8!#rkOpor)>_l=^A4tZN<_:<gc<K,a
%oIMHDkpB6kQsXE>g-tLr(mr<D`<%RMZF+Fcq;gO-=R=ORN?:4HI`C5jFqo3PjY<$l$Q8$RPSKd/H\9GBVH=l5F*1Ys=r%Ybb_#0&
%j;Nl+M<jiLqK7j*Rl`VU0ao$2%sOuZQ5o=\S8Q)u-`:i]r`l8,q?tWfC.DWtAt"?25["j/%f2*C%<<9MD1=:,IU(?<F>gj-G4=\j
%`#RcE]gY#nEN?Na]HfRYb\N%#,WeW1E15=sT2T/#<CgP=L=>Z+k!>auI=_O#^XqKm#'FuKC<&2+AWKGf,\KMt8u.`'Ods$UioGN8
%9aF-WWK?bW7JaJl);EB+TTQ_7n!0W/g2n4qj4>P4RK6Ul&2;q[8t)r5#9L]kjg,tNN)AZbM:3DUn'&Es^TESS2LFC5N$LYU54+8r
%E$e."Rlot4?C-3]pKFbBOWVYo`k2P/2[&^b1gI`GY1HDK7\tGH-Eh8<r0$&2Q<Zj4VbD7)\oS>U27su>_kT$#M?ZQC('d!?*n:h*
%#*t?p!YJlH8*2\R_,cnc[c07;Cgf7Lm:aVuJnFKI<fM;hNS(MG#iX<a2Ps\q9QR\fp^UlAJZ*T#j>ah2K$GGOhO`OdN)jNP+S:tm
%b&r(!*3f'^)385]6`G0F7:#CU[jTl/*Wst`n(E>R#"J(7KCG=T<QjEYFaOcC.j('HE:sBOK'Slh/b1U6Z:EBpNQcOE.*GraY$$p;
%eCTOSH1=XOTh4D9asO0f9'*Ikk&Mk-M&1oaO>iHh_>IaS1>=]b1T_1GZngHM9=Ge3(phoRLp]*1XqsM>/aPMV#1@9lB%V6Z5MGT1
%K?5PVG`.ECM9h)@D%BQ./$R_abFj2I(>A-pBl=TFh67ip$cBVM(dq^o4'0+M)n5l$@u,-N^8M=@OqHNMQ!p\XkI+HBB<8/M`2d3`
%q\R8D.PM1GK=^(:Q+`,[PTDJZ5$Sse;?R4hNPQJQbBo,9S]Qn-HMP55<kqF`N^ul;$.VT%P<#k)HHg$fT$XdRk.qY8rL`^Ym<p?Q
%JuSHd0k$e%KXXcfc2,<e1F;%LnQS!uW[<AQBJYj229KN7L>0i(#]'/*+FMu:_-]>[$l?d=ZW!n_Jljo81-'KYlsOnfFEDm=4]@bJ
%_dPs'n)r<4e-A-e%OO+6g04:O-AsD(`-migD=udirVL/GgHW[Ks++a$?Yu80'B1i=(YA-_H1sdNemU$sQ'\?\"Zi:6CCXbP]l7I4
%Ph54!_`L&2'?*nQ?TXFZ=4\M)\AO3I6Lsd"`AP;`E8f?'e\-D2[0o@JZ=1J(AP'R9hB+rAbuO6QPYF)4AAid)-G;E\:g[j[jgV`D
%G:UhT*a?11_B@MQdBH[Pfl&*RWc*\3[sKYiJ%iZb(jCe"Z/B`s6:a>oT)lBbV_LM3_Rm25Xe&2<c&h+L%"g_"\d@jN\k.=]`4lms
%RbqhthC0P,oYVWSJofue?$J^<m^IDq,)mfca^6j,b4L>\l5IJLNfdBX9_d?[3dke]b8SRq`t!iaI;ge^C";ugHa263T'jVkT8GC*
%54*s=o#7O(\:\,]rr]Dg'/F#`P2hP2r#Qgn#7H$iCZ3V5`Le/Rm*[8tW#,C!%5t--XCn'[qE[t`ql^e*8.NnjGJ)\<;VB%!X4Z'Z
%s7u2%>5r&t&^OU7B[YFc9nkWuY@"oWa&b>^Vr+u0\3q@4lfUALrI(+H`2HkQMl@NlmGNn,dJ<q#TlXZb5j*fQ;hMO;WtYJMJ0/E_
%[j9hUk9>9+1=p^LjmbVDo:"OP9aAfW?hJ@$`JeDX;sLNr:%Rrs2^b.X4%Af`$Z(MPM.%p_`<jP]BG%pcmlqns5pL`b8e>;'?jjot
%-Ute@@5mB2,QV[kbR6$<D6Mp<VL_*\IHuTX;,TW&H'5[X5<PY]LoZt5iNEVF5L&8]he66p*1NXQ47R#)<%hV?C3;EAG[YZ_KkB<S
%-,OS:(j0HghGa+*;52'L<&8]:\`md8pm7W2lZ:V*jb%?5rUrEFN%]'k)e154YN,h-bc2?-hB)*YZg*mr;@*P5d&q\ch?&&iSar63
%?i0Qrodri#$f#ZTCOO4)6sjZC4=6bE6q;UL=FrPC@s6bUjtaGN4Wq?*nLJD>>ruj^0en>im;ef!m=o6fWA>)uJ<;-Eg0j],(Ga)4
%o1QeUV>g1m=^,CM21'sm?F0CA-j4S"3oH0HF91;1^'+?1GkepS2Z#ZFFK>6;m*s0nX;u??DdWJ$B(`7EJTLh=j%F!fhnH[u09,]!
%Y[?MK>#"AZd0[.sh`ekB\A!HmVF1A)9n6k5FmVs8TAdn(5E4@:VeKeqgc!HDq=>&E)qBRJmpAo2jtT\U9C2!9W!X2pmtZm#,Q"Ur
%"$Xcu`i$cp^(HEnU]'i-2Su6QRo!(T)pQQ=aT\DS%Iok,_e-E"8WR7E>Th_l+)KooT"b0j*HqPTMFPacf]CafR)WoT(RChn&a$`u
%2(DR_;MJebJSkMa:J$]mDu=T5hJaI+nVpMQNlROXr1F1BE(]'S59E)<.[tjYCEL$#T=m8hU+rT2hf)5PLiR;9p<*!+$`9$mI>9Ze
%0Lp$b9B(C[hqYOkn6sX^=OoqZT1AAG@IMU8;,,\m/oo*.5r(FOhR?>S,5?e/f,JRples)5]qToNF*tV2+29RK?OGj(1E@\1@sKVk
%rq,dk[u?MA[ND)K1%E+A@WX6LBUVVpIc;!6*s6l2AY'e*MOG%e%2^<A'J$ABXX%Eo6P`GLm1$F?;on?_7r"rS4U#/e$K#eKa&K,+
%AY')mfCe[<rPljpXho<ArZ1\#*W3`ngaPC44fgpmG/nAlO9[aX=f2G_MQ3u"e+bDaI9D$l$$r&f\jkZ:&SZ6(akNu\MRW0]o1QO#
%hB,d!?Yo-rePG*;$JIZ54q$Pj$<,7HX+aJgQF\a=oO2fT?Otabqmj.D)nfVc&Bo-YL_r5r51@88@E^CU`/jX+dQH'Fp="-p]'scN
%Z'<97\6KgRQVH=_J`p^\p>5+DM&?)q=b;]md(u?poS"CIo_dKent*QYO6Q6[pVZgLGI%O%*7LP#m?>f\<C6OF!6<K`p$IKI`CO3<
%fI#-8DpZ@Dkmb1Boob*fhVdP5Z0dmuYMHCN>pG07W_rZgi#(tg>2Z0<LAXRaY7Xj/$T-Ci_7T``YOQquEG@[dm@H>k21cpb1<L-8
%>l2,K8_b*[0\Xn"2r#0B:HRk\RWlD4(m]CTmS^lWL\BI3ip3BJM_I?W[s-VZm;Z,i^W'SE?PVM>YIrlPoR9ncA]/tb1"=c/N&:`V
%Ub[Ph#C]qI/J"Q(aP;n)mBo"(=(Ocga?*QgfR11tY-oV\KS5?>Hik)^fo@jS6DlL#!E$HgXQg)V(mFo@(4XYc&VLq[EY&.Qn=tu\
%n"LD3NC"4D6Gt9hikF($(+#^1S./ED1'TY>D@MK/r_r\r`)T>S5k_(9f4%9gH7UL=WK^]E.3rRY#h4nd<4M.)Omr!&4[A4/#u)ij
%Z)Qbg`'SGUpc8qp"SVpC_<ceoH%]Zk0oYE*R$Ss:/d1_@04#04Zh0i7!(uT?@_%Kf!I8*6mr2peDZdg#'B=8!SFSF,/=orGT,Z/u
%O$E`!;!W)nerUn,%rqk!9]a:3X(&%cLuMOt.V>:"3cX>f"Q,Tm)YF^5-"[;Z9_PH(4<#7d_`XL10aUj#"6DLa1ut\=05sQu;@2^K
%]b1aFLFZ'_n\jeRo@`.XF.Np$a+\rL9)mb,15scYnp4U4FGI:$>/1_X\%+GMP]$`pK$N:Y5S'c^h(r3Z^l=ai+'F<b]j[LshuehB
%LNs3+2--qm(!^u?9GIWJ7Rr5*B@6@=9r<9hH&7")Kml/$$0G:r7ZSitm<6$RnO](Fd0C@TWu,D*LE9?X0<e6_^[hl6OqG(<N9m]%
%[/ujq$/%QMm6gE4\Eci>-BY6;2Rm^01_>(/_JZYd'%pGpIsmn@e;/O/&SH/kb3!5?USlH*0a8`a1,?*K5;u9+b4=kJ&k=ec0aER+
%mT:\Y`R^bpDuH"!Fl^^A_[,kdbo=@)(31&$rS64m'tt"O0CjpIbKI><j5%=>A:BrABLuOOA&fW6Oa!<EHQf@_kMRAhL?b^^%Khb?
%\:Q9\brA(9Z)qI7M32tH5?FVKR)N*GT5u\sX%(GFZ4Ahj^LFS*Q'^f63Lf:''8qEZ]NT"[kJkBn<G?`F?Q=i@me;p^eiHS/[f=Xp
%r[L^Sii*2I$l_AH9:+]d>'JT!"lZ=_Hd*>k`7V`rbA<km^uWm.:^=ZAkO/f@4-Dh'#DJeOVtjtX&6*4j\&in2?e%HW5m>mT_kjs0
%)9.JWHU'\(eJ7mAh>eL#Tu:T2kk,foh\b1/(o0++M)Y&$hOC^QY&i.s`#BeaH>Fg"KW-2C'b1i]q_aXNa<VV:GM35ZXg;%qPJb5%
%1N`)d"Wh;';cl%f"+3,k>"0U&@WNSkK&MYtk?JpRE>0*iSt;=;+%Ih_e/HqT%M"seO?^10:$m$9bm=%<J\J<63?uAm+3n;:`WAEM
%(09MtF-mSX3A0;"='60c^sBEOZan(%bm/I6REe[4crT513V+24l1`8QrnQ1e_nImM`f>R9;)E2\EDk@NfsHuuj.a<mjUVh`.HRhg
%7;rg?8EP,/.Xk%fUjj,Y=Or%H^9H]mm=8DS(Bh1nJ6<SnT,X"rE/pb>DR&.4.61bJmMUjn@P_8BFoqY:4P.RiR$X*nZFKpYKZuPW
%I2lMVkciQq4g:$:Ut;78K!pOTRpC)C09U?\UF*7q\Mi7BNh6^1J0!-61LAOTXR+B`2XX*E"?uX#A[B"u%.8cOM1\^0(4*j?850d@
%0MI_+:nu1-Jb9L+%I?U6Y/'DlNpreq=aH`8<NG]kl'a2+r.QTWSQ9]"QB>AS,=c01c#,JnNuQ^IX'>l[$uu<_"[?($?F703S#rg[
%9Zml?Y20+.03&rM-.h?i8-6au4_qa%MisBX<F;ZdO7BlHN+fjua#h@#3p52)+B&Kt"pu)I3`4!I,_j0o]Q'P9W79m9Q"tak;`ZHH
%c4Xk-=u8?3(n,r'_!Z!8QH^YccP%rGcICNfo!PE5AmfA'qHJW1S`+ASiRrKmNmO2<E91-RjBc_</9q:If-'rPRq)X!(+u\W;gh,L
%8H0aA\nC'[*d=:X9,\n#?@<Z9DTV6MnstNCe;UU)d4dDT@Yj(3Z73)1blsc:EYRAB__Gh!a]t'GUSUC@IY253C6/m?a+H-&<#sus
%Y,!aQ4/9,?c0EjbDtS$5of[Y18He!mYc>:0?;;DPh3oGi9Ela$n4#,Ie$Xk2+(,G;NSqM5F_T8T%ad8RC'KVh86OV/7H\4i9uJ)(
%\l?0]lqm>S<eIs0&YW'5<hQd]5)1oj?l(kB[5H+;q\q%g/#1*RARUuf:((&[>+Uj$m6A'=LHu\#s#[mod`TNLfWAS,8ulKRX=EF$
%iP'!+RTE&u>>GVWZDkd*c$/_L6@_=+[t#<#//BM"QNQJ0-f?&u@._"/4)b@AdV':deDmcaCq!t-O_Z>/3!-$95rmjKGkaa;$QC\i
%eS+qRpgjo1/&EoR]T'A./uqm7/QD-%[)8Y]'Uht+(5B(0I7DIA]P/3Uk:9*a7m#AUW9Kc5hj;Fq3>=!eP']1a=(IOW=?$M#S3u!9
%V8Big+'_aJlR0N7lg2/15;'7RcbISKrK;Ib%OeVEhK!2o6*0Oi\m-4N\EC2>-<Lf2'>4<.Eol*8+SfN.c@1qu*VT#C/N1<=`LY@g
%nUM9j"abaoP,kfMB8I,O0YndgeV>!YnB+BEG3XkkTm=PMk+R>0r)S`_<^,1_afM'b!op]4Goij'n?j2i[M!V-EG*s+(hKN!\KbP%
%^m.E;*FXF:LKZXGoW^3P@@9A"-UN_RNT!<J_p)r)8?=3!6mADDM\o_O]_W!X=Gs7G%gg$m@YT@fZ\)e"Y1KXS"#F[)fs<EVrE31=
%lEFPF&/<W3lTt)BX49Fo(""FmDdZFa[]O(_Snu-l,\(OX3XFKe`%VAt,9\"ASQ06r+TWlY\0$#X0R@*EP?5oEfu+]dKJG5<=<,Q(
%CEIs]I%Akqe+(OPNo?!<@%VQi53B.sam-@C]E/QuA^':6,mOHp-APg"3Uu@SCtL-;;hFtlqcW,3YGYS\b'+b[j#$HGr;Q!rc9q]@
%FPr^b^aZu9_&dpI5!,I9j8qSm`_0Ni(I&*1MZH,)O<jM\\<o&'R)nQF#cDoAlD&9qYsM-O3K?fuQj8(R8A/2o1@]LLZu+aRS0+N"
%$bfj(PIif'[P6D^N]==sS2>XomQVpG'H#KcrQ-i^U9ee@$=t3<-OCSfkp^Cj*)\]+RPIuCcb-(W<G;!DEZU0'XaBZlb35+@eE/#l
%VB4<Z#oH$s-KZJR+,ie:.`aEpO?7W)kJOfD<L6hmVVFM=4)U-2'o$%FPIg;'1e>>:ar"i#SeS0V'Pn!C@<7,%,pSS26M1]ZO^!Nl
%UFU=H=Rjn>*94Sup$.u>Ab`6JG"mRhBjfuRe07T[m-1["iDH\pb7Ml;a'cqie?Xe%@IK*n^,aGAmVCBY:510tj+FQ`^0*6r-3pI:
%ZMAH-bO"37S@+t>@>,TO>31[5!4dH%0i&1d9JI=p?;=O4SkC^MF5LbEj;UnUmT/'Rq9#Y&@G3r01F2a;*p'NuQu?lr.\.Xjga/!e
%07Ga[$j4(U@Q'nKc+<u!cA-1.YU.p7bTf+hhYFCG(*p_aTZdQ13-jo"Q(n>5GiO-aA4>-)X=t3dHS*U[4C,1c6AmSDJeNF6R&BC?
%&OLOb2LM$\g*>H>'\O+RU8%rj+Zhrp@5`V7fn#X*QX)VJ?^!qK/.*'CAAZ/k'&kdDjdMT/f#$Kc^,LjC?6BcN]pO&n?d9%#lRn;i
%l0jok/7`N6+b/DrA<)QV1HXJRQ?.R$>A2\@B<KbMcV*.t<1Dr*]36"%bKeqkg]JM&K;.Vc2ghjZUr!6$1A._IC=4oqF)3lf:sKrU
%X+;kOU2=39Q4Lam2fhc;T%V&QE-1(&Q;!*YFbUuc\IdM>Z%DK2<0o\a-F+RF*BZ@U.S554qD\urVWh5$]tn2*e8g=WpBkUMasq\V
%O=R<?cuBdV%SC;@eB,[IKbPlRgr&7,_F3n463THML-$sk6qk:J`[Rc$F)Q5>(o:YVZ:b7CGb"LtOBcSm31,"1GeG&CJ.P0!GMjNL
%(4/lCmuSh?D/cj8b"aLXMI'GLX[\?Fn2_G6F5CNUTXnKjX)\VtLu-TM>$1);^Hq`hCbNn+\Ha_BHG2`p+;m)AXK@3epJE=1j=!:[
%`_8Ucg+RDAm9l3u(6mS;de%,V]FrNpWi!&XZ@UpJ3EYIp6D4i0V9p:$Z._m/Y&e)mTag!sk.DYCDG2T\GNdKGP9b9@5#L@;>L12C
%GN.-djEP7MR3c!XSf<m;.aQN$\IhgOHm7L[j0hF+nV,:s2]M+7PIDBUf3ES4[1elu]7+,8ej%WalDcs.-"!Zl(<eeB&Wk*Z7b;@J
%o!Um^gKWSVV!`=c3iB'#\7`++V'%HFU[j%uh/JY8[G5P)ZS\uqQg#F\Z8RkJQdK4"7\:Jsd\[H.[s<(A"7RD^h:[Jc/(Lg&L]-Sh
%@!G;<OJmdE&oVBT\*V_&JtR,@^/k7>Jt+F6blbA/d%jMH3P4)1K+HEg(=LY!&_qAiD"<`n_7R$Xr"**VG3!.inVM9ALpP/)*\1M8
%CXUUcn=*iQr_;i!s01'@ilSC9H0q*jJbU7QXjRSqi4)tS\>FT>"[)[n+YI6jJREq@YZoDDX-3rl@77ZDDpgEVZIrT0NLn'0o/TK^
%/mXK=a_igb0DIOu%8Q8Y\aDqPTeAdQ\JEoT=L^2"2GbY>(LWBY-$Jk$T%faJYqBAZFjM.-EZalCl?J(Y>Gh/OcE46$ma41>pZ$t4
%N-ih&o/6jlIu*\S%:5@dEu]3Dp"Wn*9$;9)Pg!U+*V9TLN!VMF\IRJNa5#G_=0U#a-b5q@m^4QXfG$u'`&CiS^D[I@]tc%I)Va_X
%adZ9FIC#J$`lD=3&O6Bf3rXCEc4Cj`GU+6'jUa:KpMajWG>&CU/aQ07V4k9a][Rq0Yu5Q3R?VU*_c8BYT765#U^'-D++l^BI1sNa
%A31,><])nW$6BU4\@`c?`1OT#<GP4))-$f`d-`j0^fT%9%<)[WKr&&aF@PXHR:3iG]#j)rXkBgFK#"@LD=:;Sb_$+#\q)P<(5bE_
%LbaZ:@9:cL";S\gcb$K:WbeAAZShV6kJ\Fu+>6k<=gH7YVB_*3Oj+[M%^>OkHEGdIBMq3Z87jGQEaB*i-MC@DPT-I`aqcCbha%kQ
%[a1EDa9mBt98/!70^H<)YuQspeeGi:WtiJ!]m%X("G`i=n^L[ZY`VB$HiD`,/D7FQ^RU<KXu2u,N6O)DSi%/r`$<Kb]GgC1Z6s]&
%Y)Q^Vro1L9g5;V+Nq:p]k]NM(Zo,Wo)Si^8B_dc,$rd&2S>^QeIa;i;OW:SO$-7jR9")r22E7bRr`C^N&p%t(baMVI8*is_F`&0V
%fui#=Ieca5`bOmUTaG;`,HAGr\feuN[9,E7ZnYP;N!YegTu'CS1tVH@q.HSj!@Qpg4c?mAb7/l=<Y/=kM,ZIq5L5$*f7l1"UG2#&
%-<Z\Z=MQp#=!uhF2R[]V#\[&hN_(/BL&C:Ckml'0&sS<EjeZ,=PB2ZM4M:1\9BU:C0]qFW2q^NM/([FYZ*X?_m6*7YShGFKp5tAY
%M<'[:#P)3Vft^1a&_o%$5S"F/0?@$3pWTKV;Ri0NeU5@/^$eE4eHUZNWomqoUu?a_ICRbdZ7!=O$LX73]CO(tXqkVZ#0/:Zi2M(`
%Q":=bp,3CFXs)N$OQ0mdQ_/PA_("`b&t0]E%;_eGT&G$&X@"I;]NPtqZ561&C3J\*f?UjG?7SckY9T3ECq>h'akPf?m9AK0l+Pce
%2;RH*]Jm%C&1^bkY8H;1P>9/o-"gats/;u(=-&(i[,Z6j[*J%gj;VKHaX27>@jQ5%]`k+u&O_-7(c[IO7tT6`P9Cp[V<%Yo)L/KD
%SZ1ArKed("Bq(1\;j)0HQ+'EXiX%"hD99XnD<uTd<k1bjH0nYH`,;.ERY1LnjgqZ\j!h^LkHB#WSgi?r'f%T=/SjfV(Qs-JB@(A^
%RtgKR83CP6O)(II\ERX*5fsu%U(i9!r\\WZR0k[/b=Ikq[Ym@_pEU:);2$SI!GiJ/9+.8_1\-_^:E^8-d8]ZeF51D"+,EH2#Bq1A
%S$tYH7.]SVP^N'^]As+OS<INCb@NGt,h7&#BC<mDS7aXVBe^TcdgW.se#m6a8?<<h?d@1IS(2ZYkuo!FFlaQ$\?4o`2qU??$p/=f
%nf.*5XsIF72iX\tGGOD43:k)d3!J@OY6gGK#IS_+ium6_-liUtncID$c;gXBhq'6lQ(N82pFP=DhYQ<pW?;a]fi_rL+U?]j.J2GH
%+RIKeH;^S=J5XtK!)#FiW.4o%3Gcf3f`bNJ:M'nt^[*+>_:#=j>H$HdHEL8FJqs7j"J[V/A-H\_>/n9mZJ>6k/N7I!Mo:Eka!GRX
%bp:HUO]PTNjNGf<WS._%h!<Zh1l5;72L[Il4aPFLC5G[In<h8bC4Je%T)$noBhqoJFoga5&K'Xf;0?S#^<X&HYoJF&Z@RH'^,C:e
%Pc7i0DrjL<^$$8:Q%Q<E*gh#9*36%IHX=Xk+q0uZS=)i)g::B=Od)Vs:#4SA,Y%Hp@FI*$hD^0oIm4l4>.S^EV3f.eUpbM)Q>(]b
%Nl-6u%e><?&&H(:REJ[-&U[g3a8YQ@^^TmB=iM5@AJeUH0qOfec#[E/HV^Xb]1;OIkYq8dK;3*fTmUrq_E%rKDeo'(]i^q2d.4'-
%B9jO$A/bW(VVB+73$/*_?V""l45RGWBR=hVK\cnVa%'Cp$D5*%,J.SE?h!l&OGVE6CG?VGI^@K,lqtH<pe?Q">No7$!t,]):T7!A
%9W)7K"g?D8[g$J6YN_D@j:gt)=e"3r0hqtnAi=CVh=$7F0.!<9rP]=qgs!TA4YSG8P:<S(96G2$fNNlbZbC'E[H"&lC.mR+N8dS%
%F,.di-eY[UUmGB9"P[9f%0,`V\MF1Zk23A+/,p=0rs.,sS],L>"fB)_adpD1$,,g.gZ5WQ,:%Pc7cV[n\-mLuHUu%<dI*9QmiOUu
%[o^nI1:d6:DBR@$ONCKg/^diM=%ulumH:'K17etjN#P^?qnm'ZPd!`d5f+InFJ$%nK:nES3]6T]LRN!CN_%WD=]>f1$T`6^=n$:-
%731GLn-1*#U"<+gnaZT"Q!?0g5\NnbUb'H-@)![N^."YT'i,9n(7J7$NGV3<lK[]d5[4T#Qc))?b99PBGPiD"pngh+r^m`b/B5-G
%:Z1Fn&MDj:NeAmB2fAF_DQ$f)B4!f2jB(4EIW15],[Z(ObHZt'lDG3riAWtcGD#*`[LCs!29mo53%B26\<pT0&/"a9rB;8G0XW`.
%c<#per(K(BV&PGZB/M_?-uPFUf\irnc!U..[u[$c5qWKASfseFC"ur$bCBE#,:SnYc8o4^i;EM3.h#eX;P<e#76:<j5#=ghn+2/m
%Sl9)fkiFY\;kiXAcTT,9i@^XanCqRq3b6jgfea0TaE&N3IZJ8sqC:uQ(Z'1&l<iOJ3Q/bDS(bN<0TCLKNXP_D_`[[IJ%P2F>]VgA
%2_hOkDrV/4jIC`!Y^]"nk%0o`.)@7"-VDTFJ8T`<KAODp;o(/t`!44R9^i9kO@U;$+#ZHJ]X<&oh?//pKUju#q7W=JWb>io^$mGe
%@sAi\%Ru_OB-590?Z`f^PiVeI("i#FVe;R13W'"c==d[dn:b"O6;JoGP_+$ki!uW^9?51;0AWC0X=(&Ac>k/:;>49G9D7:`>;eT]
%b797gh8&sm=Hg#g`*5VMUX()O`_qjP5*:1Wn;J<>Trs1<[1jYI<L$r+L@GVGFe#pITg!AigLa`=H^b(;;K72@N=\GllN\EtQ[93G
%;Y:rH',FtN=O-?T_d!FjWsA5+I/M,jqP5+njk\bcj-b4YM5h(k3_VW1DK@S_Tq"k8'#4e8=(n0ho_*6bnmg!X&*SG_(5TT<(M<f=
%ofBkZXUbE<"a2jI^0`I]rF-bp^LmKL.=>VbkB6%+n'D!OgXoc>-%neVDgAqmr:"=?O8eD&55Y?/liHQ.IrP&UgLkn&iU$I)N8ckT
%qZcNuWDWj;%mPgTc$hBb+.m0&L<<'TSNl$%kKr'F`kXhGD94S;#.DT_GRU_5&Z^;+GXV8JZe5GPTmboI0T]S0iPMr[C::ATGJfGc
%MCR<Y"FkCIKR;eIiOQM>^$ZX4%BL-Dq-XR8D^Ig@m2`[_StZ\:q9Hu+:nRq1=H6MYo<'H(f`i+%Xd\;3^.nV>fm8VonG@T\iY._i
%p3FN375<$L[sTT7?6B1:n<m0UZZ#I%j.Y8+/q#R[!WDg3hi#spb_jABHHr0(c67em`DpGtHC/Vg][2Is4i"JRJc3CQDgLFF?$Z,(
%14ZMO`P.$8"u,4EM&Nkt_tP*OnAcTCpYk.6L@&cm>W()(_n8q^"oA$4T+VQ>9u<ffNaQsH:c.Fr(N(C/Ccl$rY<AebQ*";`k-i8'
%-qMZ39t`g]kR)P#"5E,MiJfA[^!o\%2Y8jVA/Z:'KaF=lXO#5\Lj$ALOmo3ik#a^4,>_60i:1dPCpkbgFb@t@b8(TE41:Nudaq>!
%^4-4_IZuKOgkn=+Q;;#l4gm/16'HVGfnU_r4J%>;.mWorMX8n!.(4B+KnDmkh93S?`_jR5e3uAZJu8j9*W(5oL[4NfI4bH:S_h1&
%KrCqp5C7!eZO?YT"0ihpHo`+([ZEC>hL_=YmOJLUp?dPc%iLXIS4"hDT1amsj_VPVf[pa8hjV6pEt>kPkM^gK#WH))Fre&iCX9?_
%]Z9&@^@C%E_=")oe#7]'GO6TWpRUS/]0;43ANtCo0"'^8HU(6ZbbVfX\(^11O1Bl^MkAU?q(sLt@fUSWlfPf?Std<0$'.P:CKL@\
%-Lr3"T^2SfbJ__?^#KJ8K<Chn9H3[7i5`#0nl$r<NU*!d,&1bHk/(uC*;@GjR2^!>_KIaY/$dFK>1t@N^J"9_354F^cZhmWo_L:a
%pt7<N+2@AiInM$<b`bl$1u=VNFj/cE6V@;7dYbLjeHc[0)R8__DDa2<NLmXYo2RB,mDc02:r1sb`E)%BFJ?FXk!TTDerSK%Tr8nU
%8bSjQKL'Z:]^PZ4kbM<"JnN?0F>K]#hmC>5ZFcmub9RrKam8$Q9nR59ig,-mRFf6>h=AmR0,up"_kU%N$s?E-N*JLmD5G'deWi._
%ej)b+=^\\/CDP%s2,fFkV/q=Yf=I&s!T5d(FWTsXJM"]dg^g6&(fo!M$k.8L-Y*^5W^<W8k!prhEZE#hA"5p*e_=STmSt6u3>C*O
%=/@5>W#i^i%LGS!l"m%$Z`$ZDkFW2E8&\'>Xp;'\K0<81=jb+;N8Tp8o?NM:UnS64`,mn$q!R;c>gP\lXJPLH+e_?j8VQF-#c2bj
%D6Iq>5D!>)GWjBU"LTT/8,h"%?)WmlB,NtJ]mU+63@]+q]ack]G\K<C&_LJQHY(mP[56dZhnMJVW8CBQ1Z>_uqdnW=5agfK_&,&T
%3^:PL)%WcWMrC+2nK8dt`B%*Pgh*Drk!:Zrqp,`8`uRJP7oI!mf*/g7ZAXEZC2M,@$kfgbEb9X"L-+'m7;;YjPp>:,*$g*AYF8kB
%$udsKBGMtR-g`HumurXt4^:Z'ILVDej(0f#cpt_naCX$.c[C]Mesr#==%nH#l^+dZ+XmZ)Q%W%2FkNpDp?ram#Y*n2S[UfmHAN;j
%47dq2LVquk5q_"$BAnVC#_[^,\[s4>A?@uU>k[DR87i\Im9SJb=\Gb^:sACc1U&2(3WqL\S&Q)DkO5/Ma["F)J=Db/P^7UL670Sl
%"qTD&pe2p"5/^P4DO5Nj!SZ$J95*Ufb(@;oS)!Bo,r!+ej5J&r`:N/DMJjbO$,1t!3&F-9a.<JNiMb`$=BqSk1X=U0U4nUF;<[q+
%e3J-LCjsSk\LhU?pL9*7P\'aJ6?%Xk$g[^1CDcDEZX8-#(o?rt*B'u(Haf:og_+E.KU#s'^0MYHp&=ZHA!G3./T?<CehLrFRch$h
%+q',]o!kH,GC]?+gj@jb^-u`!qIe8uaKsIGKIZ\8L]ggU(Zo+6N4F:="Q;</XSHt;$l1DLp>@Z`(.UkP-dM?oU*UU6\pu$GoBWSu
%\QG[pjNJV&JQtH6oM=$DQ8\4-g]h!H/Ot?qnj:bCD`\cO':grE@2>Zn\U%<&B@Ai1]<ei1s(th<Pn`']CjY2I;@$=(Va,8LZuu0[
%Fg:"-he,5o?Xf/<chlG`ShEr>g%2&HSt39a/7Hqg"lc1abSgi83Z+>;aqJ%GQ")g3h54:j1BO"!>:52=A0B#Hf-5HaPTUVELgTIK
%SGdfg^;IWJEK[/(hq2s[OaZoBpL*@)/S<T[#J)4EgY?6o3[XU=W+tehrPc+^`<ju[*u0GKf+TBrh!!l97M9Ls.b]3hokGqd3#^gC
%-('@/;@h"Pc/cgGB%s.rN^VU:cbjS-6IX+bNAXFFcWh68==`o:QR?IJ%VcK6ngdl!ibKMP^OH[n/q:96[2DbWPr2cO_u:#1E$C&_
%>l6`Y6;nt,2Cb!2NiH]GT8-Drf>eeWLY&[Zr+s5Sf##).<L50UL+hWu%^?*.b#7$A\n8:2P\G&J8i&Jf95.2clL"Kh2W.Car+\Q=
%Y5/Mueq1;.pufI42uQToU9#pEjCIHS-R\$ADQ<FBXkSd8aLN3EJ\^iPQ@@NSOf[jj1iJmF\4an&&^d'@oitS^*n<nGf-5-qZ8eb>
%.b>6sX8@>prEaGW!k=WCgF?1#gnP$JWNBa(H`/Jj5qTX]A[;*((<pI_C8b#`qLAjl;/=Dkb?A+R,_oguUu.BVCj_mq%#\qPpQ+F9
%A7*T8O)(3V`P&;Y_lnV!rhM@RoF'I1DD.3Y@OsSV<N_aVk0'oK1eWKD^A,8-QZ6;NGcVJ;3,TX.fOZA0GilH'f8?+bSed%C4^[.T
%OgW$+.Vj,F\2mh7Bi;?01,H0%.nVWqf?=jS#Q6cIN_jq!,R2R>q!*=_TgG:0r2n%0E#Q^R)q<<X<Uks'GZU%!pBo[+HCGRskLEg(
%bQjXP/.F2_nZX3;h_Rq1]<FUmdP$$Z0eVr.Vg[T`p48FN;@rEfLYsdg+t(^Q:mWtWB=<^/<rp$98UG3Y1h]*3:)Dm4QK,#'SCJFP
%V"+*Z3>'E`"-*NQCJs9U\ZD28XiQ+gKUS4Op'+Sh.45U73:42J_#S";@m(X17dJ<ej&^o(7]a&*RsG@!HRd,s_a',K:SNNggmlYA
%/b(k^okV[9W8h-ha)t#]b:i@tdSs!?HAq1!-2DO8h.*n^b1Y'4SUo6!,SB,@88S7LjV!GgJ]i=@&km+T[]3C29sW_u*e&5*ZV7Nb
%X;NnNZAPB&TF]62F[3r*[R:gqqLc_s\rItna.8qXC1P&s;%,csDhRNre1"@<)CciQoFZi`I]K0n9g"oR(#jPiW"OCKkuS.%eh#i@
%6_)E\-^'33<f_sZH/#D:e\E.pMuFLIT$2$hkGu/%-Mc+J;M<7[g9.qSA5B`[gnsDP2Dj)VAP>Co?[I'QEW092VU$=G&=AA4TWtds
%#pDn?q0EW;$dRLEhGb!#ed5tA$VT-AU:rdtpjZf^,CCS&XC!5cQci*n'QOL[$I9Beqg&K$<=LVW%QL%S`X)m7JTDIJg<K?9,Q@(j
%/G;$nAF1Tan]A"+de;2i'[a,k$?inD'Z`:%Y-F#h20'`#O'SM*\AL?e';T=rC?hN4Sfb),^<'c<4&VBX@g0WtG)EodM^UY,\qcZ^
%'.l2u)4rL(%1AZheHJoM1F8""39.)fG#qepVXq^8M3\gf2L96\od7+$q.$gQifpH'$6crpT['SAe/r`8Rkp'fk<d:7OPi?K$`[89
%_SoSUo&ii;e^Q#X`p$T;]>&]*Lh,,mCcX'AH:Wm&]4Z_4?QVUW1%Kq_TpWI-G0+h0\:lIATNm\qC-t7`PK.;-l37$rU<o\>s2k?)
%HCk_qQn;l'b,lKd^J[5h/c4K92SA?9A/FIF0g#QX.hXofM33)g00F9h4PJ?$d]ft6+D@pW^LUS)`'Q'8Fgec5>E+JnkK5t1ilGc5
%f)['Z\@m'aQl3>:JfBiW4ce@CJpN'ZCpl#RQFKEPg+.t:#*sQ%D`\;`G^#E[;aVG@5eDlFd>82>rbuJLB^P`i?22;)A`]ESe)@tW
%pY.cRc4q5@[b0kU0\B;mYla5KAomCcae$Q!$8/Wd/*Iok\/FXU7J\e`2BT*535Qdj3S=,c6Q"I\lP7R^K!4>PG1:jKE$VAF_0WS`
%2=^"AG(T=P07GF<Q(:c4#Sj%fJW0=_6l2gR4jpiG%k"4!PYNTb(b%'\iT@aN-'Y<UOf[JLIh/U%n6N@*oeT]Yn@-bgbnfU&S6!]M
%)j=jo2!*CFaGTT6AR9e`pqZSpKg,g)8mc@f9"FK/S9_'5C2\=-J.6Od&%?U<euQQ,EBX^VWF>Vsfk,oi!c6JE\&Ec:boGT7%9%c#
%R<0KY=52;ac6H3_`UL<VG`aCdm+IQO!Vc7^if,PAgr\?0o%SOo\Zhn^%XSj!]:^L0JWl#qW@:&?,It;t#s$r+/=HQ/'7q/-TRGh;
%I<6PIGnK*uQj\ZiG&^4Yc.TE0[WPIIg>G^o,.76-<I'1)Z!.oABF9tkRS-?ghbJM2%@+896aG1VV;0sS^\E^C-Q*WIeEaegP9-3`
%`n<=.qp^e7rp%c]BZl`-GF'@7@@BAd`T%@.e1Ot8n,du?'$;$QaHW5/]%daZQ&>^T/.Th\U=f8^Gl4Ni)LeoA\k"L%0)5j<n"gRK
%1e-N`p*TIt_3SS&+-'^qZjAUhV&Q>$)</[>oh^5c54d_o&j.bq2!%ZL<P8k^&!&XEd2)05B#J_&Z.UrMmG4$1f3.TQPGBC`?DaQC
%Y$!@_Utg39,L`3\@]j(o1mk+ul[=]XqsFKh/)PP/%Y>f'kh!!oj>@I:`f)i,fu;A+\Je)seG@Rm28#"oKDJ]m5T\QYgd$I$j]u0b
%*eUEdlRI/4^ee>UBSDMS`d2<8SS:$.XO!<@Nl.]VCLMs$V2+K^A+@HBhtH!V?'Xj/6*Ab6DOLfEc=M4*U8c1Cl=g5nJ.=:jSLjQp
%:4RY195;u,1A?jlYA#B)B92E2C`E#43c=M05o5LXTKLSq(7(.rL<qme>qdMUaLNdheJ69W'Nb"=A)USA$FJR?L1eL@C\-Pn6Dr]0
%Rb,4&kXupY)iW]M-I/"W]'N0469O]a'<VlK-i5b]0Oq9_[_1j$*Er5SO*VfIk2if1q5J@@]G+Z;W5b`9;`/u#db2L,n*%eJ;qNq+
%\_;r:CX]c"CHjcVFR=2<%O(B_II,`-qPicGpO?KfqoZNV)mmA7%).&2lfGVbl"Zsf]]chi(W"m`C9KI3+cl(=pLV@1QIk*#BZ?@b
%dW2S>Q@Bj._lrSTQ[?Zb&fG;[Tc#sL:Z@hO/3S"eos<X_aBGTe4t^_DJg)JK7t`#"G9f*Rp<F)rEGoQ6cj-4jjhnHf$d+5caAMPL
%b1VC5]^FB%&R]UZjfSH/(sW+!:RIj"W@;$E_NOtMWmJa%0+?c4o+LteO$XJu[^HZ%bh=?V,ktPMrRg@i7<D'o/@IEH5BJ2SVKMUn
%AJ?:52+`7(db+1Q7]hqHXne/QL@p@]FH;9pm.18kLg<P9]FXT914%j/q7/g=`^#r9lP;,>Y'%0J$QJEOjP,n`[jOQ"UGb$BfnCU@
%>fZQt2DBCEl02,d<OpSWZu#@k!9;c/[7Lq%jAfl:C%=^Y&Q#k9;#Y`k)S5r/M-,*Up1\*BI.n;H[;I9(MpVh-ZA_)hOW2cB#S4Jn
%mOSX>hAc'ob^:8F_Fpp)OZA$<'T#$!h^dplH.$a7\s@f:B$Ybtj'!qEEZBJ;jV6Momco3qB)b3MFf)sUItrt<c[AO9eJ95RQ,F$>
%,iNDfa_B&(0'6J)?Wb`FcT"m"=1j%0Cf]cnYC3di%jYaFd_n23:X#']QImYdlQ"9Z:CGn0#81#uWj`3>\XkIH>`CN-#!rmT/Y$Wc
%Dhbr7Do@admO@P-]R!BcJ`jmVi-.te2#'6>]Q.Sl0H+$44R8H3T#.GKVqLS"g<4"_$F?mli],eA9hFf+Cc(S1V2n!;<75,Xj*gU.
%P;$+kKN!%%M%7fMb;I2lMqN/_kJQ)M<nll&8@mI%6\$.WRZ7$]XF.NYo!FEYjR%rqNP-b]D9W=d3>emgSpl#*^mA`6+<R0p*0fiJ
%]ajhX_YICr6CkUMYqt9Pc+J8PgEj'>Ir3A<")BVg@@,aaf%t\g4Zftj5<Z4Ml#c/tJsZYKE+=56L3pK_Z>-;*D)jl('=`ngE0nZK
%FI:Y4pN*;\fs[0ZZI:q&X/6-gq.'/S,1gR_10sT`_aLl;9mK[MpnLY'1N7;NQ$"_7p7#0!+^lFoY.URsRVmYmH.^`=f=aP]=Sp7A
%FfF0#3hnA5mX.nb?QOk9*RDXCH*TC\MC-D=;u3'O[c)V@Ja0f<1mqKEe+6GX,V/c'4@)Sk6tq2IQ*p(n(b5n+dU_4DBJ*uGF?>/f
%,)C1%JWdE]aNlSS/TB1=/K_-@FS)q-X75_F;<@5_@3b@V=u>DAYNHi&Qq]dtS,>,RCjYS[PD>T9m/H7A46[<>5%c237*<#ORC54t
%91bHUI%%clEt)e(fO^Cu]*S!F/t+A^616[8.!`>kCVSB9@BY%E1D2fP8P\l@M!*b[Zcou!r,=H_+u2/SlcQgD8i+*(E3BuoS35n<
%D'GH1k^PTePOYR^%j,P<"hr<Q-F7OOdA:#;5r<63FgDYm$WZGV-rH\gO61O@4K$&5Ce8pQR]0egq`ni]<(glNge9P1#b!B^:`4G&
%OBbFDU5ZCi(=EptYq9-gF!K<A#qTr;le9mP]@Bs@141+>b\Gk0"l6]Q2naW2?-$9FDSJN#)IWD]HWq<k^Rq,6OKu)e@lHYl"W,l"
%E3TqehB/`#OtETt]1n;Q)[C3ON]=rS\:P[s+Ah),s"GO$B,m(8G"RQM>k)W!]dj<q_()>`[T\#\Nu#ek>3Fj:Ya#;KIeHh:2%2(d
%MZWA1iL/Udi(ie8/5CM/(/qZcmNo2U\$T>6cEh_<?hpV-F3n^I/+0*<M&'D..h9f=AE,LnCBtJ26a"o7LF9p*Bu3MMXiXG)EF$qE
%X=9U,k)83MD/Epa)Sm.]C)_@(mE!hho!XURncng#PJ"$`@t9rga!ef.Q`T.]DS`,aRPFCk(ZRn29"X;#.ID6&U:1SD?HK/:<5tcX
%<^r?e,:KJ,Q\WE15c'ataH1*a/R1ZGXYXY]#V+GbKrgEqgPRIlp+hh;G`KTX*NK97%V+0^Ej+2%ifudWG<%.VnoLX#FO&t(R2B'&
%qPKG*f2+0<kqJT2'T1fc=R"u7m:Hn]Cu[E*,i,bocWSlieL'st8lgeR54m&lQ1PjCb+ie%_#H5$+1G;=?TC(+jK_D&)7gTg>e..\
%/P*FB3#"rk?"N^cRnp(&*UR8N&D-Mmc*%#Qjm`:H.eb%aqsXO[p]'8\J+p_W?p_F(r28HNjnHOfmU,tTO+7/bT7?mU?iTfB5QC'<
%s7GJ=rp0$&q:#BAj8UjPr[@g)+9(66r3u_&TE!C?"YI6'2#~>
%AI9_PrivateDataEnd
